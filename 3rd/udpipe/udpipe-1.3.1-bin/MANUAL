UDPipe 1
Version 1.3.1

Introduction
============

UDPipe is a trainable pipeline for tokenization, tagging, lemmatization and
dependency parsing of CoNLL-U files. UDPipe is language-agnostic and can be
trained given annotated data in CoNLL-U format
(http://universaldependencies.org/format.html). Trained models are provided for
nearly all UD treebanks (http://universaldependencies.org). UDPipe is available
as a binary for Linux/Windows/OS X, as a library for C++, Python, Perl, Java,
C#, and as a web service. Third-party R CRAN package
(https://CRAN.R-project.org/package=udpipe) also exists.

UDPipe is a free software distributed under the Mozilla Public License 2.0
(http://www.mozilla.org/MPL/2.0/) and the linguistic models are free for
non-commercial use and distributed under the CC BY-NC-SA
(http://creativecommons.org/licenses/by-nc-sa/4.0/) license, although for some
models the original data used to create the model may impose additional
licensing conditions. UDPipe is versioned using Semantic Versioning
(http://semver.org/).

Copyright 2017 by Institute of Formal and Applied Linguistics, Faculty of
Mathematics and Physics, Charles University, Czech Republic.


Online Web Application and Web Service
======================================

UDPipe Web Application is available at
http://lindat.mff.cuni.cz/services/udpipe/ using LINDAT/CLARIN infrastructure
(http://lindat.cz).

UDPipe REST Web Service is also available, with the API documentation available
at http://lindat.mff.cuni.cz/services/udpipe/api-reference.php.


Release
=======


Download
--------

UDPipe releases are available on GitHub (http://github.com/ufal/udpipe), both as
source code and as a pre-compiled binary package. The binary package contains
Linux, Windows and OS X binaries, Java bindings binary, C# bindings binary, and
source code of UDPipe and all language bindings). While the binary packages do
not contain compiled Python or Perl bindings, packages for those languages are
available in standard package repositories, i.e. on PyPI
(https://pypi.python.org/pypi/ufal.udpipe/) and CPAN
(https://metacpan.org/pod/Ufal::UDPipe).

- Latest release (http://github.com/ufal/udpipe/releases/latest)
- All releases (http://github.com/ufal/udpipe/releases), Changelog
  (https://github.com/ufal/udpipe/blob/master/CHANGES)

You might also be interested in a contributed package spacy-udpipe
(https://github.com/TakeLab/spacy-udpipe) which wraps UDPipe with spaCy API.


Available Models
----------------

To use UDPipe, a model is needed. The models are available from LINDAT/CLARIN
(http://www.lindat.cz) infrastructure and described further in the UDPipe
Models. Currently, the following models are available:

- Universal Dependencies 2.5 Models: udpipe-ud2.5-191206
  (http://hdl.handle.net/11234/1-3131) (documentation
  (http://ufal.mff.cuni.cz/udpipe/1/models#universal_dependencies_25_models))
- Universal Dependencies 2.4 Models: udpipe-ud2.4-190531
  (http://hdl.handle.net/11234/1-2998) (documentation
  (http://ufal.mff.cuni.cz/udpipe/1/models#universal_dependencies_24_models))
- Universal Dependencies 2.3 Models: udpipe-ud2.3-181115
  (http://hdl.handle.net/11234/1-2898) (documentation
  (http://ufal.mff.cuni.cz/udpipe/1/models#universal_dependencies_23_models))
- CoNLL18 Shared Task Baseline UD 2.2 Models: udpipe-ud2.2-conll18-180430
  (http://hdl.handle.net/11234/1-2859) (documentation
  (http://ufal.mff.cuni.cz/udpipe/1/models#conll18_shared_task_baseline_ud_22_models))

- Universal Dependencies 2.0 Models: udpipe-ud2.0-170801
  (http://hdl.handle.net/11234/1-2364) (documentation
  (http://ufal.mff.cuni.cz/udpipe/1/models#universal_dependencies_20_models))
- CoNLL17 Shared Task Baseline UD 2.0 Models: udpipe-ud2.0-conll17-170315
  (http://hdl.handle.net/11234/1-1990) (documentation
  (http://ufal.mff.cuni.cz/udpipe/1/models#conll17_shared_task_baseline_ud_20_models))

- Universal Dependencies 1.2 Models: udpipe-ud1.2-160523
  (http://hdl.handle.net/11234/1-1659) (documentation
  (http://ufal.mff.cuni.cz/udpipe/1/models#universal_dependencies_12_models))


License
-------

UDPipe is an open-source project and is freely available for non-commercial
purposes. The library is distributed under Mozilla Public License 2.0
(http://www.mozilla.org/MPL/2.0/) and the associated models and data under CC
BY-NC-SA (http://creativecommons.org/licenses/by-nc-sa/4.0/), although for some
models the original data used to create the model may impose additional
licensing conditions.

If you use this tool for scientific work, please give credit to us by
referencing Straka et al. 2016 and the UDPipe website
(http://ufal.mff.cuni.cz/udpipe).


UDPipe Installation
===================

UDPipe releases are available on GitHub (http://github.com/ufal/udpipe), either
as a pre-compiled binary package, or source code only. The binary package
contains Linux, Windows and OS X binaries, Java bindings binary, C# bindings
binary, and source code of UDPipe and all language bindings. While the binary
packages do not contain compiled Python or Perl bindings, packages for those
languages are available in standard package repositories, i.e. on PyPI and CPAN.

To use UDPipe, a model is needed. Here is a list of available models
(http://ufal.mff.cuni.cz/udpipe/1#available_models).

If you want to compile UDPipe manually, sources are available on on GitHub
(http://github.com/ufal/udpipe), both in the pre-compiled binary package
releases (http://github.com/ufal/udpipe/releases) and in the repository itself.


Requirements
------------

- g++ 4.7 or newer, clang 3.2 or newer, Visual C++ 2015 or newer
- make
- SWIG 3.0.8 or newer for language bindings other than C++


Compilation
-----------

To compile UDPipe, run make in the src directory.

Make targets and options:
- exe: compile the binaries (default)
- server: compile the REST server
- lib: compile the static library
- BITS=32 or BITS=64: compile for specified 32-bit or 64-bit architecture
  instead of the default one
- MODE=release: create release build which statically links the C++ runtime and
  uses LTO
- MODE=debug: create debug build
- MODE=profile: create profile build


Platforms
---------

Platform can be selected using one of the following options:
- PLATFORM=linux, PLATFORM=linux-gcc: gcc compiler on Linux operating system,
  default on Linux
- PLATFORM=linux-clang: clang compiler on Linux, must be selected manually
- PLATFORM=macos, PLATFORM=macos-clang: clang compiler on OS X, default on OS
  X; BITS=32+64 enables multiarch build
- PLATFORM=win, PLATFORM=win-gcc: gcc compiler on Windows (TDM-GCC is well
  tested), default on Windows
- PLATFORM=win-vs: Visual C++ 2015 compiler on Windows, must be selected
  manually; note that the cl.exe compiler must be already present in PATH and
  corresponding BITS=32 or BITS=64 must be specified

Either POSIX shell or Windows CMD can be used as shell, it is detected
automatically.


Further Details
---------------

UDPipe uses C++ BuilTem system (http://github.com/ufal/cpp_builtem), please
refer to its manual if interested in all supported options.


Other language bindings
-----------------------


C#
--

Binary C# bindings are available in UDPipe binary packages.

To compile C# bindings manually, run make in the bindings/csharp directory,
optionally with the options described in UDPipe Installation.


Java
----

Binary Java bindings are available in UDPipe binary packages.

To compile Java bindings manually, run make in the bindings/java directory,
optionally with the options described in UDPipe Installation. Java 6 and newer
is supported.

The Java installation specified in the environment variable JAVA_HOME is used.
If the environment variable does not exist, the JAVA_HOME can be specified using
  make JAVA_HOME=path_to_Java_installation


Perl
----

The Perl bindings are available as Ufal-UDPipe package on CPAN.

To compile Perl bindings manually, run make in the bindings/perl directory,
optionally with the options described in UDPipe Installation. Perl 5.10 and
later is supported.

Path to the include headers of the required Perl version must be specified in
the PERL_INCLUDE variable using
  make PERL_INCLUDE=path_to_Perl_includes


Python
------

The Python bindings are available as ufal.udpipe package on PyPI.

To compile Python bindings manually, run make in the bindings/python directory,
optionally with options described in UDPipe Installation. Both Python 2.6+ and
Python 3+ are supported.

Path to the include headers of the required Python version must be specified in
the PYTHON_INCLUDE variable using
  make PYTHON_INCLUDE=path_to_Python_includes

You might also be interested in a contributed package spacy-udpipe
(https://github.com/TakeLab/spacy-udpipe) which wraps UDPipe with spaCy API.


UDPipe Models
=============

Like any supervised machine-learning tool, UDPipe needs a trained linguistic
model. This section describes the available models.


Universal Dependencies 2.5 Models
---------------------------------

Universal Dependencies 2.5 Models are distributed under the CC BY-NC-SA
(http://creativecommons.org/licenses/by-nc-sa/4.0/) licence. The models are
based solely on Universal Dependencies 2.5 (http://hdl.handle.net/11234/1-3105)
treebanks. The models work in UDPipe version 1.2 and later.

Universal Dependencies 2.5 Models are versioned according to the date released
in the format YYMMDD, where YY, MM and DD are two-digit representation of year,
month and day, respectively. The latest version is 191206.


Download
--------

The latest version 190531 of the Universal Dependencies 2.5 models can be
downloaded from LINDAT/CLARIN repository (http://hdl.handle.net/11234/1-3131).


Acknowledgements
----------------

This work has been partially supported and has been using language resources and
tools developed, stored and distributed by the LINDAT/CLARIN project of the
Ministry of Education, Youth and Sports of the Czech Republic (project
LM2015071).

The models were trained on Universal Dependencies 2.5
(http://hdl.handle.net/11234/1-3105) treebanks.

For the UD treebanks which do not contain original plain text version, raw text
is used to train the tokenizer instead. The plain texts were taken from the W2C
- Web to Corpus (http://hdl.handle.net/11858/00-097C-0000-0022-6133-9).


Publications
------------

- (Straka et al. 2017) Milan Straka and Jana Straková. Tokenizing, POS
  Tagging, Lemmatizing and Parsing UD 2.0 with UDPipe
  (http://ufal.mff.cuni.cz/~straka/papers/2017-conll_udpipe.pdf). In Proceedings
  of the CoNLL 2017 Shared Task: Multilingual Parsing from Raw Text to Universal
  Dependencies, Vancouver, Canada, August 2017.
- (Straka et al. 2016) Straka Milan, Hajič Jan, Straková Jana. UDPipe:
  Trainable Pipeline for Processing CoNLL-U Files Performing Tokenization,
  Morphological Analysis, POS Tagging and Parsing
  (http://ufal.mff.cuni.cz/~straka/papers/2016-lrec_udpipe.pdf). In Proceedings
  of the Tenth International Conference on Language Resources and Evaluation
  (LREC 2016), Portorož, Slovenia, May 2016.


Model Description
-----------------

The Universal Dependencies 2.5 models contain 94 models of 61 languages, each
consisting of a tokenizer, tagger, lemmatizer and dependency parser, all trained
using the UD data. We used the original train-dev-test split, but for treebanks
with only train and no dev data we used last 10% of the train data as dev data.
We produce models only for treebanks with at least 1000 training words.

The tokenizer is trained using the SpaceAfter=No features. If the features are
not present in the data, they can be filled in using raw text in the language in
question.

The tagger, lemmatizer and parser are trained using gold UD data.

Details about model architecture and training process can be found in the
(Straka et al. 2017) paper.


Reproducible Training
---------------------

In case you want to train the same models, scripts for downloading and
resplitting UD 2.5 data, precomputed word embedding, raw texts for tokenizers,
all hyperparameter values and training scripts are available in the second
archive on the model download page (http://hdl.handle.net/11234/1-3131).


Model Performance
-----------------

We present the tagger, lemmatizer and parser performance, measured on the
testing portion of the data, evaluated in three different settings: using raw
text only, using gold tokenization only, and using gold tokenization plus gold
morphology (UPOS, XPOS, FEATS and Lemma).

  || Treebank                   | Mode         |  Words |  Sents |  UPOS |  XPOS |  UFeats | AllTags |  Lemma |  UAS  |  LAS  |  MLAS |  BLEX |
   | Afrikaans-AfriBooms        | Raw text     |  99.6% |  98.2% | 95.0% | 90.6% |  94.6%  |  90.6%  |  96.5% | 81.6% | 77.6% | 64.4% | 66.5% |
   | Afrikaans-AfriBooms        | Gold tok     |    -   |    -   | 95.3% | 90.8% |  94.9%  |  90.8%  |  96.7% | 82.5% | 78.4% | 65.1% | 67.2% |
   | Afrikaans-AfriBooms        | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 87.6% | 85.0% | 77.0% | 79.6% |
   | Ancient Greek-Perseus      | Raw text     | 100.0% |  98.8% | 82.2% | 72.2% |  85.7%  |  72.2%  |  82.7% | 64.0% | 57.0% | 30.2% | 38.2% |
   | Ancient Greek-Perseus      | Gold tok     |    -   |    -   | 82.2% | 72.2% |  85.7%  |  72.2%  |  82.7% | 64.1% | 57.2% | 30.3% | 38.4% |
   | Ancient Greek-Perseus      | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 68.7% | 63.9% | 53.1% | 57.2% |
   | Ancient Greek-PROIEL       | Raw text     | 100.0% |  48.0% | 96.0% | 96.2% |  88.6%  |  87.2%  |  93.2% | 72.2% | 67.6% | 49.9% | 56.0% |
   | Ancient Greek-PROIEL       | Gold tok     |    -   |    -   | 96.1% | 96.3% |  88.7%  |  87.4%  |  93.2% | 77.0% | 72.1% | 54.4% | 60.3% |
   | Ancient Greek-PROIEL       | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 80.2% | 76.4% | 66.7% | 70.3% |
   | Arabic-PADT                | Raw text     |  94.6% |  82.1% | 90.4% | 84.0% |  84.2%  |  83.8%  |  88.5% | 72.7% | 68.1% | 56.2% | 59.2% |
   | Arabic-PADT                | Gold tok     |    -   |    -   | 95.6% | 89.0% |  89.2%  |  88.8%  |  92.9% | 82.0% | 76.8% | 63.6% | 66.3% |
   | Arabic-PADT                | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 83.9% | 80.7% | 75.7% | 76.8% |
   | Armenian-ArmTDP            | Raw text     |  99.3% |  97.8% | 92.0% |   -   |  84.7%  |  83.4%  |  91.8% | 75.6% | 68.5% | 51.2% | 57.4% |
   | Armenian-ArmTDP            | Gold tok     |    -   |    -   | 92.5% |   -   |  85.2%  |  83.8%  |  92.4% | 76.9% | 69.7% | 51.5% | 57.9% |
   | Armenian-ArmTDP            | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 82.4% | 77.2% | 70.9% | 71.9% |
   | Basque-BDT                 | Raw text     |  99.9% |  99.8% | 92.3% |   -   |  87.3%  |  84.8%  |  93.5% | 75.0% | 69.9% | 57.4% | 63.2% |
   | Basque-BDT                 | Gold tok     |    -   |    -   | 92.4% |   -   |  87.4%  |  84.8%  |  93.6% | 75.1% | 70.0% | 57.4% | 63.2% |
   | Basque-BDT                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 82.1% | 78.4% | 75.2% | 77.2% |
   | Belarusian-HSE             | Raw text     |  99.8% |  78.7% | 84.3% | 32.0% |  65.3%  |  23.9%  |  75.0% | 58.6% | 52.9% | 28.8% | 33.1% |
   | Belarusian-HSE             | Gold tok     |    -   |    -   | 84.4% | 32.1% |  65.4%  |  24.1%  |  75.2% | 59.5% | 53.8% | 29.3% | 33.8% |
   | Belarusian-HSE             | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 72.9% | 69.6% | 62.4% | 63.3% |
   | Bulgarian-BTB              | Raw text     |  99.9% |  94.2% | 97.6% | 94.3% |  95.4%  |  93.8%  |  94.6% | 89.1% | 85.1% | 75.4% | 74.0% |
   | Bulgarian-BTB              | Gold tok     |    -   |    -   | 97.8% | 94.5% |  95.5%  |  93.9%  |  94.7% | 90.0% | 85.9% | 76.1% | 74.7% |
   | Bulgarian-BTB              | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 92.5% | 89.1% | 84.4% | 84.7% |
   | Catalan-AnCora             | Raw text     | 100.0% |  99.4% | 98.1% | 98.0% |  97.7%  |  96.9%  |  98.2% | 89.0% | 85.9% | 77.3% | 77.8% |
   | Catalan-AnCora             | Gold tok     |    -   |    -   | 98.1% | 98.0% |  97.7%  |  97.0%  |  98.2% | 89.1% | 86.0% | 77.4% | 77.8% |
   | Catalan-AnCora             | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 91.0% | 88.5% | 82.5% | 83.0% |
   | Chinese-GSD                | Raw text     |  90.3% |  99.1% | 84.1% | 84.0% |  89.0%  |  82.8%  |  90.3% | 61.6% | 57.8% | 50.8% | 54.7% |
   | Chinese-GSD                | Gold tok     |    -   |    -   | 92.2% | 92.0% |  98.7%  |  90.8%  | 100.0% | 74.4% | 69.5% | 62.2% | 67.8% |
   | Chinese-GSD                | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 82.6% | 80.5% | 77.5% | 79.6% |
   | Chinese-GSDSimp            | Raw text     |  90.3% |  99.1% | 84.2% | 84.1% |  89.0%  |  82.8%  |  90.3% | 62.6% | 58.7% | 51.3% | 55.2% |
   | Chinese-GSDSimp            | Gold tok     |    -   |    -   | 92.0% | 91.8% |  98.6%  |  90.5%  | 100.0% | 74.1% | 69.0% | 61.8% | 67.1% |
   | Chinese-GSDSimp            | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 82.7% | 80.4% | 77.5% | 79.6% |
   | Classical Chinese-Kyoto    | Raw text     |  99.5% |  41.7% | 89.9% | 89.2% |  92.3%  |  86.7%  |  99.5% | 68.9% | 62.9% | 59.1% | 61.3% |
   | Classical Chinese-Kyoto    | Gold tok     |    -   |    -   | 92.0% | 91.3% |  93.6%  |  89.2%  | 100.0% | 81.0% | 74.7% | 71.0% | 73.5% |
   | Classical Chinese-Kyoto    | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 90.0% | 85.9% | 84.6% | 85.0% |
   | Coptic-Scriptorium         | Raw text     |  70.7% |  27.7% | 67.1% | 64.6% |  50.2%  |  46.3%  |  68.7% | 43.8% | 41.8% | 12.7% | 32.0% |
   | Coptic-Scriptorium         | Gold tok     |    -   |    -   | 94.0% | 88.5% |  70.6%  |  62.4%  |  96.0% | 85.3% | 80.4% | 29.9% | 69.8% |
   | Coptic-Scriptorium         | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 88.9% | 85.7% | 75.8% | 78.1% |
   | Croatian-SET               | Raw text     | 100.0% |  94.4% | 96.5% | 90.3% |  90.9%  |  89.9%  |  95.3% | 83.7% | 77.7% | 64.8% | 69.3% |
   | Croatian-SET               | Gold tok     |    -   |    -   | 96.5% | 90.4% |  91.1%  |  90.1%  |  95.3% | 84.2% | 78.1% | 65.3% | 69.7% |
   | Croatian-SET               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 86.8% | 82.2% | 77.2% | 78.9% |
   | Czech-CAC                  | Raw text     | 100.0% |  99.7% | 98.3% | 91.0% |  90.0%  |  89.6%  |  97.0% | 86.3% | 82.8% | 70.5% | 77.0% |
   | Czech-CAC                  | Gold tok     |    -   |    -   | 98.3% | 91.0% |  90.0%  |  89.6%  |  97.0% | 86.4% | 82.9% | 70.5% | 77.1% |
   | Czech-CAC                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 89.7% | 87.3% | 84.2% | 85.0% |
   | Czech-CLTT                 | Raw text     |  99.7% |  97.4% | 97.3% | 87.3% |  87.4%  |  87.1%  |  96.1% | 78.9% | 75.4% | 60.0% | 68.9% |
   | Czech-CLTT                 | Gold tok     |    -   |    -   | 97.6% | 87.5% |  87.7%  |  87.4%  |  96.4% | 79.6% | 76.1% | 60.4% | 69.4% |
   | Czech-CLTT                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 82.7% | 79.6% | 74.7% | 75.3% |
   | Czech-FicTree              | Raw text     | 100.0% |  99.0% | 97.1% | 89.9% |  90.8%  |  89.4%  |  97.1% | 86.3% | 82.0% | 68.7% | 74.3% |
   | Czech-FicTree              | Gold tok     |    -   |    -   | 97.1% | 90.0% |  90.8%  |  89.5%  |  97.1% | 86.4% | 82.1% | 68.8% | 74.4% |
   | Czech-FicTree              | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 90.5% | 87.7% | 83.3% | 84.1% |
   | Czech-PDT                  | Raw text     |  99.9% |  93.3% | 98.2% | 92.7% |  92.4%  |  91.9%  |  97.8% | 87.0% | 84.0% | 74.4% | 79.4% |
   | Czech-PDT                  | Gold tok     |    -   |    -   | 98.3% | 92.9% |  92.5%  |  92.0%  |  97.9% | 87.8% | 84.7% | 75.0% | 80.0% |
   | Czech-PDT                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 90.3% | 88.2% | 85.6% | 86.1% |
   | Danish-DDT                 | Raw text     |  99.8% |  89.8% | 95.4% |   -   |  94.8%  |  93.4%  |  94.7% | 79.3% | 76.0% | 66.4% | 66.8% |
   | Danish-DDT                 | Gold tok     |    -   |    -   | 95.6% |   -   |  95.0%  |  93.6%  |  94.9% | 80.2% | 76.8% | 67.2% | 67.5% |
   | Danish-DDT                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 84.8% | 82.4% | 77.4% | 79.1% |
   | Dutch-Alpino               | Raw text     |  99.8% |  88.6% | 94.1% | 91.5% |  93.3%  |  90.7%  |  95.1% | 82.4% | 78.2% | 62.3% | 65.1% |
   | Dutch-Alpino               | Gold tok     |    -   |    -   | 94.3% | 91.7% |  93.5%  |  90.9%  |  95.3% | 83.3% | 79.0% | 63.3% | 66.1% |
   | Dutch-Alpino               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 86.9% | 83.2% | 74.8% | 76.1% |
   | Dutch-LassySmall           | Raw text     |  99.8% |  75.4% | 94.1% | 91.8% |  93.7%  |  91.0%  |  95.5% | 79.0% | 75.0% | 62.6% | 63.2% |
   | Dutch-LassySmall           | Gold tok     |    -   |    -   | 94.2% | 92.1% |  94.2%  |  91.3%  |  95.7% | 82.4% | 78.0% | 66.3% | 67.0% |
   | Dutch-LassySmall           | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 87.6% | 84.5% | 78.6% | 79.3% |
   | English-EWT                | Raw text     |  98.9% |  77.4% | 93.3% | 92.8% |  94.2%  |  91.3%  |  95.5% | 80.2% | 77.0% | 67.7% | 69.5% |
   | English-EWT                | Gold tok     |    -   |    -   | 94.4% | 93.9% |  95.4%  |  92.5%  |  96.4% | 84.4% | 81.1% | 71.6% | 73.6% |
   | English-EWT                | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 88.1% | 86.2% | 82.4% | 83.1% |
   | English-GUM                | Raw text     |  99.7% |  82.3% | 93.8% | 93.3% |  94.3%  |  92.2%  |  94.9% | 80.2% | 76.2% | 64.8% | 65.1% |
   | English-GUM                | Gold tok     |    -   |    -   | 94.1% | 93.7% |  94.6%  |  92.5%  |  95.2% | 82.0% | 77.9% | 66.2% | 66.6% |
   | English-GUM                | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 86.5% | 84.4% | 78.0% | 79.0% |
   | English-LinES              | Raw text     |  99.9% |  87.5% | 94.9% | 92.7% |  94.9%  |  90.3%  |  97.1% | 80.4% | 75.9% | 67.0% | 69.5% |
   | English-LinES              | Gold tok     |    -   |    -   | 95.0% | 92.8% |  95.0%  |  90.4%  |  97.1% | 81.2% | 76.6% | 67.7% | 70.2% |
   | English-LinES              | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 85.5% | 82.3% | 78.1% | 79.8% |
   | English-ParTUT             | Raw text     |  99.7% | 100.0% | 93.6% | 93.2% |  93.4%  |  91.7%  |  96.7% | 83.9% | 80.4% | 69.0% | 71.4% |
   | English-ParTUT             | Gold tok     |    -   |    -   | 93.8% | 93.5% |  93.6%  |  91.9%  |  97.0% | 84.2% | 80.6% | 69.1% | 71.5% |
   | English-ParTUT             | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 86.8% | 85.4% | 79.0% | 80.1% |
   | Estonian-EDT               | Raw text     | 100.0% |  91.6% | 95.6% | 96.8% |  93.4%  |  91.8%  |  90.6% | 79.5% | 75.8% | 68.3% | 64.7% |
   | Estonian-EDT               | Gold tok     |    -   |    -   | 95.7% | 96.8% |  93.5%  |  91.8%  |  90.6% | 80.3% | 76.5% | 69.0% | 65.3% |
   | Estonian-EDT               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 85.5% | 83.3% | 80.4% | 81.5% |
   | Estonian-EWT               | Raw text     |  99.1% |  67.0% | 83.2% | 85.6% |  79.5%  |  76.2%  |  79.8% | 60.1% | 51.2% | 38.8% | 36.7% |
   | Estonian-EWT               | Gold tok     |    -   |    -   | 84.0% | 86.3% |  80.2%  |  77.0%  |  80.4% | 62.6% | 53.2% | 39.8% | 37.6% |
   | Estonian-EWT               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 74.1% | 69.9% | 64.6% | 65.7% |
   | Finnish-FTB                | Raw text     |  99.9% |  86.8% | 91.5% | 90.8% |  92.5%  |  88.9%  |  88.5% | 79.4% | 74.9% | 64.1% | 60.9% |
   | Finnish-FTB                | Gold tok     |    -   |    -   | 91.8% | 91.0% |  92.7%  |  89.2%  |  88.6% | 81.1% | 76.6% | 65.9% | 62.6% |
   | Finnish-FTB                | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 89.9% | 87.6% | 82.9% | 84.2% |
   | Finnish-TDT                | Raw text     |  99.7% |  88.6% | 94.3% | 95.4% |  92.0%  |  90.8%  |  86.9% | 80.5% | 76.8% | 68.6% | 62.8% |
   | Finnish-TDT                | Gold tok     |    -   |    -   | 94.7% | 95.8% |  92.4%  |  91.2%  |  87.2% | 81.8% | 78.1% | 69.5% | 63.6% |
   | Finnish-TDT                | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 86.8% | 84.7% | 81.6% | 82.5% |
   | French-GSD                 | Raw text     |  98.8% |  93.6% | 95.8% |   -   |  95.5%  |  94.5%  |  96.6% | 87.1% | 84.3% | 74.4% | 76.3% |
   | French-GSD                 | Gold tok     |    -   |    -   | 97.1% |   -   |  96.6%  |  95.6%  |  97.8% | 89.0% | 86.3% | 76.0% | 77.7% |
   | French-GSD                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 91.1% | 89.2% | 83.9% | 84.2% |
   | French-ParTUT              | Raw text     |  99.4% | 100.0% | 94.6% | 94.2% |  91.9%  |  90.6%  |  95.0% | 87.4% | 83.5% | 66.4% | 71.5% |
   | French-ParTUT              | Gold tok     |    -   |    -   | 95.3% | 94.8% |  92.6%  |  91.3%  |  95.6% | 88.0% | 84.3% | 67.4% | 72.0% |
   | French-ParTUT              | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 91.0% | 89.0% | 82.1% | 83.4% |
   | French-Sequoia             | Raw text     |  99.1% |  87.5% | 96.1% |   -   |  95.0%  |  94.1%  |  96.9% | 84.8% | 82.1% | 72.5% | 75.1% |
   | French-Sequoia             | Gold tok     |    -   |    -   | 97.1% |   -   |  95.9%  |  95.0%  |  97.8% | 86.8% | 84.1% | 74.5% | 76.8% |
   | French-Sequoia             | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 89.7% | 88.1% | 83.8% | 84.0% |
   | French-Spoken              | Raw text     |  99.1% |  21.1% | 91.9% | 96.3% |    -    |  89.6%  |  94.5% | 69.2% | 63.3% | 51.6% | 51.8% |
   | French-Spoken              | Gold tok     |    -   |    -   | 93.1% | 97.2% |    -    |  90.6%  |  95.5% | 76.1% | 69.9% | 59.4% | 59.4% |
   | French-Spoken              | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 80.7% | 76.5% | 67.5% | 68.6% |
   | Galician-CTG               | Raw text     |  99.2% |  97.2% | 96.3% | 95.8% |  99.0%  |  95.4%  |  96.2% | 79.3% | 76.2% | 62.5% | 65.4% |
   | Galician-CTG               | Gold tok     |    -   |    -   | 97.0% | 96.5% |  99.8%  |  96.2%  |  96.9% | 80.8% | 77.7% | 64.3% | 67.2% |
   | Galician-CTG               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 83.0% | 80.7% | 69.4% | 74.1% |
   | Galician-TreeGal           | Raw text     |  98.7% |  88.0% | 91.1% | 87.3% |  89.5%  |  86.6%  |  92.5% | 72.1% | 66.6% | 49.8% | 52.2% |
   | Galician-TreeGal           | Gold tok     |    -   |    -   | 92.2% | 88.1% |  90.4%  |  87.4%  |  93.6% | 75.1% | 69.1% | 52.4% | 55.2% |
   | Galician-TreeGal           | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 81.7% | 77.5% | 69.4% | 70.7% |
   | German-GSD                 | Raw text     |  99.6% |  80.9% | 91.7% | 79.5% |  69.8%  |  62.9%  |  95.4% | 78.1% | 72.7% | 34.5% | 61.4% |
   | German-GSD                 | Gold tok     |    -   |    -   | 92.1% | 79.8% |  70.2%  |  63.4%  |  95.8% | 80.6% | 75.0% | 35.9% | 63.6% |
   | German-GSD                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 85.5% | 81.2% | 72.5% | 75.3% |
   | German-HDT                 | Raw text     |  99.9% |  92.6% | 97.8% | 97.4% |  91.4%  |  91.0%  |  94.5% | 94.0% | 92.3% | 77.0% | 81.4% |
   | German-HDT                 | Gold tok     |    -   |    -   | 97.9% | 97.5% |  91.5%  |  91.1%  |  94.6% | 94.6% | 92.9% | 77.5% | 82.0% |
   | German-HDT                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 95.5% | 94.4% | 91.5% | 91.7% |
   | Gothic-PROIEL              | Raw text     | 100.0% |  31.1% | 94.3% | 94.8% |  87.4%  |  85.5%  |  92.6% | 68.6% | 62.0% | 48.8% | 54.6% |
   | Gothic-PROIEL              | Gold tok     |    -   |    -   | 94.8% | 95.2% |  87.6%  |  85.9%  |  92.7% | 76.8% | 70.0% | 56.2% | 61.7% |
   | Gothic-PROIEL              | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 80.0% | 76.0% | 69.1% | 72.5% |
   | Greek-GDT                  | Raw text     |  99.9% |  90.2% | 95.7% | 95.7% |  90.3%  |  89.0%  |  94.6% | 86.5% | 83.0% | 66.2% | 69.6% |
   | Greek-GDT                  | Gold tok     |    -   |    -   | 95.9% | 95.9% |  90.5%  |  89.2%  |  94.7% | 87.2% | 83.7% | 66.8% | 70.2% |
   | Greek-GDT                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 89.7% | 87.9% | 81.6% | 82.7% |
   | Hebrew-HTB                 | Raw text     |  85.0% |  99.4% | 80.5% | 80.5% |  78.7%  |  77.7%  |  81.6% | 61.7% | 58.3% | 44.6% | 47.5% |
   | Hebrew-HTB                 | Gold tok     |    -   |    -   | 94.9% | 94.9% |  92.7%  |  91.5%  |  95.4% | 83.6% | 79.6% | 64.3% | 67.1% |
   | Hebrew-HTB                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 87.0% | 84.9% | 78.4% | 78.8% |
   | Hindi-HDTB                 | Raw text     | 100.0% |  98.9% | 95.9% | 94.9% |  90.4%  |  87.8%  |  98.1% | 91.3% | 87.2% | 69.2% | 80.1% |
   | Hindi-HDTB                 | Gold tok     |    -   |    -   | 95.9% | 95.0% |  90.4%  |  87.8%  |  98.1% | 91.3% | 87.2% | 69.3% | 80.2% |
   | Hindi-HDTB                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 93.8% | 90.8% | 85.4% | 86.6% |
   | Hungarian-Szeged           | Raw text     |  99.8% |  95.9% | 90.6% |   -   |  88.1%  |  86.4%  |  88.5% | 72.8% | 67.2% | 53.7% | 57.9% |
   | Hungarian-Szeged           | Gold tok     |    -   |    -   | 90.7% |   -   |  88.2%  |  86.5%  |  88.7% | 73.3% | 67.6% | 53.9% | 58.1% |
   | Hungarian-Szeged           | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 80.5% | 77.6% | 72.7% | 76.6% |
   | Indonesian-GSD             | Raw text     | 100.0% |  94.1% | 93.0% | 92.2% |  93.9%  |  87.1%  |  92.2% | 81.0% | 74.6% | 63.6% | 62.9% |
   | Indonesian-GSD             | Gold tok     |    -   |    -   | 93.0% | 92.2% |  93.9%  |  87.1%  |  92.2% | 81.2% | 74.8% | 63.9% | 63.2% |
   | Indonesian-GSD             | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 84.0% | 79.8% | 76.4% | 78.3% |
   | Irish-IDT                  | Raw text     |  99.7% |  97.5% | 90.0% | 88.9% |  77.7%  |  74.5%  |  87.9% | 76.8% | 66.4% | 39.4% | 47.9% |
   | Irish-IDT                  | Gold tok     |    -   |    -   | 90.2% | 89.2% |  78.0%  |  74.7%  |  88.2% | 77.1% | 66.8% | 39.5% | 48.1% |
   | Irish-IDT                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 80.9% | 73.9% | 62.7% | 64.9% |
   | Italian-ISDT               | Raw text     |  99.8% |  98.8% | 97.2% | 97.0% |  97.1%  |  96.2%  |  97.4% | 88.8% | 86.2% | 76.8% | 76.7% |
   | Italian-ISDT               | Gold tok     |    -   |    -   | 97.3% | 97.2% |  97.2%  |  96.3%  |  97.5% | 89.1% | 86.6% | 77.3% | 77.2% |
   | Italian-ISDT               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 91.3% | 89.7% | 84.2% | 84.5% |
   | Italian-ParTUT             | Raw text     |  99.7% | 100.0% | 97.0% | 96.4% |  96.3%  |  95.2%  |  96.5% | 87.5% | 84.3% | 73.2% | 72.4% |
   | Italian-ParTUT             | Gold tok     |    -   |    -   | 97.1% | 96.6% |  96.5%  |  95.3%  |  96.7% | 87.4% | 84.3% | 73.1% | 72.3% |
   | Italian-ParTUT             | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 89.7% | 87.6% | 79.8% | 80.7% |
   | Italian-PoSTWITA           | Raw text     |  99.5% |  30.5% | 94.0% | 93.7% |  94.4%  |  92.4%  |  95.1% | 74.4% | 69.4% | 56.8% | 57.4% |
   | Italian-PoSTWITA           | Gold tok     |    -   |    -   | 94.6% | 94.2% |  94.9%  |  92.9%  |  95.6% | 80.1% | 74.8% | 63.8% | 64.6% |
   | Italian-PoSTWITA           | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 84.4% | 80.0% | 73.7% | 74.3% |
   | Italian-TWITTIRO           | Raw text     |  99.1% |  36.8% | 90.4% | 89.7% |  89.8%  |  86.9%  |  90.2% | 71.9% | 65.3% | 47.8% | 48.1% |
   | Italian-TWITTIRO           | Gold tok     |    -   |    -   | 91.5% | 90.7% |  91.0%  |  87.9%  |  91.5% | 76.3% | 69.4% | 52.1% | 52.8% |
   | Italian-TWITTIRO           | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 84.1% | 78.7% | 69.9% | 70.8% |
   | Italian-VIT                | Raw text     |  99.7% |  94.7% | 96.1% | 95.0% |  95.9%  |  93.5%  |  96.8% | 83.5% | 79.4% | 67.2% | 68.5% |
   | Italian-VIT                | Gold tok     |    -   |    -   | 96.4% | 95.3% |  96.1%  |  93.8%  |  97.0% | 84.2% | 80.1% | 67.9% | 69.2% |
   | Italian-VIT                | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 87.3% | 84.4% | 77.4% | 78.3% |
   | Japanese-GSD               | Raw text     |  90.6% |  94.7% | 88.0% | 87.7% |  90.6%  |  87.7%  |  89.8% | 75.2% | 73.7% | 60.6% | 62.6% |
   | Japanese-GSD               | Gold tok     |    -   |    -   | 96.9% | 96.4% | 100.0%  |  96.4%  |  99.1% | 92.7% | 90.7% | 80.6% | 82.8% |
   | Japanese-GSD               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 94.8% | 93.8% | 87.0% | 87.1% |
   | Korean-GSD                 | Raw text     |  99.9% |  93.9% | 93.6% | 81.7% |  99.6%  |  79.5%  |  87.1% | 69.6% | 61.5% | 54.1% | 50.8% |
   | Korean-GSD                 | Gold tok     |    -   |    -   | 93.7% | 81.9% |  99.7%  |  79.7%  |  87.2% | 70.3% | 62.1% | 54.8% | 51.4% |
   | Korean-GSD                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 72.5% | 65.5% | 60.4% | 61.6% |
   | Korean-Kaist               | Raw text     | 100.0% | 100.0% | 93.3% | 80.1% |    -    |  80.1%  |  88.5% | 77.9% | 70.6% | 61.9% | 58.1% |
   | Korean-Kaist               | Gold tok     |    -   |    -   | 93.4% | 80.1% |    -    |  80.1%  |  88.5% | 78.0% | 70.7% | 62.0% | 58.1% |
   | Korean-Kaist               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 80.3% | 73.7% | 67.8% | 68.4% |
   | Latin-ITTB                 | Raw text     | 100.0% |  92.4% | 97.1% | 93.0% |  93.4%  |  91.4%  |  98.0% | 83.4% | 80.1% | 70.6% | 75.5% |
   | Latin-ITTB                 | Gold tok     |    -   |    -   | 97.1% | 93.0% |  93.3%  |  91.4%  |  98.0% | 83.9% | 80.5% | 70.7% | 75.5% |
   | Latin-ITTB                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 87.8% | 85.8% | 81.9% | 83.0% |
   | Latin-PROIEL               | Raw text     |  99.9% |  36.8% | 94.5% | 94.7% |  86.7%  |  85.6%  |  94.5% | 65.9% | 60.1% | 47.7% | 54.4% |
   | Latin-PROIEL               | Gold tok     |    -   |    -   | 94.7% | 94.8% |  87.2%  |  86.2%  |  94.7% | 73.4% | 67.3% | 54.9% | 61.3% |
   | Latin-PROIEL               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 77.2% | 73.4% | 67.1% | 70.3% |
   | Latin-Perseus              | Raw text     | 100.0% |  98.5% | 83.3% | 67.2% |  72.1%  |  67.2%  |  78.0% | 57.7% | 47.1% | 29.4% | 31.9% |
   | Latin-Perseus              | Gold tok     |    -   |    -   | 83.3% | 67.2% |  72.1%  |  67.2%  |  77.9% | 57.9% | 47.2% | 29.4% | 31.9% |
   | Latin-Perseus              | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 67.6% | 61.8% | 55.9% | 59.1% |
   | Latvian-LVTB               | Raw text     |  99.3% |  98.7% | 93.5% | 84.3% |  89.5%  |  83.9%  |  92.7% | 78.8% | 74.2% | 62.1% | 65.7% |
   | Latvian-LVTB               | Gold tok     |    -   |    -   | 94.0% | 84.8% |  90.1%  |  84.5%  |  93.3% | 79.7% | 75.1% | 62.9% | 66.5% |
   | Latvian-LVTB               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 86.4% | 83.5% | 79.8% | 81.0% |
   | Lithuanian-ALKSNIS         | Raw text     |  99.9% |  87.9% | 90.4% | 80.7% |  82.3%  |  80.4%  |  88.8% | 69.0% | 62.5% | 48.8% | 52.0% |
   | Lithuanian-ALKSNIS         | Gold tok     |    -   |    -   | 90.5% | 80.9% |  82.5%  |  80.6%  |  88.9% | 69.8% | 63.4% | 49.4% | 52.5% |
   | Lithuanian-ALKSNIS         | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 77.2% | 73.9% | 70.6% | 71.6% |
   | Lithuanian-HSE             | Raw text     |  97.3% |  97.3% | 73.2% | 72.1% |  68.2%  |  62.7%  |  71.1% | 46.9% | 33.5% | 21.6% | 22.1% |
   | Lithuanian-HSE             | Gold tok     |    -   |    -   | 74.1% | 73.1% |  69.2%  |  63.6%  |  72.0% | 48.3% | 34.7% | 21.9% | 22.3% |
   | Lithuanian-HSE             | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 56.9% | 48.1% | 42.6% | 44.4% |
   | Maltese-MUDT               | Raw text     |  99.8% |  86.3% | 93.8% | 93.5% |    -    |  93.2%  |    -   | 77.7% | 71.8% | 58.4% | 61.9% |
   | Maltese-MUDT               | Gold tok     |    -   |    -   | 93.9% | 93.7% |    -    |  93.4%  |    -   | 78.0% | 72.2% | 58.6% | 62.1% |
   | Maltese-MUDT               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 82.2% | 77.9% | 68.4% | 69.7% |
   | Marathi-UFAL               | Raw text     |  90.2% |  92.6% | 71.5% |   -   |  60.8%  |  58.2%  |  76.2% | 60.5% | 49.5% | 23.9% | 30.7% |
   | Marathi-UFAL               | Gold tok     |    -   |    -   | 77.7% |   -   |  63.4%  |  60.4%  |  76.5% | 68.5% | 54.9% | 26.0% | 31.0% |
   | Marathi-UFAL               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 77.9% | 67.7% | 60.7% | 63.1% |
   | North Sami-Giella          | Raw text     |  99.9% |  98.8% | 87.8% | 89.4% |  82.5%  |  78.4%  |  82.0% | 64.7% | 57.9% | 46.7% | 43.2% |
   | North Sami-Giella          | Gold tok     |    -   |    -   | 87.9% | 89.6% |  82.6%  |  78.5%  |  82.1% | 64.9% | 58.2% | 46.9% | 43.5% |
   | North Sami-Giella          | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 81.4% | 78.7% | 74.2% | 77.2% |
   | Norwegian-Bokmaal          | Raw text     | 100.0% |  96.5% | 96.6% |   -   |  95.4%  |  94.1%  |  96.9% | 87.2% | 84.4% | 75.3% | 77.1% |
   | Norwegian-Bokmaal          | Gold tok     |    -   |    -   | 96.7% |   -   |  95.4%  |  94.2%  |  97.0% | 87.5% | 84.7% | 75.6% | 77.5% |
   | Norwegian-Bokmaal          | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 92.0% | 90.2% | 86.1% | 86.9% |
   | Norwegian-Nynorsk          | Raw text     |  99.9% |  94.1% | 96.0% |   -   |  94.9%  |  93.6%  |  96.3% | 85.7% | 82.8% | 72.8% | 74.5% |
   | Norwegian-Nynorsk          | Gold tok     |    -   |    -   | 96.2% |   -   |  95.0%  |  93.7%  |  96.4% | 86.4% | 83.5% | 73.6% | 75.2% |
   | Norwegian-Nynorsk          | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 91.1% | 89.2% | 84.7% | 85.8% |
   | Norwegian-NynorskLIA       | Raw text     |  99.8% |  99.5% | 93.7% |   -   |  93.2%  |  90.4%  |  96.2% | 74.2% | 68.9% | 55.9% | 60.1% |
   | Norwegian-NynorskLIA       | Gold tok     |    -   |    -   | 93.8% |   -   |  93.3%  |  90.5%  |  96.4% | 74.4% | 69.1% | 56.0% | 60.3% |
   | Norwegian-NynorskLIA       | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 81.1% | 76.8% | 69.1% | 71.3% |
   | Old Church Slavonic-PROIEL | Raw text     | 100.0% |  41.4% | 93.5% | 93.7% |  86.8%  |  85.5%  |  90.9% | 71.2% | 65.3% | 54.8% | 59.5% |
   | Old Church Slavonic-PROIEL | Gold tok     |    -   |    -   | 93.8% | 94.0% |  87.4%  |  86.2%  |  91.0% | 79.5% | 73.2% | 62.4% | 66.0% |
   | Old Church Slavonic-PROIEL | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 85.1% | 81.3% | 76.8% | 79.6% |
   | Old French-SRCMF           | Raw text     |  99.9% | 100.0% | 94.2% | 93.8% |  96.0%  |  93.3%  |    -   | 85.5% | 79.3% | 70.9% | 74.6% |
   | Old French-SRCMF           | Gold tok     |    -   |    -   | 94.3% | 93.9% |  96.1%  |  93.4%  |    -   | 85.6% | 79.4% | 71.0% | 74.7% |
   | Old French-SRCMF           | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 88.8% | 84.4% | 78.4% | 79.7% |
   | Old Russian-TOROT          | Raw text     | 100.0% |  29.6% | 89.9% | 90.0% |  81.8%  |  79.6%  |  81.2% | 63.9% | 56.9% | 42.9% | 44.2% |
   | Old Russian-TOROT          | Gold tok     |    -   |    -   | 90.5% | 90.5% |  82.5%  |  80.5%  |  81.3% | 73.4% | 65.9% | 51.5% | 50.8% |
   | Old Russian-TOROT          | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 80.5% | 76.4% | 70.4% | 73.2% |
   | Persian-Seraji             | Raw text     |  99.7% |  98.8% | 96.0% | 95.9% |  96.1%  |  95.4%  |  93.6% | 83.6% | 79.6% | 72.8% | 70.1% |
   | Persian-Seraji             | Gold tok     |    -   |    -   | 96.3% | 96.3% |  96.4%  |  95.7%  |  93.9% | 84.3% | 80.2% | 73.3% | 70.5% |
   | Persian-Seraji             | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 87.2% | 84.3% | 80.0% | 80.8% |
   | Polish-LFG                 | Raw text     |  99.8% |  99.7% | 96.7% | 87.2% |  89.1%  |  86.5%  |  94.5% | 90.9% | 87.4% | 74.4% | 78.5% |
   | Polish-LFG                 | Gold tok     |    -   |    -   | 96.9% | 87.3% |  89.2%  |  86.7%  |  94.6% | 91.3% | 87.8% | 74.7% | 78.8% |
   | Polish-LFG                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 96.2% | 94.8% | 92.9% | 93.1% |
   | Polish-PDB                 | Raw text     |  99.8% |  97.3% | 97.1% | 88.1% |  88.6%  |  87.5%  |  96.0% | 86.5% | 82.7% | 68.8% | 75.4% |
   | Polish-PDB                 | Gold tok     |    -   |    -   | 97.2% | 88.2% |  88.8%  |  87.7%  |  96.1% | 87.0% | 83.2% | 69.1% | 75.8% |
   | Polish-PDB                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 90.5% | 88.8% | 86.0% | 86.3% |
   | Portuguese-Bosque          | Raw text     |  99.5% |  87.8% | 95.9% |   -   |  94.5%  |  92.7%  |  96.7% | 85.9% | 81.9% | 68.0% | 71.8% |
   | Portuguese-Bosque          | Gold tok     |    -   |    -   | 96.4% |   -   |  95.0%  |  93.2%  |  97.2% | 87.2% | 83.1% | 69.0% | 73.0% |
   | Portuguese-Bosque          | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 89.3% | 86.3% | 79.5% | 80.5% |
   | Portuguese-GSD             | Raw text     |  99.8% |  97.1% | 97.0% | 97.0% |  99.7%  |  97.0%  |  98.5% | 88.0% | 85.9% | 77.8% | 78.5% |
   | Portuguese-GSD             | Gold tok     |    -   |    -   | 97.2% | 97.2% |  99.9%  |  97.2%  |  98.7% | 88.4% | 86.3% | 78.2% | 78.8% |
   | Portuguese-GSD             | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 90.9% | 89.5% | 83.7% | 84.3% |
   | Romanian-Nonstandard       | Raw text     |  98.2% |  96.7% | 94.2% | 89.4% |  88.4%  |  87.1%  |  92.4% | 82.3% | 77.1% | 59.0% | 65.7% |
   | Romanian-Nonstandard       | Gold tok     |    -   |    -   | 95.9% | 91.0% |  89.9%  |  88.5%  |  94.0% | 84.9% | 79.4% | 60.9% | 67.3% |
   | Romanian-Nonstandard       | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 87.8% | 82.8% | 75.2% | 77.0% |
   | Romanian-RRT               | Raw text     |  99.7% |  95.3% | 96.7% | 95.9% |  96.1%  |  95.7%  |  96.6% | 85.3% | 80.0% | 71.5% | 71.6% |
   | Romanian-RRT               | Gold tok     |    -   |    -   | 96.9% | 96.2% |  96.4%  |  96.0%  |  96.8% | 86.0% | 80.6% | 72.0% | 72.1% |
   | Romanian-RRT               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 87.9% | 83.1% | 76.9% | 77.9% |
   | Russian-GSD                | Raw text     |  99.5% |  96.2% | 95.0% | 94.7% |  85.4%  |  84.3%  |  92.3% | 82.3% | 77.4% | 62.1% | 67.4% |
   | Russian-GSD                | Gold tok     |    -   |    -   | 95.4% | 95.1% |  85.8%  |  84.7%  |  92.7% | 83.5% | 78.6% | 62.9% | 68.3% |
   | Russian-GSD                | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 87.0% | 83.9% | 81.0% | 81.5% |
   | Russian-SynTagRus          | Raw text     |  99.6% |  98.8% | 97.8% |   -   |  93.5%  |  93.2%  |  96.5% | 87.6% | 85.0% | 77.0% | 79.4% |
   | Russian-SynTagRus          | Gold tok     |    -   |    -   | 98.2% |   -   |  93.9%  |  93.5%  |  96.9% | 88.3% | 85.7% | 77.5% | 79.9% |
   | Russian-SynTagRus          | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 90.3% | 89.0% | 86.9% | 87.3% |
   | Russian-Taiga              | Raw text     |  97.6% |  76.0% | 88.3% | 91.5% |  77.0%  |  71.0%  |  84.9% | 65.1% | 57.7% | 38.2% | 43.8% |
   | Russian-Taiga              | Gold tok     |    -   |    -   | 90.4% | 93.8% |  79.2%  |  72.9%  |  87.0% | 69.2% | 61.3% | 40.7% | 46.7% |
   | Russian-Taiga              | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 75.4% | 70.7% | 64.7% | 66.1% |
   | Scottish Gaelic-ARCOSG     | Raw text     |  99.6% |  54.7% | 90.5% | 80.1% |  84.7%  |  79.5%  |  92.1% | 73.9% | 66.1% | 47.7% | 52.4% |
   | Scottish Gaelic-ARCOSG     | Gold tok     |    -   |    -   | 91.1% | 80.7% |  85.1%  |  80.0%  |  92.5% | 78.5% | 70.4% | 52.2% | 58.1% |
   | Scottish Gaelic-ARCOSG     | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 82.6% | 78.0% | 69.4% | 71.3% |
   | Serbian-SET                | Raw text     | 100.0% |  93.0% | 97.1% | 90.7% |  91.1%  |  90.5%  |  95.1% | 85.7% | 81.8% | 69.7% | 73.8% |
   | Serbian-SET                | Gold tok     |    -   |    -   | 97.2% | 90.8% |  91.2%  |  90.7%  |  95.1% | 86.3% | 82.4% | 70.3% | 74.4% |
   | Serbian-SET                | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 89.2% | 86.4% | 82.6% | 83.7% |
   | Slovak-SNK                 | Raw text     | 100.0% |  85.3% | 92.9% | 77.0% |  80.3%  |  76.7%  |  86.6% | 81.0% | 76.3% | 56.1% | 60.7% |
   | Slovak-SNK                 | Gold tok     |    -   |    -   | 93.0% | 77.2% |  80.5%  |  76.8%  |  86.6% | 82.5% | 77.8% | 57.2% | 61.5% |
   | Slovak-SNK                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 88.9% | 86.7% | 83.7% | 84.5% |
   | Slovenian-SSJ              | Raw text     |  98.0% |  68.0% | 94.2% | 86.2% |  86.5%  |  85.7%  |  93.4% | 79.6% | 76.4% | 62.8% | 68.2% |
   | Slovenian-SSJ              | Gold tok     |    -   |    -   | 96.2% | 88.3% |  88.7%  |  87.8%  |  95.3% | 85.2% | 81.8% | 67.2% | 72.8% |
   | Slovenian-SSJ              | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 92.1% | 90.6% | 87.5% | 87.9% |
   | Slovenian-SST              | Raw text     |  99.8% |  23.1% | 87.5% | 79.7% |  79.8%  |  76.8%  |  90.8% | 54.1% | 47.0% | 33.9% | 38.1% |
   | Slovenian-SST              | Gold tok     |    -   |    -   | 88.7% | 80.3% |  80.5%  |  77.9%  |  91.1% | 64.5% | 56.9% | 43.0% | 48.7% |
   | Slovenian-SST              | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 76.0% | 70.7% | 64.3% | 66.6% |
   | Spanish-AnCora             | Raw text     | 100.0% |  98.3% | 98.3% | 98.1% |  98.1%  |  97.4%  |  98.5% | 88.2% | 85.1% | 77.0% | 77.5% |
   | Spanish-AnCora             | Gold tok     |    -   |    -   | 98.4% | 98.2% |  98.2%  |  97.4%  |  98.5% | 88.4% | 85.3% | 77.2% | 77.7% |
   | Spanish-AnCora             | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 90.2% | 87.6% | 81.4% | 82.3% |
   | Spanish-GSD                | Raw text     |  99.8% |  94.5% | 95.5% |   -   |  96.2%  |  93.7%  |  95.9% | 85.4% | 82.0% | 68.6% | 69.3% |
   | Spanish-GSD                | Gold tok     |    -   |    -   | 95.7% |   -   |  96.5%  |  94.0%  |  96.1% | 86.0% | 82.5% | 69.1% | 69.7% |
   | Spanish-GSD                | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 88.4% | 85.8% | 78.7% | 79.6% |
   | Swedish-LinES              | Raw text     | 100.0% |  87.2% | 94.5% | 92.1% |  88.5%  |  85.3%  |  95.1% | 80.4% | 75.8% | 60.7% | 68.1% |
   | Swedish-LinES              | Gold tok     |    -   |    -   | 94.7% | 92.2% |  88.6%  |  85.4%  |  95.2% | 81.2% | 76.5% | 61.2% | 68.7% |
   | Swedish-LinES              | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 86.0% | 82.4% | 78.6% | 79.9% |
   | Swedish-Talbanken          | Raw text     |  99.9% |  96.1% | 95.6% | 93.9% |  94.5%  |  92.9%  |  95.4% | 82.5% | 78.6% | 70.0% | 70.4% |
   | Swedish-Talbanken          | Gold tok     |    -   |    -   | 95.7% | 94.0% |  94.5%  |  93.0%  |  95.5% | 82.9% | 78.9% | 70.3% | 70.7% |
   | Swedish-Talbanken          | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 88.4% | 85.6% | 81.8% | 82.8% |
   | Tamil-TTB                  | Raw text     |  94.5% |  97.5% | 81.3% | 76.3% |  80.5%  |  75.6%  |  84.1% | 58.9% | 52.0% | 42.3% | 43.4% |
   | Tamil-TTB                  | Gold tok     |    -   |    -   | 85.7% | 80.1% |  84.7%  |  79.3%  |  88.3% | 65.0% | 56.9% | 46.7% | 47.9% |
   | Tamil-TTB                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 79.0% | 73.1% | 69.0% | 70.0% |
   | Telugu-MTG                 | Raw text     |  99.6% |  96.6% | 90.3% | 90.3% |  98.5%  |  90.3%  |    -   | 87.1% | 75.8% | 64.8% | 69.6% |
   | Telugu-MTG                 | Gold tok     |    -   |    -   | 90.6% | 90.6% |  98.9%  |  90.6%  |    -   | 88.2% | 76.8% | 65.9% | 70.7% |
   | Telugu-MTG                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 90.3% | 81.5% | 75.6% | 75.8% |
   | Turkish-IMST               | Raw text     |  98.3% |  97.0% | 91.6% | 90.7% |  88.5%  |  86.1%  |  90.0% | 62.2% | 55.1% | 45.2% | 46.7% |
   | Turkish-IMST               | Gold tok     |    -   |    -   | 93.0% | 92.1% |  89.9%  |  87.4%  |  91.4% | 64.5% | 57.1% | 46.3% | 47.9% |
   | Turkish-IMST               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 66.9% | 61.4% | 56.2% | 57.8% |
   | Ukrainian-IU               | Raw text     |  99.8% |  96.6% | 94.9% | 84.0% |  84.3%  |  83.3%  |  93.6% | 79.4% | 74.8% | 57.6% | 64.2% |
   | Ukrainian-IU               | Gold tok     |    -   |    -   | 95.1% | 84.2% |  84.4%  |  83.5%  |  93.7% | 79.8% | 75.1% | 57.8% | 64.5% |
   | Ukrainian-IU               | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 85.2% | 83.1% | 78.9% | 79.5% |
   | Urdu-UDTB                  | Raw text     | 100.0% |  98.3% | 92.4% | 90.1% |  80.8%  |  76.1%  |  93.1% | 83.6% | 76.9% | 49.5% | 63.5% |
   | Urdu-UDTB                  | Gold tok     |    -   |    -   | 92.4% | 90.1% |  80.8%  |  76.1%  |  93.1% | 83.7% | 77.0% | 49.6% | 63.6% |
   | Urdu-UDTB                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 87.5% | 82.6% | 74.8% | 76.3% |
   | Uyghur-UDT                 | Raw text     |  99.5% |  81.9% | 87.7% | 89.8% |  84.0%  |  76.1%  |  91.7% | 70.6% | 56.7% | 37.4% | 44.2% |
   | Uyghur-UDT                 | Gold tok     |    -   |    -   | 88.2% | 90.3% |  84.4%  |  76.6%  |  92.2% | 72.0% | 57.9% | 38.0% | 44.9% |
   | Uyghur-UDT                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 74.4% | 61.1% | 50.3% | 52.6% |
   | Vietnamese-VTB             | Raw text     |  85.4% |  93.5% | 76.4% | 74.3% |  85.0%  |  74.3%  |  84.5% | 45.8% | 40.6% | 34.6% | 36.7% |
   | Vietnamese-VTB             | Gold tok     |    -   |    -   | 87.6% | 85.0% |  99.5%  |  84.9%  |  98.9% | 62.6% | 54.5% | 48.2% | 50.8% |
   | Vietnamese-VTB             | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 69.4% | 66.3% | 62.9% | 65.2% |
   | Wolof-WTB                  | Raw text     |  99.2% |  92.0% | 91.7% | 91.4% |  91.0%  |  88.7%  |  93.2% | 77.0% | 70.9% | 58.8% | 60.3% |
   | Wolof-WTB                  | Gold tok     |    -   |    -   | 92.6% | 92.2% |  91.7%  |  89.5%  |  93.9% | 78.7% | 72.5% | 60.2% | 61.3% |
   | Wolof-WTB                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -    |    -    |    -   | 87.1% | 83.7% | 76.6% | 78.1% |


Universal Dependencies 2.4 Models
---------------------------------

Universal Dependencies 2.4 Models are distributed under the CC BY-NC-SA
(http://creativecommons.org/licenses/by-nc-sa/4.0/) licence. The models are
based solely on Universal Dependencies 2.4 (http://hdl.handle.net/11234/1-2988)
treebanks. The models work in UDPipe version 1.2 and later.

Universal Dependencies 2.4 Models are versioned according to the date released
in the format YYMMDD, where YY, MM and DD are two-digit representation of year,
month and day, respectively. The latest version is 190531.


Download
--------

The latest version 190531 of the Universal Dependencies 2.4 models can be
downloaded from LINDAT/CLARIN repository (http://hdl.handle.net/11234/1-2998).


Acknowledgements
----------------

This work has been partially supported and has been using language resources and
tools developed, stored and distributed by the LINDAT/CLARIN project of the
Ministry of Education, Youth and Sports of the Czech Republic (project
LM2015071).

The models were trained on Universal Dependencies 2.4
(http://hdl.handle.net/11234/1-2988) treebanks.

For the UD treebanks which do not contain original plain text version, raw text
is used to train the tokenizer instead. The plain texts were taken from the W2C
- Web to Corpus (http://hdl.handle.net/11858/00-097C-0000-0022-6133-9).


Publications
------------

- (Straka et al. 2017) Milan Straka and Jana Straková. Tokenizing, POS
  Tagging, Lemmatizing and Parsing UD 2.0 with UDPipe
  (http://ufal.mff.cuni.cz/~straka/papers/2017-conll_udpipe.pdf). In Proceedings
  of the CoNLL 2017 Shared Task: Multilingual Parsing from Raw Text to Universal
  Dependencies, Vancouver, Canada, August 2017.
- (Straka et al. 2016) Straka Milan, Hajič Jan, Straková Jana. UDPipe:
  Trainable Pipeline for Processing CoNLL-U Files Performing Tokenization,
  Morphological Analysis, POS Tagging and Parsing
  (http://ufal.mff.cuni.cz/~straka/papers/2016-lrec_udpipe.pdf). In Proceedings
  of the Tenth International Conference on Language Resources and Evaluation
  (LREC 2016), Portorož, Slovenia, May 2016.


Model Description
-----------------

The Universal Dependencies 2.4 models contain 90 models of 60 languages, each
consisting of a tokenizer, tagger, lemmatizer and dependency parser, all trained
using the UD data. We used the original train-dev-test split, but for treebanks
with only train and no dev data we used last 10% of the train data as dev data.
We produce models only for treebanks with at least 1000 training words.

The tokenizer is trained using the SpaceAfter=No features. If the features are
not present in the data, they can be filled in using raw text in the language in
question.

The tagger, lemmatizer and parser are trained using gold UD data.

Details about model architecture and training process can be found in the
(Straka et al. 2017) paper.


Reproducible Training
---------------------

In case you want to train the same models, scripts for downloading and
resplitting UD 2.4 data, precomputed word embedding, raw texts for tokenizers,
all hyperparameter values and training scripts are available in the second
archive on the model download page (http://hdl.handle.net/11234/1-2998).


Model Performance
-----------------

We present the tagger, lemmatizer and parser performance, measured on the
testing portion of the data, evaluated in three different settings: using raw
text only, using gold tokenization only, and using gold tokenization plus gold
morphology (UPOS, XPOS, FEATS and Lemma).

  || Treebank                   | Mode         |  Words |  Sents |  UPOS |  XPOS | UFeats | AllTags |  Lemma |  UAS  |  LAS  |  MLAS |  BLEX |
   | Afrikaans-AfriBooms        | Raw text     |  99.6% |  98.2% | 95.0% | 90.6% |  94.6% |   90.6% |  96.5% | 81.6% | 77.6% | 64.4% | 66.5% |
   | Afrikaans-AfriBooms        | Gold tok     |    -   |    -   | 95.3% | 90.8% |  94.9% |   90.8% |  96.7% | 82.5% | 78.4% | 65.1% | 67.2% |
   | Afrikaans-AfriBooms        | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.6% | 85.0% | 77.0% | 79.6% |
   | Ancient Greek-Perseus      | Raw text     | 100.0% |  98.8% | 82.2% | 72.2% |  85.7% |   72.2% |  82.7% | 64.0% | 57.0% | 30.2% | 38.2% |
   | Ancient Greek-Perseus      | Gold tok     |    -   |    -   | 82.2% | 72.2% |  85.7% |   72.2% |  82.7% | 64.1% | 57.2% | 30.3% | 38.4% |
   | Ancient Greek-Perseus      | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 68.7% | 63.9% | 53.1% | 57.2% |
   | Ancient Greek-PROIEL       | Raw text     | 100.0% |  51.6% | 96.0% | 96.2% |  88.5% |   87.1% |  93.2% | 72.2% | 67.5% | 50.1% | 56.0% |
   | Ancient Greek-PROIEL       | Gold tok     |    -   |    -   | 96.1% | 96.3% |  88.7% |   87.4% |  93.2% | 77.0% | 72.1% | 54.4% | 60.3% |
   | Ancient Greek-PROIEL       | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 80.2% | 76.4% | 66.7% | 70.3% |
   | Arabic-PADT                | Raw text     |  94.6% |  82.1% | 90.4% | 84.0% |  84.2% |   83.8% |  88.5% | 72.7% | 68.1% | 56.2% | 59.2% |
   | Arabic-PADT                | Gold tok     |    -   |    -   | 95.6% | 89.0% |  89.2% |   88.8% |  92.9% | 82.0% | 76.8% | 63.6% | 66.3% |
   | Arabic-PADT                | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 83.9% | 80.7% | 75.7% | 76.8% |
   | Armenian-ArmTDP            | Raw text     |  99.5% |  96.3% | 90.2% |   -   |  81.4% |   79.9% |  90.3% | 72.1% | 63.1% | 43.6% | 50.6% |
   | Armenian-ArmTDP            | Gold tok     |    -   |    -   | 90.6% |   -   |  81.7% |   80.2% |  90.7% | 72.5% | 63.5% | 43.7% | 50.7% |
   | Armenian-ArmTDP            | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 79.8% | 72.9% | 65.0% | 66.7% |
   | Basque-BDT                 | Raw text     | 100.0% |  99.8% | 92.3% |   -   |  87.3% |   84.8% |  93.5% | 75.0% | 69.9% | 57.4% | 63.2% |
   | Basque-BDT                 | Gold tok     |    -   |    -   | 92.4% |   -   |  87.4% |   84.8% |  93.6% | 75.1% | 70.0% | 57.4% | 63.2% |
   | Basque-BDT                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 82.1% | 78.4% | 75.2% | 77.2% |
   | Belarusian-HSE             | Raw text     |  99.8% |  73.3% | 83.9% | 31.7% |  66.6% |   24.0% |  75.0% | 58.1% | 52.3% | 28.4% | 33.0% |
   | Belarusian-HSE             | Gold tok     |    -   |    -   | 84.1% | 31.9% |  66.8% |   24.1% |  75.2% | 60.1% | 54.1% | 29.3% | 34.1% |
   | Belarusian-HSE             | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 72.1% | 69.1% | 62.2% | 63.1% |
   | Bulgarian-BTB              | Raw text     |  99.9% |  93.7% | 97.6% | 94.3% |  95.4% |   93.8% |  94.6% | 89.0% | 85.0% | 75.2% | 73.9% |
   | Bulgarian-BTB              | Gold tok     |    -   |    -   | 97.8% | 94.5% |  95.5% |   93.9% |  94.7% | 90.0% | 85.9% | 76.1% | 74.7% |
   | Bulgarian-BTB              | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 92.5% | 89.1% | 84.4% | 84.7% |
   | Catalan-AnCora             | Raw text     | 100.0% |  99.6% | 98.1% | 98.0% |  97.7% |   96.9% |  98.2% | 89.0% | 85.9% | 77.4% | 77.8% |
   | Catalan-AnCora             | Gold tok     |    -   |    -   | 98.1% | 98.0% |  97.7% |   97.0% |  98.2% | 89.1% | 86.0% | 77.4% | 77.8% |
   | Catalan-AnCora             | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 91.0% | 88.5% | 82.5% | 83.0% |
   | Chinese-GSD                | Raw text     |  90.0% |  99.1% | 84.0% | 83.8% |  88.7% |   82.5% |  89.9% | 62.8% | 58.7% | 49.0% | 53.7% |
   | Chinese-GSD                | Gold tok     |    -   |    -   | 92.1% | 91.9% |  98.7% |   90.7% | 100.0% | 75.6% | 70.1% | 59.6% | 65.4% |
   | Chinese-GSD                | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 84.8% | 81.9% | 75.9% | 78.4% |
   | Classical Chinese-Kyoto    | Raw text     |  99.5% |  38.9% | 90.8% | 87.8% |  91.4% |   85.2% |  99.4% | 66.5% | 60.0% | 56.3% | 58.5% |
   | Classical Chinese-Kyoto    | Gold tok     |    -   |    -   | 92.5% | 89.8% |  92.6% |   87.4% | 100.0% | 78.1% | 71.3% | 67.7% | 70.1% |
   | Classical Chinese-Kyoto    | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.7% | 84.2% | 82.9% | 83.3% |
   | Coptic-Scriptorium         | Raw text     |  64.5% |  29.8% | 60.9% | 60.0% |  61.7% |   59.6% |  62.2% | 35.5% | 33.4% | 21.3% | 24.0% |
   | Coptic-Scriptorium         | Gold tok     |    -   |    -   | 93.3% | 91.8% |  95.3% |   91.0% |  94.8% | 81.5% | 75.8% | 59.5% | 63.2% |
   | Coptic-Scriptorium         | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 86.5% | 82.0% | 70.0% | 73.1% |
   | Croatian-SET               | Raw text     | 100.0% |  94.0% | 96.9% | 90.1% |  90.7% |   90.1% |  95.3% | 83.8% | 78.1% | 65.1% | 69.8% |
   | Croatian-SET               | Gold tok     |    -   |    -   | 97.0% | 90.2% |  90.8% |   90.2% |  95.3% | 84.3% | 78.7% | 65.5% | 70.2% |
   | Croatian-SET               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.1% | 82.5% | 77.2% | 79.3% |
   | Czech-CAC                  | Raw text     | 100.0% |  99.7% | 98.2% | 90.7% |  89.8% |   89.4% |  97.0% | 87.0% | 83.7% | 70.7% | 77.3% |
   | Czech-CAC                  | Gold tok     |    -   |    -   | 98.2% | 90.8% |  89.8% |   89.5% |  97.0% | 87.1% | 83.7% | 70.8% | 77.4% |
   | Czech-CAC                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 89.8% | 87.5% | 84.1% | 85.0% |
   | Czech-CLTT                 | Raw text     |  99.6% |  98.9% | 97.2% | 87.1% |  87.2% |   86.9% |  96.0% | 79.0% | 75.5% | 60.0% | 69.0% |
   | Czech-CLTT                 | Gold tok     |    -   |    -   | 97.6% | 87.5% |  87.7% |   87.4% |  96.4% | 79.6% | 76.1% | 60.4% | 69.4% |
   | Czech-CLTT                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 82.7% | 79.6% | 74.7% | 75.3% |
   | Czech-FicTree              | Raw text     | 100.0% |  99.1% | 97.1% | 90.0% |  90.8% |   89.5% |  97.1% | 86.3% | 82.1% | 68.7% | 74.3% |
   | Czech-FicTree              | Gold tok     |    -   |    -   | 97.1% | 90.0% |  90.8% |   89.5% |  97.1% | 86.4% | 82.1% | 68.8% | 74.4% |
   | Czech-FicTree              | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 90.5% | 87.7% | 83.3% | 84.1% |
   | Czech-PDT                  | Raw text     |  99.9% |  93.3% | 98.2% | 92.8% |  92.4% |   91.9% |  97.8% | 86.9% | 83.8% | 74.3% | 79.2% |
   | Czech-PDT                  | Gold tok     |    -   |    -   | 98.3% | 92.9% |  92.5% |   92.0% |  97.9% | 87.7% | 84.6% | 75.0% | 79.8% |
   | Czech-PDT                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 90.3% | 88.2% | 85.5% | 86.1% |
   | Danish-DDT                 | Raw text     |  99.8% |  90.8% | 95.4% |   -   |  94.8% |   93.4% |  94.7% | 79.2% | 75.8% | 66.3% | 66.6% |
   | Danish-DDT                 | Gold tok     |    -   |    -   | 95.6% |   -   |  95.0% |   93.6% |  94.9% | 80.2% | 76.8% | 67.2% | 67.5% |
   | Danish-DDT                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 84.8% | 82.4% | 77.4% | 79.1% |
   | Dutch-Alpino               | Raw text     |  99.8% |  90.0% | 94.2% | 91.5% |  93.5% |   90.8% |  95.3% | 81.8% | 77.6% | 62.5% | 65.5% |
   | Dutch-Alpino               | Gold tok     |    -   |    -   | 94.5% | 91.7% |  93.7% |   91.0% |  95.5% | 82.8% | 78.7% | 63.3% | 66.4% |
   | Dutch-Alpino               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 86.3% | 82.8% | 74.1% | 75.8% |
   | Dutch-LassySmall           | Raw text     |  99.8% |  74.0% | 94.2% | 91.9% |  93.8% |   91.2% |  95.6% | 80.3% | 76.2% | 63.6% | 64.5% |
   | Dutch-LassySmall           | Gold tok     |    -   |    -   | 94.3% | 92.2% |  94.2% |   91.5% |  95.9% | 83.6% | 79.1% | 67.2% | 68.3% |
   | Dutch-LassySmall           | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.5% | 84.1% | 78.1% | 78.8% |
   | English-EWT                | Raw text     |  99.0% |  76.3% | 93.5% | 92.9% |  94.4% |   91.5% |  95.5% | 80.0% | 77.0% | 67.6% | 69.6% |
   | English-EWT                | Gold tok     |    -   |    -   | 94.5% | 93.9% |  95.4% |   92.5% |  96.3% | 83.9% | 80.7% | 71.2% | 73.2% |
   | English-EWT                | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.4% | 85.4% | 81.3% | 82.1% |
   | English-GUM                | Raw text     |  99.8% |  84.4% | 93.8% | 93.5% |  94.5% |   92.3% |  94.9% | 80.2% | 76.1% | 64.9% | 64.8% |
   | English-GUM                | Gold tok     |    -   |    -   | 94.0% | 93.8% |  94.8% |   92.6% |  95.1% | 81.9% | 77.8% | 66.5% | 66.4% |
   | English-GUM                | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 86.5% | 84.3% | 77.9% | 78.7% |
   | English-LinES              | Raw text     |  99.9% |  87.0% | 94.9% | 92.4% |  94.8% |   89.9% |  95.8% | 79.5% | 74.9% | 65.8% | 66.6% |
   | English-LinES              | Gold tok     |    -   |    -   | 94.9% | 92.5% |  94.8% |   90.0% |  95.8% | 80.1% | 75.5% | 66.4% | 67.1% |
   | English-LinES              | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 84.3% | 80.9% | 76.4% | 78.2% |
   | English-ParTUT             | Raw text     |  99.7% | 100.0% | 93.9% | 93.7% |  93.8% |   92.1% |  96.5% | 84.7% | 81.3% | 69.1% | 71.1% |
   | English-ParTUT             | Gold tok     |    -   |    -   | 94.2% | 93.9% |  94.0% |   92.3% |  96.8% | 85.1% | 81.7% | 69.4% | 71.5% |
   | English-ParTUT             | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.9% | 86.3% | 79.6% | 81.2% |
   | Estonian-EDT               | Raw text     | 100.0% |  91.4% | 95.4% | 96.7% |  93.5% |   91.7% |  90.5% | 79.2% | 75.3% | 67.7% | 64.7% |
   | Estonian-EDT               | Gold tok     |    -   |    -   | 95.5% | 96.8% |  93.6% |   91.8% |  90.6% | 80.0% | 76.2% | 68.4% | 65.4% |
   | Estonian-EDT               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 85.0% | 82.7% | 79.4% | 80.5% |
   | Estonian-EWT               | Raw text     |  99.1% |  67.0% | 83.2% | 85.6% |  79.5% |   76.2% |  79.8% | 60.1% | 51.2% | 38.8% | 36.7% |
   | Estonian-EWT               | Gold tok     |    -   |    -   | 84.0% | 86.3% |  80.2% |   77.0% |  80.4% | 62.6% | 53.2% | 39.8% | 37.6% |
   | Estonian-EWT               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 74.1% | 69.9% | 64.6% | 65.7% |
   | Finnish-FTB                | Raw text     | 100.0% |  87.4% | 91.5% | 90.8% |  92.6% |   88.9% |  88.5% | 79.5% | 75.0% | 64.2% | 61.0% |
   | Finnish-FTB                | Gold tok     |    -   |    -   | 91.8% | 91.0% |  92.7% |   89.2% |  88.6% | 81.1% | 76.6% | 65.9% | 62.6% |
   | Finnish-FTB                | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 89.9% | 87.6% | 82.9% | 84.2% |
   | Finnish-TDT                | Raw text     |  99.7% |  88.6% | 94.3% | 95.4% |  92.0% |   90.8% |  86.9% | 80.5% | 76.8% | 68.6% | 62.8% |
   | Finnish-TDT                | Gold tok     |    -   |    -   | 94.7% | 95.8% |  92.4% |   91.2% |  87.2% | 81.8% | 78.1% | 69.5% | 63.6% |
   | Finnish-TDT                | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 86.8% | 84.7% | 81.6% | 82.5% |
   | French-GSD                 | Raw text     |  98.9% |  94.6% | 95.9% |   -   |  95.6% |   94.5% |  96.7% | 87.5% | 84.5% | 74.0% | 76.1% |
   | French-GSD                 | Gold tok     |    -   |    -   | 97.0% |   -   |  96.6% |   95.6% |  97.8% | 89.3% | 86.4% | 75.6% | 77.3% |
   | French-GSD                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 91.2% | 89.2% | 83.3% | 83.7% |
   | French-ParTUT              | Raw text     |  99.4% | 100.0% | 94.6% | 93.8% |  91.9% |   90.5% |  95.2% | 86.0% | 82.2% | 65.2% | 70.0% |
   | French-ParTUT              | Gold tok     |    -   |    -   | 95.3% | 94.4% |  92.5% |   91.1% |  95.8% | 86.6% | 82.9% | 66.1% | 70.5% |
   | French-ParTUT              | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 89.5% | 87.6% | 79.8% | 80.9% |
   | French-Sequoia             | Raw text     |  99.1% |  87.5% | 96.1% |   -   |  95.0% |   94.1% |  96.9% | 85.5% | 82.8% | 73.1% | 75.8% |
   | French-Sequoia             | Gold tok     |    -   |    -   | 97.1% |   -   |  95.9% |   95.0% |  97.8% | 87.5% | 84.8% | 75.0% | 77.3% |
   | French-Sequoia             | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 90.2% | 88.8% | 84.3% | 84.7% |
   | French-Spoken              | Raw text     |  99.9% |  22.4% | 93.0% | 97.1% |    -   |   90.6% |  95.6% | 72.6% | 66.8% | 55.1% | 55.9% |
   | French-Spoken              | Gold tok     |    -   |    -   | 93.1% | 97.2% |    -   |   90.8% |  95.7% | 78.3% | 71.7% | 61.8% | 62.1% |
   | French-Spoken              | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 82.5% | 78.0% | 69.8% | 71.0% |
   | Galician-CTG               | Raw text     |  99.2% |  97.5% | 96.3% | 95.8% |  99.0% |   95.4% |  96.2% | 79.2% | 76.2% | 62.5% | 65.4% |
   | Galician-CTG               | Gold tok     |    -   |    -   | 97.0% | 96.5% |  99.8% |   96.2% |  96.9% | 80.8% | 77.7% | 64.3% | 67.2% |
   | Galician-CTG               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 83.0% | 80.7% | 69.4% | 74.1% |
   | Galician-TreeGal           | Raw text     |  98.8% |  85.4% | 91.1% | 87.3% |  89.5% |   86.6% |  92.5% | 72.1% | 66.6% | 49.8% | 52.3% |
   | Galician-TreeGal           | Gold tok     |    -   |    -   | 92.2% | 88.1% |  90.4% |   87.4% |  93.6% | 75.1% | 69.1% | 52.4% | 55.2% |
   | Galician-TreeGal           | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 81.7% | 77.5% | 69.4% | 70.7% |
   | German-GSD                 | Raw text     |  99.6% |  80.9% | 91.7% | 79.5% |  69.8% |   62.9% |  95.4% | 78.2% | 72.7% | 34.0% | 61.5% |
   | German-GSD                 | Gold tok     |    -   |    -   | 92.1% | 79.8% |  70.2% |   63.4% |  95.8% | 80.7% | 75.0% | 35.4% | 63.6% |
   | German-GSD                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 85.5% | 81.2% | 72.3% | 75.4% |
   | Gothic-PROIEL              | Raw text     | 100.0% |  31.1% | 94.3% | 94.8% |  87.4% |   85.5% |  92.6% | 68.6% | 62.0% | 48.8% | 54.6% |
   | Gothic-PROIEL              | Gold tok     |    -   |    -   | 94.8% | 95.2% |  87.6% |   85.9% |  92.7% | 76.8% | 70.0% | 56.2% | 61.7% |
   | Gothic-PROIEL              | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 80.0% | 76.0% | 69.1% | 72.5% |
   | Greek-GDT                  | Raw text     |  99.8% |  88.5% | 95.6% | 95.6% |  90.2% |   88.9% |  94.5% | 86.4% | 83.1% | 66.3% | 69.7% |
   | Greek-GDT                  | Gold tok     |    -   |    -   | 95.9% | 95.9% |  90.5% |   89.2% |  94.7% | 87.0% | 83.7% | 67.1% | 70.5% |
   | Greek-GDT                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 89.5% | 87.6% | 81.6% | 82.5% |
   | Hebrew-HTB                 | Raw text     |  85.0% |  99.4% | 80.5% | 80.5% |  78.7% |   77.7% |  81.6% | 61.7% | 58.3% | 44.6% | 47.5% |
   | Hebrew-HTB                 | Gold tok     |    -   |    -   | 94.9% | 94.9% |  92.7% |   91.5% |  95.4% | 83.6% | 79.6% | 64.3% | 67.1% |
   | Hebrew-HTB                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.0% | 84.9% | 78.4% | 78.8% |
   | Hindi-HDTB                 | Raw text     | 100.0% |  98.9% | 95.9% | 94.9% |  90.4% |   87.8% |  98.1% | 91.3% | 87.2% | 69.2% | 80.1% |
   | Hindi-HDTB                 | Gold tok     |    -   |    -   | 95.9% | 95.0% |  90.4% |   87.8% |  98.1% | 91.3% | 87.2% | 69.3% | 80.2% |
   | Hindi-HDTB                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 93.8% | 90.8% | 85.4% | 86.6% |
   | Hungarian-Szeged           | Raw text     |  99.8% |  95.2% | 90.5% |   -   |  88.0% |   86.4% |  88.5% | 72.7% | 67.1% | 53.6% | 57.8% |
   | Hungarian-Szeged           | Gold tok     |    -   |    -   | 90.7% |   -   |  88.2% |   86.5% |  88.7% | 73.3% | 67.6% | 53.9% | 58.1% |
   | Hungarian-Szeged           | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 80.5% | 77.6% | 72.7% | 76.6% |
   | Indonesian-GSD             | Raw text     | 100.0% |  93.9% | 93.0% | 92.2% |  93.9% |   87.1% |  92.2% | 81.0% | 74.5% | 63.6% | 62.9% |
   | Indonesian-GSD             | Gold tok     |    -   |    -   | 93.0% | 92.2% |  93.9% |   87.1% |  92.2% | 81.2% | 74.8% | 63.9% | 63.2% |
   | Indonesian-GSD             | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 84.0% | 79.8% | 76.4% | 78.3% |
   | Irish-IDT                  | Raw text     |  99.6% |  95.9% | 89.6% | 88.5% |  79.5% |   75.8% |  85.6% | 75.2% | 65.3% | 40.2% | 44.3% |
   | Irish-IDT                  | Gold tok     |    -   |    -   | 90.0% | 88.9% |  79.8% |   76.2% |  86.0% | 75.7% | 65.6% | 40.4% | 44.4% |
   | Irish-IDT                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 79.6% | 72.9% | 61.4% | 63.5% |
   | Italian-ISDT               | Raw text     |  99.8% |  99.4% | 97.1% | 97.0% |  97.0% |   96.1% |  97.3% | 89.2% | 86.7% | 77.3% | 77.5% |
   | Italian-ISDT               | Gold tok     |    -   |    -   | 97.4% | 97.2% |  97.2% |   96.4% |  97.5% | 89.5% | 87.0% | 77.7% | 77.8% |
   | Italian-ISDT               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 91.8% | 90.2% | 85.0% | 85.5% |
   | Italian-ParTUT             | Raw text     |  99.8% |  99.0% | 97.0% | 96.5% |  96.4% |   95.2% |  96.5% | 87.5% | 84.4% | 73.2% | 72.4% |
   | Italian-ParTUT             | Gold tok     |    -   |    -   | 97.1% | 96.6% |  96.5% |   95.3% |  96.7% | 87.4% | 84.3% | 73.1% | 72.3% |
   | Italian-ParTUT             | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 89.7% | 87.6% | 79.8% | 80.7% |
   | Italian-PoSTWITA           | Raw text     |  99.5% |  30.2% | 94.0% | 93.7% |  94.3% |   92.3% |  95.1% | 74.1% | 69.1% | 56.5% | 57.2% |
   | Italian-PoSTWITA           | Gold tok     |    -   |    -   | 94.6% | 94.2% |  94.9% |   92.9% |  95.6% | 80.6% | 75.1% | 64.4% | 65.3% |
   | Italian-PoSTWITA           | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 84.7% | 80.5% | 74.5% | 75.0% |
   | Italian-VIT                | Raw text     |  99.7% |  94.0% | 96.0% | 94.9% |  95.9% |   93.5% |  96.9% | 84.1% | 80.1% | 68.3% | 69.8% |
   | Italian-VIT                | Gold tok     |    -   |    -   | 96.3% | 95.2% |  96.1% |   93.8% |  97.1% | 84.9% | 80.8% | 69.0% | 70.5% |
   | Italian-VIT                | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.1% | 85.3% | 78.4% | 79.4% |
   | Japanese-GSD               | Raw text     |  91.4% |  94.7% | 88.8% | 88.5% |  91.4% |   88.5% |  90.7% | 76.3% | 74.8% | 62.2% | 64.0% |
   | Japanese-GSD               | Gold tok     |    -   |    -   | 96.9% | 96.3% | 100.0% |   96.3% |  99.1% | 92.7% | 90.7% | 81.2% | 83.3% |
   | Japanese-GSD               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 95.3% | 94.3% | 88.0% | 88.1% |
   | Korean-GSD                 | Raw text     |  99.8% |  94.0% | 93.5% | 81.7% |  99.5% |   79.5% |  87.0% | 69.5% | 61.4% | 54.1% | 50.8% |
   | Korean-GSD                 | Gold tok     |    -   |    -   | 93.7% | 81.9% |  99.7% |   79.7% |  87.2% | 70.3% | 62.1% | 54.8% | 51.4% |
   | Korean-GSD                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 72.5% | 65.5% | 60.4% | 61.6% |
   | Korean-Kaist               | Raw text     | 100.0% | 100.0% | 93.3% | 80.1% |    -   |   80.1% |  88.5% | 77.9% | 70.6% | 61.9% | 58.1% |
   | Korean-Kaist               | Gold tok     |    -   |    -   | 93.4% | 80.1% |    -   |   80.1% |  88.5% | 78.0% | 70.7% | 62.0% | 58.1% |
   | Korean-Kaist               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 80.3% | 73.7% | 67.8% | 68.4% |
   | Latin-ITTB                 | Raw text     | 100.0% |  90.7% | 97.1% | 93.0% |  93.3% |   91.4% |  98.0% | 83.2% | 79.9% | 70.5% | 75.3% |
   | Latin-ITTB                 | Gold tok     |    -   |    -   | 97.1% | 93.0% |  93.3% |   91.4% |  98.0% | 83.9% | 80.5% | 70.7% | 75.5% |
   | Latin-ITTB                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.8% | 85.8% | 81.9% | 83.0% |
   | Latin-PROIEL               | Raw text     |  99.9% |  36.8% | 94.5% | 94.7% |  86.7% |   85.6% |  94.5% | 65.9% | 60.1% | 47.7% | 54.4% |
   | Latin-PROIEL               | Gold tok     |    -   |    -   | 94.7% | 94.8% |  87.2% |   86.2% |  94.7% | 73.4% | 67.3% | 54.9% | 61.3% |
   | Latin-PROIEL               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 77.2% | 73.4% | 67.1% | 70.3% |
   | Latin-Perseus              | Raw text     | 100.0% |  98.5% | 83.3% | 67.2% |  72.1% |   67.2% |  78.0% | 57.7% | 47.1% | 29.4% | 31.9% |
   | Latin-Perseus              | Gold tok     |    -   |    -   | 83.3% | 67.2% |  72.1% |   67.2% |  77.9% | 57.9% | 47.2% | 29.4% | 31.9% |
   | Latin-Perseus              | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 67.6% | 61.8% | 55.9% | 59.1% |
   | Latvian-LVTB               | Raw text     |  99.4% |  99.0% | 93.5% | 84.0% |  89.2% |   83.6% |  92.7% | 79.3% | 74.3% | 61.4% | 65.5% |
   | Latvian-LVTB               | Gold tok     |    -   |    -   | 94.0% | 84.4% |  89.7% |   84.1% |  93.2% | 80.0% | 74.9% | 62.1% | 66.1% |
   | Latvian-LVTB               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 86.3% | 83.0% | 79.1% | 80.3% |
   | Lithuanian-ALKSNIS         | Raw text     |  99.3% |  87.0% | 87.4% | 76.2% |  77.9% |   75.7% |  85.3% | 63.6% | 56.2% | 40.8% | 44.7% |
   | Lithuanian-ALKSNIS         | Gold tok     |    -   |    -   | 87.9% | 76.7% |  78.3% |   76.1% |  85.8% | 64.9% | 57.5% | 41.5% | 45.5% |
   | Lithuanian-ALKSNIS         | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 72.7% | 69.2% | 65.1% | 66.5% |
   | Lithuanian-HSE             | Raw text     |  98.1% |  92.0% | 73.6% | 72.0% |  68.4% |   61.5% |  72.3% | 46.0% | 34.0% | 20.8% | 23.1% |
   | Lithuanian-HSE             | Gold tok     |    -   |    -   | 74.2% | 72.5% |  69.2% |   62.0% |  73.1% | 47.1% | 34.6% | 20.9% | 23.2% |
   | Lithuanian-HSE             | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 54.9% | 47.7% | 41.9% | 44.2% |
   | Maltese-MUDT               | Raw text     |  99.8% |  85.2% | 93.8% | 93.5% |    -   |   93.2% |    -   | 77.3% | 71.5% | 58.2% | 61.8% |
   | Maltese-MUDT               | Gold tok     |    -   |    -   | 93.9% | 93.7% |    -   |   93.4% |    -   | 77.9% | 72.0% | 58.6% | 62.2% |
   | Maltese-MUDT               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 82.1% | 77.7% | 68.0% | 69.5% |
   | Marathi-UFAL               | Raw text     |  91.0% |  84.0% | 72.3% |   -   |  61.6% |   59.1% |  76.8% | 59.4% | 48.9% | 23.0% | 30.1% |
   | Marathi-UFAL               | Gold tok     |    -   |    -   | 77.7% |   -   |  63.4% |   60.4% |  76.5% | 68.5% | 54.9% | 26.0% | 31.0% |
   | Marathi-UFAL               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 77.9% | 67.7% | 60.7% | 63.1% |
   | North Sami-Giella          | Raw text     |  99.9% |  98.8% | 87.8% | 89.4% |  82.5% |   78.4% |  82.0% | 64.7% | 57.9% | 46.7% | 43.2% |
   | North Sami-Giella          | Gold tok     |    -   |    -   | 87.9% | 89.6% |  82.6% |   78.5% |  82.1% | 64.9% | 58.2% | 46.9% | 43.5% |
   | North Sami-Giella          | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 81.4% | 78.7% | 74.2% | 77.2% |
   | Norwegian-Bokmaal          | Raw text     |  99.8% |  96.9% | 96.5% |   -   |  95.2% |   94.0% |  96.7% | 87.2% | 84.3% | 75.2% | 77.2% |
   | Norwegian-Bokmaal          | Gold tok     |    -   |    -   | 96.7% |   -   |  95.4% |   94.2% |  97.0% | 87.8% | 84.9% | 75.7% | 77.7% |
   | Norwegian-Bokmaal          | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 91.7% | 89.9% | 85.8% | 86.6% |
   | Norwegian-Nynorsk          | Raw text     |  99.9% |  93.4% | 96.1% |   -   |  94.9% |   93.6% |  96.3% | 85.8% | 82.8% | 72.9% | 74.5% |
   | Norwegian-Nynorsk          | Gold tok     |    -   |    -   | 96.2% |   -   |  95.0% |   93.7% |  96.4% | 86.4% | 83.5% | 73.6% | 75.2% |
   | Norwegian-Nynorsk          | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 91.1% | 89.2% | 84.7% | 85.8% |
   | Norwegian-NynorskLIA       | Raw text     |  99.8% |  99.5% | 93.7% |   -   |  93.2% |   90.4% |  96.2% | 73.4% | 68.3% | 55.8% | 59.9% |
   | Norwegian-NynorskLIA       | Gold tok     |    -   |    -   | 93.8% |   -   |  93.3% |   90.5% |  96.4% | 73.7% | 68.6% | 56.0% | 60.0% |
   | Norwegian-NynorskLIA       | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 80.7% | 76.3% | 68.7% | 70.9% |
   | Old Church Slavonic-PROIEL | Raw text     | 100.0% |  41.0% | 93.6% | 93.7% |  86.8% |   85.6% |  90.9% | 71.9% | 65.9% | 55.3% | 60.0% |
   | Old Church Slavonic-PROIEL | Gold tok     |    -   |    -   | 93.8% | 94.0% |  87.4% |   86.2% |  91.0% | 79.5% | 73.2% | 62.4% | 66.0% |
   | Old Church Slavonic-PROIEL | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 85.1% | 81.3% | 76.8% | 79.6% |
   | Old French-SRCMF           | Raw text     |  99.9% | 100.0% | 94.2% | 93.8% |  96.0% |   93.3% |    -   | 85.5% | 79.3% | 70.9% | 74.6% |
   | Old French-SRCMF           | Gold tok     |    -   |    -   | 94.3% | 93.9% |  96.1% |   93.4% |    -   | 85.6% | 79.4% | 71.0% | 74.7% |
   | Old French-SRCMF           | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.8% | 84.4% | 78.4% | 79.7% |
   | Old Russian-TOROT          | Raw text     | 100.0% |  29.6% | 89.8% | 89.8% |  82.1% |   79.9% |  81.1% | 63.4% | 56.7% | 43.3% | 44.0% |
   | Old Russian-TOROT          | Gold tok     |    -   |    -   | 90.4% | 90.5% |  82.8% |   80.8% |  81.1% | 73.3% | 66.1% | 51.9% | 50.8% |
   | Old Russian-TOROT          | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 80.5% | 76.4% | 70.4% | 73.1% |
   | Persian-Seraji             | Raw text     |  99.7% |  98.8% | 96.0% | 95.9% |  96.1% |   95.4% |  93.6% | 83.6% | 79.6% | 72.8% | 70.1% |
   | Persian-Seraji             | Gold tok     |    -   |    -   | 96.3% | 96.3% |  96.4% |   95.7% |  93.9% | 84.3% | 80.2% | 73.3% | 70.5% |
   | Persian-Seraji             | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.2% | 84.3% | 80.0% | 80.8% |
   | Polish-LFG                 | Raw text     |  99.8% |  99.7% | 96.7% | 87.2% |  89.1% |   86.5% |  94.5% | 90.9% | 87.4% | 74.4% | 78.5% |
   | Polish-LFG                 | Gold tok     |    -   |    -   | 96.9% | 87.3% |  89.2% |   86.7% |  94.6% | 91.3% | 87.8% | 74.7% | 78.8% |
   | Polish-LFG                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 96.2% | 94.8% | 92.9% | 93.1% |
   | Polish-PDB                 | Raw text     |  99.9% |  97.0% | 97.2% | 88.3% |  88.8% |   87.8% |  95.8% | 87.6% | 83.5% | 69.2% | 76.0% |
   | Polish-PDB                 | Gold tok     |    -   |    -   | 97.3% | 88.4% |  88.9% |   87.9% |  96.0% | 88.1% | 84.0% | 69.6% | 76.4% |
   | Polish-PDB                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 90.9% | 88.8% | 85.5% | 86.0% |
   | Portuguese-Bosque          | Raw text     |  99.5% |  90.2% | 95.7% |   -   |  94.4% |   92.3% |  96.6% | 86.5% | 82.6% | 67.4% | 72.4% |
   | Portuguese-Bosque          | Gold tok     |    -   |    -   | 96.2% |   -   |  94.8% |   92.8% |  97.1% | 87.7% | 83.8% | 68.3% | 73.6% |
   | Portuguese-Bosque          | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 89.3% | 86.2% | 79.3% | 80.2% |
   | Portuguese-GSD             | Raw text     |  99.9% |  96.5% | 97.0% | 97.0% |  99.8% |   97.0% |  98.6% | 88.0% | 85.9% | 77.9% | 78.5% |
   | Portuguese-GSD             | Gold tok     |    -   |    -   | 97.2% | 97.2% |  99.9% |   97.2% |  98.7% | 88.4% | 86.3% | 78.2% | 78.8% |
   | Portuguese-GSD             | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 90.9% | 89.5% | 83.7% | 84.3% |
   | Romanian-Nonstandard       | Raw text     |  98.3% |  96.7% | 93.8% | 88.9% |  87.8% |   86.5% |  91.8% | 81.7% | 76.0% | 57.5% | 64.0% |
   | Romanian-Nonstandard       | Gold tok     |    -   |    -   | 95.5% | 90.5% |  89.3% |   88.0% |  93.3% | 84.0% | 78.2% | 59.2% | 65.6% |
   | Romanian-Nonstandard       | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.1% | 81.7% | 73.5% | 75.5% |
   | Romanian-RRT               | Raw text     |  99.7% |  95.3% | 96.7% | 95.9% |  96.1% |   95.7% |  96.6% | 85.3% | 80.0% | 71.5% | 71.6% |
   | Romanian-RRT               | Gold tok     |    -   |    -   | 96.9% | 96.2% |  96.4% |   96.0% |  96.8% | 86.0% | 80.6% | 72.0% | 72.1% |
   | Romanian-RRT               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.9% | 83.1% | 76.9% | 77.9% |
   | Russian-GSD                | Raw text     |  99.5% |  96.2% | 95.0% | 94.7% |  85.4% |   84.3% |  92.3% | 82.4% | 77.2% | 61.8% | 66.8% |
   | Russian-GSD                | Gold tok     |    -   |    -   | 95.4% | 95.1% |  85.8% |   84.7% |  92.7% | 83.3% | 78.1% | 62.4% | 67.6% |
   | Russian-GSD                | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 86.7% | 83.5% | 80.5% | 81.1% |
   | Russian-SynTagRus          | Raw text     |  99.6% |  98.8% | 97.8% |   -   |  93.5% |   93.2% |  96.5% | 87.6% | 85.0% | 77.0% | 79.4% |
   | Russian-SynTagRus          | Gold tok     |    -   |    -   | 98.2% |   -   |  93.9% |   93.5% |  96.9% | 88.3% | 85.7% | 77.5% | 79.9% |
   | Russian-SynTagRus          | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 90.3% | 89.0% | 86.9% | 87.3% |
   | Russian-Taiga              | Raw text     |  97.6% |  76.0% | 88.3% | 91.5% |  77.0% |   71.0% |  84.9% | 65.5% | 58.2% | 38.5% | 44.0% |
   | Russian-Taiga              | Gold tok     |    -   |    -   | 90.4% | 93.8% |  79.2% |   72.9% |  87.0% | 69.9% | 62.1% | 41.4% | 47.5% |
   | Russian-Taiga              | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 76.0% | 71.7% | 66.2% | 67.7% |
   | Serbian-SET                | Raw text     | 100.0% |  93.0% | 97.4% | 91.1% |  91.5% |   91.1% |  95.1% | 86.5% | 82.4% | 70.0% | 74.0% |
   | Serbian-SET                | Gold tok     |    -   |    -   | 97.4% | 91.2% |  91.6% |   91.2% |  95.1% | 87.1% | 83.1% | 70.7% | 74.7% |
   | Serbian-SET                | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 89.7% | 86.5% | 82.3% | 83.7% |
   | Slovak-SNK                 | Raw text     | 100.0% |  85.3% | 92.9% | 77.0% |  80.3% |   76.7% |  86.6% | 81.0% | 76.3% | 56.1% | 60.7% |
   | Slovak-SNK                 | Gold tok     |    -   |    -   | 93.0% | 77.2% |  80.5% |   76.8% |  86.6% | 82.5% | 77.8% | 57.2% | 61.5% |
   | Slovak-SNK                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.9% | 86.7% | 83.7% | 84.5% |
   | Slovenian-SSJ              | Raw text     | 100.0% |  98.1% | 96.1% | 88.3% |  88.7% |   87.7% |  95.3% | 84.9% | 81.5% | 66.9% | 72.5% |
   | Slovenian-SSJ              | Gold tok     |    -   |    -   | 96.2% | 88.3% |  88.7% |   87.8% |  95.3% | 85.0% | 81.6% | 67.0% | 72.6% |
   | Slovenian-SSJ              | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 92.0% | 90.4% | 87.2% | 87.6% |
   | Slovenian-SST              | Raw text     |  99.8% |  23.1% | 88.4% | 80.2% |  80.3% |   77.7% |  91.0% | 53.9% | 47.0% | 34.4% | 38.5% |
   | Slovenian-SST              | Gold tok     |    -   |    -   | 88.8% | 80.7% |  80.9% |   78.3% |  91.2% | 64.7% | 56.9% | 43.1% | 48.6% |
   | Slovenian-SST              | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 74.8% | 69.4% | 63.7% | 65.6% |
   | Spanish-AnCora             | Raw text     | 100.0% |  98.3% | 98.3% | 98.1% |  98.1% |   97.4% |  98.5% | 88.2% | 85.1% | 77.0% | 77.5% |
   | Spanish-AnCora             | Gold tok     |    -   |    -   | 98.4% | 98.2% |  98.2% |   97.4% |  98.5% | 88.4% | 85.3% | 77.2% | 77.7% |
   | Spanish-AnCora             | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 90.2% | 87.6% | 81.4% | 82.3% |
   | Spanish-GSD                | Raw text     |  99.8% |  94.9% | 95.4% |   -   |  96.2% |   93.7% |  95.9% | 85.3% | 81.9% | 68.7% | 69.3% |
   | Spanish-GSD                | Gold tok     |    -   |    -   | 95.7% |   -   |  96.5% |   93.9% |  96.1% | 85.9% | 82.5% | 69.2% | 69.8% |
   | Spanish-GSD                | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.3% | 85.6% | 78.6% | 79.5% |
   | Swedish-LinES              | Raw text     | 100.0% |  86.8% | 94.4% | 91.6% |  87.6% |   84.4% |  94.5% | 80.1% | 75.2% | 59.6% | 67.2% |
   | Swedish-LinES              | Gold tok     |    -   |    -   | 94.5% | 91.7% |  87.7% |   84.5% |  94.5% | 80.8% | 75.8% | 60.0% | 67.6% |
   | Swedish-LinES              | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 85.7% | 81.8% | 78.1% | 79.6% |
   | Swedish-Talbanken          | Raw text     |  99.9% |  96.1% | 95.6% | 93.9% |  94.5% |   92.9% |  95.4% | 82.5% | 78.6% | 70.0% | 70.4% |
   | Swedish-Talbanken          | Gold tok     |    -   |    -   | 95.7% | 94.0% |  94.5% |   93.0% |  95.5% | 82.9% | 78.9% | 70.3% | 70.7% |
   | Swedish-Talbanken          | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.4% | 85.6% | 81.8% | 82.8% |
   | Tamil-TTB                  | Raw text     |  94.5% |  97.5% | 81.3% | 76.3% |  80.5% |   75.6% |  84.1% | 58.9% | 52.0% | 42.3% | 43.4% |
   | Tamil-TTB                  | Gold tok     |    -   |    -   | 85.7% | 80.1% |  84.7% |   79.3% |  88.3% | 65.0% | 56.9% | 46.7% | 47.9% |
   | Tamil-TTB                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 79.0% | 73.1% | 69.0% | 70.0% |
   | Telugu-MTG                 | Raw text     |  99.8% |  96.6% | 90.5% | 90.5% |  98.7% |   90.5% |    -   | 87.3% | 75.7% | 64.8% | 69.4% |
   | Telugu-MTG                 | Gold tok     |    -   |    -   | 90.6% | 90.6% |  98.9% |   90.6% |    -   | 88.2% | 76.8% | 65.9% | 70.7% |
   | Telugu-MTG                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 90.3% | 81.5% | 75.6% | 75.8% |
   | Turkish-IMST               | Raw text     |  98.3% |  97.0% | 91.6% | 90.7% |  88.5% |   86.1% |  90.0% | 62.2% | 55.1% | 45.2% | 46.7% |
   | Turkish-IMST               | Gold tok     |    -   |    -   | 93.0% | 92.1% |  89.9% |   87.4% |  91.4% | 64.5% | 57.1% | 46.3% | 47.9% |
   | Turkish-IMST               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 66.9% | 61.4% | 56.2% | 57.8% |
   | Ukrainian-IU               | Raw text     |  99.8% |  96.6% | 94.9% | 84.0% |  84.3% |   83.3% |  93.6% | 79.4% | 74.8% | 57.6% | 64.2% |
   | Ukrainian-IU               | Gold tok     |    -   |    -   | 95.1% | 84.2% |  84.4% |   83.5% |  93.7% | 79.8% | 75.1% | 57.8% | 64.5% |
   | Ukrainian-IU               | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 85.2% | 83.1% | 78.9% | 79.5% |
   | Urdu-UDTB                  | Raw text     | 100.0% |  98.6% | 92.4% | 90.1% |  80.8% |   76.1% |  93.1% | 83.6% | 76.9% | 49.5% | 63.5% |
   | Urdu-UDTB                  | Gold tok     |    -   |    -   | 92.4% | 90.1% |  80.8% |   76.1% |  93.1% | 83.7% | 77.0% | 49.6% | 63.6% |
   | Urdu-UDTB                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.5% | 82.6% | 74.8% | 76.3% |
   | Uyghur-UDT                 | Raw text     |  99.7% |  82.9% | 87.9% | 90.0% |  84.1% |   76.3% |  91.9% | 70.8% | 56.7% | 37.4% | 44.1% |
   | Uyghur-UDT                 | Gold tok     |    -   |    -   | 88.2% | 90.3% |  84.4% |   76.6% |  92.2% | 72.0% | 57.9% | 38.0% | 44.9% |
   | Uyghur-UDT                 | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 74.4% | 61.1% | 50.3% | 52.6% |
   | Vietnamese-VTB             | Raw text     |  85.4% |  93.0% | 76.4% | 74.4% |  85.1% |   74.3% |  84.6% | 46.4% | 41.2% | 35.1% | 37.1% |
   | Vietnamese-VTB             | Gold tok     |    -   |    -   | 87.6% | 85.0% |  99.5% |   84.9% |  98.9% | 62.6% | 54.5% | 48.2% | 50.8% |
   | Vietnamese-VTB             | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 69.4% | 66.3% | 62.9% | 65.2% |
   | Wolof-WTB                  | Raw text     |  99.2% |  92.0% | 91.7% | 91.4% |  91.0% |   88.7% |  93.2% | 77.0% | 70.9% | 58.8% | 60.3% |
   | Wolof-WTB                  | Gold tok     |    -   |    -   | 92.6% | 92.2% |  91.7% |   89.5% |  93.9% | 78.7% | 72.5% | 60.2% | 61.3% |
   | Wolof-WTB                  | Gold tok+mor |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.1% | 83.7% | 76.6% | 78.1% |


Universal Dependencies 2.3 Models
---------------------------------

Universal Dependencies 2.3 Models are distributed under the CC BY-NC-SA
(http://creativecommons.org/licenses/by-nc-sa/4.0/) licence. The models are
based solely on Universal Dependencies 2.3 (http://hdl.handle.net/11234/1-2895)
treebanks. The models work in UDPipe version 1.2 and later.

Universal Dependencies 2.3 Models are versioned according to the date released
in the format YYMMDD, where YY, MM and DD are two-digit representation of year,
month and day, respectively. The latest version is 181115.


Download
--------

The latest version 181115 of the Universal Dependencies 2.3 models can be
downloaded from LINDAT/CLARIN repository (http://hdl.handle.net/11234/1-2898).


Acknowledgements
----------------

This work has been partially supported and has been using language resources and
tools developed, stored and distributed by the LINDAT/CLARIN project of the
Ministry of Education, Youth and Sports of the Czech Republic (project
LM2015071).

The models were trained on Universal Dependencies 2.3
(http://hdl.handle.net/11234/1-2895) treebanks.

For the UD treebanks which do not contain original plain text version, raw text
is used to train the tokenizer instead. The plain texts were taken from the W2C
- Web to Corpus (http://hdl.handle.net/11858/00-097C-0000-0022-6133-9).


Publications
------------

- (Straka et al. 2017) Milan Straka and Jana Straková. Tokenizing, POS
  Tagging, Lemmatizing and Parsing UD 2.0 with UDPipe
  (http://ufal.mff.cuni.cz/~straka/papers/2017-conll_udpipe.pdf). In Proceedings
  of the CoNLL 2017 Shared Task: Multilingual Parsing from Raw Text to Universal
  Dependencies, Vancouver, Canada, August 2017.
- (Straka et al. 2016) Straka Milan, Hajič Jan, Straková Jana. UDPipe:
  Trainable Pipeline for Processing CoNLL-U Files Performing Tokenization,
  Morphological Analysis, POS Tagging and Parsing
  (http://ufal.mff.cuni.cz/~straka/papers/2016-lrec_udpipe.pdf). In Proceedings
  of the Tenth International Conference on Language Resources and Evaluation
  (LREC 2016), Portorož, Slovenia, May 2016.


Model Description
-----------------

The Universal Dependencies 2.3 models contain 84 models of 56 languages, each
consisting of a tokenizer, tagger, lemmatizer and dependency parser, all trained
using the UD data. We used the original train-dev-test split, but for treebanks
with only train and no dev data we used last 10% of the train data as dev data.
We produce models only for treebanks with at least 1000 training words.

The tokenizer is trained using the SpaceAfter=No features. If the features are
not present in the data, they can be filled in using raw text in the language in
question.

The tagger, lemmatizer and parser are trained using gold UD data.

Details about model architecture and training process can be found in the
(Straka et al. 2017) paper.


Reproducible Training
---------------------

In case you want to train the same models, scripts for downloading and
resplitting UD 2.3 data, precomputed word embedding, raw texts for tokenizers,
all hyperparameter values and training scripts are available in the second
archive on the model download page (http://hdl.handle.net/11234/1-2898).


Model Performance
-----------------

We present the tagger, lemmatizer and parser performance, measured on the
testing portion of the data, evaluated in three different settings: using raw
text only, using gold tokenization only, and using gold tokenization plus gold
morphology (UPOS, XPOS, FEATS and Lemma).

  || Treebank                   | Mode         |  Words |  Sents |  UPOS |  XPOS  | UFeats | AllTags |  Lemma |  UAS  |  LAS  |  MLAS |  BLEX |
   | Afrikaans-AfriBooms        | Raw text     |  99.8% |  98.2% | 95.2% |  90.7% |  94.8% |  90.7%  |  96.5% | 82.1% | 78.0% | 64.8% | 66.8% |
   | Afrikaans-AfriBooms        | Gold tok     |    -   |    -   | 95.3% |  90.8% |  94.9% |  90.8%  |  96.7% | 82.5% | 78.4% | 65.1% | 67.2% |
   | Afrikaans-AfriBooms        | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 87.6% | 85.0% | 77.0% | 79.6% |
   | Ancient Greek-Perseus      | Raw text     | 100.0% |  98.6% | 82.4% |  72.3% |  85.8% |  72.3%  |  82.6% | 63.7% | 57.2% | 30.6% | 38.1% |
   | Ancient Greek-Perseus      | Gold tok     |    -   |    -   | 82.4% |  72.4% |  85.8% |  72.3%  |  82.7% | 63.8% | 57.3% | 30.7% | 38.2% |
   | Ancient Greek-Perseus      | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 68.9% | 64.1% | 53.7% | 57.4% |
   | Ancient Greek-PROIEL       | Raw text     | 100.0% |  49.7% | 95.8% |  96.0% |  88.5% |  87.0%  |  92.7% | 72.9% | 68.1% | 50.2% | 56.7% |
   | Ancient Greek-PROIEL       | Gold tok     |    -   |    -   | 95.9% |  96.2% |  88.7% |  87.2%  |  92.8% | 77.4% | 72.6% | 55.1% | 60.8% |
   | Ancient Greek-PROIEL       | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 79.4% | 75.8% | 66.1% | 69.5% |
   | Arabic-PADT                | Raw text     |  94.6% |  82.1% | 90.2% |  83.8% |  83.9% |  83.6%  |  88.4% | 72.7% | 67.6% | 55.6% | 58.8% |
   | Arabic-PADT                | Gold tok     |    -   |    -   | 95.4% |  88.7% |  88.9% |  88.5%  |  92.8% | 82.2% | 76.2% | 63.0% | 66.1% |
   | Arabic-PADT                | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 84.3% | 80.4% | 75.5% | 76.6% |
   | Armenian-ArmTDP            | Raw text     |  99.4% |  94.5% | 89.0% |    -   |  81.0% |  79.3%  |  90.0% | 68.5% | 59.4% | 39.5% | 45.7% |
   | Armenian-ArmTDP            | Gold tok     |    -   |    -   | 89.5% |    -   |  81.3% |  79.7%  |  90.3% | 69.5% | 60.1% | 39.7% | 46.0% |
   | Armenian-ArmTDP            | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 77.2% | 70.3% | 61.6% | 63.5% |
   | Basque-BDT                 | Raw text     | 100.0% |  99.8% | 92.3% |    -   |  87.3% |  84.8%  |  93.5% | 75.0% | 69.9% | 57.4% | 63.2% |
   | Basque-BDT                 | Gold tok     |    -   |    -   | 92.4% |    -   |  87.4% |  84.8%  |  93.6% | 75.1% | 70.0% | 57.4% | 63.2% |
   | Basque-BDT                 | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 82.1% | 78.4% | 75.2% | 77.2% |
   | Belarusian-HSE             | Raw text     |  99.3% |  69.0% | 86.4% |  77.9% |  69.2% |  63.0%  |  79.7% | 66.1% | 56.9% | 34.7% | 42.7% |
   | Belarusian-HSE             | Gold tok     |    -   |    -   | 87.2% |  78.2% |  69.6% |  63.1%  |  80.2% | 68.0% | 58.8% | 35.4% | 44.0% |
   | Belarusian-HSE             | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 79.4% | 76.3% | 71.9% | 73.6% |
   | Bulgarian-BTB              | Raw text     |  99.9% |  95.3% | 97.6% |  94.4% |  95.4% |  93.8%  |  94.6% | 89.3% | 85.2% | 75.5% | 74.1% |
   | Bulgarian-BTB              | Gold tok     |    -   |    -   | 97.8% |  94.5% |  95.5% |  93.9%  |  94.7% | 90.0% | 85.9% | 76.1% | 74.7% |
   | Bulgarian-BTB              | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 92.5% | 89.1% | 84.4% | 84.7% |
   | Catalan-AnCora             | Raw text     | 100.0% |  99.4% | 98.0% |  98.0% |  97.4% |  96.7%  |  97.9% | 88.6% | 85.6% | 76.8% | 77.2% |
   | Catalan-AnCora             | Gold tok     |    -   |    -   | 98.0% |  98.0% |  97.4% |  96.7%  |  97.9% | 88.7% | 85.7% | 76.8% | 77.3% |
   | Catalan-AnCora             | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 90.9% | 88.6% | 82.8% | 83.3% |
   | Chinese-GSD                | Raw text     |  90.3% |  98.8% | 84.2% |  84.0% |  89.1% |  82.8%  |  90.3% | 62.8% | 58.7% | 49.0% | 53.6% |
   | Chinese-GSD                | Gold tok     |    -   |    -   | 92.1% |  91.9% |  98.7% |  90.7%  | 100.0% | 75.6% | 70.1% | 59.6% | 65.4% |
   | Chinese-GSD                | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 84.8% | 81.9% | 75.9% | 78.4% |
   | Coptic-Scriptorium         | Raw text     |  64.9% |  29.7% | 61.0% |  60.4% |  61.6% |  59.9%  |  62.5% | 36.6% | 34.7% | 23.2% | 25.9% |
   | Coptic-Scriptorium         | Gold tok     |    -   |    -   | 93.1% |  91.6% |  95.1% |  91.0%  |  94.4% | 82.1% | 76.8% | 60.2% | 63.4% |
   | Coptic-Scriptorium         | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 86.2% | 81.8% | 70.1% | 73.1% |
   | Croatian-SET               | Raw text     |  99.9% |  94.9% | 96.3% |    -   |  84.5% |  83.8%  |  94.8% | 84.2% | 78.4% | 58.5% | 69.9% |
   | Croatian-SET               | Gold tok     |    -   |    -   | 96.4% |    -   |  84.6% |  83.9%  |  94.9% | 84.9% | 79.0% | 59.0% | 70.5% |
   | Croatian-SET               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 88.0% | 83.9% | 79.3% | 80.6% |
   | Czech-CAC                  | Raw text     | 100.0% |  99.7% | 98.1% |  90.7% |  89.8% |  89.5%  |  96.9% | 86.0% | 82.7% | 70.0% | 76.5% |
   | Czech-CAC                  | Gold tok     |    -   |    -   | 98.1% |  90.7% |  89.8% |  89.5%  |  96.9% | 86.0% | 82.7% | 70.0% | 76.6% |
   | Czech-CAC                  | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 89.6% | 87.5% | 84.6% | 85.3% |
   | Czech-CLTT                 | Raw text     |  99.4% |  97.4% | 96.5% |  87.7% |  87.8% |  87.5%  |  96.0% | 78.2% | 74.7% | 60.7% | 68.5% |
   | Czech-CLTT                 | Gold tok     |    -   |    -   | 97.2% |  88.2% |  88.4% |  88.1%  |  96.5% | 78.9% | 75.5% | 61.1% | 68.8% |
   | Czech-CLTT                 | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 82.3% | 79.4% | 74.2% | 75.0% |
   | Czech-FicTree              | Raw text     | 100.0% |  98.4% | 97.1% |  90.0% |  90.8% |  89.6%  |  97.1% | 86.1% | 81.7% | 68.2% | 74.1% |
   | Czech-FicTree              | Gold tok     |    -   |    -   | 97.1% |  90.0% |  90.8% |  89.6%  |  97.1% | 86.2% | 81.8% | 68.3% | 74.3% |
   | Czech-FicTree              | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 90.5% | 87.6% | 83.2% | 84.2% |
   | Czech-PDT                  | Raw text     |  99.9% |  93.6% | 98.2% |  92.8% |  92.4% |  91.9%  |  97.8% | 87.1% | 84.1% | 74.5% | 79.5% |
   | Czech-PDT                  | Gold tok     |    -   |    -   | 98.3% |  92.9% |  92.5% |  92.0%  |  97.9% | 87.8% | 84.8% | 75.1% | 80.2% |
   | Czech-PDT                  | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 90.2% | 88.1% | 85.5% | 86.1% |
   | Danish-DDT                 | Raw text     |  99.8% |  91.6% | 95.4% |    -   |  94.8% |  93.4%  |  94.7% | 79.2% | 75.9% | 66.3% | 66.8% |
   | Danish-DDT                 | Gold tok     |    -   |    -   | 95.6% |    -   |  95.0% |  93.6%  |  94.9% | 80.2% | 76.8% | 67.2% | 67.5% |
   | Danish-DDT                 | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 84.8% | 82.4% | 77.4% | 79.1% |
   | Dutch-Alpino               | Raw text     |  99.9% |  91.7% | 94.3% |  91.5% |  93.6% |  90.8%  |  95.4% | 82.3% | 78.2% | 63.0% | 66.0% |
   | Dutch-Alpino               | Gold tok     |    -   |    -   | 94.4% |  91.6% |  93.6% |  91.0%  |  95.5% | 83.1% | 78.9% | 63.9% | 66.9% |
   | Dutch-Alpino               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 86.6% | 83.1% | 75.1% | 76.2% |
   | Dutch-LassySmall           | Raw text     |  99.7% |  74.5% | 94.1% |  91.8% |  93.7% |  91.1%  |  95.5% | 79.9% | 75.9% | 63.3% | 64.3% |
   | Dutch-LassySmall           | Gold tok     |    -   |    -   | 94.3% |  92.2% |  94.2% |  91.5%  |  95.9% | 83.6% | 79.1% | 67.2% | 68.3% |
   | Dutch-LassySmall           | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 87.5% | 84.1% | 78.1% | 78.8% |
   | English-EWT                | Raw text     |  99.1% |  77.1% | 93.5% |  92.9% |  94.5% |  91.5%  |  96.0% | 80.5% | 77.5% | 68.5% | 71.0% |
   | English-EWT                | Gold tok     |    -   |    -   | 94.4% |  93.9% |  95.4% |  92.5%  |  96.8% | 84.5% | 81.2% | 72.0% | 74.6% |
   | English-EWT                | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 87.7% | 85.8% | 82.0% | 82.7% |
   | English-GUM                | Raw text     |  99.7% |  80.7% | 93.2% |  92.7% |  93.9% |  91.6%  |  94.4% | 79.0% | 74.7% | 62.8% | 62.7% |
   | English-GUM                | Gold tok     |    -   |    -   | 93.5% |  93.1% |  94.2% |  92.0%  |  94.7% | 81.2% | 76.8% | 64.6% | 64.6% |
   | English-GUM                | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 86.1% | 83.8% | 77.1% | 78.2% |
   | English-LinES              | Raw text     |  99.9% |  87.2% | 94.6% |  92.4% |  94.8% |  90.0%  |  95.9% | 77.8% | 72.7% | 63.5% | 64.8% |
   | English-LinES              | Gold tok     |    -   |    -   | 94.7% |  92.5% |  94.8% |  90.0%  |  96.0% | 78.3% | 73.2% | 64.0% | 65.3% |
   | English-LinES              | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 82.2% | 78.3% | 73.7% | 75.8% |
   | English-ParTUT             | Raw text     |  99.5% |  99.0% | 93.9% |  93.5% |  93.5% |  91.9%  |  96.4% | 84.6% | 80.8% | 69.0% | 71.1% |
   | English-ParTUT             | Gold tok     |    -   |    -   | 94.3% |  93.9% |  94.0% |  92.3%  |  96.9% | 85.1% | 81.4% | 69.5% | 71.8% |
   | English-ParTUT             | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 87.1% | 85.6% | 79.1% | 80.2% |
   | Estonian-EDT               | Raw text     | 100.0% |  91.7% | 95.7% |  96.8% |  93.2% |  91.6%  |  90.5% | 79.5% | 75.5% | 67.7% | 64.3% |
   | Estonian-EDT               | Gold tok     |    -   |    -   | 95.7% |  96.9% |  93.3% |  91.7%  |  90.6% | 80.3% | 76.2% | 68.3% | 64.9% |
   | Estonian-EDT               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 85.1% | 82.7% | 79.5% | 80.5% |
   | Finnish-FTB                | Raw text     |  99.9% |  88.4% | 92.4% |  91.1% |  92.8% |  89.6%  |  88.6% | 80.3% | 76.0% | 65.5% | 62.0% |
   | Finnish-FTB                | Gold tok     |    -   |    -   | 92.6% |  91.3% |  93.0% |  89.8%  |  88.8% | 81.8% | 77.4% | 67.0% | 63.4% |
   | Finnish-FTB                | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 88.9% | 86.7% | 82.3% | 83.3% |
   | Finnish-TDT                | Raw text     |  99.7% |  89.8% | 94.4% |  95.6% |  92.1% |  90.8%  |  86.5% | 80.8% | 76.9% | 68.8% | 62.5% |
   | Finnish-TDT                | Gold tok     |    -   |    -   | 94.7% |  95.9% |  92.4% |  91.0%  |  86.8% | 81.9% | 77.9% | 69.5% | 63.2% |
   | Finnish-TDT                | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 86.4% | 84.2% | 81.3% | 82.3% |
   | French-GSD                 | Raw text     |  98.8% |  94.1% | 95.8% |    -   |  95.5% |  94.5%  |  96.6% | 85.0% | 81.8% | 72.5% | 74.4% |
   | French-GSD                 | Gold tok     |    -   |    -   | 97.0% |    -   |  96.6% |  95.5%  |  97.8% | 86.5% | 83.4% | 74.0% | 75.5% |
   | French-GSD                 | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 89.0% | 86.8% | 82.3% | 82.8% |
   | French-ParTUT              | Raw text     |  99.4% | 100.0% | 94.8% |  94.3% |  92.0% |  91.0%  |  95.2% | 89.0% | 85.0% | 68.0% | 73.3% |
   | French-ParTUT              | Gold tok     |    -   |    -   | 95.4% |  95.0% |  92.6% |  91.6%  |  95.8% | 89.5% | 85.8% | 68.7% | 73.7% |
   | French-ParTUT              | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 91.6% | 89.5% | 82.4% | 83.7% |
   | French-Sequoia             | Raw text     |  99.2% |  88.6% | 96.1% |    -   |  95.2% |  94.2%  |  97.0% | 84.9% | 82.1% | 73.1% | 75.4% |
   | French-Sequoia             | Gold tok     |    -   |    -   | 97.0% |    -   |  96.0% |  95.1%  |  97.8% | 86.5% | 83.8% | 74.7% | 76.6% |
   | French-Sequoia             | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 89.4% | 88.0% | 83.8% | 84.2% |
   | French-Spoken              | Raw text     |  99.9% |  22.4% | 92.9% |  97.3% |    -   |  90.5%  |  95.8% | 72.2% | 66.2% | 54.2% | 55.3% |
   | French-Spoken              | Gold tok     |    -   |    -   | 93.3% |  97.3% |    -   |  90.8%  |  95.9% | 77.1% | 70.8% | 60.6% | 61.4% |
   | French-Spoken              | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 80.2% | 75.3% | 66.7% | 68.0% |
   | Galician-CTG               | Raw text     |  99.2% |  97.5% | 96.3% |  95.8% |  99.0% |  95.4%  |  96.2% | 79.2% | 76.2% | 62.5% | 65.4% |
   | Galician-CTG               | Gold tok     |    -   |    -   | 97.0% |  96.5% |  99.8% |  96.2%  |  96.9% | 80.8% | 77.7% | 64.3% | 67.2% |
   | Galician-CTG               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 83.0% | 80.7% | 69.4% | 74.1% |
   | Galician-TreeGal           | Raw text     |  98.7% |  85.2% | 91.0% |  87.2% |  89.6% |  86.5%  |  92.5% | 71.4% | 65.8% | 49.0% | 51.4% |
   | Galician-TreeGal           | Gold tok     |    -   |    -   | 92.3% |  88.3% |  90.6% |  87.5%  |  93.5% | 74.2% | 68.1% | 51.7% | 54.1% |
   | Galician-TreeGal           | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 81.3% | 76.9% | 69.5% | 70.6% |
   | German-GSD                 | Raw text     |  99.6% |  81.8% | 91.4% |  80.4% |  69.9% |  63.3%  |  95.4% | 77.0% | 71.7% | 33.9% | 60.4% |
   | German-GSD                 | Gold tok     |    -   |    -   | 91.9% |  80.8% |  70.2% |  63.7%  |  95.8% | 79.7% | 74.1% | 35.2% | 62.8% |
   | German-GSD                 | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 84.6% | 80.3% | 71.2% | 74.5% |
   | Gothic-PROIEL              | Raw text     | 100.0% |  28.9% | 94.3% |  94.9% |  87.3% |  85.3%  |  92.4% | 69.1% | 62.3% | 48.8% | 55.2% |
   | Gothic-PROIEL              | Gold tok     |    -   |    -   | 94.9% |  95.3% |  87.7% |  86.0%  |  92.6% | 78.3% | 71.5% | 57.4% | 62.9% |
   | Gothic-PROIEL              | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 82.1% | 77.8% | 70.9% | 74.4% |
   | Greek-GDT                  | Raw text     |  99.8% |  89.4% | 95.8% |  95.8% |  90.3% |  89.2%  |  94.7% | 86.0% | 82.8% | 66.2% | 69.5% |
   | Greek-GDT                  | Gold tok     |    -   |    -   | 96.0% |  96.0% |  90.5% |  89.4%  |  94.9% | 86.7% | 83.6% | 67.0% | 70.3% |
   | Greek-GDT                  | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 89.1% | 87.3% | 81.2% | 82.1% |
   | Hebrew-HTB                 | Raw text     |  85.0% |  99.4% | 80.5% |  80.5% |  78.7% |  77.7%  |  81.5% | 61.7% | 58.3% | 44.6% | 47.4% |
   | Hebrew-HTB                 | Gold tok     |    -   |    -   | 94.9% |  94.9% |  92.7% |  91.5%  |  95.3% | 83.6% | 79.6% | 64.3% | 67.0% |
   | Hebrew-HTB                 | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 87.0% | 84.9% | 78.4% | 78.8% |
   | Hindi-HDTB                 | Raw text     | 100.0% |  98.2% | 95.8% |  94.8% |  90.3% |  87.7%  |  98.0% | 91.5% | 87.3% | 69.2% | 80.3% |
   | Hindi-HDTB                 | Gold tok     |    -   |    -   | 95.8% |  94.8% |  90.3% |  87.7%  |  98.0% | 91.7% | 87.5% | 69.3% | 80.4% |
   | Hindi-HDTB                 | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 94.0% | 91.0% | 85.8% | 87.0% |
   | Hungarian-Szeged           | Raw text     |  99.8% |  95.6% | 90.6% |    -   |  88.1% |  86.4%  |  88.5% | 72.9% | 67.2% | 53.7% | 57.9% |
   | Hungarian-Szeged           | Gold tok     |    -   |    -   | 90.7% |    -   |  88.2% |  86.5%  |  88.7% | 73.3% | 67.6% | 53.9% | 58.1% |
   | Hungarian-Szeged           | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 80.5% | 77.6% | 72.7% | 76.6% |
   | Indonesian-GSD             | Raw text     | 100.0% |  94.1% | 93.0% |  92.2% |  93.9% |  87.1%  |  92.2% | 81.0% | 74.6% | 63.6% | 62.9% |
   | Indonesian-GSD             | Gold tok     |    -   |    -   | 93.0% |  92.2% |  93.9% |  87.1%  |  92.2% | 81.2% | 74.8% | 63.9% | 63.2% |
   | Indonesian-GSD             | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 84.0% | 79.8% | 76.4% | 78.3% |
   | Irish-IDT                  | Raw text     |  99.6% |  95.9% | 89.5% |  88.2% |  79.0% |  75.3%  |  85.7% | 74.0% | 64.2% | 38.2% | 43.3% |
   | Irish-IDT                  | Gold tok     |    -   |    -   | 89.8% |  88.5% |  79.4% |  75.6%  |  86.1% | 74.4% | 64.4% | 38.2% | 43.2% |
   | Irish-IDT                  | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 78.9% | 72.3% | 60.7% | 62.9% |
   | Italian-ISDT               | Raw text     |  99.7% |  99.4% | 97.0% |  96.8% |  97.1% |  96.0%  |  97.2% | 88.7% | 86.1% | 76.5% | 76.5% |
   | Italian-ISDT               | Gold tok     |    -   |    -   | 97.2% |  97.1% |  97.3% |  96.2%  |  97.5% | 89.2% | 86.6% | 77.1% | 77.1% |
   | Italian-ISDT               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 91.3% | 89.8% | 84.2% | 84.6% |
   | Italian-ParTUT             | Raw text     |  99.7% |  99.0% | 96.6% |  96.1% |  96.2% |  95.1%  |  96.3% | 85.9% | 83.2% | 72.2% | 71.2% |
   | Italian-ParTUT             | Gold tok     |    -   |    -   | 96.8% |  96.3% |  96.4% |  95.2%  |  96.5% | 85.9% | 83.2% | 72.0% | 71.1% |
   | Italian-ParTUT             | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 89.8% | 87.8% | 80.5% | 81.2% |
   | Italian-PoSTWITA           | Raw text     |  99.4% |  28.5% | 94.0% |  93.7% |  94.5% |  92.4%  |  94.9% | 73.9% | 68.8% | 55.8% | 56.5% |
   | Italian-PoSTWITA           | Gold tok     |    -   |    -   | 94.5% |  94.1% |  94.9% |  92.8%  |  95.4% | 80.7% | 74.8% | 63.7% | 64.5% |
   | Italian-PoSTWITA           | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 84.6% | 79.8% | 73.3% | 74.0% |
   | Japanese-GSD               | Raw text     |  91.0% |  95.0% | 88.6% |  88.1% |  91.0% |  88.1%  |  90.3% | 75.3% | 73.8% | 60.8% | 62.6% |
   | Japanese-GSD               | Gold tok     |    -   |    -   | 97.0% |  96.3% | 100.0% |  96.3%  |  99.1% | 92.8% | 90.8% | 81.0% | 83.2% |
   | Japanese-GSD               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 95.0% | 93.9% | 87.2% | 87.3% |
   | Korean-GSD                 | Raw text     |  99.8% |  94.8% | 93.5% |  81.8% |  99.6% |  79.5%  |  87.1% | 69.6% | 61.5% | 54.2% | 50.9% |
   | Korean-GSD                 | Gold tok     |    -   |    -   | 93.7% |  81.9% |  99.7% |  79.7%  |  87.2% | 70.3% | 62.1% | 54.8% | 51.4% |
   | Korean-GSD                 | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 72.5% | 65.5% | 60.4% | 61.6% |
   | Korean-Kaist               | Raw text     |  99.9% | 100.0% | 93.3% |  80.0% |    -   |  80.0%  |  88.5% | 77.7% | 70.4% | 61.8% | 58.0% |
   | Korean-Kaist               | Gold tok     |    -   |    -   | 93.3% |  80.1% |    -   |  80.1%  |  88.5% | 77.8% | 70.5% | 61.9% | 58.0% |
   | Korean-Kaist               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 80.2% | 73.7% | 67.8% | 68.3% |
   | Latin-ITTB                 | Raw text     | 100.0% |  91.3% | 97.0% |  92.7% |  93.2% |  91.0%  |  98.1% | 82.8% | 79.5% | 70.0% | 75.0% |
   | Latin-ITTB                 | Gold tok     |    -   |    -   | 97.0% |  92.7% |  93.2% |  91.0%  |  98.1% | 83.8% | 80.4% | 70.4% | 75.5% |
   | Latin-ITTB                 | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 88.5% | 86.5% | 82.7% | 83.7% |
   | Latin-PROIEL               | Raw text     |  99.9% |  35.9% | 94.6% |  94.7% |  86.8% |  85.7%  |  94.2% | 66.3% | 60.8% | 48.1% | 54.9% |
   | Latin-PROIEL               | Gold tok     |    -   |    -   | 94.9% |  94.9% |  87.2% |  86.2%  |  94.3% | 74.2% | 68.3% | 55.5% | 62.0% |
   | Latin-PROIEL               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 77.3% | 73.4% | 67.1% | 70.4% |
   | Latin-Perseus              | Raw text     | 100.0% |  98.5% | 83.3% |  67.2% |  72.1% |  67.2%  |  78.0% | 57.1% | 46.5% | 29.4% | 31.6% |
   | Latin-Perseus              | Gold tok     |    -   |    -   | 83.3% |  67.2% |  72.1% |  67.2%  |  77.9% | 57.1% | 46.5% | 29.4% | 31.6% |
   | Latin-Perseus              | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 67.5% | 61.7% | 56.1% | 59.1% |
   | Latvian-LVTB               | Raw text     |  99.3% |  98.2% | 92.3% |  83.0% |  88.0% |  82.5%  |  91.7% | 76.2% | 71.0% | 57.8% | 61.8% |
   | Latvian-LVTB               | Gold tok     |    -   |    -   | 92.9% |  83.5% |  88.6% |  83.1%  |  92.3% | 77.2% | 71.9% | 58.7% | 62.7% |
   | Latvian-LVTB               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 84.9% | 81.5% | 77.3% | 78.6% |
   | Lithuanian-HSE             | Raw text     |  98.8% |  89.5% | 73.7% |  72.2% |  68.5% |  61.7%  |  72.5% | 45.9% | 33.8% | 20.6% | 23.3% |
   | Lithuanian-HSE             | Gold tok     |    -   |    -   | 74.2% |  72.5% |  69.2% |  62.0%  |  73.1% | 47.1% | 34.6% | 20.9% | 23.2% |
   | Lithuanian-HSE             | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 54.9% | 47.7% | 41.9% | 44.2% |
   | Maltese-MUDT               | Raw text     |  99.8% |  84.8% | 94.1% |  93.6% |    -   |  93.6%  |    -   | 76.6% | 71.0% | 57.0% | 60.6% |
   | Maltese-MUDT               | Gold tok     |    -   |    -   | 94.3% |  93.8% |    -   |  93.8%  |    -   | 77.7% | 72.0% | 57.9% | 61.5% |
   | Maltese-MUDT               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 82.2% | 77.9% | 67.3% | 69.0% |
   | Marathi-UFAL               | Raw text     |  90.1% |  90.7% | 71.3% |    -   |  60.6% |  58.1%  |  76.1% | 60.3% | 48.3% | 24.7% | 31.9% |
   | Marathi-UFAL               | Gold tok     |    -   |    -   | 77.7% |    -   |  63.4% |  60.4%  |  76.5% | 68.0% | 54.1% | 26.6% | 30.4% |
   | Marathi-UFAL               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 73.8% | 63.6% | 57.3% | 59.8% |
   | North Sami-Giella          | Raw text     |  99.9% |  98.8% | 87.8% |  89.4% |  82.5% |  78.4%  |  82.0% | 64.7% | 57.9% | 46.7% | 43.2% |
   | North Sami-Giella          | Gold tok     |    -   |    -   | 87.9% |  89.6% |  82.6% |  78.5%  |  82.1% | 64.9% | 58.2% | 46.9% | 43.5% |
   | North Sami-Giella          | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 81.4% | 78.7% | 74.2% | 77.2% |
   | Norwegian-Bokmaal          | Raw text     |  99.8% |  97.0% | 96.5% |    -   |  95.3% |  94.1%  |  96.6% | 86.5% | 83.7% | 74.8% | 76.7% |
   | Norwegian-Bokmaal          | Gold tok     |    -   |    -   | 96.7% |    -   |  95.5% |  94.3%  |  96.8% | 87.1% | 84.3% | 75.3% | 77.2% |
   | Norwegian-Bokmaal          | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 91.5% | 89.6% | 85.7% | 86.6% |
   | Norwegian-Nynorsk          | Raw text     |  99.9% |  93.3% | 96.1% |    -   |  94.9% |  93.7%  |  96.4% | 85.5% | 82.3% | 72.6% | 74.4% |
   | Norwegian-Nynorsk          | Gold tok     |    -   |    -   | 96.3% |    -   |  95.1% |  93.8%  |  96.5% | 86.2% | 83.0% | 73.4% | 75.1% |
   | Norwegian-Nynorsk          | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 91.1% | 89.1% | 85.1% | 86.2% |
   | Norwegian-NynorskLIA       | Raw text     | 100.0% |  99.9% | 85.2% |    -   |  86.5% |  81.9%  |  92.7% | 58.5% | 49.8% | 38.6% | 42.1% |
   | Norwegian-NynorskLIA       | Gold tok     |    -   |    -   | 85.2% |    -   |  86.5% |  81.9%  |  92.7% | 58.5% | 49.8% | 38.6% | 42.1% |
   | Norwegian-NynorskLIA       | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 74.1% | 66.4% | 59.1% | 61.0% |
   | Old Church Slavonic-PROIEL | Raw text     | 100.0% |  40.4% | 93.7% |  93.7% |  86.7% |  85.3%  |  90.6% | 73.1% | 66.6% | 55.1% | 59.3% |
   | Old Church Slavonic-PROIEL | Gold tok     |    -   |    -   | 94.0% |  94.0% |  87.1% |  85.8%  |  90.8% | 81.6% | 74.8% | 62.8% | 66.3% |
   | Old Church Slavonic-PROIEL | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 86.6% | 82.5% | 77.0% | 79.9% |
   | Old French-SRCMF           | Raw text     |  99.9% | 100.0% | 94.2% |  93.8% |  96.0% |  93.3%  |    -   | 85.5% | 79.3% | 70.9% | 74.6% |
   | Old French-SRCMF           | Gold tok     |    -   |    -   | 94.3% |  93.9% |  96.1% |  93.4%  |    -   | 85.6% | 79.4% | 71.0% | 74.7% |
   | Old French-SRCMF           | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 88.8% | 84.4% | 78.4% | 79.7% |
   | Persian-Seraji             | Raw text     |  99.7% |  98.8% | 96.0% |  95.9% |  96.1% |  95.4%  |  93.6% | 83.6% | 79.6% | 72.8% | 70.1% |
   | Persian-Seraji             | Gold tok     |    -   |    -   | 96.3% |  96.3% |  96.4% |  95.7%  |  93.9% | 84.3% | 80.2% | 73.3% | 70.5% |
   | Persian-Seraji             | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 87.2% | 84.3% | 80.0% | 80.8% |
   | Polish-LFG                 | Raw text     |  99.8% |  99.7% | 96.7% |  87.2% |  89.1% |  86.5%  |  94.5% | 91.3% | 87.9% | 74.8% | 78.9% |
   | Polish-LFG                 | Gold tok     |    -   |    -   | 96.9% |  87.3% |  89.2% |  86.7%  |  94.6% | 91.6% | 88.2% | 75.1% | 79.1% |
   | Polish-LFG                 | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 96.3% | 95.0% | 93.0% | 93.2% |
   | Polish-SZ                  | Raw text     |  99.9% |  98.9% | 95.5% |  83.3% |  83.5% |  82.5%  |  93.3% | 86.3% | 82.2% | 64.0% | 72.3% |
   | Polish-SZ                  | Gold tok     |    -   |    -   | 95.7% |  83.5% |  83.6% |  82.7%  |  93.5% | 86.9% | 82.7% | 64.5% | 72.7% |
   | Polish-SZ                  | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 93.3% | 91.6% | 89.0% | 89.6% |
   | Portuguese-Bosque          | Raw text     |  99.6% |  90.0% | 95.8% |    -   |  94.5% |  92.3%  |  96.6% | 85.3% | 82.2% | 67.4% | 72.1% |
   | Portuguese-Bosque          | Gold tok     |    -   |    -   | 96.3% |    -   |  94.9% |  92.7%  |  97.0% | 86.4% | 83.2% | 68.2% | 73.0% |
   | Portuguese-Bosque          | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 87.8% | 84.9% | 77.8% | 78.9% |
   | Portuguese-GSD             | Raw text     |  99.9% |  97.0% | 97.0% |  97.0% |  99.7% |  97.0%  |  98.5% | 88.0% | 85.9% | 77.9% | 78.5% |
   | Portuguese-GSD             | Gold tok     |    -   |    -   | 97.2% |  97.2% |  99.9% |  97.2%  |  98.7% | 88.4% | 86.3% | 78.2% | 78.8% |
   | Portuguese-GSD             | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 90.9% | 89.5% | 83.7% | 84.3% |
   | Romanian-Nonstandard       | Raw text     |  98.5% |  96.6% | 94.1% |  89.1% |  88.0% |  86.8%  |  91.6% | 82.0% | 76.2% | 57.9% | 63.9% |
   | Romanian-Nonstandard       | Gold tok     |    -   |    -   | 95.5% |  90.3% |  89.3% |  88.0%  |  92.9% | 84.1% | 78.2% | 59.4% | 65.4% |
   | Romanian-Nonstandard       | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 86.1% | 80.8% | 72.4% | 74.7% |
   | Romanian-RRT               | Raw text     |  99.7% |  95.3% | 96.7% |  95.9% |  96.1% |  95.7%  |  96.6% | 85.6% | 80.2% | 71.5% | 71.8% |
   | Romanian-RRT               | Gold tok     |    -   |    -   | 96.9% |  96.2% |  96.4% |  96.0%  |  96.8% | 86.3% | 81.0% | 72.1% | 72.5% |
   | Romanian-RRT               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 88.1% | 83.3% | 77.1% | 78.1% |
   | Russian-GSD                | Raw text     |  99.9% |  96.2% | 94.4% |  94.2% |  84.3% |  82.5%  |  74.9% | 82.6% | 77.3% | 60.3% | 47.5% |
   | Russian-GSD                | Gold tok     |    -   |    -   | 94.5% |  94.3% |  84.4% |  82.6%  |  75.0% | 83.0% | 77.7% | 60.5% | 47.8% |
   | Russian-GSD                | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 86.2% | 83.3% | 80.4% | 81.2% |
   | Russian-SynTagRus          | Raw text     |  99.7% |  98.8% | 97.9% |    -   |  93.6% |  93.2%  |  96.6% | 87.9% | 85.3% | 77.2% | 79.7% |
   | Russian-SynTagRus          | Gold tok     |    -   |    -   | 98.2% |    -   |  93.9% |  93.5%  |  96.9% | 88.5% | 85.8% | 77.6% | 80.1% |
   | Russian-SynTagRus          | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 90.3% | 89.0% | 86.9% | 87.3% |
   | Russian-Taiga              | Raw text     |  98.0% |  87.2% | 86.4% |  98.0% |  75.8% |  74.0%  |  82.7% | 63.1% | 54.9% | 36.3% | 39.0% |
   | Russian-Taiga              | Gold tok     |    -   |    -   | 88.1% | 100.0% |  77.5% |  75.4%  |  84.3% | 66.0% | 57.2% | 38.0% | 40.9% |
   | Russian-Taiga              | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 72.5% | 67.2% | 61.0% | 62.8% |
   | Serbian-SET                | Raw text     | 100.0% |  92.3% | 96.8% |    -   |  90.5% |  90.3%  |  94.8% | 86.4% | 82.2% | 69.6% | 74.0% |
   | Serbian-SET                | Gold tok     |    -   |    -   | 96.9% |    -   |  90.7% |  90.4%  |  94.9% | 87.0% | 82.8% | 70.3% | 74.6% |
   | Serbian-SET                | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 90.3% | 86.9% | 82.6% | 84.5% |
   | Slovak-SNK                 | Raw text     | 100.0% |  85.3% | 93.3% |  77.1% |  80.5% |  75.1%  |  86.2% | 80.0% | 75.5% | 54.6% | 60.5% |
   | Slovak-SNK                 | Gold tok     |    -   |    -   | 93.4% |  77.2% |  80.6% |  75.2%  |  86.2% | 81.5% | 76.9% | 55.6% | 61.3% |
   | Slovak-SNK                 | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 89.2% | 86.9% | 84.0% | 84.8% |
   | Slovenian-SSJ              | Raw text     |  98.3% |  76.2% | 94.5% |  86.4% |  86.6% |  85.8%  |  93.7% | 80.6% | 77.4% | 63.4% | 69.0% |
   | Slovenian-SSJ              | Gold tok     |    -   |    -   | 96.2% |  88.0% |  88.4% |  87.5%  |  95.3% | 85.2% | 81.8% | 67.1% | 72.9% |
   | Slovenian-SSJ              | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 91.7% | 90.2% | 87.2% | 87.6% |
   | Slovenian-SST              | Raw text     |  99.8% |  23.1% | 88.4% |  80.2% |  80.3% |  77.7%  |  91.0% | 53.9% | 47.0% | 34.4% | 38.5% |
   | Slovenian-SST              | Gold tok     |    -   |    -   | 88.8% |  80.7% |  80.9% |  78.3%  |  91.2% | 64.7% | 56.9% | 43.1% | 48.6% |
   | Slovenian-SST              | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 74.8% | 69.4% | 63.7% | 65.6% |
   | Spanish-AnCora             | Raw text     |  99.9% |  99.0% | 98.1% |  98.1% |  97.7% |  96.9%  |  98.0% | 87.6% | 84.6% | 76.3% | 76.8% |
   | Spanish-AnCora             | Gold tok     |    -   |    -   | 98.2% |  98.2% |  97.8% |  97.0%  |  98.1% | 87.8% | 84.8% | 76.4% | 76.9% |
   | Spanish-AnCora             | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 90.2% | 87.7% | 81.8% | 82.7% |
   | Spanish-GSD                | Raw text     |  99.8% |  94.9% | 95.5% |    -   |  96.2% |  93.7%  |  95.9% | 85.3% | 81.8% | 68.8% | 69.5% |
   | Spanish-GSD                | Gold tok     |    -   |    -   | 95.8% |    -   |  96.4% |  94.0%  |  96.2% | 85.9% | 82.3% | 69.3% | 70.0% |
   | Spanish-GSD                | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 87.7% | 85.1% | 78.1% | 79.0% |
   | Swedish-LinES              | Raw text     | 100.0% |  86.8% | 94.4% |  91.8% |  87.6% |  84.4%  |  94.5% | 79.8% | 74.9% | 59.6% | 67.5% |
   | Swedish-LinES              | Gold tok     |    -   |    -   | 94.6% |  91.9% |  87.7% |  84.5%  |  94.5% | 80.5% | 75.5% | 60.1% | 68.0% |
   | Swedish-LinES              | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 84.7% | 80.9% | 77.5% | 78.8% |
   | Swedish-Talbanken          | Raw text     |  99.9% |  96.1% | 95.6% |  94.0% |  94.5% |  92.8%  |  95.5% | 82.2% | 78.2% | 69.3% | 70.3% |
   | Swedish-Talbanken          | Gold tok     |    -   |    -   | 95.8% |  94.1% |  94.7% |  92.9%  |  95.6% | 82.6% | 78.7% | 69.7% | 70.7% |
   | Swedish-Talbanken          | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 87.9% | 85.1% | 81.1% | 82.2% |
   | Tamil-TTB                  | Raw text     |  95.0% | 100.0% | 81.8% |  76.9% |  81.0% |  76.1%  |  84.6% | 60.0% | 52.5% | 42.2% | 43.5% |
   | Tamil-TTB                  | Gold tok     |    -   |    -   | 85.7% |  80.1% |  84.7% |  79.3%  |  88.3% | 65.0% | 57.0% | 46.3% | 47.6% |
   | Tamil-TTB                  | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 78.4% | 71.8% | 67.2% | 68.4% |
   | Telugu-MTG                 | Raw text     |  99.8% |  97.6% | 90.5% |  90.5% |  98.7% |  90.5%  |    -   | 87.7% | 76.2% | 65.6% | 70.2% |
   | Telugu-MTG                 | Gold tok     |    -   |    -   | 90.6% |  90.6% |  98.9% |  90.6%  |    -   | 88.3% | 76.8% | 66.2% | 70.8% |
   | Telugu-MTG                 | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 91.4% | 82.2% | 76.8% | 77.1% |
   | Turkish-IMST               | Raw text     |  98.3% |  96.4% | 91.7% |  90.7% |  88.4% |  86.1%  |  90.0% | 61.5% | 54.6% | 44.8% | 46.2% |
   | Turkish-IMST               | Gold tok     |    -   |    -   | 93.1% |  92.1% |  89.8% |  87.4%  |  91.4% | 64.1% | 56.9% | 46.1% | 47.6% |
   | Turkish-IMST               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 65.6% | 60.3% | 55.1% | 56.7% |
   | Ukrainian-IU               | Raw text     |  99.8% |  97.2% | 95.0% |  84.1% |  84.3% |  83.3%  |  93.5% | 79.9% | 75.2% | 57.8% | 64.7% |
   | Ukrainian-IU               | Gold tok     |    -   |    -   | 95.2% |  84.2% |  84.4% |  83.4%  |  93.7% | 80.2% | 75.6% | 58.0% | 65.0% |
   | Ukrainian-IU               | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 85.0% | 82.9% | 78.8% | 79.4% |
   | Urdu-UDTB                  | Raw text     | 100.0% |  98.3% | 92.1% |  89.9% |  80.8% |  76.2%  |  93.0% | 84.1% | 77.3% | 50.5% | 64.0% |
   | Urdu-UDTB                  | Gold tok     |    -   |    -   | 92.2% |  89.9% |  80.8% |  76.2%  |  93.0% | 84.2% | 77.4% | 50.5% | 64.0% |
   | Urdu-UDTB                  | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 87.8% | 82.5% | 74.3% | 76.0% |
   | Uyghur-UDT                 | Raw text     |  99.7% |  82.9% | 87.9% |  90.0% |  84.1% |  76.3%  |  91.9% | 70.8% | 56.7% | 37.4% | 44.1% |
   | Uyghur-UDT                 | Gold tok     |    -   |    -   | 88.2% |  90.3% |  84.4% |  76.6%  |  92.2% | 72.0% | 57.9% | 38.0% | 44.9% |
   | Uyghur-UDT                 | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 74.4% | 61.1% | 50.3% | 52.6% |
   | Vietnamese-VTB             | Raw text     |  85.4% |  93.7% | 76.2% |  74.1% |  85.1% |  74.1%  |  84.7% | 45.9% | 40.8% | 34.7% | 36.8% |
   | Vietnamese-VTB             | Gold tok     |    -   |    -   | 87.6% |  85.0% |  99.5% |  84.9%  |  98.9% | 62.6% | 54.5% | 48.2% | 50.8% |
   | Vietnamese-VTB             | Gold tok+mor |    -   |    -   |   -   |    -   |    -   |    -    |    -   | 69.4% | 66.3% | 62.9% | 65.2% |


CoNLL18 Shared Task Baseline UD 2.2 Models
------------------------------------------

As part of CoNLL 2018 Shared Task in UD Parsing, baseline models for UDPipe were
released. The CoNLL 2018 Shared Task models were trained on most of UD 2.2
treebanks (74 of them) and are distributed under the CC BY-NC-SA
(http://creativecommons.org/licenses/by-nc-sa/4.0/) licence.

The models were released when the test set of UD 2.2 was unknown. Details about
the concrete data split, hyperparameter values and model performance are
available in the model archive.


Download
--------

The CoNLL18 Shared Task Baseline UD 2.2 Models can be downloaded from
LINDAT/CLARIN repository (http://hdl.handle.net/11234/1-2859).


Acknowledgements
----------------

This work has been partially supported and has been using language resources and
tools developed, stored and distributed by the LINDAT/CLARIN project of the
Ministry of Education, Youth and Sports of the Czech Republic (project
LM2015071).

The models were trained on a Universal Dependencies 2.2
(http://hdl.handle.net/11234/1-2837) treebanks.


Universal Dependencies 2.0 Models
---------------------------------

Universal Dependencies 2.0 Models are distributed under the CC BY-NC-SA
(http://creativecommons.org/licenses/by-nc-sa/4.0/) licence. The models are
based solely on Universal Dependencies 2.0 (http://hdl.handle.net/11234/1-1983)
treebanks. The models work in UDPipe version 1.2 and later.

Universal Dependencies 2.0 Models are versioned according to the date released
in the format YYMMDD, where YY, MM and DD are two-digit representation of year,
month and day, respectively. The latest version is 170801.


Download
--------

The latest version 170801 of the Universal Dependencies 2.0 models can be
downloaded from LINDAT/CLARIN repository (http://hdl.handle.net/11234/1-2364).


Acknowledgements
----------------

This work has been partially supported and has been using language resources and
tools developed, stored and distributed by the LINDAT/CLARIN project of the
Ministry of Education, Youth and Sports of the Czech Republic (project
LM2015071). The wark was also partially supported by OP VVV projects
CZ.02.1.01/0.0/0.0/16\_013/0001781 and CZ.02.2.69/0.0/0.0/16\_018/0002373, and
by SVV project number 260 453.

The models were trained on Universal Dependencies 2.0
(http://hdl.handle.net/11234/1-1983) treebanks.

For the UD treebanks which do not contain original plain text version, raw text
is used to train the tokenizer instead. The plain texts were taken from the W2C
- Web to Corpus (http://hdl.handle.net/11858/00-097C-0000-0022-6133-9).


Publications
------------

- (Straka et al. 2017) Milan Straka and Jana Straková. Tokenizing, POS
  Tagging, Lemmatizing and Parsing UD 2.0 with UDPipe
  (http://ufal.mff.cuni.cz/~straka/papers/2017-conll_udpipe.pdf). In Proceedings
  of the CoNLL 2017 Shared Task: Multilingual Parsing from Raw Text to Universal
  Dependencies, Vancouver, Canada, August 2017.
- (Straka et al. 2016) Straka Milan, Hajič Jan, Straková Jana. UDPipe:
  Trainable Pipeline for Processing CoNLL-U Files Performing Tokenization,
  Morphological Analysis, POS Tagging and Parsing
  (http://ufal.mff.cuni.cz/~straka/papers/2016-lrec_udpipe.pdf). In Proceedings
  of the Tenth International Conference on Language Resources and Evaluation
  (LREC 2016), Portorož, Slovenia, May 2016.


Model Description
-----------------

The Universal Dependencies 2.0 models contain 68 models of 50 languages, each
consisting of a tokenizer, tagger, lemmatizer and dependency parser, all trained
using the UD data. Note that we use custom train-dev split, by moving sentences
from the beginning of dev data to the end of train data, until the training data
is at least 9 times the dev data.

The tokenizer is trained using the SpaceAfter=No features. If the features are
not present in the data, they can be filled in using raw text in the language in
question.

The tagger, lemmatizer and parser are trained using gold UD data.

Details about model architecture and training process can be found in the
(Straka et al. 2017) paper.


Reproducible Training
---------------------

In case you want to train the same models, scripts for downloading and
resplitting UD 2.0 data, precomputed word embedding, raw texts for tokenizers,
all hyperparameter values and training scripts are available in the second
archive on the model download page (http://hdl.handle.net/11234/1-2364).


Model Performance
-----------------

We present the tagger, lemmatizer and parser performance, measured on the
testing portion of the data, evaluated in three different settings: using raw
text only, using gold tokenization only, and using gold tokenization plus gold
morphology (UPOS, XPOS, FEATS and Lemma).

  || Treebank             | Mode           |  Words |  Sents |  UPOS |  XPOS |  Feats | AllTags |  Lemma |  UAS  |  LAS  |
   | Ancient Greek        | Raw text       | 100.0% |  98.7% | 82.4% | 72.3% |  85.8% |   72.3% |  82.6% | 64.4% | 57.8% |
   | Ancient Greek        | Gold tok       |    -   |    -   | 82.4% | 72.4% |  85.8% |   72.3% |  82.7% | 64.6% | 57.9% |
   | Ancient Greek        | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 69.2% | 64.4% |
   | Ancient Greek-PROIEL | Raw text       | 100.0% |  47.2% | 95.8% | 96.0% |  88.6% |   87.2% |  92.6% | 71.8% | 67.1% |
   | Ancient Greek-PROIEL | Gold tok       |    -   |    -   | 95.8% | 96.1% |  88.7% |   87.2% |  92.8% | 77.2% | 72.3% |
   | Ancient Greek-PROIEL | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 79.7% | 76.1% |
   | Arabic               | Raw text       |  93.8% |  83.1% | 88.4% | 83.4% |  83.5% |   82.3% |  87.5% | 71.7% | 65.8% |
   | Arabic               | Gold tok       |    -   |    -   | 94.4% | 89.5% |  89.6% |   88.3% |  92.6% | 81.3% | 74.3% |
   | Arabic               | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 82.9% | 77.9% |
   | Basque               | Raw text       | 100.0% |  99.5% | 93.2% |   -   |  87.6% |     -   |  93.8% | 75.8% | 70.7% |
   | Basque               | Gold tok       |    -   |    -   | 93.3% |   -   |  87.7% |     -   |  93.9% | 75.9% | 70.8% |
   | Basque               | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 82.3% | 78.4% |
   | Belarusian           | Raw text       |  99.4% |  76.8% | 88.2% | 85.6% |  71.7% |   68.6% |  81.3% | 68.0% | 60.6% |
   | Belarusian           | Gold tok       |    -   |    -   | 88.7% | 85.7% |  72.4% |   69.2% |  81.5% | 69.4% | 61.9% |
   | Belarusian           | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 76.8% | 74.0% |
   | Bulgarian            | Raw text       |  99.9% |  93.9% | 97.6% | 94.6% |  95.6% |   94.0% |  94.6% | 88.8% | 84.8% |
   | Bulgarian            | Gold tok       |    -   |    -   | 97.7% | 94.7% |  95.6% |   94.1% |  94.7% | 89.5% | 85.5% |
   | Bulgarian            | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 92.6% | 89.1% |
   | Catalan              | Raw text       | 100.0% |  99.2% | 98.0% | 98.0% |  97.1% |   96.5% |  97.9% | 88.8% | 85.7% |
   | Catalan              | Gold tok       |    -   |    -   | 98.0% | 98.0% |  97.2% |   96.5% |  97.9% | 88.8% | 85.8% |
   | Catalan              | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 91.1% | 88.7% |
   | Chinese              | Raw text       |  90.2% |  98.8% | 84.0% | 83.8% |  89.0% |   82.7% |  90.2% | 62.9% | 58.7% |
   | Chinese              | Gold tok       |    -   |    -   | 92.2% | 92.0% |  98.7% |   90.8% | 100.0% | 75.6% | 70.1% |
   | Chinese              | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 84.1% | 81.4% |
   | Coptic               | Raw text       |  65.8% |  35.7% | 62.6% | 62.1% |  65.7% |   62.1% |  64.6% | 41.1% | 39.3% |
   | Coptic               | Gold tok       |    -   |    -   | 95.1% | 94.3% |  99.7% |   94.2% |  96.2% | 83.2% | 79.2% |
   | Coptic               | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.1% | 84.9% |
   | Croatian             | Raw text       |  99.9% |  97.0% | 95.9% |   -   |  84.3% |     -   |  94.4% | 83.6% | 77.9% |
   | Croatian             | Gold tok       |    -   |    -   | 96.0% |   -   |  84.4% |     -   |  94.4% | 83.9% | 78.1% |
   | Croatian             | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.1% | 83.2% |
   | Czech                | Raw text       |  99.9% |  91.6% | 98.3% | 92.8% |  92.1% |   91.7% |  97.8% | 86.8% | 83.2% |
   | Czech                | Gold tok       |    -   |    -   | 98.4% | 92.9% |  92.2% |   91.9% |  97.9% | 87.7% | 84.1% |
   | Czech                | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 90.2% | 87.5% |
   | Czech-CAC            | Raw text       | 100.0% |  99.8% | 98.1% | 90.6% |  89.4% |   89.1% |  97.0% | 86.9% | 82.7% |
   | Czech-CAC            | Gold tok       |    -   |    -   | 98.1% | 90.7% |  89.5% |   89.1% |  97.1% | 87.0% | 82.8% |
   | Czech-CAC            | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 89.7% | 86.6% |
   | Czech-CLTT           | Raw text       |  99.5% |  92.3% | 96.5% | 87.5% |  87.8% |   87.3% |  96.8% | 80.2% | 76.6% |
   | Czech-CLTT           | Gold tok       |    -   |    -   | 97.0% | 87.9% |  88.3% |   87.7% |  97.2% | 81.0% | 77.6% |
   | Czech-CLTT           | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 83.8% | 80.8% |
   | Danish               | Raw text       |  99.8% |  77.9% | 95.2% |   -   |  94.2% |     -   |  94.9% | 78.4% | 74.7% |
   | Danish               | Gold tok       |    -   |    -   | 95.5% |   -   |  94.5% |     -   |  95.0% | 80.4% | 76.6% |
   | Danish               | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 85.6% | 82.7% |
   | Dutch                | Raw text       |  99.8% |  77.6% | 91.4% | 88.1% |  89.3% |   87.0% |  89.9% | 75.4% | 69.6% |
   | Dutch                | Gold tok       |    -   |    -   | 91.8% | 88.8% |  89.9% |   87.7% |  90.1% | 77.0% | 71.2% |
   | Dutch                | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 82.9% | 79.4% |
   | Dutch-LassySmall     | Raw text       | 100.0% |  80.4% | 97.6% |   -   |  97.2% |     -   |  98.1% | 84.4% | 82.0% |
   | Dutch-LassySmall     | Gold tok       |    -   |    -   | 97.7% |   -   |  97.4% |     -   |  98.2% | 87.5% | 85.0% |
   | Dutch-LassySmall     | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 89.7% | 87.4% |
   | English              | Raw text       |  99.0% |  76.6% | 93.5% | 92.9% |  94.4% |   91.5% |  96.0% | 80.2% | 77.2% |
   | English              | Gold tok       |    -   |    -   | 94.5% | 93.9% |  95.4% |   92.5% |  96.9% | 84.3% | 81.2% |
   | English              | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.8% | 86.0% |
   | English-LinES        | Raw text       |  99.9% |  86.2% | 95.0% | 92.7% |    -   |     -   |    -   | 78.6% | 74.4% |
   | English-LinES        | Gold tok       |    -   |    -   | 95.1% | 92.8% |    -   |     -   |    -   | 79.5% | 75.3% |
   | English-LinES        | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 84.1% | 81.1% |
   | English-ParTUT       | Raw text       |  99.6% |  97.5% | 94.2% | 94.0% |  93.3% |   92.0% |  96.9% | 81.6% | 77.9% |
   | English-ParTUT       | Gold tok       |    -   |    -   | 94.6% | 94.4% |  93.6% |   92.3% |  97.3% | 82.1% | 78.4% |
   | English-ParTUT       | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 86.4% | 84.5% |
   | Estonian             | Raw text       |  99.9% |  94.2% | 91.2% | 93.2% |  85.0% |   83.2% |  84.5% | 72.4% | 65.6% |
   | Estonian             | Gold tok       |    -   |    -   | 91.3% | 93.2% |  85.0% |   83.3% |  84.5% | 72.8% | 66.0% |
   | Estonian             | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 83.1% | 79.6% |
   | Finnish              | Raw text       |  99.7% |  86.7% | 94.5% | 95.7% |  91.5% |   90.3% |  86.5% | 80.5% | 76.9% |
   | Finnish              | Gold tok       |    -   |    -   | 94.9% | 96.0% |  91.8% |   90.7% |  86.8% | 82.0% | 78.4% |
   | Finnish              | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 86.9% | 84.7% |
   | Finnish-FTB          | Raw text       | 100.0% |  86.4% | 92.0% | 91.0% |  92.5% |   89.2% |  88.9% | 80.1% | 75.7% |
   | Finnish-FTB          | Gold tok       |    -   |    -   | 92.2% | 91.3% |  92.7% |   89.5% |  88.9% | 81.7% | 77.3% |
   | Finnish-FTB          | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.8% | 86.5% |
   | French               | Raw text       |  98.9% |  94.6% | 95.4% |   -   |  95.5% |     -   |  96.6% | 84.2% | 80.7% |
   | French               | Gold tok       |    -   |    -   | 96.5% |   -   |  96.5% |     -   |  97.6% | 85.4% | 82.0% |
   | French               | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.4% | 86.0% |
   | French-ParTUT        | Raw text       |  99.0% |  97.8% | 94.5% | 94.2% |  91.9% |   90.8% |  94.3% | 82.9% | 78.7% |
   | French-ParTUT        | Gold tok       |    -   |    -   | 95.6% | 95.3% |  92.7% |   91.6% |  95.2% | 84.1% | 80.2% |
   | French-ParTUT        | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.1% | 85.3% |
   | French-Sequoia       | Raw text       |  99.1% |  84.0% | 95.9% |   -   |  95.1% |     -   |  96.8% | 83.2% | 80.6% |
   | French-Sequoia       | Gold tok       |    -   |    -   | 96.8% |   -   |  96.0% |     -   |  97.7% | 85.1% | 82.7% |
   | French-Sequoia       | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.7% | 87.4% |
   | Galician             | Raw text       |  99.9% |  95.8% | 97.2% | 96.7% |  99.7% |   96.4% |  97.1% | 81.0% | 77.8% |
   | Galician             | Gold tok       |    -   |    -   | 97.2% | 96.8% |  99.8% |   96.4% |  97.1% | 81.2% | 77.9% |
   | Galician             | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 83.1% | 80.5% |
   | Galician-TreeGal     | Raw text       |  98.7% |  86.7% | 91.1% | 87.8% |  89.9% |   87.0% |  92.6% | 71.5% | 66.3% |
   | Galician-TreeGal     | Gold tok       |    -   |    -   | 92.4% | 88.8% |  91.0% |   88.0% |  93.7% | 74.4% | 68.7% |
   | Galician-TreeGal     | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 81.5% | 77.1% |
   | German               | Raw text       |  99.7% |  79.3% | 90.7% | 94.7% |  80.5% |   76.3% |  95.4% | 74.0% | 68.6% |
   | German               | Gold tok       |    -   |    -   | 91.2% | 95.0% |  80.9% |   76.7% |  95.6% | 76.5% | 70.7% |
   | German               | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 84.7% | 82.2% |
   | Gothic               | Raw text       | 100.0% |  29.5% | 94.2% | 94.8% |  87.6% |   85.6% |  92.9% | 69.7% | 63.5% |
   | Gothic               | Gold tok       |    -   |    -   | 94.8% | 95.3% |  88.0% |   86.5% |  92.9% | 78.8% | 72.6% |
   | Gothic               | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 82.2% | 78.3% |
   | Greek                | Raw text       |  99.9% |  88.2% | 95.8% | 95.8% |  90.3% |   89.1% |  94.5% | 84.2% | 80.4% |
   | Greek                | Gold tok       |    -   |    -   | 96.0% | 96.0% |  90.5% |   89.3% |  94.6% | 85.0% | 81.1% |
   | Greek                | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.9% | 85.9% |
   | Hebrew               | Raw text       |  85.2% | 100.0% | 80.9% | 80.9% |  77.6% |   76.8% |  79.6% | 62.2% | 57.9% |
   | Hebrew               | Gold tok       |    -   |    -   | 95.1% | 95.1% |  91.3% |   90.5% |  93.2% | 84.5% | 78.9% |
   | Hebrew               | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.8% | 84.3% |
   | Hindi                | Raw text       | 100.0% |  99.1% | 95.8% | 94.9% |  90.3% |   87.7% |  98.0% | 91.3% | 87.3% |
   | Hindi                | Gold tok       |    -   |    -   | 95.8% | 94.9% |  90.3% |   87.7% |  98.0% | 91.4% | 87.3% |
   | Hindi                | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 93.9% | 91.0% |
   | Hungarian            | Raw text       |  99.8% |  96.2% | 91.6% |   -   |  70.5% |     -   |  89.3% | 74.1% | 68.1% |
   | Hungarian            | Gold tok       |    -   |    -   | 91.8% |   -   |  70.6% |     -   |  89.5% | 74.5% | 68.5% |
   | Hungarian            | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 81.2% | 78.5% |
   | Indonesian           | Raw text       | 100.0% |  92.0% | 93.5% |   -   |  99.5% |     -   |    -   | 80.6% | 74.3% |
   | Indonesian           | Gold tok       |    -   |    -   | 93.5% |   -   |  99.6% |     -   |    -   | 80.8% | 74.5% |
   | Indonesian           | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 83.1% | 79.1% |
   | Irish                | Raw text       |  99.4% |  94.3% | 88.0% | 86.9% |  75.1% |   72.7% |  85.5% | 72.5% | 62.4% |
   | Irish                | Gold tok       |    -   |    -   | 88.5% | 87.4% |  75.5% |   73.1% |  86.0% | 73.3% | 63.1% |
   | Irish                | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 78.1% | 71.4% |
   | Italian              | Raw text       |  99.8% |  97.1% | 97.2% | 97.0% |  97.0% |   96.1% |  97.3% | 88.8% | 86.1% |
   | Italian              | Gold tok       |    -   |    -   | 97.4% | 97.2% |  97.2% |   96.3% |  97.5% | 89.3% | 86.6% |
   | Italian              | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 91.3% | 89.7% |
   | Japanese             | Raw text       |  91.9% |  95.1% | 89.1% |   -   |  91.8% |     -   |  91.1% | 78.0% | 76.6% |
   | Japanese             | Gold tok       |    -   |    -   | 96.6% |   -   | 100.0% |     -   |  99.0% | 93.4% | 91.5% |
   | Japanese             | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 95.6% | 95.0% |
   | Kazakh               | Raw text       |  94.0% |  84.9% | 52.0% | 52.1% |  47.2% |   40.0% |  59.2% | 40.2% | 23.9% |
   | Kazakh               | Gold tok       |    -   |    -   | 55.4% | 55.4% |  50.1% |   42.2% |  63.1% | 45.2% | 27.0% |
   | Kazakh               | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 60.5% | 42.5% |
   | Korean               | Raw text       |  99.7% |  92.7% | 94.4% | 89.7% |  99.3% |   89.7% |  99.4% | 67.4% | 60.5% |
   | Korean               | Gold tok       |    -   |    -   | 94.7% | 90.0% |  99.6% |   90.0% |  99.7% | 68.4% | 61.5% |
   | Korean               | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 71.7% | 65.8% |
   | Latin                | Raw text       | 100.0% |  98.0% | 83.4% | 67.6% |  72.5% |   67.6% |  51.2% | 56.5% | 46.0% |
   | Latin                | Gold tok       |    -   |    -   | 83.4% | 67.6% |  72.5% |   67.6% |  51.2% | 56.6% | 46.1% |
   | Latin                | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 67.8% | 61.5% |
   | Latin-ITTB           | Raw text       |  99.9% |  82.5% | 97.2% | 92.7% |  93.5% |   91.3% |  97.8% | 79.7% | 76.0% |
   | Latin-ITTB           | Gold tok       |    -   |    -   | 97.3% | 92.8% |  93.6% |   91.4% |  97.9% | 81.8% | 78.1% |
   | Latin-ITTB           | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.6% | 85.2% |
   | Latin-PROIEL         | Raw text       |  99.9% |  31.0% | 94.9% | 95.0% |  87.7% |   86.7% |  94.8% | 66.1% | 60.7% |
   | Latin-PROIEL         | Gold tok       |    -   |    -   | 95.2% | 95.2% |  88.4% |   87.4% |  95.0% | 75.3% | 69.4% |
   | Latin-PROIEL         | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 79.0% | 75.0% |
   | Latvian              | Raw text       |  99.2% |  97.1% | 89.6% | 76.2% |  83.2% |   75.7% |  87.6% | 69.2% | 62.8% |
   | Latvian              | Gold tok       |    -   |    -   | 90.2% | 76.8% |  84.0% |   76.3% |  88.3% | 70.3% | 63.9% |
   | Latvian              | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 78.7% | 74.9% |
   | Lithuanian           | Raw text       |  98.2% |  92.0% | 74.0% | 73.0% |  68.9% |   63.7% |  73.5% | 44.0% | 32.4% |
   | Lithuanian           | Gold tok       |    -   |    -   | 74.6% | 73.5% |  69.7% |   64.2% |  74.2% | 44.6% | 33.0% |
   | Lithuanian           | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 55.6% | 46.5% |
   | Norwegian-Bokmaal    | Raw text       |  99.8% |  96.5% | 96.9% |   -   |  95.3% |     -   |  96.6% | 86.9% | 84.1% |
   | Norwegian-Bokmaal    | Gold tok       |    -   |    -   | 97.1% |   -   |  95.5% |     -   |  96.8% | 87.5% | 84.7% |
   | Norwegian-Bokmaal    | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 91.7% | 89.6% |
   | Norwegian-Nynorsk    | Raw text       |  99.9% |  92.2% | 96.5% |   -   |  94.9% |     -   |  96.4% | 85.6% | 82.5% |
   | Norwegian-Nynorsk    | Gold tok       |    -   |    -   | 96.6% |   -   |  95.0% |     -   |  96.5% | 86.5% | 83.3% |
   | Norwegian-Nynorsk    | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 91.0% | 88.6% |
   | Old Church Slavonic  | Raw text       | 100.0% |  40.5% | 93.8% | 93.8% |  86.9% |   85.7% |  91.2% | 73.6% | 66.9% |
   | Old Church Slavonic  | Gold tok       |    -   |    -   | 94.1% | 94.1% |  87.6% |   86.5% |  91.2% | 81.6% | 74.7% |
   | Old Church Slavonic  | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 86.7% | 82.2% |
   | Persian              | Raw text       |  99.7% |  98.2% | 96.0% | 96.0% |  96.1% |   95.4% |  93.5% | 83.3% | 79.4% |
   | Persian              | Gold tok       |    -   |    -   | 96.4% | 96.3% |  96.4% |   95.7% |  93.8% | 83.8% | 80.0% |
   | Persian              | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.7% | 84.9% |
   | Polish               | Raw text       |  99.9% |  99.7% | 95.6% | 84.0% |  84.1% |   83.1% |  93.4% | 86.7% | 80.7% |
   | Polish               | Gold tok       |    -   |    -   | 95.7% | 84.1% |  84.2% |   83.3% |  93.6% | 87.0% | 81.0% |
   | Polish               | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 92.9% | 89.5% |
   | Portuguese           | Raw text       |  99.6% |  89.4% | 96.4% | 72.7% |  93.3% |   71.6% |  96.8% | 86.0% | 82.6% |
   | Portuguese           | Gold tok       |    -   |    -   | 96.8% | 73.0% |  93.7% |   71.9% |  97.2% | 87.2% | 83.6% |
   | Portuguese           | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 89.6% | 87.5% |
   | Portuguese-BR        | Raw text       |  99.9% |  96.8% | 97.0% | 97.0% |  99.7% |   97.0% |  98.8% | 88.5% | 86.3% |
   | Portuguese-BR        | Gold tok       |    -   |    -   | 97.2% | 97.2% |  99.9% |   97.2% |  98.9% | 88.8% | 86.6% |
   | Portuguese-BR        | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 90.5% | 89.1% |
   | Romanian             | Raw text       |  99.7% |  93.9% | 96.6% | 95.9% |  96.0% |   95.7% |  96.5% | 85.6% | 80.2% |
   | Romanian             | Gold tok       |    -   |    -   | 96.9% | 96.2% |  96.3% |   96.0% |  96.8% | 86.2% | 80.8% |
   | Romanian             | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 87.8% | 83.0% |
   | Russian              | Raw text       |  99.9% |  96.9% | 94.7% | 94.4% |  84.4% |   82.8% |  75.0% | 80.3% | 75.5% |
   | Russian              | Gold tok       |    -   |    -   | 94.8% | 94.5% |  84.5% |   82.9% |  75.1% | 80.8% | 76.0% |
   | Russian              | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 84.8% | 81.9% |
   | Russian-SynTagRus    | Raw text       |  99.6% |  98.0% | 98.0% |   -   |  93.6% |     -   |  95.6% | 89.8% | 87.2% |
   | Russian-SynTagRus    | Gold tok       |    -   |    -   | 98.4% |   -   |  93.9% |     -   |  95.9% | 90.4% | 87.9% |
   | Russian-SynTagRus    | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 91.8% | 90.5% |
   | Sanskrit             | Raw text       |  88.1% |  29.0% | 52.0% |   -   |  35.2% |     -   |  50.2% | 38.8% | 22.5% |
   | Sanskrit             | Gold tok       |    -   |    -   | 57.6% |   -   |  43.6% |     -   |  60.6% | 58.5% | 34.3% |
   | Sanskrit             | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 72.9% | 58.5% |
   | Slovak               | Raw text       | 100.0% |  83.5% | 93.2% | 77.5% |  79.7% |   77.1% |  85.9% | 80.4% | 75.2% |
   | Slovak               | Gold tok       |    -   |    -   | 93.3% | 77.6% |  79.9% |   77.2% |  86.0% | 82.0% | 76.9% |
   | Slovak               | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.2% | 85.5% |
   | Slovenian            | Raw text       |  99.9% |  98.9% | 96.2% | 88.2% |  88.5% |   87.7% |  95.3% | 84.9% | 81.6% |
   | Slovenian            | Gold tok       |    -   |    -   | 96.2% | 88.2% |  88.6% |   87.7% |  95.4% | 85.0% | 81.7% |
   | Slovenian            | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 91.8% | 90.5% |
   | Slovenian-SST        | Raw text       |  99.9% |  17.8% | 89.0% | 81.1% |  81.3% |   78.6% |  91.6% | 53.0% | 46.6% |
   | Slovenian-SST        | Gold tok       |    -   |    -   | 89.4% | 81.6% |  81.8% |   79.3% |  91.7% | 63.4% | 56.0% |
   | Slovenian-SST        | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 75.5% | 70.6% |
   | Spanish              | Raw text       |  99.7% |  95.3% | 95.5% |   -   |  96.1% |     -   |  95.9% | 84.9% | 81.4% |
   | Spanish              | Gold tok       |    -   |    -   | 95.8% |   -   |  96.3% |     -   |  96.1% | 85.5% | 81.9% |
   | Spanish              | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.0% | 85.3% |
   | Spanish-AnCora       | Raw text       |  99.9% |  98.0% | 98.1% | 98.1% |  97.5% |   96.8% |  98.1% | 87.7% | 84.5% |
   | Spanish-AnCora       | Gold tok       |    -   |    -   | 98.2% | 98.2% |  97.5% |   96.9% |  98.1% | 87.8% | 84.7% |
   | Spanish-AnCora       | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 90.2% | 87.6% |
   | Swedish              | Raw text       |  99.8% |  94.6% | 95.6% | 93.9% |  94.4% |   92.8% |  95.5% | 81.4% | 77.8% |
   | Swedish              | Gold tok       |    -   |    -   | 95.8% | 94.1% |  94.6% |   93.1% |  95.7% | 82.1% | 78.4% |
   | Swedish              | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.0% | 85.0% |
   | Swedish-LinES        | Raw text       | 100.0% |  85.7% | 94.8% | 92.2% |    -   |     -   |    -   | 80.4% | 75.7% |
   | Swedish-LinES        | Gold tok       |    -   |    -   | 94.8% | 92.3% |    -   |     -   |    -   | 81.3% | 76.6% |
   | Swedish-LinES        | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 86.0% | 82.6% |
   | Tamil                | Raw text       |  95.3% |  89.2% | 82.2% | 77.7% |  80.9% |   77.2% |  85.3% | 59.5% | 52.0% |
   | Tamil                | Gold tok       |    -   |    -   | 85.8% | 81.0% |  84.2% |   80.3% |  89.1% | 64.9% | 56.5% |
   | Tamil                | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 78.9% | 71.8% |
   | Turkish              | Raw text       |  98.1% |  96.8% | 92.4% | 91.5% |  87.3% |   85.5% |  90.2% | 62.9% | 55.8% |
   | Turkish              | Gold tok       |    -   |    -   | 94.0% | 93.0% |  88.9% |   87.0% |  91.7% | 65.5% | 58.0% |
   | Turkish              | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 66.8% | 61.1% |
   | Ukrainian            | Raw text       |  99.8% |  95.1% | 88.5% | 70.7% |  70.9% |   67.6% |  86.7% | 69.9% | 61.5% |
   | Ukrainian            | Gold tok       |    -   |    -   | 88.6% | 70.8% |  71.0% |   67.7% |  86.9% | 70.2% | 61.8% |
   | Ukrainian            | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 79.0% | 74.5% |
   | Urdu                 | Raw text       | 100.0% |  98.3% | 92.4% | 90.5% |  80.6% |   76.3% |  93.0% | 84.6% | 77.6% |
   | Urdu                 | Gold tok       |    -   |    -   | 92.4% | 90.5% |  80.7% |   76.3% |  93.0% | 84.7% | 77.7% |
   | Urdu                 | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 88.2% | 83.0% |
   | Uyghur               | Raw text       |  99.8% |  67.2% | 74.7% | 79.1% |    -   |     -   |    -   | 55.1% | 35.0% |
   | Uyghur               | Gold tok       |    -   |    -   | 75.1% | 79.3% |    -   |     -   |    -   | 56.5% | 35.8% |
   | Uyghur               | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 62.3% | 42.0% |
   | Vietnamese           | Raw text       |  85.3% |  92.9% | 77.4% | 75.4% |  85.1% |   75.4% |  84.5% | 46.9% | 42.5% |
   | Vietnamese           | Gold tok       |    -   |    -   | 89.3% | 86.8% |  99.6% |   86.8% |  99.0% | 64.4% | 57.2% |
   | Vietnamese           | Gold tok+morph |    -   |    -   |   -   |   -   |    -   |     -   |    -   | 70.7% | 67.9% |


CoNLL17 Shared Task Baseline UD 2.0 Models
------------------------------------------

As part of CoNLL 2017 Shared Task in UD Parsing, baseline models for UDPipe were
released. The CoNLL 2017 Shared Task models were trained on most of UD 2.0
treebanks (64 of them) and are distributed under the CC BY-NC-SA
(http://creativecommons.org/licenses/by-nc-sa/4.0/) licence.

Note that the models were released when the test set of UD 2.0 was unknown.
Therefore, the models were trained on a subset of training data only, to allow
fair comparison on the development data (which were unused during training and
hyperparameter settings). Consequently, the performance of the models is not
directly comparable to other models. Details about the concrete data split,
hyperparameter values and model performance are available in the model archive.


Download
--------

The CoNLL17 Shared Task Baseline UD 2.0 Models can be downloaded from
LINDAT/CLARIN repository (http://hdl.handle.net/11234/1-1990).


Acknowledgements
----------------

This work has been partially supported and has been using language resources and
tools developed, stored and distributed by the LINDAT/CLARIN project of the
Ministry of Education, Youth and Sports of the Czech Republic (project
LM2015071).

The models were trained on a Universal Dependencies 2.0
(http://hdl.handle.net/11234/1-1983) treebanks.


Universal Dependencies 1.2 Models
---------------------------------

Universal Dependencies 1.2 Models are distributed under the CC BY-NC-SA
(http://creativecommons.org/licenses/by-nc-sa/4.0/) licence. The models are
based solely on Universal Dependencies 1.2 (http://hdl.handle.net/11234/1-1548)
treebanks. The models work in UDPipe version 1.0.

Universal Dependencies 1.2 Models are versioned according to the date released
in the format YYMMDD, where YY, MM and DD are two-digit representation of year,
month and day, respectively. The latest version is 160523.


Download
--------

The latest version 160523 of the Universal Dependencies 1.2 models can be
downloaded from LINDAT/CLARIN repository (http://hdl.handle.net/11234/1-1659).


Acknowledgements
----------------

This work has been partially supported and has been using language resources and
tools developed, stored and distributed by the LINDAT/CLARIN project of the
Ministry of Education, Youth and Sports of the Czech Republic (project
LM2015071).

The models were trained on Universal Dependencies 1.2
(http://hdl.handle.net/11234/1-1548) treebanks.

For the UD treebanks which do not contain original plain text version, raw text
is used to train the tokenizer instead. The plain texts were taken from the W2C
- Web to Corpus (http://hdl.handle.net/11858/00-097C-0000-0022-6133-9).


Publications
------------

- (Straka et al. 2016) Straka Milan, Hajič Jan, Straková Jana. UDPipe:
  Trainable Pipeline for Processing CoNLL-U Files Performing Tokenization,
  Morphological Analysis, POS Tagging and Parsing. LREC 2016, Portorož,
  Slovenia, May 2016.


Model Description
-----------------

The Universal Dependencies 1.2 models contain 36 models, each consisting of a
tokenizer, tagger, lemmatizer and dependency parser, all trained using the UD
data. The model for Japanese is missing, because we do not have the license for
the required corpus of Mainichi Shinbun 1995.

The tokenizer is trained using the SpaceAfter=No features. If the features are
not present in the data, they can be filled in using raw text in the language in
question (surprisingly, quite little data suffices, we use 500kB).

The tagger, lemmatizer and parser are trained using gold UD data.

Details about model architecture and training process can be found in the
(Straka et al. 2016) paper.


Model Performance
-----------------

We present the tagger, lemmatizer and parser performance, measured on the
testing portion of the data. Only the segmentation and the tokenization of the
testing data is retained before evaluation. Therefore, the dependency parser is
evaluated without gold POS tags.

  || Treebank             |  UPOS  |  XPOS  |  Feats | All Tags | Lemma  |  UAS   |  LAS   |
   | Ancient Greek        |  91.1% |  77.8% |  88.7% |    77.7% |  86.9% |  68.1% |  61.6% |
   | Ancient Greek-PROIEL |  96.7% |  96.4% |  89.3% |    88.4% |  93.4% |  75.8% |  69.6% |
   | Arabic               |  98.8% |  97.7% |  97.8% |    97.6% |    -   |  80.4% |  75.6% |
   | Basque               |  93.3% |    -   |  87.2% |    85.4% |  93.5% |  74.8% |  69.5% |
   | Bulgarian            |  97.8% |  94.8% |  94.4% |    93.1% |  94.6% |  89.0% |  84.2% |
   | Croatian             |  94.9% |    -   |  85.5% |    85.0% |  93.1% |  78.6% |  71.0% |
   | Czech                |  98.4% |  93.2% |  92.6% |    92.2% |  97.8% |  86.9% |  83.0% |
   | Danish               |  95.8% |    -   |  94.8% |    93.6% |  95.2% |  78.6% |  74.8% |
   | Dutch                |  89.7% |  88.7% |  91.2% |    86.4% |  88.9% |  78.1% |  70.7% |
   | English              |  94.5% |  93.8% |  95.4% |    92.5% |  97.0% |  84.2% |  80.6% |
   | Estonian             |  88.0% |  73.7% |  80.0% |    73.6% |  77.0% |  79.9% |  71.5% |
   | Finnish              |  94.9% |  96.0% |  93.2% |    92.1% |  86.8% |  81.0% |  76.5% |
   | Finnish-FTB          |  94.0% |  91.6% |  93.3% |    91.2% |  89.1% |  81.5% |  76.9% |
   | French               |  95.8% |    -   |    -   |    95.8% |    -   |  82.8% |  78.4% |
   | German               |  90.5% |    -   |    -   |    90.5% |    -   |  78.2% |  72.2% |
   | Gothic               |  95.5% |  95.7% |  88.0% |    86.3% |  93.4% |  76.4% |  68.2% |
   | Greek                |  97.3% |  97.3% |  92.8% |    91.7% |  94.8% |  80.3% |  76.5% |
   | Hebrew               |  94.9% |  94.9% |  91.3% |    90.5% |    -   |  82.6% |  76.8% |
   | Hindi                |  95.8% |  94.8% |  90.2% |    87.7% |  98.0% |  91.7% |  87.5% |
   | Hungarian            |  92.6% |    -   |  89.9% |    88.9% |  86.9% |  77.0% |  70.6% |
   | Indonesian           |  93.5% |    -   |    -   |    93.5% |    -   |  79.9% |  73.3% |
   | Irish                |  91.8% |  90.3% |  79.4% |    76.6% |  87.3% |  74.4% |  66.1% |
   | Italian              |  97.2% |  97.0% |  97.1% |    96.2% |  97.7% |  88.6% |  85.8% |
   | Latin                |  91.2% |  75.8% |  79.3% |    75.6% |  79.9% |  57.1% |  46.7% |
   | Latin-ITT            |  98.8% |  94.0% |  94.6% |    93.8% |  98.3% |  79.9% |  76.4% |
   | Latin-PROIEL         |  96.4% |  96.0% |  88.9% |    88.2% |  95.3% |  75.3% |  68.3% |
   | Norwegian            |  97.2% |    -   |  95.5% |    94.7% |  96.9% |  86.7% |  84.1% |
   | Old Church Slavonic  |  95.3% |  95.1% |  89.1% |    88.2% |  92.9% |  80.6% |  73.4% |
   | Persian              |  97.0% |  96.3% |  96.5% |    96.2% |    -   |  83.8% |  79.4% |
   | Polish               |  95.8% |  84.0% |  84.1% |    83.8% |  92.8% |  86.3% |  79.6% |
   | Portuguese           |  97.6% |  92.3% |  95.3% |    92.0% |  97.8% |  85.8% |  81.9% |
   | Romanian             |  89.0% |  81.0% |  82.3% |    81.0% |  75.3% |  68.6% |  56.9% |
   | Slovenian            |  95.7% |  88.2% |  88.6% |    87.5% |  95.0% |  84.1% |  80.3% |
   | Spanish              |  95.3% |    -   |  95.9% |    93.4% |  96.3% |  84.2% |  80.3% |
   | Swedish              |  95.8% |  93.9% |  94.8% |    93.2% |  95.5% |  81.4% |  77.1% |
   | Tamil                |  85.9% |  80.8% |  84.3% |    80.2% |  88.0% |  67.2% |  58.8% |


UDPipe User's Manual
====================

This section describes the command line tools. The C++ API is described in the
API Reference section.


Running UDPipe
--------------

Probably the most common usage of UDPipe is to tokenize, tag and parse the input
using
  udpipe --tokenize --tag --parse udpipe_model

The input is assumed to be in UTF-8 encoding and can be either already tokenized
and segmented, or it can be a plain text which will be tokenized and segmented
automatically.

Any number of input files can be specified after the udpipe_model and if no file
is given, the standard input is used. The output is by default saved to the
standard output, but if --outfile=name is used, it is saved to the given file
name. The output file name can contain a {}, which is replaced by a base name of
the processed file (i.e., without directories and an extension).

The full command syntax of running UDPipe is
  Usage: udpipe [running_opts] udpipe_model [input_files]
         udpipe --train [training_opts] udpipe_model [input_files]
         udpipe --detokenize [detokenize_opts] raw_text_file [input_files]
  Running opts: --accuracy (measure accuracy only)
                --input=[conllu|generic_tokenizer|horizontal|vertical]
                --immediate (process sentences immediately during loading)
                --outfile=output file template
                --output=[conllu|matxin|horizontal|plaintext|vertical]
                --tokenize (perform tokenization)
                --tokenizer=tokenizer options, implies --tokenize
                --tag (perform tagging)
                --tagger=tagger options, implies --tag
                --parse (perform parsing)
                --parser=parser options, implies --parse
  Training opts: --method=[morphodita_parsito] which method to use
                 --heldout=heldout data file name
                 --tokenizer=tokenizer options
                 --tagger=tagger options
                 --parser=parser options
  Detokenize opts: --outfile=output file template
  Generic opts: --version
                --help


Immediate Mode
--------------

By default UDPipe loads the whole input file into memory before starting to
process it. That allows to store the space markup (see the following Tokenizer
section) in most consistent way, i.e., store all spaces following a sentence in
the last token of that sentence.

However, sometimes it is desirable to process the input as soon as possible,
which can be achieved by specifying the --immediate option. In immediate mode,
the input is processed and printed as soon as a block of input guaranteed to
contain whole sentences is loaded. Specifically, for most input formats the
input is processed after loading an empty line (with the exception of horizontal
input format and presegmented tokenizer, where the input is processed after each
line).


Loading Model On Demand
-----------------------

Although a model for UDPipe always has to be specified, the model is loaded only
if really needed. It is therefore possible to use for example none as the model
in case it is not required for performing the requested operation (e.g.,
converting between formats or using a generic tokenizer).


Tokenizer
---------

If the --tokenize option is supplied, the input is assumed to be plain text and
is tokenized using model tokenizer. Additional arguments to the tokenizer might
be specified using --tokenizer=data option (which implies --tokenize), where
data is a semicolon-separated list of the following options:
- normalized_spaces: by default, UDPipe uses custom MISC fields to exactly
  encode spaces in the original document (as described below). If the
  normalized_spaces option is given, only the standard CoNLL-U v2 markup
  (SpaceAfter=No and # newpar) is used.
- presegmented: the input file is assumed to be already segmented, with each
  sentence on a separate line, and is only tokenized (respecting sentence
  breaks)
- ranges: for each token, a range in the original document is stored in the
  format described below.
- joint_with_parsing: an experimental mode performing sentence segmentation
  jointly using the tokenizer and the parser (see Milan Straka and Jana
  Straková: Tokenizing, POS Tagging, Lemmatizing and Parsing UD 2.0 with UDPipe
  (http://ufal.mff.cuni.cz/~straka/papers/2017-conll_udpipe.pdf) paper for
  details). The following options are utilized:
  - joint_max_sentence_len (default 20): maximum sentence length
  - joint_change_boundary_logprob (default -0.5): logprob of using sentence
    boundary not generated by the tokenizer
  - joint_sentence_logprob (default -0.5): additional logprob of every sentence
  The logprob of a sentence is computed using logprob of its best dependency
  parsing tree, together with joint_sentence_logprob and also
  joint_change_boundary_logprob for every sentence boundary not returned by the
  tokenizer (i.e., either 0, 1 or 2 times). The joint sentence segmentation
  chooses such a segmentation, where every sentence has length at most
  joint_max_sentence_len and the sum of logprobs of all sentences is as large as
  possible.


Preserving Original Spaces
--------------------------

By default, UDPipe uses custom MISC fields to store all spaces in the original
document. This markup is backward compatible with CoNLL-U v2 SpaceAfter=No
feature. This markup can be utilized by the plaintext output format, which
allows reconstructing the original document.

Note that in theory not only spaces, but also other original content can be
saved in this way (for example XML tags if the input was encoded in a XML file).

The markup uses the following MISC fields on tokens (not words in multi-word
tokens):
- SpacesBefore=content (by default empty): spaces/other content preceding the
  token
- SpacesAfter=content (by default a space if SpaceAfter=No feature is not
  present, empty otherwise): spaces/other content following the token
- SpacesInToken=content (by default equal to the FORM of the token): FORM of
  the token including original spaces (this is needed only if tokens are allowed
  to contain spaces and a token contains a tab or newline characters)

The content of all the three fields must be escaped to allow storing tabs and
newlines. The following C-like schema is used:
- \s: space
- \t: tab
- \r: CR character
- \n: LF character
- \p: | (pipe character)
- \\: \ (backslash character)


Preserving Token Ranges
-----------------------

When the ranges tokenizer option is used, the range of each token in the
original document is stored in the TokenRange MISC field.

The format of the TokenRange field (inspired by Python) is TokenRange=start:end,
where start is a zero-based document-level index of the start of the token
(counted in Unicode characters) and end is a zero-based document-level index of
the first character following the token (i.e., the length of the token is
end-start).


Input Formats
-------------

If the tokenizer is not used, the input format can be specified using the
--input option. The individual input formats can be parametrized in the same way
a tokenizer is, by using format=data syntax. Currently supported input formats
are:
- conllu (default): the CoNLL-U format
  (http://universaldependencies.org/docs/format.html). Supported options:
  - v2 (default): use CoNLL-U v2
  - v1: allow loading only CoNLL-U v1 (i.e., no empty nodes and no spaces in
    forms and lemmas)
- generic_tokenizer: generic tokenizer for English-like languages (with spaces
  separating tokens and English-like punctuation). The tokenizer is rule-based
  and needs no trained model. It supports the same options as a model tokenizer,
  i.e., normalized_spaces, presegmented and ranges.
- horizontal: each sentence on a separate line, with tokens separated by
  spaces. In order to allow spaces in tokens, Unicode character 'NO-BREAK SPACE'
  (U+00A0) is considered part of token and converted to a space during loading.
- vertical: each token on a separate line, with an empty line denoting end of
  sentence; only the first tab-separated word is used as a token, the rest of
  the line is ignored.

Note that a model tokenizer can be specified using the --input option too, by
using the tokenizer input format, for example using --input tokenizer=ranges.


Tagger
------

If the --tag option is supplied, the input is POS tagged and lemmatized using
the model tagger. Additional arguments to the tagger might be specified using
the --tagger=data option (which implies --tag).


Dependency Parsing
------------------

If the --parse option is supplied, the input is parsed using the model
dependency parser.  Additional arguments to the parser might be specified using
the --parser=data option (which implies --parse).


Output Formats
--------------

The output format is specified using the --output option. The individual output
formats can be parametrized in the same way as input formats, by using the
format=data syntax. Currently supported output formats are:
- conllu (default): the CoNLL-U format
  (http://universaldependencies.org/docs/format.html) Supported options:
  - v2 (default): use CoNLL-U v2
  - v1: produce output in CoNLL-U v1 format. Note that this is a lossy process,
    as empty nodes are ignored and spaces in forms and lemmas are converted to
    underscores.
- matxin: the Matxin format (http://wiki.apertium.org/wiki/Matxin)
- horizontal: writes the words (in the UD sense) in horizontal format, that is,
  each sentence is on a separate line, with words separated by a single space.
  Because words can contain spaces in CoNLL-U v2, the spaces in words are
  converted to Unicode character 'NO-BREAK SPACE' (U+00A0). Supported options:
  - paragraphs: an empty line is printed after the end of a paragraph or a
    document (recognized by # newpar or # newdoc comments)
- plaintext: writes the tokens (in the UD sense) using original spacing. By
  default, UDPipe's custom MISC features (SpacesBefore, SpacesAfter and
  SpacesInToken, see the description in the Tokenizer section) are used to
  reconstruct the exact original spaces. However, if the document does not
  contain these features or if you want only normalized spacing, you can use the
  following option:
  - normalized_spaces: write one sentence on a line, and either one or no space
    between tokens according to the SpaceAfter=No feature
- vertical: each word on a separate line, with an empty line denoting the end
  of sentence. Supported options:
  - paragraphs: an empty line is printed after the end of a paragraph or a
    document (recognized by # newpar or # newdoc comments)


Running the UDPipe REST Server
------------------------------

UDPipe also provides a REST server binary called udpipe_server. The binary uses
MicroRestD (http://github.com/ufal/microrestd) as a REST server implementation
and provides UDPipe REST API
(http://lindat.mff.cuni.cz/services/udpipe/api-reference.php).

The full command syntax of udpipe_server is
  udpipe_server [options] port default_model (model_ids model_file acknowledgements)*
  Options: --connection_timeout=maximum connection timeout [s] (default 60)
           --daemon (daemonize after start, supported on Linux only)
           --log_file=file path (no logging if empty, default udpipe_server.log)
           --log_request_max_size=max req log size [kB] (0 unlimited, default 64)
           --max_connections=maximum network connections (default 256)
           --max_request_size=maximum request size [kB] (default 1024)
           --threads=threads to use (default 0 means unlimitted)

The udpipe_server can run either in foreground or in background (when --daemon
is used).

For every model, you specify three arguments:
- model_ids: possibly multiple model ids, separated by a semicolon. Note that
  apart from splitting on semicolon, every hyphen-separated prefix of any id is
  also considered an id
- model_file: filename containing the model
- acknowledgements: if non-empty, it is added to a list of acknowledgements
  returned when using this model

Since UDPipe 1.1.1, the models are loaded on demand, so that at most
concurrent_models (default 10) are kept in memory at the same time. The model
files are opened during start and never closed until the server stops. Unless
no_check_models_loadable is specified, the model files are also checked to be
loadable during start. Note that the default model is preloaded and never
released, unless no_preload_default is given. (Before UDPipe 1.1.1, specified
model files were loaded during start and kept in memory all the time.)


Training UDPipe Models
----------------------

Custom UDPipe models can be trained using the following syntax:
  udpipe --train model.output [--heldout=heldout_data] training_file ...

The training data should be in the CoNLL-U format
(http://universaldependencies.org/docs/format.html).

By default, three model components are trained - tokenizer, tagger and parser.
Any subset of the model components can be trained and a model component may be
copied from an existing model.

The training options are specified for each model component separately using the
--tokenizer, --tagger and --parser options. If a model component should not be
trained, value none should be used (e.g., --tagger=none).

The options are name=value pairs separated by a semicolon. The value can be
either a simple string value (ending by a semicolon), file content specified as
name=file:filename, or an arbitrary string value specified as
name=data:length:value, where the value is exactly length bytes long.


Reusing Components from Existing Models
---------------------------------------

The model components (tagger, parser or tagger) can be reused from existing
models, by specifying the from_model=file:filename option.


Random Hyperparameter Search
----------------------------

The default values of hyperparameters are set to the values which were used the
most during UD 1.2 models training, but if you want to reach best performance,
the hyperparameters must be tuned.

Apart from manual grid search, UDPipe can perform a simple random search. You
can perform the random search by repeatedly training UDPipe (preferably in
parallel, most likely on different computers) while specifying different
training run number - some of the hyperparameters (chosen by us; you can of
course override their value by specifying it on the command line) change their
values in different training runs. The pseudorandom sequences of hyperparameters
are of course deterministic.

The training run can be specified by providing the run=number option to a model
component. The run number 1 is the default one (with the best hyperparameters
for the UD 1.2 models), run numbers 2 and more randomize the hyperparameters.


Tokenizer
---------

The tokenizer is trained using the SpaceAfter=No features in the CoNLL-U files.
If the feature is not present, a detokenizer can be used to guess the
SpaceAfter=No features according to a supplied plain text (which typically does
not overlap with the texts in the CoNLL-U files).

In order to use the detokenizer, use the
detokenizer=file:filename_with_plaintext option. In UD 1.2 models, the optimal
performance is achieved with very small plain texts - only 500kB.

The tokenizer recognizes the following options:
- tokenize_url (default 1): tokenize URLs and emails using a manually
  implemented recognizer
- allow_spaces (default 1 if any token contains a space, 0 otherwise): allow
  tokens to contain spaces
- dimension (default 24): dimension of character embeddings and of the
  per-character bidirectional GRU. Note that inference time is quadratic in this
  parameter. Supported values are only 16, 24 and 64, with 64 needed for
  languages with complicated tokenization like Japanese, Chinese or Vietnamese
  or complicated segmentation.
- segment_size (default 50): length of character segment used to predict token
  and sentence breaks. Larger values like 200 are needed for languges with
  complicated segmentation
- epochs (default 100): the number of epochs to train the tokenizer for
- batch_size (default 50): batch size (number of segments) used during
  tokenizer training
- learning_rate (default 0.005): the learning rate used during tokenizer
  training
- learning_rate_final (default 0.0): if not zero, use exponential learning rate
  decay so that last epoch uses this learning rate
- dropout (default 0.1): dropout used during tokenizer training
- early_stopping (default 1 if heldout is given, 0 otherwise): perform early
  stopping, choosing training iteration maximizing sentences F1 score plus
  tokens F1 score on heldout data

During random hyperparameter search, batch_size is chosen uniformly from
{50,100} and learning_rate logarithmically from <0.0005, 0.01).


Detokenizing CoNLL-U Files
--------------------------

The --detokenizer option allows generating the SpaceAfter=No features
automatically from a given plain text. Even if the current algorithm is very
simple and makes quite a lot of mistakes, the tokenizer trained on generated
features is very close to a tokenizer trained on gold SpaceAfter=No features
(the difference in token F1 score is usually one or two tenths of percent).

The generated SpaceAfter=No features are only used during tokenizer training,
not printed. However, if you would like to obtain the CoNLL-U files with
automatic detokenization (generated SpaceAfter=No features), you can run UDPipe
with the --detokenize option. In this case, you have to supply plain text in the
given language (usually the best results are achieved with just 500kB or 1MB of
text) and UDPipe then detokenizes all the given CoNLL-U files.

The complete usage of the --detokenize option is:
  udpipe --detokenize [detokenize_opts] raw_text_file [input_files]
  Detokenize opts: --outfile=output file template


Tagger
------

The tagging is currently performed using MorphoDiTa
(http://ufal.mff.cuni.cz/morphodita). The UDPipe tagger consists of possibly
several MorphoDiTa models, each tagging some of the POS tags and/or lemmas.

By default, only one model is constructed, which generates all available tags
(UPOS, XPOS, Feats and Lemma). However, we found out during the UD 1.2 models
training that performance improves if one model tags the UPOS, XPOS and Feats
tags, while the other is performing lemmatization. Therefore, if you utilize two
MorphoDiTa models, by default the first one generates all tags (except lemmas)
and the second one performs lemmatization.

The number of MorphoDiTa models can be specified using the models=number
parameter. All other parameters may be either generic for all models
(guesser_suffix_rules=5), or specific for a given model
(guesser_suffix_rules_2=6), including the from_model option (therefore,
MorphoDiTa models can be trained separately and then combined together into one
UDPipe model).

Every model utilizes UPOS for disambiguation and the first model is the one
producing the UPOS tags on output.

The tagger recognizes the following options:
- use_lemma (default for the second model and also if there is only one model):
  use the lemma field internally to perform disambiguation; the lemma may be not
  outputted
- provide_lemma (default for the second model and also if there is only one
  model): produce the disambiguated lemma on output
- use_xpostag (default for the first model): use the XPOS tags internally to
  perform disambiguation; it may not be outputted
- provide_xpostag (default for the first model): produce the disambiguated XPOS
  tag on output
- use_feats (default for the first model): use the Feats internally to perform
  disambiguation; it may not be outputted
- provide_feats (default for the first model): produce the disambiguated Feats
  field on output
- dictionary_max_form_analyses (default 0 - unlimited): the maximum number of
  (most frequent) form analyses from UD training data that are to be kept in the
  morphological dictionary
- dictionary_file (default empty): use a given custom morphological dictionary,
  where each line contains 5 tab-separated fields FORM, LEMMA, UPOSTAG, XPOSTAG
  and FEATS. Note that this dictionary data is appended to the dictionary
  created from the UD training data, not replacing it.
- guesser_suffix_rules (default 8): number of rules generated for every suffix
- guesser_prefixes_max (default 4 if ``provide_lemma`, 0 otherwise): maximum
  number of form-generating prefixes to use in the guesser
- guesser_prefix_min_count (default 10): minimum number of occurrences of
  form-generating prefix to consider using it in the guesser
- guesser_enrich_dictionary (default 6 if no dictionary_file is passed, 0
  otherwise): number of rules generated for forms present in training data
  (assuming that the analyses from the training data may not be all)
- iterations (default 20): number of training iterations to perform
- early_stopping (default 1 if heldout is given, 0 otherwise): perform early
  stopping, choosing training iteration maximizing tagging accuracy on the
  heldout data
- templates (default lemmatizer for second model, tagger otherwise): MorphoDiTa
  feature templates to use, either lemmatizer which focuses more on lemmas, or
  tagger which focuses more on UPOS/XPOS/FEATS

During random hyperparameter search, guesser_suffix_rules is chosen uniformly
from {5,6,7,8,9,10,11,12} and guesser_enrich_dictionary is chosen uniformly from
{3,4,5,6,7,8,9,10}.


Parser
------

The parsing is performed using Parsito (http://ufal.mff.cuni.cz/parsito), which
is a transition-based parser using a neural-network classifier.

The transition-based systems can be configured by the following options:
- transition_system (default projective): which transition system to use for
  parsing (language dependent, you can choose according to language properties
  or try all and choose the best one)
  - projective: projective stack-based arc standard system with shift, left_arc
    and right_arc transitions
  - swap: fully non-projective system which extends projective system by adding
    the swap transition
  - link2: partially non-projective system which extends projective system by
    adding left_arc2 and right_arc2 transitions
- transition_oracle (default dynamic/static_lazy_static whichever first is
  applicable): which transition oracle to use for the chosen transition_system:
  - transition_system=projective: available oracles are static and dynamic
    (dynamic usually gives better results, but training time is slower)
  - transition_system=swap: available oracles are static_eager and static_lazy
    (static_lazy almost always gives better results)
  - transition_system=link2: only available oracle is static
- structured_interval (default 8): use search-based oracle in addition to the
  translation_oracle specified. This almost always gives better results, but
  makes training 2-3 times slower. For details, see the paper Straka et al.
  2015: Parsing Universal Dependency Treebanks using Neural Networks and
  Search-Based Oracle
- single_root (default 1): allow only single root when parsing, and make sure
  only the root node has the root deprel (note that training data are checked to
  be in this format)

The Lemmas/UPOS/XPOS/FEATS used by the parser are configured by:
- use_gold_tags (default 0): if false and a tagger exists, the
  Lemmas/UPOS/XPOS/FEATS for both the training and heldout data are generated by
  the tagger, otherwise they are taken from the gold data

The embeddings used by the parser can be specified as follows:
- embedding_upostag (default 20): the dimension of the UPos embedding used in
  the parser
- embedding_feats (default 20): the dimension of the Feats embedding used in
  the parser
- embedding_xpostag (default 0): the dimension of the XPos embedding used in
  the parser
- embedding_form (default 50): the dimension of the Form embedding used in the
  parser
- embedding_lemma (default 0): the dimension of the Lemma embedding used in the
  parser
- embedding_deprel (default 20): the dimension of the Deprel embedding used in
  the parser
- embedding_form_file: pre-trained word embeddings in word2vec textual format
- embedding_lemma_file: pre-trained lemma embeddings in word2vec textual format
- embedding_form_mincount (default 2): for forms not present in the pre-trained
  embeddings, generate random embeddings if the form appears at least this
  number of times in the trainig data (forms not present in the pre-trained
  embeddings and appearing less number of times are considered OOV)
- embedding_lemma_mincount (default 2): for lemmas not present in the
  pre-trained embeddings, generate random embeddings if the lemma appears at
  least this number of times in the trainig data (lemmas not present in the
  pre-trained embeddings and appearing less number of times are considered OOV)

The neural-network training options:
- iterations (default 10): number of training iterations to use
- hidden_layer (default 200): the size of the hidden layer
- batch_size (default 10): batch size used during neural-network training
- learning_rate (default 0.02): the learning rate used during neural-network
  training
- learning_rate_final (0.001): the final learning rate used during
  neural-network training
- l2 (0.5): the L2 regularization used during neural-network training
- early_stopping (default 1 if heldout is given, 0 otherwise): perform early
  stopping, choosing training iteration maximizing LAS on heldout data

During random hyperparameter search, structured_interval is chosen uniformly
from {0,8,10}, learning_rate is chosen logarithmically from <0.005,0.04) and l2
is chosen uniformly from <0.2,0.6).


Pre-trained Word Embeddings
---------------------------

The pre-trained word embeddings for forms and lemmas can be specified in the
word2vec textual format using the embedding_form_file and embedding_lemma_file
options.

Note that pre-training word embeddings even on the UD data itself improves the
accuracy (we use word2vec with -cbow 0 -size 50 -window 10 -negative 5 -hs 0
-sample 1e-1 -threads 12 -binary 0 -iter 15 -min-count 2 options to pre-train on
the UD data after converting it to the horizontal format using udpipe
--output=horizontal).

Forms and lemmas can contain spaces in CoNLL-U v2, so these spaces are converted
to a Unicode character 'NO-BREAK SPACE' (U+00A0) before performing the embedding
lookup, because spaces are usually used to delimit tokens in word embedding
generating software (both word2vec and glove use spaces to separate words on
input and on output). When using UDPipe to generate plain texts from CoNLL-U
format using --output=horizontal, this space replacing happens automatically.

When looking up an embedding for a given word, the following possibilities are
tried in the following order until a match is found (or an embedding for unknown
word is returned):
- original word
- all but the first character lowercased
- all characters lowercased
- if the word contains only digits, just the first digit is tried


Measuring Model Accuracy
------------------------

Measuring custom model accuracy can be performed by running:
  udpipe --accuracy [udpipe_options] udpipe_model file ...

The command syntax is similar to the regular UDPipe operation, only the input
must be always in the CoNLL-U format
(http://universaldependencies.org/docs/format.html) and the --input and --output
options are ignored.

Three different settings (depending on --tokenize(r), --tag(ger) and --parse(r))
can be evaluated:
- --tokenize(r) [--tag(ger) [--parse(r)]]: Tokenizer is used to segment and
  tokenize plain text (obtained by SpaceAfter=No features and # newdoc and #
  newpar comments in the input file). Optionally, a tagger is used on the
  resulting data to obtain Lemma/UPOS/XPOS/Feats columns and eventually a parser
  can be used to parse the results.

  The tokenizer is evaluated using F1-score on tokens, multi-word tokens,
  sentences and words. The words are aligned using a word-alignment algorithm
  described in the CoNLL 2017 Shared Task in UD Parsing
  (http://universaldependencies.org/conll17). The tagger and parser are
  evaluated on aligned words, resulting in F1 scores of
  Lemmas/UPOS/XPOS/Feats/UAS/LAS.

- --tag(ger) [--parse(r)]: The gold segmented and tokenized input is tagged
  (and then optionally parsed using the tagger outputs) and then evaluated.

- --parse(r): The gold segmented and tokenized input is parsed using gold
  morphology (Lemmas/UPOS/XPOS/Feats) and evaluated.



UDPipe API Reference
====================

This section describes available API. The command line tools are described in
the User's Manual section.

The UDPipe API is defined in header udpipe.h and resides in ufal::udpipe
namespace. The API allows only using existing models, for custom model creation
you have to use the train_parser binary.

The strings used in the UDPipe API are always UTF-8 encoded (except from file
paths, whose encoding is system dependent).


UDPipe Versioning
-----------------

UDPipe is versioned using Semantic Versioning (http://semver.org/). Therefore, a
version consists of three numbers major.minor.patch, optionally followed by a
hyphen and pre-release version info, with the following semantics:

- Stable versions have no pre-release version info, development have non-empty
  pre-release version info.
- Two versions with the same major.minor have the same API with the same
  behaviour, apart from bugs. Therefore, if only patch is increased, the new
  version is only a bug-fix release.
- If two versions v and u have the same major, but minor(v) is greater than
  minor(u), version v contains only additions to the API. In other words, the
  API of u is all present in v with the same behaviour (once again apart from
  bugs). It is therefore safe to upgrade to a newer UDPipe version with the same
  major.
- If two versions differ in major, their API may differ in any way.

Models created by UDPipe have the same behaviour in all UDPipe versions with
same major, apart from obvious bugfixes. On the other hand, models created from
the same data by different major.minor UDPipe versions may have different
behaviour.


Struct string_piece
-------------------

  struct string_piece {
    const char* str;
    size_t len;

    string_piece();
    string_piece(const char* str);
    string_piece(const char* str, size_t len);
    string_piece(const std::string& str);
  }

The string_piece is used for efficient string passing. The string referenced in
string_piece is not owned by it, so users have to make sure the referenced
string exists as long as the string_piece.


Class token
-----------

  class token {
   public:
    string form;
    string misc;

    token(string_piece form = string_piece(), string_piece misc = string_piece());

    // CoNLL-U defined SpaceAfter=No feature
    bool get_space_after() const;
    void set_space_after(bool space_after);

    // UDPipe-specific all-spaces-preserving SpacesBefore and SpacesAfter features
    void get_spaces_before(string& spaces_before) const;
    void set_spaces_before(string_piece spaces_before);
    void get_spaces_after(string& spaces_after) const;
    void set_spaces_after(string_piece spaces_after);
    void get_spaces_in_token(string& spaces_in_token) const;
    void set_spaces_in_token(string_piece spaces_in_token);

    // UDPipe-specific TokenRange feature
    bool get_token_range(size_t& start, size_t& end) const;
    void set_token_range(size_t start, size_t end);
  };

The token class represents a sentence token, with form and misc fields
corresponding to CoNLL-U fields
(http://universaldependencies.org/docs/format.html). The token class acts mostly
as a parent to word and multiword_token classes.

The class also offers several methods for manipulating features in the misc
field. Notably, UDPipe uses custom misc fields to store all spaces in the
original document. This markup is backward compatible with CoNLL-U v2
SpaceAfter=No feature. This markup can be utilized by plaintext output format,
which allows reconstructing the original document.

The markup uses the following misc fields:
- SpacesBefore=content (by default empty): spaces/other content preceding the
  token
- SpacesAfter=content (by default a space if SpaceAfter=No feature is not
  present, empty otherwise): spaces/other content following the token
- SpacesInToken=content (by default equal to the FORM of the token): FORM of
  the token including original spaces (this is needed only if tokens are allowed
  to contain spaces and a token contains a tab or newline characters)

The content of all above three fields must be escaped to allow storing tabs and
newlines. The following C-like schema is used:
- \s: space
- \t: tab
- \r: CR character
- \n: LF character
- \p: | (pipe character)
- \\: \ (backslash character)


token::get_space_after()
------------------------

  bool get_space_after() const;

Returns true if the token should be followed by a spaces, false if not,
according to the absence or presence of the SpaceAfter=No feature in the misc
field.


token::set_space_after()
------------------------

  void set_space_after(bool space_after);

Adds or removes the SpaceAfter=No feature in the misc field.


token::get_spaces_before()
--------------------------

  void get_spaces_before(string& spaces_before) const;

Return spaces preceding current token, stored in the SpacesBefore feature in the
misc field. If SpacesBefore is not present, empty string is returned.


token::set_spaces_before()
--------------------------

  void set_spaces_before(string_piece spaces_before);

Set the SpacesBefore feature in the misc field.


token::get_spaces_after()
-------------------------

  void get_spaces_after(string& spaces_after) const;

Return spaces after current token, stored in the SpacesAfter feature in the misc
field.

If SpacesAfter is not present and SpaceAfter=No is present, return an empty
string; if neither feature is present, one space is returned.


token::set_spaces_after()
-------------------------

  void set_spaces_after(string_piece spaces_after);

Set the SpacesAfter and SpaceAfter=No features in the misc field.


token::get_spaces_in_token()
----------------------------

  void get_spaces_in_token(string& spaces_in_token) const;

Return the value of the SpacesInToken feature, if present. Otherwise, empty
string is returned.


token::set_spaces_in_token()
----------------------------

  void set_spaces_in_token(string_piece spaces_in_token);

Set the SpacesInToken feature in the misc field.


token::get_token_range()
------------------------

  bool get_token_range(size_t& start, size_t& end) const;

If present, return the value of the TokenRange feature in the misc field. The
format of the feature (inspired by Python) is TokenRange=start:end, where start
is zero-based document-level index of the start of the token (counted in Unicode
characters) and end is zero-based document-level index of the first character
following the token (i.e., the length of the token is end-start).


token::set_token_range()
------------------------

  void set_token_range(size_t start, size_t end);

Set the TokenRange feature in the misc field. If string::npos is passed in the
start argument, TokenRange feature is removed from the misc field.


Class word
----------

  class word : public token {
   public:
    // form and misc are inherited from token
    int id;         // 0 is root, >0 is sentence word, <0 is undefined
    string lemma;   // lemma
    string upostag; // universal part-of-speech tag
    string xpostag; // language-specific part-of-speech tag
    string feats;   // list of morphological features
    int head;       // head, 0 is root, <0 is undefined
    string deprel;  // dependency relation to the head
    string deps;    // secondary dependencies

    vector<int> children;

    word(int id = -1, string_piece form = string_piece());
  };

The word class represents a sentence word. The word fields correspond to CoNLL-U
fields (http://universaldependencies.org/docs/format.html), with the children
field representing the opposite direction of head links (the elements of the
children array are in ascending order).


Class multiword_token
---------------------

  class multiword_token : public token {
   public:
    // form and misc are inherited from token
    int id_first, id_last;

    multiword_token(int id_first = -1, int id_last = -1, string_piece form = string_piece(), string_piece misc = string_piece());
  };

The multiword_token represents a multi-word token described in CoNLL-U format
(http://universaldependencies.org/docs/format.html). The multi-word token has a
form and a misc field, other CoNLL-U word fields are guaranteed to be empty.


Class empty_node
----------------

  class empty_node {
   public:
    int id;         // 0 is root, >0 is sentence word, <0 is undefined
    int index;      // index for the current id, should be numbered from 1, 0=undefined
    string form;    // form
    string lemma;   // lemma
    string upostag; // universal part-of-speech tag
    string xpostag; // language-specific part-of-speech tag
    string feats;   // list of morphological features
    string deps;    // secondary dependencies
    string misc;    // miscellaneous information

    empty_node(int id = -1, int index = 0) : id(id), index(index) {}
  };

The empty_node class represents an empty node from CoNLL-U 2.0, with the fields
corresponding to CoNLL-U fields
(http://universaldependencies.org/docs/format.html). For a specified id, the
index are numbered sequentially from 1.


Class sentence
--------------

  class sentence {
   public:
    sentence();

    vector<word> words;
    vector<multiword_token> multiword_tokens;
    vector<empty_node> empty_nodes;
    vector<string> comments;
    static const string root_form;

    // Basic sentence modifications
    bool empty();
    void clear();
    word& add_word(string_piece form = string_piece());
    void set_head(int id, int head, const string& deprel);
    void unlink_all_words();

    // CoNLL-U defined comments
    bool get_new_doc(string* id = nullptr) const;
    void set_new_doc(bool new_doc, string_piece id = string_piece());
    bool get_new_par(string* id = nullptr) const;
    void set_new_par(bool new_par, string_piece id = string_piece());
    bool get_sent_id(string& id) const;
    void set_sent_id(string_piece id);
    bool get_text(string& text) const;
    void set_text(string_piece text);
  };

The sentence class represents a sentence CoNLL-U sentence
(http://universaldependencies.org/docs/format.html), which consists of:
- sequence of words stored in ascending order, with the first word (with index
  0) always being a technical root with form root_form
- sequence of multiword_tokens also stored in ascending order
- sequence of empty_nodes also stored in ascending order
- comments

Although you can manipulate the words directly, the sentence class offers
several simple node manipulation methods. There are also several methods
manipulating CoNLL-U v2 comments.


sentence::empty()
-----------------

  bool empty();

Returns true if the sentence is empty. i.e., if it contains only a technical
root node.


sentence::clear()
-----------------

  void clear();

Removes all words, multi-word tokens and comments (only the technical root word
is kept).


sentence::add_word()
--------------------

  word& add_word(string_piece form = string_piece());

Adds a new word to the sentence. The new word has first unused id, specified
form and is not linked to any other node. Reference to the new word is returned
so that other fields can be also filled.


sentence:set_head()
-------------------

  void set_head(int id, int head, const std::string& deprel);

Link the word id to the word head, with the specified dependency relation. If
the head is negative, the word id is unlinked from its current head, if any.


sentence::unlink_all_words()
----------------------------

  void unlink_all_words();

Unlink all words.


sentence::get_new_doc()
-----------------------

  bool get_new_doc(string* id = nullptr) const;

Return true if # newdoc comment is present. Optionally, document id is also
returned (in # newdoc id = ... format).


sentence::set_new_doc()
-----------------------

  void set_new_doc(bool new_doc, string_piece id = string_piece());

Adds/removes # newdoc comment, optionally with a given document id.


sentence::get_new_par()
-----------------------

  bool get_new_par(string* id = nullptr) const;

Return true if # newpar comment is present. Optionally, paragraph id is also
returned (in # newpar id = ... format).


sentence::set_new_par()
-----------------------

  void set_new_par(bool new_par, string_piece id = string_piece());

Adds/removes # newpar comment, optionally with a given paragraph id.


sentence::get_sent_id()
-----------------------

  bool get_sent_id(string& id) const;

Return true if # sent_id = ... comment is present, and fill given id with
sentence id. Otherwise, return false and clear id.


sentence::set_sent_id()
-----------------------

  void set_sent_id(string_piece id);

Set the # sent_id = ... comment using given sentence id; if the sentence id is
empty, remove all present # sent_id comment.


sentence::get_text()
--------------------

  bool get_text(string& text) const;

Return true if # text = ... comment is present, and fill given text with
sentence text. Otherwise, return false and clear text.


sentence::set_text()
--------------------

  void set_text(string_piece text);

Set the # text = ... comment using given text; if the given text is empty,
remove all present # text comment.


Class input_format
------------------

  class input_format {
   public:
    virtual ~input_format() {}

    virtual bool read_block(istream& is, string& block) const = 0;
    virtual void reset_document(string_piece id = string_piece()) = 0;
    virtual void set_text(string_piece text, bool make_copy = false) = 0;
    virtual bool next_sentence(sentence& s, string& error) = 0;

    // Static factory methods
    static input_format* new_input_format(const string& name);
    static input_format* new_conllu_input_format(const string& options = std::string());
    static input_format* new_generic_tokenizer_input_format(const string& options = std::string());
    static input_format* new_horizontal_input_format(const string& options = std::string());
    static input_format* new_vertical_input_format(const string& options = std::string());

    static input_format* new_presegmented_tokenizer(input_format* tokenizer);

    static const string CONLLU_V1;
    static const string CONLLU_V2;
    static const string GENERIC_TOKENIZER_NORMALIZED_SPACES;
    static const string GENERIC_TOKENIZER_PRESEGMENTED;
    static const string GENERIC_TOKENIZER_RANGES;
  };

The input_format class allows loading sentences in various formats.

Th class instances may store internal state and are not thread-safe.


input_format::read_block()
--------------------------

  virtual bool read_block(istream& is, string& block) const = 0;

Read a portion of input, which is guaranteed to contain only complete sentences.
Such portion is usually a paragraph (text followed by an empty line) or a line,
but it may be more complex (i.e., in a XML-like format).


input_format::reset_document()
------------------------------

  virtual void reset_document(string_piece id = string_piece()) = 0;

Resets the input_format instance state. Such state is needed not only for
remembering unprocessed text of the last set_text call, but also for correct
inter-block state tracking (for example to track document-level ranges or
inter-sentence spaces -- if you pass only spaces to set_text, these spaces has
to accumulate and be returned as preceding spaces of the next sentence).

If applicable, first read sentence will have the # newdoc comment, optionally
with given document id.


input_format::set_text()
------------------------

  virtual void set_text(string_piece text, bool make_copy = false) = 0;

Set the text from which the sentences will be read.

If make_copy is false, only a reference to the given text is stored and the user
has to make sure it exists until the instance is destroyed or set_text is called
again. If make_copy is true, a copy of the given text is made and retained until
the instance is destroyed or set_text is called again.


input_format::next_sentence()
-----------------------------

  virtual bool next_sentence(sentence& s, string& error) = 0;

Try reading another sentence from the text specified by set_text. Returns true
if the sentence was read and false if the text ended or there was a read error.
The latter two conditions can be distinguished by the error parameter - if it is
empty, the text ended, if it is nonempty, it contains a description of the read
error.


input_format::new_input_format()
--------------------------------

  static input_format* new_input_format(const string& name);

Create new input_format instance, given its name. The individual input formats
can be parametrized by using format=data syntax. The following input formats are
currently supported:
- conllu: return the new_conllu_input_format
- generic_tokenizer: return the new_generic_tokenizer_input_format
- horizontal: return the new_horizontal_input_format
- vertical: return the new_vertical_input_format

The new instance must be deleted after use.


input_format::new_conllu_input_format()
---------------------------------------

  static input_format* new_conllu_input_format(const string() options = std::string());

Create input_format instance which loads sentences in the CoNLL-U format
(http://universaldependencies.github.io/docs/format.html). The new instance must
be deleted after use.

Supported options:
- v2 (default): use CoNLL-U v2
- v1: allow loading only CoNLL-U v1 (i.e., no empty nodes and no spaces in
  forms and lemmas)


input_format::new_generic_tokenizer_input_format()
--------------------------------------------------

  static input_format* new_generic_tokenizer_input_format(const string() options = std::string());

Create rule-based generic tokenizer for English-like languages (with spaces
separating tokens and English-like punctuation). The new instance must be
deleted after use.

Supported options:
- normalized_spaces: by default, UDPipe uses custom misc fields to exactly
  encode spaces in the original document. If normalized_spaces option is given,
  only standard CoNLL-U v2 markup (SpaceAfter=No and # newpar) is used.
- presegmented: input is assumed to be already segmented, with every sentence
  on a line, and is only tokenized (respecting sentence breaks)
- ranges: for every token, range in the original document is stored in a format
  described in token class


input_format::new_horizontal_input_format()
-------------------------------------------

  static input_format* new_horizontal_input_format(const string() options = std::string());

Create input_format instance which loads forms from a simple horizontal format -
each sentence on a line, with word forms separated by spaces. The new instance
must be deleted after use.

In order to allow spaces in tokens, Unicode character 'NO-BREAK SPACE' (U+00A0)
is considered part of token and converted to a space during loading.


input_format::new_vertical_input_format()
-----------------------------------------

  static input_format* new_vertical_input_format(const string() options = std::string());

Create input_format instance which loads forms from a simple vertical format -
each word on a line, with empty line denoting end of sentence. The new instance
must be deleted after use.


input_format::new_presegmented_tokenizer()
------------------------------------------

  static input_format* new_presegmented_tokenizer(input_format* tokenizer);

Create input_format instance which acts as a tokenizer adapter - given a
tokenizer which segments anywhere, it creates a tokenizer which segments on
newline characters (by calling the tokenizer on individual lines, and if the
tokenizer segments in the middle of the line, it calls it repeatedly and merges
the results).

The new instance must be deleted after use. Note that the new instance takes
ownership of the given tokenizer and deletes it during its own deletion.


Class output_format
-------------------

  class output_format {
   public:
    virtual ~output_format() {}

    virtual void write_sentence(const sentence& s, ostream& os) = 0;
    virtual void finish_document(ostream& os) {};

    // Static factory methods
    static output_format* new_output_format(const string& name);
    static output_format* new_conllu_output_format(const string() options = std::string());
    static output_format* new_epe_output_format(const string() options = std::string());
    static output_format* new_matxin_output_format(const string() options = std::string());
    static output_format* new_horizontal_output_format(const string() options = std::string());
    static output_format* new_plaintext_output_format(const string() options = std::string());
    static output_format* new_vertical_output_format(const string() options = std::string());

    static const string CONLLU_V1;
    static const string CONLLU_V2;
    static const string HORIZONTAL_PARAGRAPHS;
    static const string PLAINTEXT_NORMALIZED_SPACES;
    static const string VERTICAL_PARAGRAPHS;
  };

The output_format class allows printing sentences in various formats.

The class instances may store internal state and are not thread-safe.


output_format::write_sentence()
-------------------------------

  virtual void write_sentence(const sentence& s, ostream& os) = 0;

Write given sentence to the given output stream.

When the output format requires document-level markup, it is written
automatically when the first sentence is written using this output_format
instance (or after finish_document call).


output_format::finish_document()
--------------------------------

  virtual void finish_document(ostream& os) {};

When the output format requires document-level markup, write the end-of-document
mark and reset the output_format instance state (i.e., the next write_sentence
will write start-of-document mark).


output_format::new_output_format()
----------------------------------

  static output_format* new_output_format(const string& name);

Create new output_format instance, given its name. The following output formats
are currently supported:
- conllu: return the new_conllu_output_format
- epe: return the new_epe_output_format
- matxin: return the new_matxin_output_format
- horizontal: return the new_horizontal_output_format
- plaintext: return the new_plaintext_output_format
- vertical: return the new_vertical_output_format

The new instance must be deleted after use.


output_format::new_conllu_output_format()
-----------------------------------------

  static output_format* new_conllu_output_format(const string() options = std::string());

Creates output_format instance for writing sentences in the CoNLL-U format
(http://universaldependencies.github.io/docs/format.html). The new instance must
be deleted after use.

Supported options:
- v2 (default): use CoNLL-U v2
- v1: produce output in CoNLL-U v1 format. Note that this is a lossy process,
  as empty nodes are ignored and spaces in forms and lemmas are converted to
  underscores.


output_format::new_epe_output_format()
--------------------------------------

  static output_format* new_epe_output_format(const string() options = std::string());

Creates output_format instance for writing sentences in the EPE (Extrinsic
Parser Evaluation 2017) interchange format. The new instance must be deleted
after use.


output_format::new_matxin_output_format()
-----------------------------------------

  static output_format* new_matxin_output_format(const string() options = std::string());

Creates output_format instance for writing sentences in the Matxin format -
UDPipe produces a XML with the following DTD:
  <!ELEMENT    corpus     (SENTENCE*)>
  <!ELEMENT    SENTENCE   (NODE*)>
  <!ATTLIST    SENTENCE    ord           CDATA        #REQUIRED
                           alloc         CDATA        #REQUIRED>
  <!ELEMENT    NODE   (NODE*)>
  <!ATTLIST    NODE        ord           CDATA        #REQUIRED
                           alloc         CDATA        #REQUIRED
                           form          CDATA        #REQUIRED
                           lem           CDATA        #REQUIRED
                           mi            CDATA        #REQUIRED
                           si            CDATA        #REQUIRED
                           sub           CDATA        #REQUIRED>

The new instance must be deleted after use.


output_format::new_plaintext_output_format()
--------------------------------------------

  static output_format* new_plaintext_output_format(const string() options = std::string());

Creates output_format instance for writing sentence tokens (in the UD sense)
using original spacing. By default, UDPipe custom misc features (see description
of token class) are used to reconstruct the exact original spaces. However, if
the document does not contain these features or if only normalized spacing is
wanted, you can use the following option:
- normalized_spaces: write one sentence on a line, and either one or no space
  between tokens, using the SpaceAfter=No feature


output_format::new_horizontal_output_format()
---------------------------------------------

  static output_format* new_horizontal_output_format(const string() options = std::string());

Creates output_format instance for writing sentences in a simple horizontal
format - each sentence on a line, with word forms separated by spaces. The new
instance must be deleted after use.

Because words can contain spaces in CoNLL-U v2, the spaces in words are
converted to Unicode character 'NO-BREAK SPACE' (U+00A0).

Supported options:
- paragraphs: if given, an empty line is printed after the end of a paragraph
  or a document (recognized by # newpar or # newdoc comments)


output_format::new_vertical_output_format()
-------------------------------------------

  static output_format* new_vertical_output_format(const string() options = std::string());

Creates output_format instance for writing sentences in a simple vertical format
- each word form on a line, with empty line denoting end of sentence. The new
instance must be deleted after use.

Supported options:
- paragraphs: if given, an empty line is printed after the end of a paragraph
  or a document (recognized by # newpar or # newdoc comments)


Class model
-----------

  class model {
   public:
    virtual ~model() {}

    static model* load(const char* fname);
    static model* load(istream& is);

    virtual input_format* new_tokenizer(const string& options) const = 0;
    virtual bool tag(sentence& s, const string& options, string& error) const = 0;
    virtual bool parse(sentence& s, const string& options, string& error) const = 0;

    static const string DEFAULT;
    static const string TOKENIZER_NORMALIZED_SPACES;
    static const string TOKENIZER_PRESEGMENTED;
    static const string TOKENIZER_RANGES;
  };

Class representing UDPipe model, allowing to perform tokenization, tagging and
parsing.


model::load(const char*)
------------------------

  static model* load(const char* fname);

Load a new model from a given file, returning NULL on failure. The new instance
must be deleted after use.


model::load(istream&)
---------------------

  static model* load(istream& is);

Load a new model from a given input stream, returning NULL on failure. The new
instance must be deleted after use.


model::new_tokenizer()
----------------------

  virtual input_format* new_tokenizer(const string& options) const = 0;

Construct a new tokenizer (or NULL if no tokenizer is specified by the model).
The new instance must be deleted after use.


model::tag()
------------

  virtual bool tag(sentence& s, const string& options, string& error) const = 0;

Tag the given sentence.


model::parse()
--------------

  virtual bool parse(sentence& s, const string& options, string& error) const = 0;

Parse the given sentence.


Class pipeline
--------------

  class pipeline {
   public:
    pipeline(const model* m, const string& input, const string& tagger, const string& parser, const string& output);

    void set_model(const model* m);
    void set_input(const string& input);
    void set_tagger(const string& tagger);
    void set_parser(const string& parser);
    void set_output(const string& output);

    void set_immediate(bool immediate);
    void [set_document_id #pipeline_set_document_id[(const string& document_id);

    bool process(istream& is, ostream& os, string& error) const;

    static const string DEFAULT;
    static const string NONE;
  };

The pipeline class allows simple file-to-file processing. A model and
input/tagger/parser/output options can be specified in the pipeline.

The input file can be processed either after fully loaded (default), or in
immediate mode, in which case is the input processed and printed as soon as a
block of input guaranteed to contain whole sentences is loaded. Specifically,
for most input formats the input is processed after loading an empty line (with
the exception of horizontal input format and presegmented tokenizer, where the
input is processed after loading every line).


pipeline::set_model()
---------------------

  void set_model(const model* m);

Use the given model.


pipeline::set_input()
---------------------

  void set_input(const string& input);

Use the given input format. In addition to formats described in
new_input_format, a special tokenizer or tokenizer=options format allows using
the model tokenizer.


pipeline::set_tagger()
----------------------

  void set_tagger(const string& tagger);

Use the given tagger options.


pipeline::set_parser()
----------------------

  void set_parser(const string& parser);

Use the given parser options.


pipeline::set_output()
----------------------

  void set_output(const string& output);

Use the given output format (see new_output_format for a list).


pipeline::set_immediate()
-------------------------

  void set_immediate(bool immediate);

Set or reset the immediate mode (default is immediate=false).


pipeline::set_document_id()
---------------------------

  void set_document_id(const string& document_id);

Set document id, which is passed to input_format::reset_document).


pipeline::process()
-------------------

  bool process(istream& is, ostream& os, string& error) const;

Process the given input stream, writing results to the given output stream. If
the processing succeeded, true is returned; otherwise, false is returned with an
error stored in the error argument.


Class trainer
-------------

  class trainer {
   public:
    static bool train(const string& method, const vector<sentence>& train, const vector<sentence>& heldout,
                      const string& tokenizer, const string& tagger, const string& parser,
                      ostream& os, string& error);

    static const string DEFAULT;
    static const string NONE;
  };

Class allowing training a UDPipe model.


trainer::train()
----------------

  static bool train(const string& method, const vector<sentence>& train, const vector<sentence>& heldout,
                    const string& tokenizer, const string& tagger, const string& parser,
                    ostream& os, string& error);

Train a UDPipe model. The only supported method is currently morphodita_parsito.
Use the supplied train and heldout data, and given tokenizer, tagger and parser
options (see the Training UDPipe Models section in the User's Manual).

If the training succeeded, true is returned and the model is saved to the given
os stream; otherwise, false is returned with an error stored in the error
argument.


Class evaluator
---------------

  class evaluator {
   public:
    evaluator(const model* m, const string& tokenizer, const string& tagger, const string& parser);

    void set_model(const model* m);
    void set_tokenizer(const string& tokenizer);
    void set_tagger(const string& tagger);
    void set_parser(const string& parser);

    bool evaluate(istream& is, ostream& os, string& error) const;

    static const string DEFAULT;
    static const string NONE;
  };

Class evaluating performance of given model on CoNLL-U file.

Three different settings (depending on whether tokenizer, tagger and parser is
used) can be evaluated. For details, see Measuring Model Accuracy in User's
Manual.


evaluator::set_model()
----------------------

  void set_model(const model* m);

Use the given model.


evaluator::set_tokenizer()
--------------------------

  void set_tokenizer(const string& tokenizer);

Use the given tokenizer options; pass DEFAULT to use default options or NONE not
to use a tokenizer.


evaluator::set_tagger()
-----------------------

  void set_tagger(const string& tagger);

Use the given tagger options; pass DEFAULT to use default options or NONE not to
use a tagger.


evaluator::set_parser()
-----------------------

  void set_parser(const string& parser);

Use the given parser options; pass DEFAULT to use default options or NONE not to
use a parser.


evaluator::evaluate()
---------------------

  bool evaluate(istream& is, ostream& os, string& error) const;

Evaluate the specified model on the given CoNLL-U input read from is stream.

If the evaluation succeeded, true is returned and the evaluation results are
written to the os stream in a plain text format; otherwise, false is returned
with an error stored in the error argument.


Class version
-------------

  class version {
   public:
    unsigned major;
    unsigned minor;
    unsigned patch;
    string prerelease;

    static version current();
  };

The version class represents UDPipe version. See UDPipe Versioning for more
information.


version::current
----------------

  static version current();

Returns current UDPipe version.


C++ Bindings API
----------------

Bindings for other languages than C++ are created using SWIG from the C++
bindings API, which is a slightly modified version of the native C++ API. Main
changes are replacement of string_piece type by native strings and removal of
methods using istream. Here is the C++ bindings API declaration:


Helper Structures
-----------------

  typedef vector<int> Children;

  typedef vector<uint8_t> Bytes;

  typedef vector<string> Comments;

  class ProcessingError {
  public:
    bool occurred();
    string message;
  };

  class Token {
   public:
    string form;
    string misc;

    Token(const string& form = string(), const string& misc = string());

    // CoNLL-U defined SpaceAfter=No feature
    bool getSpaceAfter() const;
    void setSpaceAfter(bool space_after);

    // UDPipe-specific all-spaces-preserving SpacesBefore and SpacesAfter features
    string getSpacesBefore() const;
    void setSpacesBefore(const string& spaces_before);
    string getSpacesAfter() const;
    void setSpacesAfter(const string& spaces_after);
    string getSpacesInToken() const;
    void setSpacesInToken(const string& spaces_in_token);

    // UDPipe-specific TokenRange feature
    bool getTokenRange() const;
    size_t getTokenRangeStart() const;
    size_t getTokenRangeEnd() const;
    void setTokenRange(size_t start, size_t end);
  };

  class Word : public Token {
   public:
    // form and misc are inherited from token
    int id;         // 0 is root, >0 is sentence word, <0 is undefined
    string lemma;   // lemma
    string upostag; // universal part-of-speech tag
    string xpostag; // language-specific part-of-speech tag
    string feats;   // list of morphological features
    int head;       // head, 0 is root, <0 is undefined
    string deprel;  // dependency relation to the head
    string deps;    // secondary dependencies

    Children children;

    Word(int id = -1, const string& form = string());
  };
  typedef vector<Word> Words;

  class MultiwordToken : public Token {
   public:
    // form and misc are inherited from token
    int idFirst, idLast;

    MultiwordToken(int id_first = -1, int id_last = -1, const string& form = string(), const string& misc = string());
  };
  typedef vector<MultiwordToken> MultiwordTokens;

  class EmptyNode {
   public:
    int id;          // 0 is root, >0 is sentence word, <0 is undefined
    int index;       // index for the current id, should be numbered from 1, 0=undefined
    string form;     // form
    string lemma;    // lemma
    string upostag;  // universal part-of-speech tag
    string xpostag;  // language-specific part-of-speech tag
    string feats;    // list of morphological features
    string deps;     // secondary dependencies
    string misc;     // miscellaneous information

    EmptyNode(int id = -1, int index = 0) : id(id), index(index) {}
  };
  typedef vector<empty_node> EmptyNodes;

  class Sentence {
   public:
    Sentence();

    Words words;
    MultiwordTokens multiwordTokens;
    EmptyNodes emptyNodes;
    Comments comments;
    static const string rootForm;

    // Basic sentence modifications
    bool empty();
    void clear();
    virtual Word& addWord(const char* form);
    void setHead(int id, int head, const string& deprel);
    void unlinkAllWords();

    // CoNLL-U defined comments
    bool getNewDoc() const;
    string getNewDocId() const;
    void setNewDoc(bool new_doc, const string& id = string());
    bool getNewPar() const;
    string getNewParId() const;
    void setNewPar(bool new_par, const string& id = string());

    string getSentId() const;
    void setSentId(const string& id);
    string getText() const;
    void setText(const string& id);
  };
  typedef vector<Sentence> Sentences;


Main Classes
------------

  class InputFormat {
   public:
    virtual void resetDocument(const string& id = string());
    virtual void setText(const char* text);
    virtual bool nextSentence(Sentence& s, ProcessingError* error = nullptr);

    static InputFormat* newInputFormat(const string& name);
    static InputFormat* newConlluInputFormat(const string& id = string());
    static InputFormat* newGenericTokenizerInputFormat(const string& id = string());
    static InputFormat* newHorizontalInputFormat(const string& id = string());
    static InputFormat* newVerticalInputFormat(const string& id = string());

    static InputFormat* newPresegmentedTokenizer(InputFormat tokenizer);

    static const string CONLLU_V1;
    static const string CONLLU_V2;
    static const string GENERIC_TOKENIZER_NORMALIZED_SPACES;
    static const string GENERIC_TOKENIZER_PRESEGMENTED;
    static const string GENERIC_TOKENIZER_RANGES;
  };

  class OutputFormat {
   public:
    virtual string writeSentence(const Sentence& s);
    virtual string finishDocument();

    static OutputFormat* newOutputFormat(const string& name);
    static OutputFormat* newConlluOutputFormat(const string& options = string());
    static OutputFormat* newEpeOutputFormat(const string& options = string());
    static OutputFormat* newMatxinOutputFormat(const string& options = string());
    static OutputFormat* newHorizontalOutputFormat(const string& options = string());
    static OutputFormat* newPlaintextOutputFormat(const string& options = string());
    static OutputFormat* newVerticalOutputFormat(const string& options = string());

    static const string CONLLU_V1;
    static const string CONLLU_V2;
    static const string HORIZONTAL_PARAGRAPHS;
    static const string PLAINTEXT_NORMALIZED_SPACES;
    static const string VERTICAL_PARAGRAPHS;
  };

  class Model {
   public:
    static Model* load(const char* fname);

    virtual InputFormat* newTokenizer(const string& options) const;
    virtual bool tag(Sentence& s, const string& options, ProcessingError* error = nullptr) const;
    virtual bool parse(Sentence& s, const string& options, ProcessingError* error) const;

    static const string DEFAULT;
    static const string TOKENIZER_PRESEGMENTED;
  };

  class Pipeline {
   public:
    Pipeline(const Model* m, const string& input, const string& tagger, const string& parser, const string& output);

    void setModel(const Model* m);
    void setInput(const string& input);
    void setTagger(const string& tagger);
    void setParser(const string& parser);
    void setOutput(const string& output);

    void setImmediate(bool immediate);
    void setDocumentId(const string& document_id);

    string process(const string& data, ProcessingError* error = nullptr) const;

    static const string DEFAULT;
    static const string NONE;
  };

  class Trainer {
   public:

    static Bytes* train(const string& method, const Sentences& train, const Sentences& heldout,
                        const string& tokenizer, const string& tagger, const string& parser,
                        ProcessingError* error = nullptr);

    static const string DEFAULT;
    static const string NONE;
  };

  class Evaluator {
   public:
    Evaluator(const Model* m, const string& tokenizer, const string& tagger, const string& parser);

    void setModel(const Model* m);
    void setTokenizer(const string& tokenizer);
    void setTagger(const string& tagger);
    void setParser(const string& parser);

    string evaluate(const string& data, ProcessingError* error = nullptr) const;

    static const string DEFAULT;
    static const string NONE;
  };

  class Version {
   public:
    unsigned major;
    unsigned minor;
    unsigned patch;
    string prerelease;

    // Returns current version.
    static version current();
  };


C# Bindings
-----------

UDPipe library bindings is available in the Ufal.UDPipe namespace.

The bindings is a straightforward conversion of the C++ bindings API. The
bindings requires native C++ library libudpipe_csharp (called udpipe_csharp on
Windows).


Java Bindings
-------------

UDPipe library bindings is available in the cz.cuni.mff.ufal.udpipe package.

The bindings is a straightforward conversion of the C++ bindings API. Vectors do
not have native Java interface, see cz.cuni.mff.ufal.udpipe.Words class for
reference. Also, class members are accessible and modifiable using using
getField and setField wrappers.

The bindings require native C++ library libudpipe_java (called udpipe_java on
Windows). If the library is found in the current directory, it is used,
otherwise standard library search process is used. The path to the C++ library
can also be specified using static udpipe_java.setLibraryPath(String path) call
(before the first call inside the C++ library, of course).


Perl Bindings
-------------

UDPipe library bindings is available in the Ufal::UDPipe
(http://search.cpan.org/~straka/Ufal-UDPipe/) package. The classes can be
imported into the current namespace using the :all export tag.

The bindings is a straightforward conversion of the C++ bindings API. Vectors do
not have native Perl interface, see Ufal::UDPipe::Words for reference. Static
methods and enumerations are available only through the module, not through
object instance.


Python Bindings
---------------

UDPipe library bindings is available in the ufal.udpipe
(http://pypi.python.org/pypi/ufal.udpipe) module.

The bindings is a straightforward conversion of the C++ bindings API, just
native bytes type is used instead of the C++ Bytes type.

You might also be interested in a contributed package spacy-udpipe
(https://github.com/TakeLab/spacy-udpipe) which wraps UDPipe with spaCy API.


Contact
=======

Authors:
- Milan Straka (http://ufal.mff.cuni.cz/milan-straka), straka@ufal.mff.cuni.cz

UDPipe website (http://ufal.mff.cuni.cz/udpipe).

UDPipe LINDAT/CLARIN entry (http://hdl.handle.net/11234/1-1702).


Acknowledgements
================

This work has been using language resources developed and/or stored and/or
distributed by the LINDAT/CLARIN project of the Ministry of Education of the
Czech Republic (project LM2010013).

Acknowledgements for individual models are listed in UDPipe User's Manual.


Publications
------------

- (Straka et al. 2017) Milan Straka and Jana Straková. Tokenizing, POS
  Tagging, Lemmatizing and Parsing UD 2.0 with UDPipe
  (http://ufal.mff.cuni.cz/~straka/papers/2017-conll_udpipe.pdf). In Proceedings
  of the CoNLL 2017 Shared Task: Multilingual Parsing from Raw Text to Universal
  Dependencies, Vancouver, Canada, August 2017.
- (Straka et al. 2016) Straka Milan, Hajič Jan, Straková Jana. UDPipe:
  Trainable Pipeline for Processing CoNLL-U Files Performing Tokenization,
  Morphological Analysis, POS Tagging and Parsing
  (http://ufal.mff.cuni.cz/~straka/papers/2016-lrec_udpipe.pdf). In Proceedings
  of the Tenth International Conference on Language Resources and Evaluation
  (LREC 2016), Portorož, Slovenia, May 2016.


Bibtex for Referencing
----------------------

  @InProceedings{udpipe:2017,
    author    = {Straka, Milan  and  Strakov\'{a}, Jana},
    title     = {Tokenizing, POS Tagging, Lemmatizing and Parsing UD 2.0 with UDPipe},
    booktitle = {Proceedings of the CoNLL 2017 Shared Task: Multilingual Parsing from Raw Text to Universal Dependencies},
    month     = {August},
    year      = {2017},
    address   = {Vancouver, Canada},
    publisher = {Association for Computational Linguistics},
    pages     = {88--99},
    url       = {http://www.aclweb.org/anthology/K/K17/K17-3009.pdf}
  }


Persistent Identifier
---------------------

If you prefer to reference UDPipe by a persistent identifier (PID), you can use
http://hdl.handle.net/11234/1-1702.
