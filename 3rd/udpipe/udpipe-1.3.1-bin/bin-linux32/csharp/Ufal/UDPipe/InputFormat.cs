//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.1.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Ufal.UDPipe {

public class InputFormat : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal InputFormat(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(InputFormat obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(InputFormat obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~InputFormat() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          udpipe_csharpPINVOKE.delete_InputFormat(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtrAndDisown(InputFormat obj) {
    if (obj != null) obj.swigCMemOwn = false;
    return getCPtr(obj);
  }

  public virtual void resetDocument(string id) {
    udpipe_csharpPINVOKE.InputFormat_resetDocument__SWIG_0(swigCPtr, id);
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void resetDocument() {
    udpipe_csharpPINVOKE.InputFormat_resetDocument__SWIG_1(swigCPtr);
  }

  public virtual void setText(string text) {
    udpipe_csharpPINVOKE.InputFormat_setText(swigCPtr, text);
  }

  public virtual bool nextSentence(Sentence s, ProcessingError error) {
    bool ret = udpipe_csharpPINVOKE.InputFormat_nextSentence__SWIG_0(swigCPtr, Sentence.getCPtr(s), ProcessingError.getCPtr(error));
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool nextSentence(Sentence s) {
    bool ret = udpipe_csharpPINVOKE.InputFormat_nextSentence__SWIG_1(swigCPtr, Sentence.getCPtr(s));
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static InputFormat newInputFormat(string name) {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.InputFormat_newInputFormat(name);
    InputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new InputFormat(cPtr, true);
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static InputFormat newConlluInputFormat(string options) {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.InputFormat_newConlluInputFormat__SWIG_0(options);
    InputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new InputFormat(cPtr, true);
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static InputFormat newConlluInputFormat() {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.InputFormat_newConlluInputFormat__SWIG_1();
    InputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new InputFormat(cPtr, true);
    return ret;
  }

  public static InputFormat newGenericTokenizerInputFormat(string options) {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.InputFormat_newGenericTokenizerInputFormat__SWIG_0(options);
    InputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new InputFormat(cPtr, true);
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static InputFormat newGenericTokenizerInputFormat() {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.InputFormat_newGenericTokenizerInputFormat__SWIG_1();
    InputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new InputFormat(cPtr, true);
    return ret;
  }

  public static InputFormat newHorizontalInputFormat(string options) {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.InputFormat_newHorizontalInputFormat__SWIG_0(options);
    InputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new InputFormat(cPtr, true);
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static InputFormat newHorizontalInputFormat() {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.InputFormat_newHorizontalInputFormat__SWIG_1();
    InputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new InputFormat(cPtr, true);
    return ret;
  }

  public static InputFormat newVerticalInputFormat(string options) {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.InputFormat_newVerticalInputFormat__SWIG_0(options);
    InputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new InputFormat(cPtr, true);
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static InputFormat newVerticalInputFormat() {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.InputFormat_newVerticalInputFormat__SWIG_1();
    InputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new InputFormat(cPtr, true);
    return ret;
  }

  public static InputFormat newPresegmentedTokenizer(InputFormat DISOWN) {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.InputFormat_newPresegmentedTokenizer(InputFormat.getCPtrAndDisown(DISOWN));
    InputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new InputFormat(cPtr, true);
    return ret;
  }

  public static string CONLLU_V1 {
    get {
      string ret = udpipe_csharpPINVOKE.InputFormat_CONLLU_V1_get();
      return ret;
    } 
  }

  public static string CONLLU_V2 {
    get {
      string ret = udpipe_csharpPINVOKE.InputFormat_CONLLU_V2_get();
      return ret;
    } 
  }

  public static string GENERIC_TOKENIZER_NORMALIZED_SPACES {
    get {
      string ret = udpipe_csharpPINVOKE.InputFormat_GENERIC_TOKENIZER_NORMALIZED_SPACES_get();
      return ret;
    } 
  }

  public static string GENERIC_TOKENIZER_PRESEGMENTED {
    get {
      string ret = udpipe_csharpPINVOKE.InputFormat_GENERIC_TOKENIZER_PRESEGMENTED_get();
      return ret;
    } 
  }

  public static string GENERIC_TOKENIZER_RANGES {
    get {
      string ret = udpipe_csharpPINVOKE.InputFormat_GENERIC_TOKENIZER_RANGES_get();
      return ret;
    } 
  }

}

}
