//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.1.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Ufal.UDPipe {

public class OutputFormat : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal OutputFormat(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(OutputFormat obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(OutputFormat obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~OutputFormat() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          udpipe_csharpPINVOKE.delete_OutputFormat(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual string writeSentence(Sentence s) {
    string ret = udpipe_csharpPINVOKE.OutputFormat_writeSentence(swigCPtr, Sentence.getCPtr(s));
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual string finishDocument() {
    string ret = udpipe_csharpPINVOKE.OutputFormat_finishDocument(swigCPtr);
    return ret;
  }

  public static OutputFormat newOutputFormat(string name) {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.OutputFormat_newOutputFormat(name);
    OutputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new OutputFormat(cPtr, true);
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static OutputFormat newConlluOutputFormat(string options) {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.OutputFormat_newConlluOutputFormat__SWIG_0(options);
    OutputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new OutputFormat(cPtr, true);
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static OutputFormat newConlluOutputFormat() {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.OutputFormat_newConlluOutputFormat__SWIG_1();
    OutputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new OutputFormat(cPtr, true);
    return ret;
  }

  public static OutputFormat newEpeOutputFormat(string options) {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.OutputFormat_newEpeOutputFormat__SWIG_0(options);
    OutputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new OutputFormat(cPtr, true);
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static OutputFormat newEpeOutputFormat() {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.OutputFormat_newEpeOutputFormat__SWIG_1();
    OutputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new OutputFormat(cPtr, true);
    return ret;
  }

  public static OutputFormat newMatxinOutputFormat(string options) {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.OutputFormat_newMatxinOutputFormat__SWIG_0(options);
    OutputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new OutputFormat(cPtr, true);
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static OutputFormat newMatxinOutputFormat() {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.OutputFormat_newMatxinOutputFormat__SWIG_1();
    OutputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new OutputFormat(cPtr, true);
    return ret;
  }

  public static OutputFormat newHorizontalOutputFormat(string options) {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.OutputFormat_newHorizontalOutputFormat__SWIG_0(options);
    OutputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new OutputFormat(cPtr, true);
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static OutputFormat newHorizontalOutputFormat() {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.OutputFormat_newHorizontalOutputFormat__SWIG_1();
    OutputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new OutputFormat(cPtr, true);
    return ret;
  }

  public static OutputFormat newPlaintextOutputFormat(string options) {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.OutputFormat_newPlaintextOutputFormat__SWIG_0(options);
    OutputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new OutputFormat(cPtr, true);
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static OutputFormat newPlaintextOutputFormat() {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.OutputFormat_newPlaintextOutputFormat__SWIG_1();
    OutputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new OutputFormat(cPtr, true);
    return ret;
  }

  public static OutputFormat newVerticalOutputFormat(string options) {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.OutputFormat_newVerticalOutputFormat__SWIG_0(options);
    OutputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new OutputFormat(cPtr, true);
    if (udpipe_csharpPINVOKE.SWIGPendingException.Pending) throw udpipe_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static OutputFormat newVerticalOutputFormat() {
    global::System.IntPtr cPtr = udpipe_csharpPINVOKE.OutputFormat_newVerticalOutputFormat__SWIG_1();
    OutputFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new OutputFormat(cPtr, true);
    return ret;
  }

  public static string CONLLU_V1 {
    get {
      string ret = udpipe_csharpPINVOKE.OutputFormat_CONLLU_V1_get();
      return ret;
    } 
  }

  public static string CONLLU_V2 {
    get {
      string ret = udpipe_csharpPINVOKE.OutputFormat_CONLLU_V2_get();
      return ret;
    } 
  }

  public static string HORIZONTAL_PARAGRAPHS {
    get {
      string ret = udpipe_csharpPINVOKE.OutputFormat_HORIZONTAL_PARAGRAPHS_get();
      return ret;
    } 
  }

  public static string PLAINTEXT_NORMALIZED_SPACES {
    get {
      string ret = udpipe_csharpPINVOKE.OutputFormat_PLAINTEXT_NORMALIZED_SPACES_get();
      return ret;
    } 
  }

  public static string VERTICAL_PARAGRAPHS {
    get {
      string ret = udpipe_csharpPINVOKE.OutputFormat_VERTICAL_PARAGRAPHS_get();
      return ret;
    } 
  }

}

}
