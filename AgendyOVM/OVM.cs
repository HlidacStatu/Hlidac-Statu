// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Sluzba;
//
//    var coordinate = Coordinate.FromJson(jsonString);

namespace AgendyOVM.OVM
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;

    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Root
    {
        [JsonProperty("položky")]
        public Položky[] Položky { get; set; }
    }

    public partial class Položky
    {
        [JsonProperty("adresa-místa-pobytu", NullValueHandling = NullValueHandling.Ignore)]
        public AdresníMísto AdresaMístaPobytu { get; set; }

        [JsonProperty("adresa-sídla", NullValueHandling = NullValueHandling.Ignore)]
        public AdresníMísto AdresaSídla { get; set; }

        [JsonProperty("datové-schránky", NullValueHandling = NullValueHandling.Ignore)]
        public DatovéSchránky[] DatovéSchránky { get; set; }

        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("identifikátor", NullValueHandling = NullValueHandling.Ignore)]
        public string Identifikátor { get; set; }

        [JsonProperty("ičo", NullValueHandling = NullValueHandling.Ignore)]
        public string Ičo { get; set; }

        [JsonProperty("název", NullValueHandling = NullValueHandling.Ignore)]
        public Název Název { get; set; }

        [JsonProperty("osoba-v-čele", NullValueHandling = NullValueHandling.Ignore)]
        public OsobaVČele[] OsobaVČele { get; set; }

        [JsonProperty("pozastavení-do", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? PozastaveníDo { get; set; }

        [JsonProperty("pozastavení-od", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? PozastaveníOd { get; set; }

        [JsonProperty("pracoviště-ovm", NullValueHandling = NullValueHandling.Ignore)]
        public PracovištěOvm[] PracovištěOvm { get; set; }

        [JsonProperty("právní-forma", NullValueHandling = NullValueHandling.Ignore)]
        public string PrávníForma { get; set; }

        [JsonProperty("přerušení-do", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? PřerušeníDo { get; set; }

        [JsonProperty("přerušení-od", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? PřerušeníOd { get; set; }

        [JsonProperty("seznam-kategorií", NullValueHandling = NullValueHandling.Ignore)]
        public SeznamKategorií[] SeznamKategorií { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("ukončení", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Ukončení { get; set; }

        [JsonProperty("ustanovení", NullValueHandling = NullValueHandling.Ignore)]
        public Ustanovení[] Ustanovení { get; set; }

        [JsonProperty("vnitřní-organizační-jednotka", NullValueHandling = NullValueHandling.Ignore)]
        public bool? VnitřníOrganizačníJednotka { get; set; }

        [JsonProperty("zahájení", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Zahájení { get; set; }
    }

    public partial class AdresníMísto
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("kód", NullValueHandling = NullValueHandling.Ignore)]
        public string Kód { get; set; }
    }

    public partial class DatovéSchránky
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("identifikátor-ds", NullValueHandling = NullValueHandling.Ignore)]
        public string IdentifikátorDs { get; set; }

        [JsonProperty("typ-ds", NullValueHandling = NullValueHandling.Ignore)]
        public string TypDs { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }
    }

    public partial class Název
    {
        [JsonProperty("cs", NullValueHandling = NullValueHandling.Ignore)]
        public string Cs { get; set; }
    }

    public partial class OsobaVČele
    {
        [JsonProperty("jméno", NullValueHandling = NullValueHandling.Ignore)]
        public string Jméno { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }
    }

    public partial class PracovištěOvm
    {
        [JsonProperty("adresa-pr", NullValueHandling = NullValueHandling.Ignore)]
        public AdresníMísto AdresaPr { get; set; }

        [JsonProperty("adresa-pr-txt", NullValueHandling = NullValueHandling.Ignore)]
        public string AdresaPrTxt { get; set; }

        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("otevření", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Otevření { get; set; }

        [JsonProperty("stát-pr", NullValueHandling = NullValueHandling.Ignore)]
        public string StátPr { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("uzavření", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Uzavření { get; set; }
    }

    public partial class SeznamKategorií
    {
        [JsonProperty("kategorie", NullValueHandling = NullValueHandling.Ignore)]
        public string Kategorie { get; set; }

        [JsonProperty("zařazení-do", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? ZařazeníDo { get; set; }

        [JsonProperty("zařazení-od", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? ZařazeníOd { get; set; }
    }

    public partial class Ustanovení
    {
        [JsonProperty("označení", NullValueHandling = NullValueHandling.Ignore)]
        public string Označení { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }
    }

    public partial class Coordinate
    {
        public static Coordinate FromJson(string json) => JsonConvert.DeserializeObject<Coordinate>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Coordinate self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
