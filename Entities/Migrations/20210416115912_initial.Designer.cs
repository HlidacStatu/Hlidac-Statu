// <auto-generated />
using System;
using HlidacStatu.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HlidacStatu.Entities.Migrations
{
    [DbContext(typeof(DbEntities))]
    [Migration("20210416115912_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HlidacStatu.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("HlidacStatu.Entities.AspNetUserApiTokens", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastAccess")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AspNetUserApiTokens");
                });

            modelBuilder.Entity("HlidacStatu.Entities.Audit", b =>
                {
                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pk")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Ip")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("IP");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("objectId");

                    b.Property<string>("ObjectType")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("objectType");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("operation");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("userId");

                    b.Property<string>("ValueAfter")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("valueAfter");

                    b.Property<string>("ValueBefore")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("valueBefore");

                    b.HasKey("Pk");

                    b.HasIndex(new[] { "Date" }, "idx_audit_date");

                    b.HasIndex(new[] { "ObjectId" }, "idx_audit_objectId");

                    b.HasIndex(new[] { "UserId" }, "idx_audit_userid");

                    b.ToTable("Audit");
                });

            modelBuilder.Entity("HlidacStatu.Entities.AutocompleteSynonym", b =>
                {
                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pk")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("active")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("ImageElement")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imageElement")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Query")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("query");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Pk");

                    b.ToTable("AutocompleteSynonyms");
                });

            modelBuilder.Entity("HlidacStatu.Entities.BannedIp", b =>
                {
                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IP");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime");

                    b.HasKey("Ip");

                    b.ToTable("BannedIPs");
                });

            modelBuilder.Entity("HlidacStatu.Entities.Bookmark", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("Folder")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Bookmarks");
                });

            modelBuilder.Entity("HlidacStatu.Entities.ClassificationOverride", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CorrectCat1")
                        .HasColumnType("int");

                    b.Property<int?>("CorrectCat2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("IdSmlouvy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OriginalCat1")
                        .HasColumnType("int");

                    b.Property<int?>("OriginalCat2")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClassificationOverride");
                });

            modelBuilder.Entity("HlidacStatu.Entities.DatoveSchranky", b =>
                {
                    b.Property<string>("Ds")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DS");

                    b.Property<string>("DetailJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifikator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Ds");

                    b.HasIndex(new[] { "Url" }, "IX_DatoveSchranky_url");

                    b.ToTable("DatoveSchranky");
                });

            modelBuilder.Entity("HlidacStatu.Entities.DatoveSchrankyBak", b =>
                {
                    b.Property<string>("DetailJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ds")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DS");

                    b.Property<string>("Identifikator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToTable("DatoveSchranky_bak");
                });

            modelBuilder.Entity("HlidacStatu.Entities.Dluznici", b =>
                {
                    b.Property<long>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("pk")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumNarozeni")
                        .HasColumnType("datetime");

                    b.Property<string>("Ico")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ICO");

                    b.Property<string>("IdOsoby")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("IdPuvodce")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Mesto")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Okres")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PlneJmeno")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Psc")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PSC");

                    b.Property<string>("Rc")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("RC");

                    b.Property<string>("RizeniId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Zeme")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Pk");

                    b.ToTable("Dluznici");
                });

            modelBuilder.Entity("HlidacStatu.Entities.DumpDatum", b =>
                {
                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pk")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CasGenerovani")
                        .HasColumnType("datetime")
                        .HasColumnName("casGenerovani");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<int?>("Den")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("den")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("exception");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)")
                        .HasColumnName("hash");

                    b.Property<int>("Mesic")
                        .HasColumnType("int")
                        .HasColumnName("mesic");

                    b.Property<DateTime?>("Processed")
                        .HasColumnType("datetime");

                    b.Property<int>("Rok")
                        .HasColumnType("int")
                        .HasColumnName("rok");

                    b.Property<long>("Velikost")
                        .HasColumnType("bigint")
                        .HasColumnName("velikost");

                    b.HasKey("Pk");

                    b.ToTable("DumpData");
                });

            modelBuilder.Entity("HlidacStatu.Entities.Esa2010", b =>
                {
                    b.Property<int>("KodPol")
                        .HasColumnType("int");

                    b.Property<string>("Nazev")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("Verejne")
                        .HasColumnType("bit");

                    b.HasKey("KodPol")
                        .HasName("PK_CZCISS");

                    b.ToTable("Esa2010");
                });

            modelBuilder.Entity("HlidacStatu.Entities.EventType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("EventType");
                });

            modelBuilder.Entity("HlidacStatu.Entities.Firma", b =>
                {
                    b.Property<string>("Ico")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ICO");

                    b.Property<DateTime?>("DatumZapisuOr")
                        .HasColumnType("date")
                        .HasColumnName("Datum_zapisu_OR");

                    b.Property<string>("Dic")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DIC");

                    b.Property<int?>("Esa2010")
                        .HasColumnType("int");

                    b.Property<short?>("IsInRs")
                        .HasColumnType("smallint")
                        .HasColumnName("IsInRS");

                    b.Property<string>("Jmeno")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("JmenoAscii")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("KodPf")
                        .HasColumnType("int")
                        .HasColumnName("Kod_PF");

                    b.Property<string>("KrajId")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("OkresId")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Popis")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Source")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<byte?>("StavSubjektu")
                        .HasColumnType("tinyint")
                        .HasColumnName("Stav_subjektu");

                    b.Property<int?>("Typ")
                        .HasColumnType("int");

                    b.Property<string>("VazbyRaw")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vazbyRaw");

                    b.Property<int>("VersionUpdate")
                        .HasColumnType("int");

                    b.HasKey("Ico");

                    b.HasIndex(new[] { "Ico" }, "IX_Firma_Ico");

                    b.HasIndex(new[] { "JmenoAscii" }, "idx_firma_jmenoascii");

                    b.HasIndex(new[] { "Jmeno" }, "ix_firma_jmeno");

                    b.ToTable("Firma");
                });

            modelBuilder.Entity("HlidacStatu.Entities.FirmaD", b =>
                {
                    b.Property<string>("Ico")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ICO");

                    b.Property<string>("DatovaSchranka")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsParent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("dsParent");

                    b.Property<string>("DsSubjName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("dsSubjName");

                    b.HasKey("Ico", "DatovaSchranka");

                    b.ToTable("Firma_DS");
                });

            modelBuilder.Entity("HlidacStatu.Entities.FirmaEvent", b =>
                {
                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pk")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AddInfoNum")
                        .HasColumnType("decimal(18,9)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DatumDo")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DatumOd")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ico")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ICO");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Zdroj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Pk")
                        .HasName("PK_FirmaEvent_1");

                    b.HasIndex(new[] { "Ico" }, "IX_FirmaEvent_Osoba");

                    b.ToTable("FirmaEvent");
                });

            modelBuilder.Entity("HlidacStatu.Entities.FirmaHint", b =>
                {
                    b.Property<string>("Ico")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("PocetDniKPrvniSmlouve")
                        .HasColumnType("int")
                        .HasColumnName("PocetDni_k_PrvniSmlouve");

                    b.HasKey("Ico");

                    b.ToTable("FirmaHint");
                });

            modelBuilder.Entity("HlidacStatu.Entities.FirmaNace", b =>
                {
                    b.Property<string>("Ico")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ICO");

                    b.Property<string>("Nace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NACE");

                    b.HasKey("Ico", "Nace");

                    b.ToTable("Firma_NACE");
                });

            modelBuilder.Entity("HlidacStatu.Entities.FirmaVazby", b =>
                {
                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pk")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumDo")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DatumOd")
                        .HasColumnType("date");

                    b.Property<string>("Ico")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ICO");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("Podil")
                        .HasColumnType("decimal(18,9)")
                        .HasColumnName("podil");

                    b.Property<string>("PojmenovaniVazby")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Poznamka")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("RucniZapis")
                        .HasColumnType("int");

                    b.Property<int?>("TypVazby")
                        .HasColumnType("int");

                    b.Property<string>("VazbakIco")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("VazbakICO");

                    b.Property<string>("Zdroj")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Pk");

                    b.HasIndex(new[] { "Ico" }, "IX_FirmaVazby_ICO");

                    b.HasIndex(new[] { "VazbakIco", "Ico" }, "IX_FirmaVazby_Vazby");

                    b.HasIndex(new[] { "Ico", "VazbakIco", "Pk" }, "_dta_index_FirmaVazby_9_1701581100__K2_K3_K1_4_5_6_7_8");

                    b.HasIndex(new[] { "VazbakIco", "Pk", "Ico" }, "_dta_index_FirmaVazby_9_1701581100__K3_K1_K2_4_5_6_7_8");

                    b.ToTable("FirmaVazby");
                });

            modelBuilder.Entity("HlidacStatu.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CompanyID");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdCustomer")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("ID_Customer");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Paid")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValueSql("('')");

                    b.Property<decimal>("TotalPriceNoVat")
                        .HasColumnType("money");

                    b.Property<decimal>("Vat")
                        .HasColumnType("money")
                        .HasColumnName("VAT");

                    b.Property<string>("VatId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("VatID");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("HlidacStatu.Entities.InvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("Discount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("Expires")
                        .HasColumnType("datetime");

                    b.Property<int>("IdInvoice")
                        .HasColumnType("int")
                        .HasColumnName("ID_Invoice");

                    b.Property<int?>("IdShopItem")
                        .HasColumnType("int")
                        .HasColumnName("ID_ShopItem");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<decimal>("Vat")
                        .HasColumnType("money")
                        .HasColumnName("VAT");

                    b.HasKey("Id");

                    b.HasIndex("IdInvoice");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("HlidacStatu.Entities.ItemToOcrQueue", b =>
                {
                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pk")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Done")
                        .HasColumnType("datetime")
                        .HasColumnName("done");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("itemId");

                    b.Property<string>("ItemSubType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("itemSubType");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("itemType");

                    b.Property<int?>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("result");

                    b.Property<DateTime?>("Started")
                        .HasColumnType("datetime")
                        .HasColumnName("started");

                    b.Property<int?>("Success")
                        .HasColumnType("int")
                        .HasColumnName("success");

                    b.HasKey("Pk");

                    b.HasIndex(new[] { "Done", "Started" }, "idx_ItemToOcrQueue_doneStarted");

                    b.HasIndex(new[] { "ItemType", "ItemId", "Done", "Started" }, "idx_ItemToOcrQueue_many");

                    b.ToTable("ItemToOcrQueue");
                });

            modelBuilder.Entity("HlidacStatu.Entities.KodPf", b =>
                {
                    b.Property<int>("Kod")
                        .HasColumnType("int");

                    b.Property<string>("PravniForma")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Kod");

                    b.ToTable("KOD_PF");
                });

            modelBuilder.Entity("HlidacStatu.Entities.NespolehlivyPlatceDph", b =>
                {
                    b.Property<string>("Ico")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("Ico");

                    b.ToTable("NespolehlivyPlatceDPH");
                });

            modelBuilder.Entity("HlidacStatu.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime");

                    b.Property<string>("Dic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DIC");

                    b.Property<string>("Ico")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ICO");

                    b.Property<string>("Jmeno")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("PaidUntil")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HlidacStatu.Entities.Osoba", b =>
                {
                    b.Property<int>("InternalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Jmeno")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("JmenoAscii")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ManuallyUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("ManuallyUpdatedBy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Mesto")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Narozeni")
                        .HasColumnType("date");

                    b.Property<bool>("OnRadar")
                        .HasColumnType("bit");

                    b.Property<int?>("OriginalId")
                        .HasColumnType("int");

                    b.Property<string>("Pohlavi")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Prijmeni")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PrijmeniAscii")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Psc")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("PSC");

                    b.Property<string>("PuvodniPrijmeni")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PuvodniPrijmeniAscii")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TitulPo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TitulPred")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ulice")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("Umrti")
                        .HasColumnType("date");

                    b.Property<string>("WikiId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("InternalId")
                        .HasName("PK_Osoba_2");

                    b.HasIndex(new[] { "NameId" }, "idx_Osoba_nameId");

                    b.HasIndex(new[] { "JmenoAscii", "PrijmeniAscii", "Narozeni" }, "idx_osoba_jmenoAsciiPrijmeniAsciiNarozeni");

                    b.HasIndex(new[] { "Jmeno", "Prijmeni", "Narozeni" }, "idx_osoba_jmenoPrijmeniNarozeni");

                    b.HasIndex(new[] { "JmenoAscii" }, "idx_osoba_jmenoascii");

                    b.HasIndex(new[] { "PrijmeniAscii" }, "idx_osoba_prijmeniascii");

                    b.ToTable("Osoba");
                });

            modelBuilder.Entity("HlidacStatu.Entities.OsobaEvent", b =>
                {
                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pk")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AddInfoNum")
                        .HasColumnType("decimal(18,9)");

                    b.Property<int?>("Ceo")
                        .HasColumnType("int")
                        .HasColumnName("CEO");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DatumDo")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DatumOd")
                        .HasColumnType("date");

                    b.Property<string>("Ico")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organizace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OsobaId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Zdroj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Pk")
                        .HasName("PK_OsobaEvent_1");

                    b.HasIndex(new[] { "OsobaId" }, "IX_OsobaEvent_Osoba");

                    b.ToTable("OsobaEvent");
                });

            modelBuilder.Entity("HlidacStatu.Entities.OsobaEventOldBackup", b =>
                {
                    b.Property<string>("AddInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AddInfoNum")
                        .HasColumnType("decimal(18,9)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatumDo")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DatumOd")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OsobaId")
                        .HasColumnType("int");

                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pk")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Zdroj")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("OsobaEventOldBackup");
                });

            modelBuilder.Entity("HlidacStatu.Entities.OsobaExternalId", b =>
                {
                    b.Property<int>("OsobaId")
                        .HasColumnType("int");

                    b.Property<string>("ExternalId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ExternalSource")
                        .HasColumnType("int");

                    b.HasKey("OsobaId", "ExternalId", "ExternalSource");

                    b.HasIndex(new[] { "ExternalId", "ExternalSource" }, "idx_OsobaExternalId_external");

                    b.ToTable("OsobaExternalId");
                });

            modelBuilder.Entity("HlidacStatu.Entities.OsobaVazby", b =>
                {
                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pk")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumDo")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DatumOd")
                        .HasColumnType("date");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OsobaId")
                        .HasColumnType("int")
                        .HasColumnName("OsobaID");

                    b.Property<decimal?>("Podil")
                        .HasColumnType("decimal(18,9)")
                        .HasColumnName("podil");

                    b.Property<string>("PojmenovaniVazby")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Poznamka")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("RucniZapis")
                        .HasColumnType("int");

                    b.Property<int?>("TypVazby")
                        .HasColumnType("int");

                    b.Property<string>("VazbakIco")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("VazbakICO");

                    b.Property<int?>("VazbakOsobaId")
                        .HasColumnType("int");

                    b.Property<string>("Zdroj")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Pk");

                    b.HasIndex(new[] { "OsobaId" }, "IX_OsobaVazby_OsobaId");

                    b.HasIndex(new[] { "OsobaId", "VazbakIco" }, "IX_OsobaVazby_Vazby");

                    b.HasIndex(new[] { "VazbakIco" }, "_dta_index_OsobaVazby_9_1877581727__K3_2");

                    b.ToTable("OsobaVazby");
                });

            modelBuilder.Entity("HlidacStatu.Entities.Polfindary", b =>
                {
                    b.Property<DateTime?>("Datumdaru")
                        .HasColumnType("date")
                        .HasColumnName("datumdaru");

                    b.Property<string>("Firma")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("firma");

                    b.Property<decimal?>("Hodnota")
                        .HasColumnType("decimal(18,9)")
                        .HasColumnName("hodnota");

                    b.Property<string>("Icofirmy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("icofirmy");

                    b.Property<string>("Icostrany")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("icostrany");

                    b.Property<string>("Jmeno")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("jmeno");

                    b.Property<DateTime?>("Narozeni")
                        .HasColumnType("date")
                        .HasColumnName("narozeni");

                    b.Property<string>("Poznamka1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("poznamka1");

                    b.Property<string>("Poznamka2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("poznamka2");

                    b.Property<string>("Poznamka3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("poznamka3");

                    b.Property<string>("Prijmeni")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("prijmeni");

                    b.Property<string>("Rc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("rc");

                    b.Property<int?>("Rn")
                        .HasColumnType("int")
                        .HasColumnName("rn");

                    b.Property<int?>("Rok")
                        .HasColumnType("int")
                        .HasColumnName("rok");

                    b.Property<string>("Strana")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strana");

                    b.Property<string>("Titul")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("titul");

                    b.Property<string>("Typ")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("typ");

                    b.HasIndex(new[] { "Icostrany" }, "pfd1");

                    b.HasIndex(new[] { "Rok" }, "pfd2");

                    b.HasIndex(new[] { "Jmeno" }, "pfd3");

                    b.HasIndex(new[] { "Prijmeni" }, "pfd4");

                    b.HasIndex(new[] { "Icofirmy" }, "pfd5");

                    b.HasIndex(new[] { "Hodnota" }, "pfd6");

                    b.HasIndex(new[] { "Narozeni" }, "pfd7");

                    b.ToTable("polfindary");
                });

            modelBuilder.Entity("HlidacStatu.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("comment");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("createdBy");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("itemType");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("newValue");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("oldValue");

                    b.Property<int?>("ReviewResult")
                        .HasColumnType("int")
                        .HasColumnName("reviewResult");

                    b.Property<DateTime?>("Reviewed")
                        .HasColumnType("datetime")
                        .HasColumnName("reviewed");

                    b.Property<string>("ReviewedBy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("reviewedBy");

                    b.HasKey("Id");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("HlidacStatu.Entities.SmlouvyId", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("active")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("SmlouvyIds");
                });

            modelBuilder.Entity("HlidacStatu.Entities.Sponzoring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DarovanoDne")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Edited")
                        .HasColumnType("date");

                    b.Property<decimal?>("Hodnota")
                        .HasColumnType("decimal(18,9)");

                    b.Property<string>("IcoDarce")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IcoPrijemce")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("OsobaIdDarce")
                        .HasColumnType("int");

                    b.Property<int?>("OsobaIdPrijemce")
                        .HasColumnType("int");

                    b.Property<string>("Popis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Typ")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Zdroj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IcoDarce" }, "idx_sponzoring_IcoDarce");

                    b.HasIndex(new[] { "IcoPrijemce" }, "idx_sponzoring_IcoPrijemce");

                    b.HasIndex(new[] { "OsobaIdDarce" }, "idx_sponzoring_OsobaIdDarce");

                    b.HasIndex(new[] { "OsobaIdPrijemce" }, "idx_sponzoring_OsobaIdPrijemce");

                    b.ToTable("Sponzoring");
                });

            modelBuilder.Entity("HlidacStatu.Entities.Ssmq", b =>
                {
                    b.Property<int>("Pk")
                        .HasColumnType("int")
                        .HasColumnName("pk");

                    b.Property<DateTime>("Changed")
                        .HasColumnType("datetime")
                        .HasColumnName("changed");

                    b.Property<string>("ChangedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("changedBy");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Createdby")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("createdby");

                    b.Property<string>("Itemid")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("itemid");

                    b.Property<int>("Itemstatus")
                        .HasColumnType("int")
                        .HasColumnName("itemstatus");

                    b.Property<string>("Itemvalue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("itemvalue");

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("priority")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Qname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("qname");

                    b.HasKey("Pk");

                    b.HasIndex(new[] { "Created" }, "IX_created_priority");

                    b.HasIndex(new[] { "Qname" }, "IX_qname");

                    b.ToTable("SSMQ");
                });

            modelBuilder.Entity("HlidacStatu.Entities.TipUrl", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Name");

                    b.ToTable("TipUrl");
                });

            modelBuilder.Entity("HlidacStatu.Entities.UcetniJednotka", b =>
                {
                    b.Property<string>("Adresa")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("adresa");

                    b.Property<int?>("AktorgId")
                        .HasColumnType("int")
                        .HasColumnName("aktorg_id");

                    b.Property<int?>("CofogId")
                        .HasColumnType("int")
                        .HasColumnName("cofog_id");

                    b.Property<DateTime?>("Datumakt")
                        .HasColumnType("datetime2")
                        .HasColumnName("datumakt");

                    b.Property<DateTime?>("Datumvzniku")
                        .HasColumnType("datetime2")
                        .HasColumnName("datumvzniku");

                    b.Property<string>("Dic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("dic");

                    b.Property<int?>("DruhrizeniId")
                        .HasColumnType("int")
                        .HasColumnName("druhrizeni_id");

                    b.Property<int?>("DruhujId")
                        .HasColumnType("int")
                        .HasColumnName("druhuj_id");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<int?>("FormaId")
                        .HasColumnType("int")
                        .HasColumnName("forma_id");

                    b.Property<string>("Ico")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ico");

                    b.Property<int?>("IsektorId")
                        .HasColumnType("int")
                        .HasColumnName("isektor_id");

                    b.Property<int?>("KapitolaId")
                        .HasColumnType("int")
                        .HasColumnName("kapitola_id");

                    b.Property<int?>("KatobyvId")
                        .HasColumnType("int")
                        .HasColumnName("katobyv_id");

                    b.Property<int?>("KodPou")
                        .HasColumnType("int")
                        .HasColumnName("kod_pou");

                    b.Property<int?>("KodRp")
                        .HasColumnType("int")
                        .HasColumnName("kod_rp");

                    b.Property<DateTime?>("Konecplat")
                        .HasColumnType("datetime2")
                        .HasColumnName("konecplat");

                    b.Property<string>("Kraj")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("kraj");

                    b.Property<int?>("NaceId")
                        .HasColumnType("int")
                        .HasColumnName("nace_id");

                    b.Property<string>("NutsId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nuts_id");

                    b.Property<string>("Obec")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("obec");

                    b.Property<int?>("Pocob")
                        .HasColumnType("int")
                        .HasColumnName("pocob");

                    b.Property<int?>("PoddruhujId")
                        .HasColumnType("int")
                        .HasColumnName("poddruhuj_id");

                    b.Property<string>("Psc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("psc");

                    b.Property<string>("Sidlo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("sidlo");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<int?>("StatId")
                        .HasColumnType("int")
                        .HasColumnName("stat_id");

                    b.Property<int?>("TyporgId")
                        .HasColumnType("int")
                        .HasColumnName("typorg_id");

                    b.Property<string>("UcjedNazev")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ucjed_nazev");

                    b.Property<string>("Ulice")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ulice");

                    b.Property<int?>("VeducId")
                        .HasColumnType("int")
                        .HasColumnName("veduc_id");

                    b.Property<int?>("ZdrojfinId")
                        .HasColumnType("int")
                        .HasColumnName("zdrojfin_id");

                    b.Property<int?>("ZpodmId")
                        .HasColumnType("int")
                        .HasColumnName("zpodm_id");

                    b.Property<string>("ZrizovatelIco")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("zrizovatel_ico");

                    b.Property<string>("Zuj")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("zuj");

                    b.ToTable("UcetniJednotka");
                });

            modelBuilder.Entity("HlidacStatu.Entities.UserOption", b =>
                {
                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pk")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Pk");

                    b.ToTable("UserOptions");
                });

            modelBuilder.Entity("HlidacStatu.Entities.Visit", b =>
                {
                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pk")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Channel")
                        .HasColumnType("int")
                        .HasColumnName("channel");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Page")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("page");

                    b.HasKey("Pk");

                    b.HasIndex(new[] { "Page", "Date" }, "IX_Visit_page_date");

                    b.ToTable("Visit");
                });

            modelBuilder.Entity("HlidacStatu.Entities.VwVypisFlat", b =>
                {
                    b.Property<string>("CountryCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("DatumZapisuOr")
                        .HasColumnType("date")
                        .HasColumnName("Datum_zapisu_OR");

                    b.Property<string>("Ico")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ICO");

                    b.Property<string>("Jmeno")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("JmenoFirmy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Mesto")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("Narozeni")
                        .HasColumnType("date");

                    b.Property<decimal?>("Podil")
                        .HasColumnType("decimal(18,9)")
                        .HasColumnName("podil");

                    b.Property<string>("PojmenovaniVazby")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Prijmeni")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Vazba")
                        .HasMaxLength(41)
                        .IsUnicode(false)
                        .HasColumnType("varchar(41)")
                        .HasColumnName("vazba");

                    b.Property<DateTime?>("VztahOsobyKFirmeDo")
                        .HasColumnType("date")
                        .HasColumnName("vztah_osoby_k_firme_Do");

                    b.Property<DateTime?>("VztahOsobyKFirmeOd")
                        .HasColumnType("date")
                        .HasColumnName("vztah_osoby_k_firme_Od");

                    b.ToView("vw_VypisFlat");
                });

            modelBuilder.Entity("HlidacStatu.Entities.WatchDog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("DataType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("dataType");

                    b.Property<DateTime?>("Expires")
                        .HasColumnType("datetime");

                    b.Property<int>("FocusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastSearched")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastSent")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LatestRec")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PeriodId")
                        .HasColumnType("int");

                    b.Property<int>("RunCount")
                        .HasColumnType("int");

                    b.Property<string>("SearchRawQuery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchTerm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SentCount")
                        .HasColumnType("int");

                    b.Property<int>("ShowPublic")
                        .HasColumnType("int");

                    b.Property<string>("SpecificContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("ToEmail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_WatchDog_UserId");

                    b.ToTable("WatchDog");
                });

            modelBuilder.Entity("HlidacStatu.Entities.ZkratkaStrany", b =>
                {
                    b.Property<string>("Ico")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ICO");

                    b.Property<string>("KratkyNazev")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Ico")
                        .HasName("PK__ZkratkaS__C497141E3346B980");

                    b.ToTable("ZkratkaStrany");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("HlidacStatu.Entities.InvoiceItem", b =>
                {
                    b.HasOne("HlidacStatu.Entities.Invoice", "IdInvoiceNavigation")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("IdInvoice")
                        .HasConstraintName("FK_InvoiceItems_Invoices")
                        .IsRequired();

                    b.Navigation("IdInvoiceNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("HlidacStatu.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("HlidacStatu.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HlidacStatu.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("HlidacStatu.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HlidacStatu.Entities.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");
                });
#pragma warning restore 612, 618
        }
    }
}
