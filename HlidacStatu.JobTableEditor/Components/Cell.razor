@using HlidacStatu.JobTableEditor.Data
@using Microsoft.AspNetCore.Components
@using HlidacStatu.DetectJobs

<td class="@cellStyle">
    <button @onclick="ColorChange" title="Změň typ" style="float: left"><i class="fad fa-exchange"></i></button>
    <span style="width:1px">&nbsp;</span>
    <button @onclick="CellShell.SetOriginalValue" title="Nastav původní hodnotu"><i class="far fa-undo"></i></button>
    <button @onclick="CellShell.SetMergedValue" title="Nastav předpočítanou hodnotu"><i class="far fa-brain"></i></button>
    
    <button @onclick="@(() => Swapper.Swap(this))" title="Prohoď hodnotu" style="float: right"><i class="@swapButtonStyle"></i></button>
    <input type="text" class="form-control" @bind="@CellShell.Value" />
    @if (!string.IsNullOrWhiteSpace(CellShell.Error))
    {
        <p class="text-danger">@CellShell.Error</p>
    }
</td>


@code {
    
    [Parameter]
    public CellShell CellShell { get; set; }
    
    [Parameter]
    public CellSwapper Swapper { get; set; }
    
    private string cellStyle;
    private string swapButtonStyle = "fas fa-retweet";

    protected override void OnInitialized()
    {
        SetCellStyle();
    }
    
    private void ColorChange()
    {
        CellShell.RotateType();
        SetCellStyle();
    }

    public void SetCellStyle()
    {
        cellStyle = CellShell.CellType switch 
        {
            InHtmlTables.Cell.GuessedCellType.Unknown => "",
            InHtmlTables.Cell.GuessedCellType.Position => "bg-primary bg-opacity-25",
            InHtmlTables.Cell.GuessedCellType.Price => "bg-success bg-opacity-25",
            InHtmlTables.Cell.GuessedCellType.PriceWithVAT => "bg-warning bg-opacity-25",
            _ => ""
            };
    }
    
    //+ validace pokud se při načtení tabulky liší (merged value vs original value)?

    public void Redraw(bool isMarked)
    {
        swapButtonStyle = isMarked ? "fas fa-retweet text-danger" : "fas fa-retweet";
        StateHasChanged();
    }

}