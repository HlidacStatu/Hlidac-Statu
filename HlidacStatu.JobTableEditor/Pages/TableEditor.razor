@page "/tableEditor"

@using HlidacStatu.JobTableEditor.Data
@using HlidacStatu.DetectJobs
@inject JobService JobService

<h1>Job editor</h1>

@if (table == null)
{
    <p>
        <button onclick="@LoadNewTable()">Load New Table</button>
    </p>
}
else
{
    <table class="table">
        <tbody>
        @foreach (var row in table.Cells)
        {
            <tr>
                @foreach (var cell in row)
                {
                    <td class="@cellStyle">
                        <button @onclick="@(() => ColorChange(cell))">⚙</button>
                        <input type="text" class="form-control" @bind="@cell.Value">
                    </td>
                }
            </tr>
        }
        </tbody>
    </table>

    <button onclick="@SaveTable()">Save changes</button>
}

@code {
    private SomeTable table;
    private string cellStyle;

    protected override async Task OnInitializedAsync()
    {
    //forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }

    private async Task LoadNewTable()
    {
        table = await JobService.GetNewTable();
    }

    private async Task SaveTable()
    {
        await JobService.SaveChanges(table);
    }

    private void ColorChange(CellShell cell)
    {
        cell.RotateType();

        cellStyle = cell.CellType switch 
        {
            InHtmlTables.Cell.GuessedCellType.Unknown => "",
            InHtmlTables.Cell.GuessedCellType.Position => "bg-primary",
            InHtmlTables.Cell.GuessedCellType.Price => "bg-success",
            InHtmlTables.Cell.GuessedCellType.PriceWithVAT => "bg-warning",
            _ => ""
        };
    }

}