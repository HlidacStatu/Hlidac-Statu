@using HlidacStatu.Ceny.Services
@model HlidacStatu.Ceny.Models.TableViewModel

@{
    var data = Model.Statistics.Where(m => !string.IsNullOrEmpty(m.Name)).OrderBy(x => x.Name);
    Models.JobStatistics baseRow = null;

    if (Model.CompareWithFirstLine && data.Count() > 1)
    {
        baseRow = data.First();
    }
}
<style>

</style>
<table class="table table-sm table-striped mt-4">
    <caption>ceny s DPH</caption>
    <thead>
        <tr>
            <th scope="col">@Model.FirstColumnName</th>
            <th scope="col" class="text-end">Dolní kvartil</th>
            <th scope="col" class="text-end">Medián</th>
            <th scope="col" class="text-end border-end">Horní kvartil</th>
            <th scope="col" class="text-end">Minimum</th>
            <th scope="col" class="text-end">Průměr</th>
            <th scope="col" class="text-end">Maximum</th>
            <th scope="col" class="text-end">Počet<br />smluv</th>
            @if (!Model.HideDodavatelCount)
            {
                <th scope="col" class="text-end">Počet<br />dodavatelů</th>
            }
            <th scope="col" class="text-end">Počet<br />cen</th>
        </tr>
        <tr>
            <th></th>
            <th class="align-middle border-start text-center border-end" colspan="3">
                <div class="middle-line left right">
                    <b style="color:black">&nbsp;Rozsah obvyklých cen&nbsp;</b>
                    @*<br/>@(Devmasters.TextUtil.ShortenText(Model.SubjectName,40))</b>*@
                </div>
            </th>

            <th class="align-middle text-center" colspan="@(Model.HideDodavatelCount ? 5: 6 )">
                <div class="middle-line left right">
                    &nbsp;Průměr a extrémy&nbsp;
                    @*<br/>@(Devmasters.TextUtil.ShortenText(Model.SubjectName,30))*@
                </div>
            </th>
        </tr>
    </thead>
    <tbody>
        
        @foreach (Models.JobStatistics row in data)
        {
            <tr>
                @if (string.IsNullOrEmpty(Model.LinkHref))
                {
                    <td scope="row">@row.Name</td>
                }
                else
                {
                    <td scope="row"><a href="@Model.LinkHref/@row.Name?@(Model.Key?.UrlDecodedParams)">@row.Name</a></td>
                }
                <td class="text-end number border-start">
                    <b>@row.DolniKvartil.ToString("N0")</b>
                    @if (Model.CompareWithFirstLine)
                    {
                        <div>@Html.Raw(Calc.PercentChangeHtml(baseRow.DolniKvartil, row.DolniKvartil))</div>

                    }
                </td>
                <td class="text-end number">
                    <b>@row.Median.ToString("N0")</b>
                    @if (Model.CompareWithFirstLine)
                    {
                        <div>@Html.Raw(Calc.PercentChangeHtml(baseRow.Median, row.Median))</div>
                    }
                </td>
                <td class="text-end number border-end">
                    <b>@row.HorniKvartil.ToString("N0")</b>
                    @if (Model.CompareWithFirstLine)
                    {
                        <div>@Html.Raw(Calc.PercentChangeHtml(baseRow.HorniKvartil, row.HorniKvartil))</div>
                    }
                </td>
                <td class="text-end number">
                    @row.Minimum.ToString("N0")
                </td>
                <td class="text-end number">
                    @row.Average.ToString("N0")
                </td>
                <td class="text-end number">
                    @row.Maximum.ToString("N0")
                </td>
                <td class="text-end number">@row.ContractCount</td>
                @if (!Model.HideDodavatelCount)
                {
                    <td class="text-end number">@row.SupplierCount</td>
                }
                <td class="text-end number">@row.PriceCount</td>
            </tr>
        }
    </tbody>
</table>
