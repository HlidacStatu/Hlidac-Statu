{"version":3,"file":"chart.js","sources":["../src/core/core.animator.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/controllers/controller.bar.js","../src/controllers/controller.bubble.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/core/core.adapters.ts","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import type {Chart, ChartConfiguration, ChartDataset} from '../types';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n}\n\ntype DatasetColorizer = (dataset: ChartDataset, i: number) => void;\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction createDefaultDatasetColorizer() {\n  return (dataset: ChartDataset, i: number) => {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n  };\n}\n\nfunction createDoughnutDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  };\n}\n\nfunction createPolarAreaDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  };\n}\n\nfunction getColorizer(type: string) {\n  if (type === 'doughnut' || type === 'pie') {\n    return createDoughnutDatasetColorizer();\n  } else if (type === 'polarArea') {\n    return createPolarAreaDatasetColorizer();\n  }\n  return createDefaultDatasetColorizer();\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n  },\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      type,\n      options: {elements},\n      data: {datasets}\n    } = chart.config as ChartConfiguration;\n\n    if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n      return;\n    }\n\n    const colorizer: DatasetColorizer = getColorizer(type);\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers';\nexport * from './core';\nexport * from './elements';\nexport * from './platform';\nexport * from './plugins';\nexport * from './scales';\n\nimport * as controllers from './controllers';\nimport * as elements from './elements';\nimport * as plugins from './plugins';\nimport * as scales from './scales';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"],"names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","grouped","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","animateRotate","animateScale","spacing","descriptors","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","getValueForPixel","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","merge","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","createDefaultDatasetColorizer","createDoughnutDatasetColorizer","createPolarAreaDatasetColorizer","getColorizer","containsColorsDefinitions","k","_args","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","enumerable","d","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"mappings":"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"}