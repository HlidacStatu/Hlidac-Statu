{"version":3,"file":"chart.umd.js","sources":["../src/helpers/helpers.core.ts","../src/helpers/helpers.math.ts","../src/helpers/helpers.collection.ts","../src/helpers/helpers.extras.ts","../src/core/core.animator.js","../node_modules/.pnpm/@kurkle+color@0.2.1/node_modules/@kurkle/color/dist/color.esm.js","../src/helpers/helpers.color.ts","../src/core/core.animations.defaults.js","../src/helpers/helpers.intl.ts","../src/core/core.ticks.js","../src/core/core.defaults.js","../src/core/core.layouts.defaults.js","../src/core/core.scale.defaults.js","../src/helpers/helpers.dom.ts","../src/helpers/helpers.canvas.js","../src/helpers/helpers.config.js","../src/helpers/helpers.curve.ts","../src/helpers/helpers.easing.ts","../src/helpers/helpers.interpolation.ts","../src/helpers/helpers.options.ts","../src/helpers/helpers.rtl.ts","../src/helpers/helpers.segment.js","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/core/core.adapters.ts","../src/controllers/controller.bar.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.bubble.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.umd.ts"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ActiveDataPoint, ChartEvent} from '../../types';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../../types/geometric';\nimport {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import {type ChartMeta, type PointElement} from '../../types';\n\nimport {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply<any, TArgs, void>(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import colorLib, {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {ChartArea, Scale} from '../../types';\nimport Chart from '../core/core.controller';\nimport {ChartEvent} from '../types';\nimport {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\nimport {ChartArea} from '../../types';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import type {Point} from '../../types/geometric';\nimport type {SplinePoint} from './helpers.curve';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {Point, toFontString} from './helpers.canvas';\nimport type {ChartArea, FontSpec} from '../../types';\nimport type {TRBL, TRBLCorners} from '../../types/geometric';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<P extends T, T extends object>(parentContext: P, context: T): P extends null ? T : P & T {\n  return Object.assign(Object.create(parentContext), context);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import type {Chart, ChartConfiguration, ChartDataset} from '../types';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n}\n\ntype DatasetColorizer = (dataset: ChartDataset, i: number) => void;\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction createDefaultDatasetColorizer() {\n  return (dataset: ChartDataset, i: number) => {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n  };\n}\n\nfunction createDoughnutDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  };\n}\n\nfunction createPolarAreaDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  };\n}\n\nfunction getColorizer(type: string) {\n  if (type === 'doughnut' || type === 'pie') {\n    return createDoughnutDatasetColorizer();\n  } else if (type === 'polarArea') {\n    return createPolarAreaDatasetColorizer();\n  }\n  return createDefaultDatasetColorizer();\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n  },\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      type,\n      options: {elements},\n      data: {datasets}\n    } = chart.config as ChartConfiguration;\n\n    if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n      return;\n    }\n\n    const colorizer: DatasetColorizer = getColorizer(type);\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\n/**\n * @namespace Chart\n */\nimport Chart from './core/core.controller';\n\nimport * as helpers from './helpers';\nimport _adapters from './core/core.adapters';\nimport Animation from './core/core.animation';\nimport animator from './core/core.animator';\nimport Animations from './core/core.animations';\nimport * as controllers from './controllers';\nimport DatasetController from './core/core.datasetController';\nimport Element from './core/core.element';\nimport * as elements from './elements/index';\nimport Interaction from './core/core.interaction';\nimport layouts from './core/core.layouts';\nimport * as platforms from './platform/index';\nimport * as plugins from './plugins';\nimport registry from './core/core.registry';\nimport Scale from './core/core.scale';\nimport * as scales from './scales';\nimport Ticks from './core/core.ticks';\n\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\n\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nexport default Chart;\n\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","this","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","colorLib","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","effects$1","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","freeze","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","interpolators","boolean","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","Chart$1","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","legend","generateLabels","fontColor","legendItem","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","angleLines","circular","pointLabels","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","pointPosition","getPointPositionForValue","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","hoverRadius","mouseX","mouseY","inXRange","inYRange","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","createDoughnutDatasetColorizer","createPolarAreaDatasetColorizer","containsColorsDefinitions","plugin_colors","_args","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale$1","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","_addedLabels","added","helpers","platforms"],"mappings":"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"}