
@using Devmasters
@using HlidacStatu.Entities
@using HlidacStatu.Lib.Web.UI
@using HlidacStatu.Repositories
@using HlidacStatu.Repositories.SharedModels
@using HlidacStatu.XLib.Render
@using PlatyUredniku.Models

@model HlidacStatu.Entities.PuOrganizace

@{

    string mainTag = Model.Tags.FirstOrDefault(t => PpRepo.MainTags.Contains(t.Tag))?.Tag;
    int rok = (int)ViewBag.rok;

    string ico = Model.Ico;
    Firma f = Firmy.Get(ico);
    ViewBag.Title = $"{f.Jmeno} ({rok})" ;

    var platy = await PpRepo.GetPlatyAsync(rok, true, ico);

}
@section breadcrumbs
{
    <ol class="breadcrumb">
        <li>
            <a asp-action="Index" asp-controller="Home">Platy</a>
        </li>
        <li><a asp-action="Index" asp-controller="Politici">Politici</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
}
@section Scripts
{
    <link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css" />
    <script type="text/javascript" charset="utf8"
            src="//cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script>
        function adjustDataTablesWidth() {
            $.fn.dataTable.tables({visible: true, api: true}).columns.adjust();
        }
    </script>
}

@{
    bool sectionBgSwitch = false;
    var neaktivniOrg = PuRepo.GetNeaktivniOrganizace().ToArray();
}

<section class="d-flex align-items-center justify-content-center @(sectionBgSwitch ? "alter-bg-color" : "")">
    <div class="container">


        <h2 class="pb-2 border-bottom">@Model.Nazev</h2>
        <p>
            IČO: <a href="https://www.hlidacstatu.cz/subjekt/@(Model.Ico)" target=”_blank”>
                @Model.Ico<i class="fa-solid fa-arrow-up-right-from-square"></i>
            </a> <br />
            Datová schránka: @Model.DS <br />
        </p>
        <div>
            @foreach (var tag in Model.Tags)
            {
                <hashtag tag="@tag.Tag"></hashtag>
            }
        </div>

        <div>
            @if (Model.PrijmyPolitiku.Any())
            {
                <div>
                    <partial name="Graphs/_AreaRangePlotPolitici"
                             model="@(new AreaRangeRenderOptions() { PrijmyPolitiku = Model.PrijmyPolitiku, CssHeight = "380" })" />
                </div>
            }
        </div>
    </div>
</section>

@{
    var prijmyPoLetech = Model.PrijmyPolitiku.GroupBy(p => p.Rok)
        .Select(m => new { Key = m.Key, Platy = m.OrderByDescending(o=>o.CelkovyRocniPlatVcetneOdmen).ThenBy(o=>$"{o.GetOsoba().PrijmeniJmeno()}").ToList() })
        .ToList();

    if (prijmyPoLetech.Any(m => m.Key == PpRepo.DefaultYear) == false)
    {
        prijmyPoLetech.Add(new { Key = PpRepo.DefaultYear, Platy = new List<PpPrijem>() });
    }

    prijmyPoLetech = prijmyPoLetech.OrderByDescending(pg => pg.Key).ToList();
}

@{
    sectionBgSwitch = !sectionBgSwitch;
}
<section class="d-flex justify-content-center  @(sectionBgSwitch ? "alter-bg-color" : "")">
    <div class="container">


        <h3>Přehled přijmů politiků</h3>
        <div class="nav flex-row nav-pills my-5" id="v-pills-tab" role="tablist">
            <button class="nav-link disabled" type="button" disabled="disabled">Rok</button>
            @{
                string classAttributesPrijemPolitika = "nav-link active";

                foreach (var prijemRok in prijmyPoLetech)
                {
                    <button class="@classAttributesPrijemPolitika"
                            id="year-@prijemRok.Key-tab"
                            data-bs-toggle="pill"
                            data-bs-target="#year-@prijemRok.Key"
                            type="button"
                            role="tab"
                            onclick="adjustDataTablesWidth()">
                        @prijemRok.Key
                    </button>

                    classAttributesPrijemPolitika = "nav-link";
                }
            }
        </div>
        <div class="tab-content width-75vp">
            @{
                classAttributesPrijemPolitika = "tab-pane width-75vp fade show active";

                foreach (var prijemGroup in prijmyPoLetech)
                {
                    <div class="@classAttributesPrijemPolitika" id="year-@prijemGroup.Key" role="tabpanel">
                        <script>
                            $(document).ready(function () {
                                $('#tblSum_politik_@prijemGroup.Key').DataTable(
                                    {
                                        'language': {
                                            'url': '//cdn.datatables.net/plug-ins/1.13.4/i18n/cs.json'
                                        },
                                        "searching": false,
                                        "paging": false,
                                        "ordering": true,
                                        "order": [],
                                        "info": false
                                    });
                            });
                        </script>

                        @if (prijemGroup.Platy.Count > 0)
                        {
                            <table class="table table-borderless table-hover" id="tblSum_politik_@prijemGroup.Key">
                                <thead>
                                <tr>
                                        <th colspan="5">
                                            <div class="p-3 mb-2 bg-warning text-dark">Jde o příjmy politiků pouze od @f.Jmeno. Celkové příjmy politiků najdete u každého politika zvlášť.
                                            </div>
                                        </th>
                                </tr>
                                    <tr>
                                        <th>Jméno politika</th>
                                        <th class="text-end">Celkový roční osobní příjem</th>
                                        <th class="text-end">Ostatní náhrady za rok</th>
                                        <th class="text-end">Přepočtený hrubý měsíční příjem včetně odměn</th>
                                        <th style="max-width:20rem">Nefinanční benefity</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var prijemPolitika in prijemGroup.Platy)
                                    {
                                        var politik = OsobaRepo.GetByNameId(prijemPolitika.Nameid);
                                        <tr>
                                            <td>
                                                <a href="/politici/@prijemPolitika.Nameid">@politik.FullName()</a>
                                            </td>
                                            <td data-order="@(HlidacStatu.Util.RenderData.OrderValueFormat(prijemPolitika.CelkovyRocniPlatVcetneOdmen))"
                                                class="number text-nowrap">
                                                @if (prijemPolitika.PocetMesicu < 12)
                                                {
                                                    <a href="#" class="link-danger me-2" data-bs-toggle="tooltip"
                                                       data-bs-title="Příjem je pouze za @Devmasters.Lang.CS.Plural.Get((long)prijemPolitika.PocetMesicu.Value, "jeden měsíc", "{0} měsíce", "{0} měsíců") a může obsahovat odstupné či jinou smluvní odměnu">
                                                        <i class="fa-solid fa-circle-info"></i>
                                                    </a>
                                                }

                                                @HlidacStatu.Util.RenderData.NicePriceHtml(prijemPolitika.CelkovyRocniPlatVcetneOdmen)
                                            </td>
                                            <td data-order="@(HlidacStatu.Util.RenderData.OrderValueFormat(prijemPolitika.CelkoveRocniNahrady))"
                                                class="number text-nowrap">
                                                @if (prijemPolitika.PocetMesicu < 12)
                                                {
                                                    <a href="#" class="link-danger me-2" data-bs-toggle="tooltip"
                                                       data-bs-title="Ostatní náhrady jsou pouze za @Devmasters.Lang.CS.Plural.Get((long)prijemPolitika.PocetMesicu.Value, "jeden měsíc", "{0} měsíce", "{0} měsíců")">
                                                        <i class="fa-solid fa-circle-info"></i>
                                                    </a>
                                                }

                                                @Html.Raw(HlidacStatu.Util.RenderData.NicePriceHtml(prijemPolitika.CelkoveRocniNahrady))
                                            </td>
                                            <td data-order="@(HlidacStatu.Util.RenderData.OrderValueFormat(prijemPolitika.HrubyMesicniPlatVcetneOdmen))"
                                                class="number text-nowrap">
                                                @if (prijemPolitika.PocetMesicu < 12)
                                                {
                                                    <a href="#" class="link-danger me-2" data-bs-toggle="tooltip"
                                                       data-bs-title="Příjem je pouze za @Devmasters.Lang.CS.Plural.Get((long)prijemPolitika.PocetMesicu.Value, "jeden měsíc", "{0} měsíce", "{0} měsíců") a může obsahovat odstupné či jinou smluvní odměnu">
                                                        <i class="fa-solid fa-circle-info"></i>
                                                    </a>
                                                }
                                                @HlidacStatu.Util.RenderData.NicePrice(prijemPolitika.HrubyMesicniPlatVcetneOdmen)
                                            </td>
                                            <td>@prijemPolitika.NefinancniBonus</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else if (neaktivniOrg.Any(m => m.Item1 == Model.DS))
                        {
                            <div class="alert alert-warning" role="alert">
                                <h4 class="alert-heading">Platy pro rok @prijemGroup.Key jsme nedostali</h4>
                                <p>@Model.Nazev je zaniklá organizace anebo v likvidaci.</p>
                            </div>
                        }
                        else if (!Model.HasMetadataForYear(prijemGroup.Key, PuOrganizaceMetadata.TypMetadat.PlatyPolitiku))
                        {
                            <div class="alert alert-info" role="alert">
                                <h4 class="alert-heading">V roce @prijemGroup.Key jsme o data nežádali.</h4>
                                <p>Této organizace jsme se na data zapomněli zeptat</p>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-danger" role="alert">
                                <h4 class="alert-heading">Platy pro rok @prijemGroup.Key jsme nedostali</h4>
                                <p>
                                    Požadované informace o platech a odměnách za rok 2023 jsme
                                    od @Model.Nazev nedostali.
                                </p>
                                <hr>
                                <p class="mb-0">
                                    V souladu se zákonem o právu na informace se ptáme na platy nejvyššího představitele
                                    organizace a nejvyššího managementu pod ním.
                                </p>
                            </div>
                        }

                    </div>
                    classAttributesPrijemPolitika = "tab-pane width-75vp";
                }
            }
        </div>
    </div>

</section>

@{
    string[] compareTo = Model.CZISCO?.Split(new char[] { ',', ';', ' ' }, StringSplitOptions.RemoveEmptyEntries);
}
@if (compareTo?.Length > 0 && Model.Platy != null && Model.Platy.Any())
{
    sectionBgSwitch = !sectionBgSwitch;
    <section class="d-flex justify-content-center @(sectionBgSwitch ? "alter-bg-color" : "")">
        <div class="container">
            <h3>Porovnání vývoje platů vzhledem k vybraným kategoriím pracovníků</h3>

            @{
                //AreaRangePlot uradData =
                List<AreaRangePlot> data = new List<AreaRangePlot>();
                data.Add(AreaRangePlot.ToAreaRangePlotWithPrumer(Model.Platy, Model.Nazev));
                if (Model.Nazev.Contains("Ministerstvo"))
                {
                    data[0].ExtraTitle = "Ministr/yně";
                }
                else if (Model.Platy.Any(m => m.JeHlavoun == true))
                {
                    data[0].ExtraTitle = Model.Platy.Where(m => m.JeHlavoun == true).OrderByDescending(m => m.Rok).First().NazevPozice;
                }
                else
                {
                    data[0].ExtraTitle = "Nejvyšší představitel/ka organizace";
                }

                foreach (var compItem in compareTo)
                {
                    var d = await PuRepo.LoadVydelekForZamestnaniAsync(compItem, HlidacStatu.Entities.PuVydelek.VydelekSektor.StatSamosprava);
                    if (d?.Any() == true)
                    {
                        var dName = d.OrderByDescending(m => m.Rok).Select(m => m.FullNazevKategorieZamestnani()).FirstOrDefault().ShortenMe(140);
                        data.Add(AreaRangePlot.ToAreaRangePlotWithPrumer(d, dName));
                    }

                    d = await PuRepo.LoadVydelekForZamestnaniAsync(compItem, HlidacStatu.Entities.PuVydelek.VydelekSektor.Soukromy);
                    if (d?.Any() == true)
                    {
                        var dName = d.OrderByDescending(m => m.Rok).Select(m => m.FullNazevKategorieZamestnani()).FirstOrDefault().ShortenMe(140);
                        data.Add(AreaRangePlot.ToAreaRangePlotWithPrumer(d, dName));
                    }
                }

                //calculate height
                var height = 430
                + data.Count() * 12 //pul radku na jednu serii
                + (data.Count(m => m.Title.Length > 80) * 17); //dlouhe nazvy serii pocitej na cely radek

                AreaRangeCompareRenderOptions chartModel = new AreaRangeCompareRenderOptions()
                {
                    CssHeight = height.ToString(),
                    Data = data.ToArray(),
                    Title = "Porovnání s jinými oblastmi trhu"
                };
                <partial name="Graphs/_AreaRangeComparePlot" model="@chartModel" />
            }

        </div>
    </section>
}


@{
    sectionBgSwitch = !sectionBgSwitch;
}
<section class="d-flex justify-content-center  @(sectionBgSwitch ? "alter-bg-color" : "")">
    <div class="container">
        <h3>Open data</h3>
        <p>Open data s kompletními platy pro <b>@(Model.Nazev)</b> za všechny dostupné roky</p>
        <partial name="ExportModal"
                 model="@(new ExportModalViewModel() { DatovaSchranka = Model.DS, Titulek = $"Export dat pro {Model.Nazev}", NazevTlacitka = $"Open data pro {Model.Nazev}" })" />

    </div>
</section>


<div class="pb-3"></div>
