@model AreaRangeCompareRenderOptions

@using HlidacStatu.Entities.Entities
@using MathNet.Numerics.Statistics
@using PlatyUredniku.Models

@{
    string chartId = HlidacStatu.Util.Consts.Rnd.Next(999).ToString("000");


    PlatyUredniku.Models.AreaRangePlot chartData1 = Model.Data1;
    PlatyUredniku.Models.AreaRangePlot chartData2 = Model.Data2;

}

@if (chartData1 == null)
{
    if (!string.IsNullOrEmpty(Model.TextForNoData))
    {
        <div>@Model.TextForNoData</div>
    }

    return;
}
<figure >
    <div id="chart-container-@chartId"></div>

    <div class="text-muted">Rozsah průměrných manažerských měsíčních platů vedení organizace (včetně odměn) přepočtených z ročního příjmu za sledované období</div>

</figure>

<script>
    Highcharts.chart('chart-container-@(chartId)', {
        chart: {
            height: '@Model.CssHeight' , // 16:6 ratio
            width: null // 16:6 ratio
        },
        title: {
            text: '@Html.Raw(Model.Data1.Title)',
            align: 'left'
        },
        subtitle: {
            text: '@Html.Raw(Model.Data1.Subtitle)',
            align: 'left'
        },
        xAxis: {
            type: 'datetime'
        },
        yAxis: {
            title: {
                text: 'Výše platu'
            },
            labels: {
                format: '{value:,.0f} Kč'
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true,
            valueSuffix: ' Kč'
        },
        plotOptions: {
            series: {
                pointStart: Date.UTC(@Model.Data1.FirstYear, 1, 1),
                pointIntervalUnit: 'year'
            }
        },
        series: [
            {
                name: '@Html.Raw(Model.Data1.ExtraTitle)',
                color: Highcharts.getOptions().colors[0],
                data: @Model.Data1.DrawExtras(),
                zIndex: 1
            }, {
                name: '@Html.Raw(Model.Data1.MinMaxTitle)',
                data: @Model.Data1.DrawMinMaxes(),
                type: 'arearange',
                lineWidth: 0,
                linkedTo: ':previous',
                color: Highcharts.getOptions().colors[0],
                fillOpacity: 0.3,
                zIndex: 0,
                marker: {
                    enabled: false
                }
            },
            //second to compare
            {
                name: '@Html.Raw(Model.Data2.ExtraTitle)',
                color: Highcharts.getOptions().colors[3],
                data: @Model.Data2.DrawExtras(),
                zIndex: 1
            },  {
                name: '@Html.Raw(Model.Data2.MinMaxTitle)',
                data: @Model.Data2.DrawMinMaxes(),
                type: 'arearange',
                lineWidth: 0,
                linkedTo: ':previous',
                color: Highcharts.getOptions().colors[3],
                fillOpacity: 0.3,
                zIndex: 0,
                marker: {
                    enabled: false
                }
            }
        ]
    });

</script>

