@model AreaRangeCompareRenderOptions

@using Devmasters
@using HlidacStatu.Entities.Entities
@using MathNet.Numerics.Statistics
@using PlatyUredniku.Models

@{
    string chartId = HlidacStatu.Util.Consts.Rnd.Next(999).ToString("000");

    int count = 0;

}

@if (Model.Data == null || Model.Data.Count() == 0)
{
    if (!string.IsNullOrEmpty(Model.TextForNoData))
    {
        <div>@Html.Raw(Model.TextForNoData)</div>
    }

    return;
}


<figure>
    @if (!string.IsNullOrEmpty(Model.Subtitle))
    {
        <p class="text-body-emphasis">@Model.Subtitle</p>
    }
    <div id="chart-container-@chartId"></div>

    @if (!string.IsNullOrEmpty(Model.Footer))
    {
        <p class="text-muted fs-6">Zdroj: <a href="https://www.ispv.cz">Informačního systém o průměrném výdělku</a></p>
    }
    @if (Model.Data.Length > Model.EnableNumSeries)
    {
        <div class="alert alert-info" role="alert">
            Ve spodní části grafu můžete zapnou a vypnout další skupiny platů pro srovnání. Stačí kliknout na její název.
        </div>
        
    }
    <p class="text-muted">
        V grafu je porovnání platového rozmezí jednotlivých skupin pracovníků v čase. 
        Každá skupina pracovníků je rozlišena barvou a zobrazujeme pro každou rozsah platů mezi <abbr title="10 % platů ze vzorku je nižších a 90 vyšších, než tato hodnota"  class="fw-bold">1. decilem</abbr> 
        a <abbr title="90 % platů ze vzorku je nižších a 10% vyšších, než tato hodnota">9. decilem</abbr> platů.
        <br />
        Uvedené údaje doplňuje <b>@Model.Data.First().ExtraTitle</b> platů v daném roce.
    </p>

</figure>

<script>
    Highcharts.chart('chart-container-@(chartId)', {
        chart: {
            height: '@Model.CssHeight' , // 16:6 ratio
            width: null // 16:6 ratio
        },
        title: {
            text: '@Html.Raw(Model.Data.First().Title)',
            align: 'left'
        },
        subtitle: {
            text: '@Html.Raw(Model.Data.First().Subtitle)',
            align: 'left'
        },
        xAxis: {
            type: 'datetime',
            crosshair: {
                width: 2,
                color: '#c0c0c0'
            }
        },
        yAxis: {
            title: {
                text: 'Výše platu'
            },
            labels: {
                format: '{value:,.0f} Kč'
            }
        },
        tooltip: {
            shared: true,
            valueSuffix: ' Kč'
        },
        legend: {
            enabled: true,
            labelFormatter: function () {
                return this.userOptions.categoryname;
            }
        },
        plotOptions: {
            series: {
                pointIntervalUnit: 'year',
                marker: {
                    radius:2,
                    states: {
                        hover: {
                            radius: 2,
                            fillColor:"#303030",
                            lineColor:"#303030"
                        },
                        select: {
                            enabled: false
                        }
                    }
                }
            }
        },
        series: [
            @for (int i = 0; i < Model.Data.Length; i++)
            {
                count++;
                bool show = count <= Model.EnableNumSeries;
                var s = Model.Data[i];
                bool last = (i == Model.Data.Length - 1);
                <text>
                    {
                        name: '@Html.Raw(s.ExtraTitle)',
                        categoryname: '@Html.Raw(s.Title.ShortenMe(140))',
                        color: Highcharts.getOptions().colors[@(i*1)],
                        data: @s.DrawExtras(),
                        type: 'spline',
                        zIndex: 1,
                        visible: @(show ? "true" : "false")
                    }, {
                        name: '@Html.Raw(s.MinMaxTitle)',
                        data: @s.DrawMinMaxes(),
                        type: 'arearange',
                        lineWidth: 1,
                        dashStyle: 'shortdot',
                        //lineColor: new Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0.3), //.get('rgba'),
                        linkedTo: ':previous',
                        color: Highcharts.getOptions().colors[@(i*1)],
                        fillOpacity: 0.3,
                        zIndex: 0,
                        visible: @(show ? "true" : "false"),
                        marker: {
                            enabled: false
                        }
                    }
                </text>
                @if (!last)
                {
                    <text>,</text>
                }
            }
        ]
    });

</script>

