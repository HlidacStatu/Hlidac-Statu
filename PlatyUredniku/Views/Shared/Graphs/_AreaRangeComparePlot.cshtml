@model AreaRangeCompareRenderOptions

@using Devmasters
@using HlidacStatu.Entities.Entities
@using MathNet.Numerics.Statistics
@using PlatyUredniku.Models

@{
    string chartId = HlidacStatu.Util.Consts.Rnd.Next(999).ToString("000");



}

@if (Model.Data == null || Model.Data.Count() == 0)
{
    if (!string.IsNullOrEmpty(Model.TextForNoData))
    {
        <div>@Model.TextForNoData</div>
    }

    return;
}


<figure>
    <div id="chart-container-@chartId"></div>

    <div class="text-muted">Porovnání 1. decilu, mediánu a 9. decilu platů uvedených pracovních skupin</div>

</figure>

<script>
    Highcharts.chart('chart-container-@(chartId)', {
        chart: {
            height: '@Model.CssHeight' , // 16:6 ratio
            width: null // 16:6 ratio
        },
        title: {
            text: '@Html.Raw(Model.Data.First().Title)',
            align: 'left'
        },
        subtitle: {
            text: '@Html.Raw(Model.Data.First().Subtitle)',
            align: 'left'
        },
        xAxis: {
            type: 'datetime'
        },
        yAxis: {
            title: {
                text: 'Výše platu'
            },
            labels: {
                format: '{value:,.0f} Kč'
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true,
            valueSuffix: ' Kč'
        },
        legend: {
            enabled: true,
            labelFormatter: function () {
                return this.userOptions.categoryname;
            }
        },
        plotOptions: {
@*            series: {
                pointStart: Date.UTC(@Model.Data1.FirstYear, 1, 1),
                pointIntervalUnit: 'year'
            }
*@
        },
        series: [
            @for (int i = 0; i < Model.Data.Length; i++)
            {
                var s = Model.Data[i];
                bool last = (i == Model.Data.Length - 1);
                <text>
                    {
                        name: '@Html.Raw(s.ExtraTitle)',
                        categoryname: '@Html.Raw(s.Title.ShortenMe(140))',
                        color: Highcharts.getOptions().colors[@(i*1)],
                        data: @s.DrawExtras(),
                        type: 'spline',
                        zIndex: 1
                    }, {
                        name: '@Html.Raw(s.MinMaxTitle)',
                        data: @s.DrawMinMaxes(),
                        type: 'arearange',
                        lineWidth: 1,
                        linkedTo: ':previous',
                        color: Highcharts.getOptions().colors[@(i*1)],
                        fillOpacity: 0.3,
                        zIndex: 0,
                        marker: {
                            enabled: false
                        }
                    }
                </text>
                @if (!last)
                {
                    <text>,</text>
                }
            }
        ]
    });

</script>

