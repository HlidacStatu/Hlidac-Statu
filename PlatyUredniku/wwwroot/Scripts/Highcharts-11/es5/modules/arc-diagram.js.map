{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.1 (2024-04-04)\n *\n * Arc diagram module\n *\n * (c) 2021 Piotr Madej\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/arc-diagram', ['highcharts', 'highcharts/modules/sankey'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/ArcDiagram/ArcDiagramPoint.js', [_modules['Series/NodesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (NodesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  Arc diagram module\n         *\n         *  (c) 2018-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var SankeyPoint = SeriesRegistry.seriesTypes.sankey.prototype.pointClass;\n        var extend = U.extend;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var ArcDiagramPoint = /** @class */ (function (_super) {\n            __extends(ArcDiagramPoint, _super);\n            function ArcDiagramPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            ArcDiagramPoint.prototype.isValid = function () {\n                // No null points here\n                return true;\n            };\n            return ArcDiagramPoint;\n        }(SankeyPoint));\n        extend(ArcDiagramPoint.prototype, {\n            setState: NodesComposition.setNodeState\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ArcDiagramPoint;\n    });\n    _registerModule(_modules, 'Series/ArcDiagram/ArcDiagramSeries.js', [_modules['Series/ArcDiagram/ArcDiagramPoint.js'], _modules['Series/Sankey/SankeyColumnComposition.js'], _modules['Core/Series/Series.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js']], function (ArcDiagramPoint, SankeyColumnComposition, Series, SeriesRegistry, SVGRenderer, U) {\n        /* *\n         *\n         *  Arc diagram module\n         *\n         *  (c) 2021 Piotr Madej, Grzegorz Blachli≈Ñski\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var __rest = (this && this.__rest) || function (s, e) {\n            var t = {};\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                t[p] = s[p];\n            if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n                for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                        t[p[i]] = s[p[i]];\n                }\n            return t;\n        };\n        var symbols = SVGRenderer.prototype.symbols;\n        var _a = SeriesRegistry.seriesTypes, ColumnSeries = _a.column, SankeySeries = _a.sankey;\n        var extend = U.extend, merge = U.merge, pick = U.pick, relativeLength = U.relativeLength;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.arcdiagram\n         *\n         * @augments Highcharts.seriesTypes.sankey\n         */\n        var ArcDiagramSeries = /** @class */ (function (_super) {\n            __extends(ArcDiagramSeries, _super);\n            function ArcDiagramSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Create node columns by analyzing the nodes and the relations between\n             * incoming and outgoing links.\n             * @private\n             */\n            ArcDiagramSeries.prototype.createNodeColumns = function () {\n                var _this = this;\n                var series = this, chart = series.chart, \n                // Column needs casting, to much methods required at the same time\n                column = SankeyColumnComposition.compose([], series);\n                column.sankeyColumn.maxLength = chart.inverted ?\n                    chart.plotHeight : chart.plotWidth;\n                // Get the translation factor needed for each column to fill up the plot\n                // height\n                column.sankeyColumn.getTranslationFactor = function (series) {\n                    var nodes = column.slice(), minLinkWidth = _this.options.minLinkWidth || 0;\n                    var skipPoint, factor = 0, i, radius, maxRadius = 0, scale = 1, additionalSpace = 0, remainingWidth = (chart.plotSizeX || 0) -\n                        (series.options.marker &&\n                            series.options.marker.lineWidth || 0) -\n                        (column.length - 1) *\n                            series.nodePadding;\n                    // Because the minLinkWidth option doesn't obey the direct\n                    // translation, we need to run translation iteratively, check node\n                    // heights, remove those nodes affected by minLinkWidth, check\n                    // again, etc.\n                    while (column.length) {\n                        factor = remainingWidth / column.sankeyColumn.sum();\n                        skipPoint = false;\n                        i = column.length;\n                        while (i--) {\n                            radius = (column[i].getSum()) * factor * scale;\n                            var plotArea = Math.min(chart.plotHeight, chart.plotWidth);\n                            if (radius > plotArea) {\n                                scale = Math.min(plotArea / radius, scale);\n                            }\n                            else if (radius < minLinkWidth) {\n                                column.splice(i, 1);\n                                remainingWidth -= minLinkWidth;\n                                radius = minLinkWidth;\n                                skipPoint = true;\n                            }\n                            additionalSpace += radius * (1 - scale) / 2;\n                            maxRadius = Math.max(maxRadius, radius);\n                        }\n                        if (!skipPoint) {\n                            break;\n                        }\n                    }\n                    // Re-insert original nodes\n                    column.length = 0;\n                    nodes.forEach(function (node) {\n                        node.scale = scale;\n                        column.push(node);\n                    });\n                    column.sankeyColumn.maxRadius = maxRadius;\n                    column.sankeyColumn.scale = scale;\n                    column.sankeyColumn.additionalSpace = additionalSpace;\n                    return factor;\n                };\n                column.sankeyColumn.offset = function (node, factor) {\n                    var equalNodes = node.series.options.equalNodes, nodePadding = series.nodePadding, maxRadius = Math.min(chart.plotWidth, chart.plotHeight, (column.sankeyColumn.maxLength || 0) /\n                        series.nodes.length - nodePadding);\n                    var offset = column.sankeyColumn.additionalSpace || 0, totalNodeOffset;\n                    for (var i = 0; i < column.length; i++) {\n                        var sum = column[i].getSum() *\n                            (column.sankeyColumn.scale || 0);\n                        var width = equalNodes ?\n                            maxRadius :\n                            Math.max(sum * factor, series.options.minLinkWidth || 0);\n                        if (sum) {\n                            totalNodeOffset = width + nodePadding;\n                        }\n                        else {\n                            // If node sum equals 0 nodePadding is missed #12453\n                            totalNodeOffset = 0;\n                        }\n                        if (column[i] === node) {\n                            return {\n                                relativeLeft: offset + relativeLength(node.options.offset || 0, totalNodeOffset)\n                            };\n                        }\n                        offset += totalNodeOffset;\n                    }\n                };\n                // Add nodes directly to the column right after it's creation\n                series.nodes.forEach(function (node) {\n                    node.column = 0;\n                    column.push(node);\n                });\n                return [column];\n            };\n            /**\n             * Run translation operations for one link.\n             * @private\n             */\n            ArcDiagramSeries.prototype.translateLink = function (point) {\n                var _a, _b;\n                var series = this, fromNode = point.fromNode, toNode = point.toNode, chart = this.chart, translationFactor = series.translationFactor, pointOptions = point.options, seriesOptions = series.options, linkWeight = pick(pointOptions.linkWeight, seriesOptions.linkWeight, Math.max((point.weight || 0) *\n                    translationFactor *\n                    fromNode.scale, (series.options.minLinkWidth || 0))), centeredLinks = point.series.options.centeredLinks, nodeTop = fromNode.nodeY;\n                var getX = function (node, fromOrTo) {\n                    var linkLeft = ((node.offset(point, fromOrTo) || 0) *\n                        translationFactor);\n                    var x = Math.min(node.nodeX + linkLeft, \n                    // Prevent links from spilling below the node (#12014)\n                    node.nodeX + (node.shapeArgs && node.shapeArgs.height || 0) - linkWeight);\n                    return x;\n                };\n                var fromX = centeredLinks ?\n                    fromNode.nodeX +\n                        ((fromNode.shapeArgs.height || 0) - linkWeight) / 2 :\n                    getX(fromNode, 'linksFrom'), toX = centeredLinks ? toNode.nodeX +\n                    ((toNode.shapeArgs.height || 0) - linkWeight) / 2 :\n                    getX(toNode, 'linksTo'), bottom = nodeTop;\n                if (fromX > toX) {\n                    _a = [toX, fromX], fromX = _a[0], toX = _a[1];\n                }\n                if (seriesOptions.reversed) {\n                    _b = [toX, fromX], fromX = _b[0], toX = _b[1];\n                    bottom = (chart.plotSizeY || 0) - bottom;\n                }\n                point.shapeType = 'path';\n                point.linkBase = [\n                    fromX,\n                    fromX + linkWeight,\n                    toX,\n                    toX + linkWeight\n                ];\n                var linkRadius = ((toX + linkWeight - fromX) / Math.abs(toX + linkWeight - fromX)) * pick(seriesOptions.linkRadius, Math.min(Math.abs(toX + linkWeight - fromX) / 2, fromNode.nodeY - Math.abs(linkWeight)));\n                point.shapeArgs = {\n                    d: [\n                        ['M', fromX, bottom],\n                        [\n                            'A',\n                            (toX + linkWeight - fromX) / 2,\n                            linkRadius,\n                            0,\n                            0,\n                            1,\n                            toX + linkWeight,\n                            bottom\n                        ],\n                        ['L', toX, bottom],\n                        [\n                            'A',\n                            (toX - fromX - linkWeight) / 2,\n                            linkRadius - linkWeight,\n                            0,\n                            0,\n                            0,\n                            fromX + linkWeight,\n                            bottom\n                        ],\n                        ['Z']\n                    ]\n                };\n                point.dlBox = {\n                    x: fromX + (toX - fromX) / 2,\n                    y: bottom - linkRadius,\n                    height: linkWeight,\n                    width: 0\n                };\n                // And set the tooltip anchor in the middle\n                point.tooltipPos = chart.inverted ? [\n                    (chart.plotSizeY || 0) - point.dlBox.y - linkWeight / 2,\n                    (chart.plotSizeX || 0) - point.dlBox.x\n                ] : [\n                    point.dlBox.x,\n                    point.dlBox.y + linkWeight / 2\n                ];\n                // Pass test in drawPoints\n                point.y = point.plotY = 1;\n                point.x = point.plotX = 1;\n                if (!point.color) {\n                    point.color = fromNode.color;\n                }\n            };\n            /**\n             * Run translation operations for one node.\n             * @private\n             */\n            ArcDiagramSeries.prototype.translateNode = function (node, column) {\n                var series = this, translationFactor = series.translationFactor, chart = series.chart, maxNodesLength = chart.inverted ?\n                    chart.plotWidth : chart.plotHeight, options = series.options, maxRadius = Math.min(chart.plotWidth, chart.plotHeight, maxNodesLength / node.series.nodes.length - this.nodePadding), sum = node.getSum() * (column.sankeyColumn.scale || 0), equalNodes = options.equalNodes, nodeHeight = equalNodes ?\n                    maxRadius :\n                    Math.max(sum * translationFactor, this.options.minLinkWidth || 0), crisp = Math.round(options.marker &&\n                    options.marker.lineWidth || 0) % 2 / 2, nodeOffset = column.sankeyColumn.offset(node, translationFactor), fromNodeLeft = Math.floor(pick(nodeOffset && nodeOffset.absoluteLeft, ((column.sankeyColumn.left(translationFactor) || 0) +\n                    (nodeOffset && nodeOffset.relativeLeft || 0)))) + crisp, markerOptions = merge(options.marker, node.options.marker), symbol = markerOptions.symbol, markerRadius = markerOptions.radius, top = parseInt(options.offset, 10) *\n                    ((chart.inverted ?\n                        chart.plotWidth : chart.plotHeight) - (Math.floor(this.colDistance * (node.column || 0) +\n                        (markerOptions.lineWidth || 0) / 2) + crisp +\n                        (column.sankeyColumn.scale || 0) *\n                            (column.sankeyColumn.maxRadius || 0) / 2)) / 100;\n                node.sum = sum;\n                // If node sum is 0, don‚Äôt render the rect #12453\n                if (sum) {\n                    // Draw the node\n                    node.nodeX = fromNodeLeft;\n                    node.nodeY = top;\n                    var x = fromNodeLeft, width = node.options.width || options.width || nodeHeight, height = node.options.height || options.height || nodeHeight;\n                    var y = top;\n                    if (options.reversed) {\n                        y = (chart.plotSizeY || 0) - top;\n                        if (chart.inverted) {\n                            y = (chart.plotSizeY || 0) - top;\n                        }\n                    }\n                    if (this.mapOptionsToLevel) {\n                        // Calculate data label options for the point\n                        node.dlOptions = SankeySeries.getDLOptions({\n                            level: this.mapOptionsToLevel[node.level],\n                            optionsPoint: node.options\n                        });\n                    }\n                    // Pass test in drawPoints\n                    node.plotX = 1;\n                    node.plotY = 1;\n                    // Set the anchor position for tooltips\n                    node.tooltipPos = chart.inverted ? [\n                        (chart.plotSizeY || 0) - y - height / 2,\n                        (chart.plotSizeX || 0) - x - width / 2\n                    ] : [\n                        x + width / 2,\n                        y + height / 2\n                    ];\n                    node.shapeType = 'path';\n                    node.shapeArgs = {\n                        d: symbols[symbol || 'circle'](x, y - (markerRadius || height) / 2, markerRadius || width, markerRadius || height),\n                        width: markerRadius || width,\n                        height: markerRadius || height\n                    };\n                    node.dlBox = {\n                        x: x + width / 2,\n                        y: y,\n                        height: 0,\n                        width: 0\n                    };\n                }\n                else {\n                    node.dlOptions = {\n                        enabled: false\n                    };\n                }\n            };\n            // Networkgraph has two separate collecions of nodes and lines, render\n            // dataLabels for both sets:\n            ArcDiagramSeries.prototype.drawDataLabels = function () {\n                if (this.options.dataLabels) {\n                    var textPath = this.options.dataLabels.textPath;\n                    // Render node labels:\n                    ColumnSeries.prototype.drawDataLabels.call(this, this.nodes);\n                    // Render link labels:\n                    this.options.dataLabels.textPath =\n                        this.options.dataLabels.linkTextPath;\n                    ColumnSeries.prototype.drawDataLabels.call(this, this.data);\n                    // Restore nodes\n                    this.options.dataLabels.textPath = textPath;\n                }\n            };\n            ArcDiagramSeries.prototype.pointAttribs = function (point, \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            state) {\n                if (point && point.isNode) {\n                    var attrs = __rest(Series.prototype.pointAttribs\n                        .apply(this, arguments), []);\n                    return attrs;\n                }\n                return _super.prototype.pointAttribs.apply(this, arguments);\n            };\n            ArcDiagramSeries.prototype.markerAttribs = function (point) {\n                if (point.isNode) {\n                    return _super.prototype.markerAttribs.apply(this, arguments);\n                }\n                return {};\n            };\n            /**\n             *  Arc diagram series is a chart drawing style in which\n             *  the vertices of the chart are positioned along a line\n             *  on the Euclidean plane and the edges are drawn as a semicircle\n             *  in one of the two half-planes delimited by the line,\n             *  or as smooth curves formed by sequences of semicircles.\n             *\n             * @sample highcharts/demo/arc-diagram/\n             *         Arc Diagram\n             *\n             * @extends      plotOptions.sankey\n             * @since 10.0.0\n             * @product      highcharts\n             * @requires     modules/arc-diagram\n             * @exclude      curveFactor, connectEnds, connectNulls, colorAxis, colorKey,\n             *               dataSorting, dragDrop, getExtremesFromAll, nodeAlignment,\n             *               nodePadding, centerInCategory, pointInterval,\n             *               pointIntervalUnit, pointPlacement, pointStart,\n             *               relativeXValue, softThreshold, stack, stacking, step,\n             *               xAxis, yAxis\n             * @optionparent plotOptions.arcdiagram\n             */\n            ArcDiagramSeries.defaultOptions = merge(SankeySeries.defaultOptions, {\n                /**\n                 * The option to center links rather than position them one after\n                 * another\n                 *\n                 * @type    {boolean}\n                 * @since 10.0.0\n                 * @default false\n                 * @product highcharts\n                 */\n                centeredLinks: false,\n                /**\n                 * The radius of the link arc. If not set, series renders a semi-circle\n                 * between the nodes, except when overflowing the edge of the plot area,\n                 * in which case an arc touching the edge is rendered. If `linkRadius`\n                 * is set, an arc extending to the given value is rendered.\n                 *\n                 * @type    {number}\n                 * @since 10.0.0\n                 * @default undefined\n                 * @product highcharts\n                 * @apioption series.arcdiagram.linkRadius\n                 */\n                /**\n                 * The offset of an arc diagram nodes column in relation to the\n                 * `plotArea`. The offset equal to 50% places nodes in the center of a\n                 * chart. By default the series is placed so that the biggest node is\n                 * touching the bottom border of the `plotArea`.\n                 *\n                 * @type    {string}\n                 * @since 10.0.0\n                 * @default '100%'\n                 * @product highcharts\n                 * @apioption series.arcdiagram.offset\n                 */\n                offset: '100%',\n                /**\n                 * The global link weight, in pixels. If not set, width is calculated\n                 * per link, depending on the weight value.\n                 *\n                 * @sample highcharts/series-arcdiagram/link-weight\n                 *         Link weight\n                 *\n                 * @type    {number}\n                 * @since 10.0.0\n                 * @default undefined\n                 * @product highcharts\n                 * @apioption series.arcdiagram.linkWeight\n                 */\n                /**\n                 * Whether nodes with different values should have the same size. If set\n                 * to true, all nodes are calculated based on the `nodePadding` and\n                 * current `plotArea`. It is possible to override it using the\n                 * `marker.radius` option.\n                 *\n                 * @type    {boolean}\n                 * @since 10.0.0\n                 * @default false\n                 * @product highcharts\n                 */\n                equalNodes: false,\n                /**\n                 * Whether the series should be placed on the other side of the\n                 * `plotArea`.\n                 *\n                 * @type    {boolean}\n                 * @since 10.0.0\n                 * @default false\n                 * @product highcharts\n                 */\n                reversed: false,\n                /**\n                 * Options for the data labels appearing on top of the nodes and links.\n                 * For arc diagram charts, data labels are visible for the nodes by\n                 * default, but hidden for links. This is controlled by modifying the\n                 * `nodeFormat`, and the `format` that applies to links and is an empty\n                 * string by default.\n                 *\n                 * @declare Highcharts.SeriesArcDiagramDataLabelsOptionsObject\n                 *\n                 * @private\n                 */\n                dataLabels: {\n                    /**\n                     * Options for a _link_ label text which should follow link\n                     * connection. Border and background are disabled for a label that\n                     * follows a path.\n                     *\n                     * **Note:** Only SVG-based renderer supports this option. Setting\n                     * `useHTML` to true will disable this option.\n                     *\n                     * @extends plotOptions.networkgraph.dataLabels.linkTextPath\n                     * @since 10.0.0\n                     */\n                    linkTextPath: {\n                        /**\n                         * @type    {Highcharts.SVGAttributes}\n                         * @default {\"startOffset\":\"25%\"}\n                         */\n                        attributes: {\n                            /**\n                             * @ignore-option\n                             */\n                            startOffset: '25%'\n                        }\n                    }\n                },\n                /**\n                 * @extends   plotOptions.series.marker\n                 * @excluding enabled, enabledThreshold, height, width\n                 */\n                marker: {\n                    symbol: 'circle',\n                    fillOpacity: 1,\n                    lineWidth: 0,\n                    states: {}\n                }\n            });\n            return ArcDiagramSeries;\n        }(SankeySeries));\n        extend(ArcDiagramSeries.prototype, {\n            orderNodes: false\n        });\n        ArcDiagramSeries.prototype.pointClass = ArcDiagramPoint;\n        SeriesRegistry.registerSeriesType('arcdiagram', ArcDiagramSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An `arcdiagram` series. If the [type](#series.arcdiagram.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.arcdiagram\n         * @exclude   dataSorting, boostThreshold, boostBlending, curveFactor,\n         *            connectEnds, connectNulls, colorAxis, colorKey, dataSorting,\n         *            dragDrop, getExtremesFromAll, nodePadding, centerInCategory,\n         *            pointInterval, pointIntervalUnit, pointPlacement,\n         *            pointStart, relativeXValue, softThreshold, stack,\n         *            stacking, step, xAxis, yAxis\n         * @product   highcharts\n         * @requires  modules/sankey\n         * @requires  modules/arc-diagram\n         * @apioption series.arcdiagram\n         */\n        /**\n         * @extends   plotOptions.series.marker\n         * @excluding enabled, enabledThreshold, height, radius, width\n         * @apioption series.arcdiagram.marker\n         */\n        /**\n         * @type      {Highcharts.SeriesArcDiagramDataLabelsOptionsObject|Array<Highcharts.SeriesArcDiagramDataLabelsOptionsObject>}\n         * @product   highcharts\n         * @apioption series.arcdiagram.data.dataLabels\n         */\n        /**\n         * A collection of options for the individual nodes. The nodes in an arc diagram\n         * are auto-generated instances of `Highcharts.Point`, but options can be\n         * applied here and linked by the `id`.\n         *\n         * @extends   series.sankey.nodes\n         * @type      {Array<*>}\n         * @product   highcharts\n         * @excluding column, level\n         * @apioption series.arcdiagram.nodes\n         */\n        /**\n         * Individual data label for each node. The options are the same as the ones for\n         * [series.arcdiagram.dataLabels](#series.arcdiagram.dataLabels).\n         *\n         * @type\n         * {Highcharts.SeriesArcDiagramDataLabelsOptionsObject|Array<Highcharts.SeriesArcDiagramDataLabelsOptionsObject>}\n         *\n         * @apioption series.arcdiagram.nodes.dataLabels\n         */\n        /**\n         * Individual data label for each node. The options are the same as the ones for\n         * [series.arcdiagram.dataLabels](#series.arcdiagram.dataLabels).\n         *\n         * @type\n         * {Highcharts.SeriesArcDiagramDataLabelsOptionsObject|Array<Highcharts.SeriesArcDiagramDataLabelsOptionsObject>}\n         *\n         */\n        /**\n         * An array of data points for the series. For the `arcdiagram` series type,\n         * points can be given in the following way:\n         *\n         * An array of objects with named values. The following snippet shows only a few\n         * settings, see the complete options set below. If the total number of data\n         * points exceeds the series' [turboThreshold](#series.area.turboThreshold),\n         * this option is not available.\n         *\n         *  ```js\n         *     data: [{\n         *         from: 'Category1',\n         *         to: 'Category2',\n         *         weight: 2\n         *     }, {\n         *         from: 'Category1',\n         *         to: 'Category3',\n         *         weight: 5\n         *     }]\n         *  ```\n         *\n         * @type      {Array<*>}\n         * @extends   series.sankey.data\n         * @product   highcharts\n         * @excluding outgoing, dataLabels\n         * @apioption series.arcdiagram.data\n         */\n        ''; // Adds doclets above to the transpiled file\n\n        return ArcDiagramSeries;\n    });\n    _registerModule(_modules, 'masters/modules/arc-diagram.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","NodesComposition","SeriesRegistry","U","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","TypeError","String","__","constructor","create","SankeyPoint","seriesTypes","sankey","pointClass","extend","ArcDiagramPoint","_super","arguments","isValid","setState","setNodeState","SankeyColumnComposition","Series","SVGRenderer","__rest","s","e","t","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","symbols","_a","ColumnSeries","column","SankeySeries","merge","pick","relativeLength","ArcDiagramSeries","createNodeColumns","_this","series","chart","compose","sankeyColumn","maxLength","inverted","plotHeight","plotWidth","getTranslationFactor","skipPoint","radius","nodes","slice","minLinkWidth","options","factor","maxRadius","scale","additionalSpace","remainingWidth","plotSizeX","marker","lineWidth","nodePadding","sum","getSum","plotArea","Math","min","splice","max","forEach","node","push","offset","totalNodeOffset","equalNodes","width","relativeLeft","translateLink","point","_b","fromNode","toNode","translationFactor","pointOptions","seriesOptions","linkWeight","weight","centeredLinks","nodeTop","nodeY","getX","fromOrTo","linkLeft","nodeX","shapeArgs","height","fromX","toX","bottom","reversed","plotSizeY","shapeType","linkBase","linkRadius","abs","dlBox","x","y","tooltipPos","plotY","plotX","color","translateNode","maxNodesLength","nodeHeight","crisp","round","nodeOffset","fromNodeLeft","floor","absoluteLeft","left","markerOptions","symbol","markerRadius","top","parseInt","colDistance","mapOptionsToLevel","dlOptions","getDLOptions","level","optionsPoint","enabled","drawDataLabels","dataLabels","textPath","linkTextPath","data","pointAttribs","state","isNode","attrs","markerAttribs","defaultOptions","attributes","startOffset","fillOpacity","states","orderNodes","registerSeriesType"],"mappings":"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"}