{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts Gantt JS v11.4.1 (2024-04-04)\n *\n * Gantt series\n *\n * (c) 2016-2024 Lars A. V. Cabrera\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/gantt', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Extensions/ArrowSymbols.js', [], function () {\n        /* *\n         *\n         *  (c) 2017 Highsoft AS\n         *  Authors: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Creates an arrow symbol. Like a triangle, except not filled.\n         * ```\n         *                   o\n         *             o\n         *       o\n         * o\n         *       o\n         *             o\n         *                   o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the arrow\n         *\n         * @param {number} y\n         *        y position of the arrow\n         *\n         * @param {number} w\n         *        width of the arrow\n         *\n         * @param {number} h\n         *        height of the arrow\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function arrow(x, y, w, h) {\n            return [\n                ['M', x, y + h / 2],\n                ['L', x + w, y],\n                ['L', x, y + h / 2],\n                ['L', x + w, y + h]\n            ];\n        }\n        /**\n         * Creates a half-width arrow symbol. Like a triangle, except not filled.\n         * ```\n         *       o\n         *    o\n         * o\n         *    o\n         *       o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the arrow\n         *\n         * @param {number} y\n         *        y position of the arrow\n         *\n         * @param {number} w\n         *        width of the arrow\n         *\n         * @param {number} h\n         *        height of the arrow\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function arrowHalf(x, y, w, h) {\n            return arrow(x, y, w / 2, h);\n        }\n        /**\n         * @private\n         */\n        function compose(SVGRendererClass) {\n            var symbols = SVGRendererClass.prototype.symbols;\n            symbols.arrow = arrow;\n            symbols['arrow-filled'] = triangleLeft;\n            symbols['arrow-filled-half'] = triangleLeftHalf;\n            symbols['arrow-half'] = arrowHalf;\n            symbols['triangle-left'] = triangleLeft;\n            symbols['triangle-left-half'] = triangleLeftHalf;\n        }\n        /**\n         * Creates a left-oriented triangle.\n         * ```\n         *             o\n         *       ooooooo\n         * ooooooooooooo\n         *       ooooooo\n         *             o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the triangle\n         *\n         * @param {number} y\n         *        y position of the triangle\n         *\n         * @param {number} w\n         *        width of the triangle\n         *\n         * @param {number} h\n         *        height of the triangle\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function triangleLeft(x, y, w, h) {\n            return [\n                ['M', x + w, y],\n                ['L', x, y + h / 2],\n                ['L', x + w, y + h],\n                ['Z']\n            ];\n        }\n        /**\n         * Creates a half-width, left-oriented triangle.\n         * ```\n         *       o\n         *    oooo\n         * ooooooo\n         *    oooo\n         *       o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the triangle\n         *\n         * @param {number} y\n         *        y position of the triangle\n         *\n         * @param {number} w\n         *        width of the triangle\n         *\n         * @param {number} h\n         *        height of the triangle\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function triangleLeftHalf(x, y, w, h) {\n            return triangleLeft(x, y, w / 2, h);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ArrowSymbols = {\n            compose: compose\n        };\n\n        return ArrowSymbols;\n    });\n    _registerModule(_modules, 'Gantt/Connection.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined, error = U.error, merge = U.merge, objectEach = U.objectEach;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var deg2rad = H.deg2rad, max = Math.max, min = Math.min;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Connection class. Used internally to represent a connection between two\n         * points.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Connection\n         *\n         * @param {Highcharts.Point} from\n         *        Connection runs from this Point.\n         *\n         * @param {Highcharts.Point} to\n         *        Connection runs to this Point.\n         *\n         * @param {Highcharts.ConnectorsOptions} [options]\n         *        Connection options.\n         */\n        var Connection = /** @class */ (function () {\n            function Connection(from, to, options) {\n                this.init(from, to, options);\n            }\n            /**\n             * Initialize the Connection object. Used as constructor only.\n             *\n             * @function Highcharts.Connection#init\n             *\n             * @param {Highcharts.Point} from\n             *        Connection runs from this Point.\n             *\n             * @param {Highcharts.Point} to\n             *        Connection runs to this Point.\n             *\n             * @param {Highcharts.ConnectorsOptions} [options]\n             *        Connection options.\n             */\n            Connection.prototype.init = function (from, to, options) {\n                this.fromPoint = from;\n                this.toPoint = to;\n                this.options = options;\n                this.chart = from.series.chart;\n                this.pathfinder = this.chart.pathfinder;\n            };\n            /**\n             * Add (or update) this connection's path on chart. Stores reference to the\n             * created element on this.graphics.path.\n             *\n             * @function Highcharts.Connection#renderPath\n             *\n             * @param {Highcharts.SVGPathArray} path\n             *        Path to render, in array format. E.g. ['M', 0, 0, 'L', 10, 10]\n             *\n             * @param {Highcharts.SVGAttributes} [attribs]\n             *        SVG attributes for the path.\n             *\n             * @param {Partial<Highcharts.AnimationOptionsObject>} [animation]\n             *        Animation options for the rendering.\n             */\n            Connection.prototype.renderPath = function (path, attribs) {\n                var connection = this, chart = this.chart, styledMode = chart.styledMode, pathfinder = this.pathfinder, anim = {};\n                var pathGraphic = connection.graphics && connection.graphics.path;\n                // Add the SVG element of the pathfinder group if it doesn't exist\n                if (!pathfinder.group) {\n                    pathfinder.group = chart.renderer.g()\n                        .addClass('highcharts-pathfinder-group')\n                        .attr({ zIndex: -1 })\n                        .add(chart.seriesGroup);\n                }\n                // Shift the group to compensate for plot area.\n                // Note: Do this always (even when redrawing a path) to avoid issues\n                // when updating chart in a way that changes plot metrics.\n                pathfinder.group.translate(chart.plotLeft, chart.plotTop);\n                // Create path if does not exist\n                if (!(pathGraphic && pathGraphic.renderer)) {\n                    pathGraphic = chart.renderer.path()\n                        .add(pathfinder.group);\n                    if (!styledMode) {\n                        pathGraphic.attr({\n                            opacity: 0\n                        });\n                    }\n                }\n                // Set path attribs and animate to the new path\n                pathGraphic.attr(attribs);\n                anim.d = path;\n                if (!styledMode) {\n                    anim.opacity = 1;\n                }\n                pathGraphic.animate(anim);\n                // Store reference on connection\n                this.graphics = this.graphics || {};\n                this.graphics.path = pathGraphic;\n            };\n            /**\n             * Calculate and add marker graphics for connection to the chart. The\n             * created/updated elements are stored on this.graphics.start and\n             * this.graphics.end.\n             *\n             * @function Highcharts.Connection#addMarker\n             *\n             * @param {string} type\n             *        Marker type, either 'start' or 'end'.\n             *\n             * @param {Highcharts.ConnectorsMarkerOptions} options\n             *        All options for this marker. Not calculated or merged with other\n             *        options.\n             *\n             * @param {Highcharts.SVGPathArray} path\n             *        Connection path in array format. This is used to calculate the\n             *        rotation angle of the markers.\n             */\n            Connection.prototype.addMarker = function (type, options, path) {\n                var connection = this, chart = connection.fromPoint.series.chart, pathfinder = chart.pathfinder, renderer = chart.renderer, point = (type === 'start' ?\n                    connection.fromPoint :\n                    connection.toPoint), anchor = point.getPathfinderAnchorPoint(options);\n                var markerVector, radians, rotation, box, width, height, pathVector, segment;\n                if (!options.enabled) {\n                    return;\n                }\n                // Last vector before start/end of path, used to get angle\n                if (type === 'start') {\n                    segment = path[1];\n                }\n                else { // 'end'\n                    segment = path[path.length - 2];\n                }\n                if (segment && segment[0] === 'M' || segment[0] === 'L') {\n                    pathVector = {\n                        x: segment[1],\n                        y: segment[2]\n                    };\n                    // Get angle between pathVector and anchor point and use it to\n                    // create marker position.\n                    radians = point.getRadiansToVector(pathVector, anchor);\n                    markerVector = point.getMarkerVector(radians, options.radius, anchor);\n                    // Rotation of marker is calculated from angle between pathVector\n                    // and markerVector.\n                    // (Note:\n                    //  Used to recalculate radians between markerVector and pathVector,\n                    //  but this should be the same as between pathVector and anchor.)\n                    rotation = -radians / deg2rad;\n                    if (options.width && options.height) {\n                        width = options.width;\n                        height = options.height;\n                    }\n                    else {\n                        width = height = options.radius * 2;\n                    }\n                    // Add graphics object if it does not exist\n                    connection.graphics = connection.graphics || {};\n                    box = {\n                        x: markerVector.x - (width / 2),\n                        y: markerVector.y - (height / 2),\n                        width: width,\n                        height: height,\n                        rotation: rotation,\n                        rotationOriginX: markerVector.x,\n                        rotationOriginY: markerVector.y\n                    };\n                    if (!connection.graphics[type]) {\n                        // Create new marker element\n                        connection.graphics[type] = renderer\n                            .symbol(options.symbol)\n                            .addClass('highcharts-point-connecting-path-' + type + '-marker' +\n                            ' highcharts-color-' + this.fromPoint.colorIndex)\n                            .attr(box)\n                            .add(pathfinder.group);\n                        if (!renderer.styledMode) {\n                            connection.graphics[type].attr({\n                                fill: options.color || connection.fromPoint.color,\n                                stroke: options.lineColor,\n                                'stroke-width': options.lineWidth,\n                                opacity: 0\n                            })\n                                .animate({\n                                opacity: 1\n                            }, point.series.options.animation);\n                        }\n                    }\n                    else {\n                        connection.graphics[type].animate(box);\n                    }\n                }\n            };\n            /**\n             * Calculate and return connection path.\n             * Note: Recalculates chart obstacles on demand if they aren't calculated.\n             *\n             * @function Highcharts.Connection#getPath\n             *\n             * @param {Highcharts.ConnectorsOptions} options\n             *        Connector options. Not calculated or merged with other options.\n             *\n             * @return {object|undefined}\n             *         Calculated SVG path data in array format.\n             */\n            Connection.prototype.getPath = function (options) {\n                var pathfinder = this.pathfinder, chart = this.chart, algorithm = pathfinder.algorithms[options.type];\n                var chartObstacles = pathfinder.chartObstacles;\n                if (typeof algorithm !== 'function') {\n                    error('\"' + options.type + '\" is not a Pathfinder algorithm.');\n                    return {\n                        path: [],\n                        obstacles: []\n                    };\n                }\n                // This function calculates obstacles on demand if they don't exist\n                if (algorithm.requiresObstacles && !chartObstacles) {\n                    chartObstacles =\n                        pathfinder.chartObstacles =\n                            pathfinder.getChartObstacles(options);\n                    // If the algorithmMargin was computed, store the result in default\n                    // options.\n                    chart.options.connectors.algorithmMargin =\n                        options.algorithmMargin;\n                    // Cache some metrics too\n                    pathfinder.chartObstacleMetrics =\n                        pathfinder.getObstacleMetrics(chartObstacles);\n                }\n                // Get the SVG path\n                return algorithm(\n                // From\n                this.fromPoint.getPathfinderAnchorPoint(options.startMarker), \n                // To\n                this.toPoint.getPathfinderAnchorPoint(options.endMarker), merge({\n                    chartObstacles: chartObstacles,\n                    lineObstacles: pathfinder.lineObstacles || [],\n                    obstacleMetrics: pathfinder.chartObstacleMetrics,\n                    hardBounds: {\n                        xMin: 0,\n                        xMax: chart.plotWidth,\n                        yMin: 0,\n                        yMax: chart.plotHeight\n                    },\n                    obstacleOptions: {\n                        margin: options.algorithmMargin\n                    },\n                    startDirectionX: pathfinder.getAlgorithmStartDirection(options.startMarker)\n                }, options));\n            };\n            /**\n             * (re)Calculate and (re)draw the connection.\n             *\n             * @function Highcharts.Connection#render\n             */\n            Connection.prototype.render = function () {\n                var connection = this, fromPoint = connection.fromPoint, series = fromPoint.series, chart = series.chart, pathfinder = chart.pathfinder, attribs = {};\n                var options = merge(chart.options.connectors, series.options.connectors, fromPoint.options.connectors, connection.options);\n                // Set path attribs\n                if (!chart.styledMode) {\n                    attribs.stroke = options.lineColor || fromPoint.color;\n                    attribs['stroke-width'] = options.lineWidth;\n                    if (options.dashStyle) {\n                        attribs.dashstyle = options.dashStyle;\n                    }\n                }\n                attribs['class'] = // eslint-disable-line dot-notation\n                    'highcharts-point-connecting-path ' +\n                        'highcharts-color-' + fromPoint.colorIndex;\n                options = merge(attribs, options);\n                // Set common marker options\n                if (!defined(options.marker.radius)) {\n                    options.marker.radius = min(max(Math.ceil((options.algorithmMargin || 8) / 2) - 1, 1), 5);\n                }\n                // Get the path\n                var pathResult = connection.getPath(options), path = pathResult.path;\n                // Always update obstacle storage with obstacles from this path.\n                // We don't know if future calls will need this for their algorithm.\n                if (pathResult.obstacles) {\n                    pathfinder.lineObstacles =\n                        pathfinder.lineObstacles || [];\n                    pathfinder.lineObstacles =\n                        pathfinder.lineObstacles.concat(pathResult.obstacles);\n                }\n                // Add the calculated path to the pathfinder group\n                connection.renderPath(path, attribs);\n                // Render the markers\n                connection.addMarker('start', merge(options.marker, options.startMarker), path);\n                connection.addMarker('end', merge(options.marker, options.endMarker), path);\n            };\n            /**\n             * Destroy connection by destroying the added graphics elements.\n             *\n             * @function Highcharts.Connection#destroy\n             */\n            Connection.prototype.destroy = function () {\n                if (this.graphics) {\n                    objectEach(this.graphics, function (val) {\n                        val.destroy();\n                    });\n                    delete this.graphics;\n                }\n            };\n            return Connection;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * The default pathfinder algorithm to use for a chart. It is possible to define\n         * your own algorithms by adding them to the\n         * `Highcharts.Pathfinder.prototype.algorithms`\n         * object before the chart has been created.\n         *\n         * The default algorithms are as follows:\n         *\n         * `straight`:      Draws a straight line between the connecting\n         *                  points. Does not avoid other points when drawing.\n         *\n         * `simpleConnect`: Finds a path between the points using right angles\n         *                  only. Takes only starting/ending points into\n         *                  account, and will not avoid other points.\n         *\n         * `fastAvoid`:     Finds a path between the points using right angles\n         *                  only. Will attempt to avoid other points, but its\n         *                  focus is performance over accuracy. Works well with\n         *                  less dense datasets.\n         *\n         * @typedef {\"fastAvoid\"|\"simpleConnect\"|\"straight\"|string} Highcharts.PathfinderTypeValue\n         */\n        ''; // Keeps doclets above in JS file\n\n        return Connection;\n    });\n    _registerModule(_modules, 'Extensions/CurrentDateIndication.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, merge = U.merge, pushUnique = U.pushUnique, wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Show an indicator on the axis for the current date and time. Can be a\n         * boolean or a configuration object similar to\n         * [xAxis.plotLines](#xAxis.plotLines).\n         *\n         * @sample gantt/current-date-indicator/demo\n         *         Current date indicator enabled\n         * @sample gantt/current-date-indicator/object-config\n         *         Current date indicator with custom options\n         *\n         * @declare   Highcharts.CurrentDateIndicatorOptions\n         * @type      {boolean|CurrentDateIndicatorOptions}\n         * @default   true\n         * @extends   xAxis.plotLines\n         * @excluding value\n         * @product   gantt\n         * @apioption xAxis.currentDateIndicator\n         */\n        var defaultOptions = {\n            color: \"#ccd3ff\" /* Palette.highlightColor20 */,\n            width: 2,\n            /**\n             * @declare Highcharts.AxisCurrentDateIndicatorLabelOptions\n             */\n            label: {\n                /**\n                 * Format of the label. This options is passed as the fist argument to\n                 * [dateFormat](/class-reference/Highcharts.Time#dateFormat) function.\n                 *\n                 * @type      {string}\n                 * @default   %a, %b %d %Y, %H:%M\n                 * @product   gantt\n                 * @apioption xAxis.currentDateIndicator.label.format\n                 */\n                format: '%a, %b %d %Y, %H:%M',\n                formatter: function (value, format) {\n                    return this.axis.chart.time.dateFormat(format || '', value);\n                },\n                rotation: 0,\n                /**\n                 * @type {Highcharts.CSSObject}\n                 */\n                style: {\n                    /** @internal */\n                    fontSize: '0.7em'\n                }\n            }\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, PlotLineOrBandClass) {\n            if (pushUnique(composed, 'CurrentDateIndication')) {\n                addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                addEvent(PlotLineOrBandClass, 'render', onPlotLineOrBandRender);\n                wrap(PlotLineOrBandClass.prototype, 'getLabelText', wrapPlotLineOrBandGetLabelText);\n            }\n        }\n        /**\n         * @private\n         */\n        function onAxisAfterSetOptions() {\n            var options = this.options, cdiOptions = options.currentDateIndicator;\n            if (cdiOptions) {\n                var plotLineOptions = typeof cdiOptions === 'object' ?\n                    merge(defaultOptions, cdiOptions) :\n                    merge(defaultOptions);\n                plotLineOptions.value = Date.now();\n                plotLineOptions.className = 'highcharts-current-date-indicator';\n                if (!options.plotLines) {\n                    options.plotLines = [];\n                }\n                options.plotLines.push(plotLineOptions);\n            }\n        }\n        /**\n         * @private\n         */\n        function onPlotLineOrBandRender() {\n            // If the label already exists, update its text\n            if (this.label) {\n                this.label.attr({\n                    text: this.getLabelText(this.options.label)\n                });\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapPlotLineOrBandGetLabelText(defaultMethod, defaultLabelOptions) {\n            var options = this.options;\n            if (options &&\n                options.className &&\n                options.className.indexOf('highcharts-current-date-indicator') !== -1 &&\n                options.label &&\n                typeof options.label.formatter === 'function') {\n                options.value = Date.now();\n                return options.label.formatter\n                    .call(this, options.value, options.label.format);\n            }\n            return defaultMethod.call(this, defaultLabelOptions);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var CurrentDateIndication = {\n            compose: compose\n        };\n\n        return CurrentDateIndication;\n    });\n    _registerModule(_modules, 'Core/Chart/GanttChart.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Defaults.js'], _modules['Core/Utilities.js']], function (Chart, D, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var defaultOptions = D.defaultOptions;\n        var isArray = U.isArray, merge = U.merge, splat = U.splat;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Gantt-optimized chart. Use {@link Highcharts.Chart|Chart} for common charts.\n         *\n         * @requires modules/gantt\n         *\n         * @class\n         * @name Highcharts.GanttChart\n         * @extends Highcharts.Chart\n         */\n        var GanttChart = /** @class */ (function (_super) {\n            __extends(GanttChart, _super);\n            function GanttChart() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initializes the chart. The constructor's arguments are passed on\n             * directly.\n             *\n             * @function Highcharts.GanttChart#init\n             *\n             * @param {Highcharts.Options} userOptions\n             *        Custom options.\n             *\n             * @param {Function} [callback]\n             *        Function to run when the chart has loaded and all external\n             *        images are loaded.\n             *\n             *\n             * @emits Highcharts.GanttChart#event:init\n             * @emits Highcharts.GanttChart#event:afterInit\n             */\n            GanttChart.prototype.init = function (userOptions, callback) {\n                var xAxisOptions = userOptions.xAxis, yAxisOptions = userOptions.yAxis;\n                var defaultLinkedTo;\n                // Avoid doing these twice\n                userOptions.xAxis = userOptions.yAxis = void 0;\n                var options = merge(true, {\n                    chart: {\n                        type: 'gantt'\n                    },\n                    title: {\n                        text: ''\n                    },\n                    legend: {\n                        enabled: false\n                    },\n                    navigator: {\n                        series: { type: 'gantt' },\n                        // Bars were clipped, #14060.\n                        yAxis: {\n                            type: 'category'\n                        }\n                    }\n                }, userOptions, // User's options\n                // forced options\n                {\n                    isGantt: true\n                });\n                userOptions.xAxis = xAxisOptions;\n                userOptions.yAxis = yAxisOptions;\n                // Apply X axis options to both single and multi x axes If user hasn't\n                // defined axes as array, make it into an array and add a second axis by\n                // default.\n                options.xAxis = (!isArray(userOptions.xAxis) ?\n                    [userOptions.xAxis || {}, {}] :\n                    userOptions.xAxis).map(function (xAxisOptions, i) {\n                    var _a, _b, _c;\n                    if (i === 1) { // Second xAxis\n                        defaultLinkedTo = 0;\n                    }\n                    return merge(\n                    // Defaults\n                    {\n                        grid: {\n                            borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n                            enabled: true\n                        },\n                        opposite: (_c = (_b = (_a = defaultOptions.xAxis) === null || _a === void 0 ? void 0 : _a.opposite) !== null && _b !== void 0 ? _b : xAxisOptions.opposite) !== null && _c !== void 0 ? _c : true,\n                        linkedTo: defaultLinkedTo\n                    }, \n                    // User options\n                    xAxisOptions, \n                    // Forced options\n                    {\n                        type: 'datetime'\n                    });\n                });\n                // Apply Y axis options to both single and multi y axes\n                options.yAxis = (splat(userOptions.yAxis || {})).map(function (yAxisOptions) { return merge(\n                // Defaults\n                {\n                    grid: {\n                        borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n                        enabled: true\n                    },\n                    staticScale: 50,\n                    reversed: true,\n                    // Set default type treegrid, but only if 'categories' is\n                    // undefined\n                    type: yAxisOptions.categories ? yAxisOptions.type : 'treegrid'\n                }, \n                // User options\n                yAxisOptions); });\n                _super.prototype.init.call(this, options, callback);\n            };\n            return GanttChart;\n        }(Chart));\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (GanttChart) {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable jsdoc/check-param-names */\n            /**\n             * The factory function for creating new gantt charts. Creates a new {@link\n             * Highcharts.GanttChart|GanttChart} object with different default options\n             * than the basic Chart.\n             *\n             * @example\n             * // Render a chart in to div#container\n             * let chart = Highcharts.ganttChart('container', {\n             *     title: {\n             *         text: 'My chart'\n             *     },\n             *     series: [{\n             *         data: ...\n             *     }]\n             * });\n             *\n             * @function Highcharts.ganttChart\n             *\n             * @param {string|Highcharts.HTMLDOMElement} renderTo\n             *        The DOM element to render to, or its id.\n             *\n             * @param {Highcharts.Options} options\n             *        The chart options structure.\n             *\n             * @param {Highcharts.ChartCallbackFunction} [callback]\n             *        Function to run when the chart has loaded and all external\n             *        images are loaded. Defining a\n             *        [chart.events.load](https://api.highcharts.com/highcharts/chart.events.load)\n             *        handler is equivalent.\n             *\n             * @return {Highcharts.GanttChart}\n             *         Returns the Chart object.\n             */\n            function ganttChart(a, b, c) {\n                return new GanttChart(a, b, c);\n            }\n            GanttChart.ganttChart = ganttChart;\n            /* eslint-enable jsdoc/check-param-names */\n        })(GanttChart || (GanttChart = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttChart;\n    });\n    _registerModule(_modules, 'Stock/Navigator/ChartNavigatorComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var NavigatorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, NavigatorClass) {\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                var chartProto = ChartClass.prototype;\n                NavigatorConstructor = NavigatorClass;\n                chartProto.callbacks.push(onChartCallback);\n                addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n                addEvent(ChartClass, 'update', onChartUpdate);\n            }\n        }\n        /**\n         * Handle adding new series.\n         * @private\n         */\n        function onChartAfterAddSeries() {\n            if (this.navigator) {\n                // Recompute which series should be shown in navigator, and add them\n                this.navigator.setBaseSeries(null, false);\n            }\n        }\n        /**\n         * For stock charts, extend the Chart.setChartSize method so that we can set the\n         * final top position of the navigator once the height of the chart, including\n         * the legend, is determined. #367. We can't use Chart.getMargins, because\n         * labels offsets are not calculated yet.\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            var _a;\n            var legend = this.legend, navigator = this.navigator;\n            var legendOptions, xAxis, yAxis;\n            if (navigator) {\n                legendOptions = legend && legend.options;\n                xAxis = navigator.xAxis;\n                yAxis = navigator.yAxis;\n                var scrollbarHeight = navigator.scrollbarHeight, scrollButtonSize = navigator.scrollButtonSize;\n                // Compute the top position\n                if (this.inverted) {\n                    navigator.left = navigator.opposite ?\n                        this.chartWidth - scrollbarHeight -\n                            navigator.height :\n                        this.spacing[3] + scrollbarHeight;\n                    navigator.top = this.plotTop + scrollButtonSize;\n                }\n                else {\n                    navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n                    navigator.top = navigator.navigatorOptions.top ||\n                        this.chartHeight -\n                            navigator.height -\n                            scrollbarHeight -\n                            (((_a = this.scrollbar) === null || _a === void 0 ? void 0 : _a.options.margin) || 0) -\n                            this.spacing[2] -\n                            (this.rangeSelector && this.extraBottomMargin ?\n                                this.rangeSelector.getHeight() :\n                                0) -\n                            ((legendOptions &&\n                                legendOptions.verticalAlign === 'bottom' &&\n                                legendOptions.layout !== 'proximate' && // #13392\n                                legendOptions.enabled &&\n                                !legendOptions.floating) ?\n                                legend.legendHeight +\n                                    pick(legendOptions.margin, 10) :\n                                0) -\n                            (this.titleOffset ? this.titleOffset[2] : 0);\n                }\n                if (xAxis && yAxis) { // False if navigator is disabled (#904)\n                    if (this.inverted) {\n                        xAxis.options.left = yAxis.options.left = navigator.left;\n                    }\n                    else {\n                        xAxis.options.top = yAxis.options.top = navigator.top;\n                    }\n                    xAxis.setAxisSize();\n                    yAxis.setAxisSize();\n                }\n            }\n        }\n        /**\n         * Initialize navigator, if no scrolling exists yet.\n         * @private\n         */\n        function onChartAfterUpdate(event) {\n            if (!this.navigator && !this.scroller &&\n                (this.options.navigator.enabled ||\n                    this.options.scrollbar.enabled)) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n                if (pick(event.redraw, true)) {\n                    this.redraw(event.animation); // #7067\n                }\n            }\n        }\n        /**\n         * Initialize navigator for stock charts\n         * @private\n         */\n        function onChartBeforeRender() {\n            var options = this.options;\n            if (options.navigator.enabled ||\n                options.scrollbar.enabled) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n            }\n        }\n        /**\n         * For Stock charts. For x only zooming, do not to create the zoom button\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector. (#9285)\n         * @private\n         */\n        function onChartBeforeShowResetZoom() {\n            var chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n            if (((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled)) &&\n                ((!isTouchDevice &&\n                    this.zooming.type === 'x') ||\n                    (isTouchDevice && this.zooming.pinchType === 'x'))) {\n                return false;\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var navigator = chart.navigator;\n            // Initialize the navigator\n            if (navigator && chart.xAxis[0]) {\n                var extremes = chart.xAxis[0].getExtremes();\n                navigator.render(extremes.min, extremes.max);\n            }\n        }\n        /**\n         * Merge options, if no scrolling exists yet\n         * @private\n         */\n        function onChartUpdate(e) {\n            var navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n            if (!this.navigator && !this.scroller &&\n                (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n                merge(true, this.options.navigator, navigatorOptions);\n                merge(true, this.options.scrollbar, scrollbarOptions);\n                delete e.options.navigator;\n                delete e.options.scrollbar;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ChartNavigatorComposition = {\n            compose: compose\n        };\n\n        return ChartNavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/NavigatorAxisComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            var axis = this;\n            if (!axis.navigatorAxis) {\n                axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n            }\n        }\n        /**\n         * For Stock charts, override selection zooming with some special features\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector.\n         * @private\n         */\n        function onAxisSetExtremes(e) {\n            var axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n            var zoomed;\n            if (axis.isXAxis &&\n                ((navigator === null || navigator === void 0 ? void 0 : navigator.enabled) || (rangeSelector === null || rangeSelector === void 0 ? void 0 : rangeSelector.enabled))) {\n                // For y only zooming, ignore the X axis completely\n                if (zoomType === 'y' && e.trigger === 'zoom') {\n                    zoomed = false;\n                    // For xy zooming, record the state of the zoom before zoom selection,\n                    // then when the reset button is pressed, revert to this state. This\n                    // should apply only if the chart is initialized with a range (#6612),\n                    // otherwise zoom all the way out.\n                }\n                else if (((e.trigger === 'zoom' && zoomType === 'xy') ||\n                    (isTouchDevice && pinchType === 'xy')) &&\n                    axis.options.range) {\n                    var previousZoom = navigatorAxis.previousZoom;\n                    // Minimum defined, zooming in\n                    if (defined(e.min)) {\n                        navigatorAxis.previousZoom = [axis.min, axis.max];\n                        // Minimum undefined, resetting zoom\n                    }\n                    else if (previousZoom) {\n                        e.min = previousZoom[0];\n                        e.max = previousZoom[1];\n                        navigatorAxis.previousZoom = void 0;\n                    }\n                }\n            }\n            if (typeof zoomed !== 'undefined') {\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var NavigatorAxisAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function NavigatorAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.compose = function (AxisClass) {\n                if (!AxisClass.keepProps.includes('navigatorAxis')) {\n                    AxisClass.keepProps.push('navigatorAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'setExtremes', onAxisSetExtremes);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.prototype.destroy = function () {\n                this.axis = void 0;\n            };\n            /**\n             * Add logic to normalize the zoomed range in order to preserve the pressed\n             * state of range selector buttons\n             *\n             * @private\n             * @function Highcharts.Axis#toFixedRange\n             */\n            NavigatorAxisAdditions.prototype.toFixedRange = function (pxMin, pxMax, fixedMin, fixedMax) {\n                var axis = this.axis, halfPointRange = (axis.pointRange || 0) / 2;\n                var newMin = pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n                // Add/remove half point range to/from the extremes (#1172)\n                if (!defined(fixedMin)) {\n                    newMin = correctFloat(newMin + halfPointRange);\n                }\n                if (!defined(fixedMax)) {\n                    newMax = correctFloat(newMax - halfPointRange);\n                }\n                if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n                    newMin = newMax = void 0;\n                }\n                return {\n                    min: newMin,\n                    max: newMax\n                };\n            };\n            return NavigatorAxisAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NavigatorAxisAdditions;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorDefaults.js', [_modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js']], function (Color, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var seriesTypes = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The navigator is a small series below the main series, displaying\n         * a view of the entire data set. It provides tools to zoom in and\n         * out on parts of the data as well as panning across the dataset.\n         *\n         * @product      highstock gantt\n         * @optionparent navigator\n         */\n        var NavigatorDefaults = {\n            /**\n             * Whether the navigator and scrollbar should adapt to updated data\n             * in the base X axis. When loading data async, as in the demo below,\n             * this should be `false`. Otherwise new data will trigger navigator\n             * redraw, which will cause unwanted looping. In the demo below, the\n             * data in the navigator is set only once. On navigating, only the main\n             * chart content is updated.\n             *\n             * @sample {highstock} stock/demo/lazy-loading/\n             *         Set to false with async data loading\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.adaptToUpdatedData\n             */\n            /**\n             * An integer identifying the index to use for the base series, or a\n             * string representing the id of the series.\n             *\n             * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n             * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n             *\n             * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n             *\n             * @deprecated\n             * @type      {number|string}\n             * @default   0\n             * @apioption navigator.baseSeries\n             */\n            /**\n             * Enable or disable the navigator.\n             *\n             * @sample {highstock} stock/navigator/enabled/\n             *         Disable the navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.enabled\n             */\n            /**\n             * When the chart is inverted, whether to draw the navigator on the\n             * opposite side.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     5.0.8\n             * @apioption navigator.opposite\n             */\n            /**\n             * The height of the navigator.\n             *\n             * @sample {highstock} stock/navigator/height/\n             *         A higher navigator\n             */\n            height: 40,\n            /**\n             * The distance from the nearest element, the X axis or X axis labels.\n             *\n             * @sample {highstock} stock/navigator/margin/\n             *         A margin of 2 draws the navigator closer to the X axis labels\n             */\n            margin: 25,\n            /**\n             * Whether the mask should be inside the range marking the zoomed\n             * range, or outside. In Highcharts Stock 1.x it was always `false`.\n             *\n             * @sample {highstock} stock/demo/maskinside-false/\n             *         False, mask outside\n             *\n             * @since   2.0\n             */\n            maskInside: true,\n            /**\n             * Options for the handles for dragging the zoomed area.\n             *\n             * @sample {highstock} stock/navigator/handles/\n             *         Colored handles\n             */\n            handles: {\n                /**\n                 * Width for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                width: 7,\n                /**\n                 * Height for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                height: 15,\n                /**\n                 * Array to define shapes of handles. 0-index for left, 1-index for\n                 * right.\n                 *\n                 * Additionally, the URL to a graphic can be given on this form:\n                 * `url(graphic.png)`. Note that for the image to be applied to\n                 * exported charts, its URL needs to be accessible by the export\n                 * server.\n                 *\n                 * Custom callbacks for symbol path generation can also be added to\n                 * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                 * used by its method name, as shown in the demo.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @type    {Array<string>}\n                 * @default [\"navigator-handle\", \"navigator-handle\"]\n                 * @since   6.0.0\n                 */\n                symbols: ['navigator-handle', 'navigator-handle'],\n                /**\n                 * Allows to enable/disable handles.\n                 *\n                 * @since   6.0.0\n                 */\n                enabled: true,\n                /**\n                 * The width for the handle border and the stripes inside.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since     6.0.0\n                 * @apioption navigator.handles.lineWidth\n                 */\n                lineWidth: 1,\n                /**\n                 * The fill for the handle.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n                /**\n                 * The stroke for the handle border and the stripes inside.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                borderColor: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The color of the mask covering the areas of the navigator series\n             * that are currently not visible in the main series. The default\n             * color is bluish with an opacity of 0.3 to see the series below.\n             *\n             * @see In styled mode, the mask is styled with the\n             *      `.highcharts-navigator-mask` and\n             *      `.highcharts-navigator-mask-inside` classes.\n             *\n             * @sample {highstock} stock/navigator/maskfill/\n             *         Blue, semi transparent mask\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default rgba(102,133,194,0.3)\n             */\n            maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n            /**\n             * The color of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #cccccc\n             */\n            outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n            /**\n             * The width of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @see In styled mode, the outline stroke width is set with the\n             *      `.highcharts-navigator-outline` class.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {number}\n             */\n            outlineWidth: 1,\n            /**\n             * Options for the navigator series. Available options are the same\n             * as any series, documented at [plotOptions](#plotOptions.series)\n             * and [series](#series).\n             *\n             * Unless data is explicitly defined on navigator.series, the data\n             * is borrowed from the first series in the chart.\n             *\n             * Default series options for the navigator series are:\n             * ```js\n             * series: {\n             *     type: 'areaspline',\n             *     fillOpacity: 0.05,\n             *     dataGrouping: {\n             *         smoothed: true\n             *     },\n             *     lineWidth: 1,\n             *     marker: {\n             *         enabled: false\n             *     }\n             * }\n             * ```\n             *\n             * @see In styled mode, the navigator series is styled with the\n             *      `.highcharts-navigator-series` class.\n             *\n             * @sample {highstock} stock/navigator/series-data/\n             *         Using a separate data set for the navigator\n             * @sample {highstock} stock/navigator/series/\n             *         A green navigator series\n             *\n             * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n             */\n            series: {\n                /**\n                 * The type of the navigator series.\n                 *\n                 * Heads up:\n                 * In column-type navigator, zooming is limited to at least one\n                 * point with its `pointRange`.\n                 *\n                 * @sample {highstock} stock/navigator/column/\n                 *         Column type navigator\n                 *\n                 * @type    {string}\n                 * @default {highstock} `areaspline` if defined, otherwise `line`\n                 * @default {gantt} gantt\n                 */\n                type: (typeof seriesTypes.areaspline === 'undefined' ?\n                    'line' :\n                    'areaspline'),\n                /**\n                 * The fill opacity of the navigator series.\n                 */\n                fillOpacity: 0.05,\n                /**\n                 * The pixel line width of the navigator series.\n                 */\n                lineWidth: 1,\n                /**\n                 * @ignore-option\n                 */\n                compare: null,\n                /**\n                 * @ignore-option\n                 */\n                sonification: {\n                    enabled: false\n                },\n                /**\n                 * Unless data is explicitly defined, the data is borrowed from the\n                 * first series in the chart.\n                 *\n                 * @type      {Array<number|Array<number|string|null>|object|null>}\n                 * @product   highstock\n                 * @apioption navigator.series.data\n                 */\n                /**\n                 * Data grouping options for the navigator series.\n                 *\n                 * @extends plotOptions.series.dataGrouping\n                 */\n                dataGrouping: {\n                    approximation: 'average',\n                    enabled: true,\n                    groupPixelWidth: 2,\n                    // Replace smoothed property by anchors, #12455.\n                    firstAnchor: 'firstPoint',\n                    anchor: 'middle',\n                    lastAnchor: 'lastPoint',\n                    // Day and week differs from plotOptions.series.dataGrouping\n                    units: [\n                        ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                        ['second', [1, 2, 5, 10, 15, 30]],\n                        ['minute', [1, 2, 5, 10, 15, 30]],\n                        ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                        ['day', [1, 2, 3, 4]],\n                        ['week', [1, 2, 3]],\n                        ['month', [1, 3, 6]],\n                        ['year', null]\n                    ]\n                },\n                /**\n                 * Data label options for the navigator series. Data labels are\n                 * disabled by default on the navigator series.\n                 *\n                 * @extends plotOptions.series.dataLabels\n                 */\n                dataLabels: {\n                    enabled: false,\n                    zIndex: 2 // #1839\n                },\n                id: 'highcharts-navigator-series',\n                className: 'highcharts-navigator-series',\n                /**\n                 * Sets the fill color of the navigator series.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @apioption navigator.series.color\n                 */\n                /**\n                 * Line color for the navigator series. Allows setting the color\n                 * while disallowing the default candlestick setting.\n                 *\n                 * @type {Highcharts.ColorString|null}\n                 */\n                lineColor: null,\n                marker: {\n                    enabled: false\n                },\n                /**\n                 * Since Highcharts Stock v8, default value is the same as default\n                 * `pointRange` defined for a specific type (e.g. `null` for\n                 * column type).\n                 *\n                 * In Highcharts Stock version < 8, defaults to 0.\n                 *\n                 * @extends plotOptions.series.pointRange\n                 * @type {number|null}\n                 * @apioption navigator.series.pointRange\n                 */\n                /**\n                 * The threshold option. Setting it to 0 will make the default\n                 * navigator area series draw its area from the 0 value and up.\n                 *\n                 * @type {number|null}\n                 */\n                threshold: null\n            },\n            /**\n             * Enable or disable navigator sticking to right, while adding new\n             * points. If `undefined`, the navigator sticks to the axis maximum only\n             * if it was already at the maximum prior to adding points.\n             *\n             * @type      {boolean}\n             * @default   undefined\n             * @since 10.2.1\n             * @sample {highstock} stock/navigator/sticktomax-false/\n             * stickToMax set to false\n             * @apioption navigator.stickToMax\n             */\n            /**\n             * Options for the navigator X axis. Default series options for the\n             * navigator xAxis are:\n             * ```js\n             * xAxis: {\n             *     tickWidth: 0,\n             *     lineWidth: 0,\n             *     gridLineWidth: 1,\n             *     tickPixelInterval: 200,\n             *     labels: {\n             *            align: 'left',\n             *         style: {\n             *             color: '#888'\n             *         },\n             *         x: 3,\n             *         y: -4\n             *     }\n             * }\n             * ```\n             *\n             * @extends   xAxis\n             * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n             *            showEmpty, maxRange\n             */\n            xAxis: {\n                /**\n                 * Additional range on the right side of the xAxis. Works similar to\n                 * `xAxis.maxPadding`, but the value is set in terms of axis values,\n                 * percentage or pixels.\n                 *\n                 * If it's a number, it is interpreted as axis values, which in a\n                 * datetime axis equals milliseconds.\n                 *\n                 * If it's a percentage string, is interpreted as percentages of the\n                 * axis length. An overscroll of 50% will make a 100px axis 50px longer.\n                 *\n                 * If it's a pixel string, it is interpreted as a fixed pixel value, but\n                 * limited to 90% of the axis length.\n                 *\n                 * If it's undefined, the value is inherited from `xAxis.overscroll`.\n                 *\n                 * Can be set for both, main xAxis and navigator's xAxis.\n                 *\n                 * @type    {number | string | undefined}\n                 * @since   6.0.0\n                 * @apioption navigator.xAxis.overscroll\n                 */\n                className: 'highcharts-navigator-xaxis',\n                tickLength: 0,\n                lineWidth: 0,\n                gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n                gridLineWidth: 1,\n                tickPixelInterval: 200,\n                labels: {\n                    align: 'left',\n                    /**\n                     * @type {Highcharts.CSSObject}\n                     */\n                    style: {\n                        /** @ignore */\n                        color: \"#000000\" /* Palette.neutralColor100 */,\n                        /** @ignore */\n                        fontSize: '0.7em',\n                        /** @ignore */\n                        opacity: 0.6,\n                        /** @ignore */\n                        textOutline: '2px contrast'\n                    },\n                    x: 3,\n                    y: -4\n                },\n                crosshair: false\n            },\n            /**\n             * Options for the navigator Y axis. Default series options for the\n             * navigator yAxis are:\n             * ```js\n             * yAxis: {\n             *     gridLineWidth: 0,\n             *     startOnTick: false,\n             *     endOnTick: false,\n             *     minPadding: 0.1,\n             *     maxPadding: 0.1,\n             *     labels: {\n             *         enabled: false\n             *     },\n             *     title: {\n             *         text: null\n             *     },\n             *     tickWidth: 0\n             * }\n             * ```\n             *\n             * @extends   yAxis\n             * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n             *            showEmpty, scrollbar, top, units, maxRange, minLength,\n             *            maxLength, resize\n             */\n            yAxis: {\n                className: 'highcharts-navigator-yaxis',\n                gridLineWidth: 0,\n                startOnTick: false,\n                endOnTick: false,\n                minPadding: 0.1,\n                maxPadding: 0.1,\n                labels: {\n                    enabled: false\n                },\n                crosshair: false,\n                title: {\n                    text: null\n                },\n                tickLength: 0,\n                tickWidth: 0\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Maximum range which can be set using the navigator's handles.\n         * Opposite of [xAxis.minRange](#xAxis.minRange).\n         *\n         * @sample {highstock} stock/navigator/maxrange/\n         *         Defined max and min range\n         *\n         * @type      {number}\n         * @since     6.0.0\n         * @product   highstock gantt\n         * @apioption xAxis.maxRange\n         */\n        (''); // Keeps doclets above in JS file\n\n        return NavigatorDefaults;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorSymbols.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Draw one of the handles on the side of the zoomed range in the navigator.\n         * @private\n         */\n        function navigatorHandle(_x, _y, width, height, options) {\n            if (options === void 0) { options = {}; }\n            var halfWidth = options.width ? options.width / 2 : width, markerPosition = Math.round(halfWidth / 3) + 0.5;\n            height = options.height || height;\n            return [\n                ['M', -halfWidth - 1, 0.5],\n                ['L', halfWidth, 0.5],\n                ['L', halfWidth, height + 0.5],\n                ['L', -halfWidth - 1, height + 0.5],\n                ['L', -halfWidth - 1, 0.5],\n                ['M', -markerPosition, 4],\n                ['L', -markerPosition, height - 3],\n                ['M', markerPosition - 1, 4],\n                ['L', markerPosition - 1, height - 3]\n            ];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorSymbols = {\n            'navigator-handle': navigatorHandle\n        };\n\n        return NavigatorSymbols;\n    });\n    _registerModule(_modules, 'Stock/Utilities/StockUtilities.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Sets the chart.fixedRange to the specified value. If the value is larger\n         * than actual range, sets it to the maximum possible range. (#20327)\n         *\n         * @private\n         * @function Highcharts.StockChart#setFixedRange\n         * @param {number|undefined} range\n         *        Range to set in axis units.\n         */\n        function setFixedRange(range) {\n            var xAxis = this.xAxis[0];\n            if (defined(xAxis.dataMax) &&\n                defined(xAxis.dataMin) &&\n                range) {\n                this.fixedRange = Math.min(range, xAxis.dataMax - xAxis.dataMin);\n            }\n            else {\n                this.fixedRange = range;\n            }\n        }\n        var StockUtilities = {\n            setFixedRange: setFixedRange\n        };\n\n        return StockUtilities;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/Navigator/NavigatorSymbols.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Stock/Utilities/StockUtilities.js'], _modules['Core/Utilities.js']], function (D, H, NavigatorAxisAdditions, NavigatorDefaults, NavigatorSymbols, RendererRegistry, StockUtilities, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var setOptions = D.setOptions;\n        var composed = H.composed;\n        var getRendererType = RendererRegistry.getRendererType;\n        var setFixedRange = StockUtilities.setFixedRange;\n        var addEvent = U.addEvent, extend = U.extend, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, AxisClass, SeriesClass) {\n            NavigatorAxisAdditions.compose(AxisClass);\n            if (pushUnique(composed, 'Navigator')) {\n                ChartClass.prototype.setFixedRange = setFixedRange;\n                extend(getRendererType().prototype.symbols, NavigatorSymbols);\n                addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n                setOptions({ navigator: NavigatorDefaults });\n            }\n        }\n        /**\n         * Handle updating series\n         * @private\n         */\n        function onSeriesAfterUpdate() {\n            if (this.chart.navigator && !this.options.isInternal) {\n                this.chart.navigator.setBaseSeries(null, false);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorComposition = {\n            compose: compose\n        };\n\n        return NavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/ScrollbarAxis.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ScrollbarAxis;\n        (function (ScrollbarAxis) {\n            /* *\n             *\n             *  Variables\n             *\n             * */\n            var Scrollbar;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Attaches to axis events to create scrollbars if enabled.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} AxisClass\n             * Axis class to extend.\n             *\n             * @param {Highcharts.Scrollbar} ScrollbarClass\n             * Scrollbar class to use.\n             */\n            function compose(AxisClass, ScrollbarClass) {\n                if (pushUnique(composed, 'Axis.Scrollbar')) {\n                    Scrollbar = ScrollbarClass;\n                    addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n                }\n            }\n            ScrollbarAxis.compose = compose;\n            /** @private */\n            function getExtremes(axis) {\n                var axisMin = pick(axis.options && axis.options.min, axis.min);\n                var axisMax = pick(axis.options && axis.options.max, axis.max);\n                return {\n                    axisMin: axisMin,\n                    axisMax: axisMax,\n                    scrollMin: defined(axis.dataMin) ?\n                        Math.min(axisMin, axis.min, axis.dataMin, pick(axis.threshold, Infinity)) : axisMin,\n                    scrollMax: defined(axis.dataMax) ?\n                        Math.max(axisMax, axis.max, axis.dataMax, pick(axis.threshold, -Infinity)) : axisMax\n                };\n            }\n            /**\n             * Make space for a scrollbar.\n             * @private\n             */\n            function onAxisAfterGetOffset() {\n                var axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n                if (scrollbar) {\n                    // Reset scrollbars offsets\n                    axis.chart.scrollbarsOffsets = [0, 0];\n                    axis.chart.axisOffset[index] +=\n                        scrollbar.size + (scrollbar.options.margin || 0);\n                }\n            }\n            /**\n             * Wrap axis initialization and create scrollbar if enabled.\n             * @private\n             */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (axis.options &&\n                    axis.options.scrollbar &&\n                    axis.options.scrollbar.enabled) {\n                    // Predefined options:\n                    axis.options.scrollbar.vertical = !axis.horiz;\n                    axis.options.startOnTick = axis.options.endOnTick = false;\n                    axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n                    addEvent(axis.scrollbar, 'changed', function (e) {\n                        var _a = getExtremes(axis), axisMin = _a.axisMin, axisMax = _a.axisMax, unitedMin = _a.scrollMin, unitedMax = _a.scrollMax, range = unitedMax - unitedMin;\n                        var to, from;\n                        // #12834, scroll when show/hide series, wrong extremes\n                        if (!defined(axisMin) || !defined(axisMax)) {\n                            return;\n                        }\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            to = unitedMin + range * this.to;\n                            from = unitedMin + range * this.from;\n                        }\n                        else {\n                            // Y-values in browser are reversed, but this also\n                            // applies for reversed horizontal axis:\n                            to = unitedMin + range * (1 - this.from);\n                            from = unitedMin + range * (1 - this.to);\n                        }\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            // #17977, set animation to undefined instead of true\n                            var animate = e.DOMType === 'mousemove' ||\n                                e.DOMType === 'touchmove' ? false : void 0;\n                            axis.setExtremes(from, to, true, animate, e);\n                        }\n                        else {\n                            // When live redraw is disabled, don't change extremes\n                            // Only change the position of the scrollbar thumb\n                            this.setRange(this.from, this.to);\n                        }\n                    });\n                }\n            }\n            /**\n             * Wrap rendering axis, and update scrollbar if one is created.\n             * @private\n             */\n            function onAxisAfterRender() {\n                var axis = this, _a = getExtremes(axis), scrollMin = _a.scrollMin, scrollMax = _a.scrollMax, scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n                var offsetsIndex, from, to;\n                if (scrollbar && scrollbarsOffsets) {\n                    if (axis.horiz) {\n                        // Reserve space for labels/title\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += offset;\n                        }\n                        scrollbar.position(axis.left, (axis.top +\n                            axis.height +\n                            2 +\n                            scrollbarsOffsets[1] -\n                            (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += axisMargin;\n                        }\n                        offsetsIndex = 1;\n                    }\n                    else {\n                        // Reserve space for labels/title\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += offset;\n                        }\n                        var xPosition = void 0;\n                        if (!scrollbar.options.opposite) {\n                            xPosition = axis.opposite ? 0 : axisMargin;\n                        }\n                        else {\n                            xPosition = axis.left +\n                                axis.width +\n                                2 +\n                                scrollbarsOffsets[0] -\n                                (axis.opposite ? 0 : axisMargin);\n                        }\n                        scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += axisMargin;\n                        }\n                        offsetsIndex = 0;\n                    }\n                    scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                        (scrollbar.options.margin || 0);\n                    if (isNaN(scrollMin) ||\n                        isNaN(scrollMax) ||\n                        !defined(axis.min) ||\n                        !defined(axis.max) ||\n                        axis.min === axis.max // #10733\n                    ) {\n                        // Default action: when extremes are the same or there is\n                        // not extremes on the axis, but scrollbar exists, make it\n                        // full size\n                        scrollbar.setRange(0, 1);\n                    }\n                    else {\n                        from = ((axis.min - scrollMin) /\n                            (scrollMax - scrollMin));\n                        to = ((axis.max - scrollMin) /\n                            (scrollMax - scrollMin));\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            scrollbar.setRange(from, to);\n                        }\n                        else {\n                            // Inverse vertical axis\n                            scrollbar.setRange(1 - to, 1 - from);\n                        }\n                    }\n                }\n            }\n        })(ScrollbarAxis || (ScrollbarAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarAxis;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/ScrollbarDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constant\n         *\n         * */\n        /**\n         *\n         * The scrollbar is a means of panning over the X axis of a stock chart.\n         * Scrollbars can also be applied to other types of axes.\n         *\n         * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n         * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n         * is especially suitable for simpler cartesian charts on mobile.\n         *\n         * In styled mode, all the presentational options for the\n         * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n         * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n         * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n         *\n         * @sample stock/yaxis/inverted-bar-scrollbar/\n         *         A scrollbar on a simple bar chart\n         *\n         * @product highstock gantt\n         * @optionparent scrollbar\n         *\n         * @private\n         */\n        var ScrollbarDefaults = {\n            /**\n             * The height of the scrollbar. If `buttonsEnabled` is true , the height\n             * also applies to the width of the scroll arrows so that they are always\n             * squares.\n             *\n             * @sample stock/scrollbar/style/\n             *         Non-default height\n             *\n             * @type    {number}\n             */\n            height: 10,\n            /**\n             * The border rounding radius of the bar.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderRadius: 5,\n            /**\n             * The corner radius of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderRadius: 0,\n            /**\n             * Enable or disable the buttons at the end of the scrollbar.\n             *\n             * @since 11.0.0\n             */\n            buttonsEnabled: false,\n            /**\n             * Enable or disable the scrollbar.\n             *\n             * @sample stock/scrollbar/enabled/\n             *         Disable the scrollbar, only use navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.enabled\n             */\n            /**\n             * Whether to redraw the main chart as the scrollbar or the navigator\n             * zoomed window is moved. Defaults to `true` for modern browsers and\n             * `false` for legacy IE browsers as well as mobile devices.\n             *\n             * @sample stock/scrollbar/liveredraw\n             *         Setting live redraw to false\n             *\n             * @type  {boolean}\n             * @since 1.3\n             */\n            liveRedraw: void 0,\n            /**\n             * The margin between the scrollbar and its axis when the scrollbar is\n             * applied directly to an axis, or the navigator in case that is enabled.\n             * Defaults to 10 for axis, 0 for navigator.\n             *\n             * @type {number|undefined}\n             */\n            margin: void 0,\n            /**\n             * The minimum width of the scrollbar.\n             *\n             * @since 1.2.5\n             */\n            minWidth: 6,\n            /** @ignore-option */\n            opposite: true,\n            /**\n             * Whether to show or hide the scrollbar when the scrolled content is\n             * zoomed out to it full extent.\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.showFull\n             */\n            step: 0.2,\n            /**\n             * The z index of the scrollbar group.\n             */\n            zIndex: 3,\n            /**\n             * The background color of the scrollbar itself.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The width of the bar's border.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderWidth: 0,\n            /**\n             * The color of the scrollbar's border.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The color of the small arrow inside the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n            /**\n             * The color of scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n            /**\n             * The color of the border of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The border width of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderWidth: 1,\n            /**\n             * The color of the small rifles in the middle of the scrollbar.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            rifleColor: 'none',\n            /**\n             * The color of the track background.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBackgroundColor: 'rgba(255, 255, 255, 0.001)',\n            /**\n             * The color of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The corner radius of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderRadius: 5,\n            /**\n             * The width of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderWidth: 1\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarDefaults;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/Scrollbar.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/ScrollbarAxis.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (D, H, ScrollbarAxis, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, fireEvent = U.fireEvent, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /**\n         * A reusable scrollbar, internally used in Highcharts Stock's\n         * navigator and optionally on individual axes.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Scrollbar\n         * @param {Highcharts.SVGRenderer} renderer\n         * @param {Highcharts.ScrollbarOptions} options\n         * @param {Highcharts.Chart} chart\n         */\n        var Scrollbar = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function Scrollbar(renderer, options, chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this._events = [];\n                this.chartX = 0;\n                this.chartY = 0;\n                this.from = 0;\n                this.scrollbarButtons = [];\n                this.scrollbarLeft = 0;\n                this.scrollbarStrokeWidth = 1;\n                this.scrollbarTop = 0;\n                this.size = 0;\n                this.to = 0;\n                this.trackBorderWidth = 1;\n                this.x = 0;\n                this.y = 0;\n                this.init(renderer, options, chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Scrollbar.compose = function (AxisClass) {\n                ScrollbarAxis.compose(AxisClass, Scrollbar);\n            };\n            /**\n             * When we have vertical scrollbar, rifles and arrow in buttons should be\n             * rotated. The same method is used in Navigator's handles, to rotate them.\n             *\n             * @function Highcharts.swapXY\n             *\n             * @param {Highcharts.SVGPathArray} path\n             * Path to be rotated.\n             *\n             * @param {boolean} [vertical]\n             * If vertical scrollbar, swap x-y values.\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Rotated path.\n             *\n             * @requires modules/stock\n             */\n            Scrollbar.swapXY = function (path, vertical) {\n                if (vertical) {\n                    path.forEach(function (seg) {\n                        var len = seg.length;\n                        var temp;\n                        for (var i = 0; i < len; i += 2) {\n                            temp = seg[i + 1];\n                            if (typeof temp === 'number') {\n                                seg[i + 1] = seg[i + 2];\n                                seg[i + 2] = temp;\n                            }\n                        }\n                    });\n                }\n                return path;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set up the mouse and touch events for the Scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#addEvents\n             */\n            Scrollbar.prototype.addEvents = function () {\n                var buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n                var _events = [\n                    // Mouse events\n                    [\n                        buttons[buttonsOrder[0]].element,\n                        'click',\n                        this.buttonToMinClick.bind(this)\n                    ],\n                    [\n                        buttons[buttonsOrder[1]].element,\n                        'click',\n                        this.buttonToMaxClick.bind(this)\n                    ],\n                    [track, 'click', this.trackClick.bind(this)],\n                    [bar, 'mousedown', mouseDownHandler],\n                    [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n                    [bar.ownerDocument, 'mouseup', mouseUpHandler],\n                    // Touch events\n                    [bar, 'touchstart', mouseDownHandler],\n                    [bar.ownerDocument, 'touchmove', mouseMoveHandler],\n                    [bar.ownerDocument, 'touchend', mouseUpHandler]\n                ];\n                // Add them all\n                _events.forEach(function (args) {\n                    addEvent.apply(null, args);\n                });\n                this._events = _events;\n            };\n            Scrollbar.prototype.buttonToMaxClick = function (e) {\n                var scroller = this;\n                var range = ((scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2));\n                scroller.updatePosition(scroller.from + range, scroller.to + range);\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            Scrollbar.prototype.buttonToMinClick = function (e) {\n                var scroller = this;\n                var range = correctFloat(scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2);\n                scroller.updatePosition(correctFloat(scroller.from - range), correctFloat(scroller.to - range));\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Get normalized (0-1) cursor position over the scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n             *\n             * @param  {*} normalizedEvent\n             *         normalized event, with chartX and chartY values\n             *\n             * @return {Highcharts.Dictionary<number>}\n             *         Local position {chartX, chartY}\n             */\n            Scrollbar.prototype.cursorToScrollbarPosition = function (normalizedEvent) {\n                var scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n                    options.minWidth :\n                    0; // `minWidth` distorts translation\n                return {\n                    chartX: (normalizedEvent.chartX - scroller.x -\n                        scroller.xOffset) /\n                        (scroller.barWidth - minWidthDifference),\n                    chartY: (normalizedEvent.chartY - scroller.y -\n                        scroller.yOffset) /\n                        (scroller.barWidth - minWidthDifference)\n                };\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#destroy\n             */\n            Scrollbar.prototype.destroy = function () {\n                var scroller = this, navigator = scroller.chart.scroller;\n                // Disconnect events added in addEvents\n                scroller.removeEvents();\n                // Destroy properties\n                [\n                    'track',\n                    'scrollbarRifles',\n                    'scrollbar',\n                    'scrollbarGroup',\n                    'group'\n                ].forEach(function (prop) {\n                    if (scroller[prop] && scroller[prop].destroy) {\n                        scroller[prop] = scroller[prop].destroy();\n                    }\n                });\n                // #6421, chart may have more scrollbars\n                if (navigator && scroller === navigator.scrollbar) {\n                    navigator.scrollbar = null;\n                    // Destroy elements in collection\n                    destroyObjectProperties(navigator.scrollbarButtons);\n                }\n            };\n            /**\n             * Draw the scrollbar buttons with arrows\n             *\n             * @private\n             * @function Highcharts.Scrollbar#drawScrollbarButton\n             * @param {number} index\n             *        0 is left, 1 is right\n             */\n            Scrollbar.prototype.drawScrollbarButton = function (index) {\n                var scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n                scrollbarButtons.push(group);\n                if (options.buttonsEnabled) {\n                    // Create a rectangle for the scrollbar button\n                    var rect = renderer.rect()\n                        .addClass('highcharts-scrollbar-button')\n                        .add(group);\n                    // Presentational attributes\n                    if (!scroller.chart.styledMode) {\n                        rect.attr({\n                            stroke: options.buttonBorderColor,\n                            'stroke-width': options.buttonBorderWidth,\n                            fill: options.buttonBackgroundColor\n                        });\n                    }\n                    // Place the rectangle based on the rendered stroke width\n                    rect.attr(rect.crisp({\n                        x: -0.5,\n                        y: -0.5,\n                        // +1 to compensate for crispifying in rect method\n                        width: size + 1,\n                        height: size + 1,\n                        r: options.buttonBorderRadius\n                    }, rect.strokeWidth()));\n                    // Button arrow\n                    var arrow = renderer\n                        .path(Scrollbar.swapXY([[\n                            'M',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 - 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 + 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? 2 : -2),\n                            size / 2\n                        ]], options.vertical))\n                        .addClass('highcharts-scrollbar-arrow')\n                        .add(scrollbarButtons[index]);\n                    if (!scroller.chart.styledMode) {\n                        arrow.attr({\n                            fill: options.buttonArrowColor\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.Scrollbar#init\n             * @param {Highcharts.SVGRenderer} renderer\n             * @param {Highcharts.ScrollbarOptions} options\n             * @param {Highcharts.Chart} chart\n             */\n            Scrollbar.prototype.init = function (renderer, options, chart) {\n                var scroller = this;\n                scroller.scrollbarButtons = [];\n                scroller.renderer = renderer;\n                scroller.userOptions = options;\n                scroller.options = merge(ScrollbarDefaults, defaultOptions.scrollbar, options);\n                scroller.options.margin = pick(scroller.options.margin, 10);\n                scroller.chart = chart;\n                // Backward compatibility\n                scroller.size = pick(scroller.options.size, scroller.options.height);\n                // Init\n                if (options.enabled) {\n                    scroller.render();\n                    scroller.addEvents();\n                }\n            };\n            Scrollbar.prototype.mouseDownHandler = function (e) {\n                var _a;\n                var scroller = this, normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n                scroller.chartX = mousePosition.chartX;\n                scroller.chartY = mousePosition.chartY;\n                scroller.initPositions = [scroller.from, scroller.to];\n                scroller.grabbedCenter = true;\n            };\n            /**\n             * Event handler for the mouse move event.\n             * @private\n             */\n            Scrollbar.prototype.mouseMoveHandler = function (e) {\n                var _a;\n                var scroller = this, normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, options = scroller.options, direction = options.vertical ?\n                    'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n                var scrollPosition, chartPosition, change;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when\n                // holding the finger down in the center of the scrollbar. This\n                // should be ignored.\n                if (scroller.grabbedCenter &&\n                    // #4696, scrollbar failed on Android\n                    (!e.touches || e.touches[0][direction] !== 0)) {\n                    chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n                    scrollPosition = scroller[direction];\n                    change = chartPosition - scrollPosition;\n                    scroller.hasDragged = true;\n                    scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n                    if (scroller.hasDragged) {\n                        fireEvent(scroller, 'changed', {\n                            from: scroller.from,\n                            to: scroller.to,\n                            trigger: 'scrollbar',\n                            DOMType: e.type,\n                            DOMEvent: e\n                        });\n                    }\n                }\n            };\n            /**\n             * Event handler for the mouse up event.\n             * @private\n             */\n            Scrollbar.prototype.mouseUpHandler = function (e) {\n                var scroller = this;\n                if (scroller.hasDragged) {\n                    fireEvent(scroller, 'changed', {\n                        from: scroller.from,\n                        to: scroller.to,\n                        trigger: 'scrollbar',\n                        DOMType: e.type,\n                        DOMEvent: e\n                    });\n                }\n                scroller.grabbedCenter =\n                    scroller.hasDragged =\n                        scroller.chartX =\n                            scroller.chartY = null;\n            };\n            /**\n             * Position the scrollbar, method called from a parent with defined\n             * dimensions.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#position\n             * @param {number} x\n             *        x-position on the chart\n             * @param {number} y\n             *        y-position on the chart\n             * @param {number} width\n             *        width of the scrollbar\n             * @param {number} height\n             *        height of the scrollbar\n             */\n            Scrollbar.prototype.position = function (x, y, width, height) {\n                var scroller = this, options = scroller.options, buttonsEnabled = options.buttonsEnabled, _a = options.margin, margin = _a === void 0 ? 0 : _a, vertical = options.vertical, method = scroller.rendered ? 'animate' : 'attr';\n                var xOffset = height, yOffset = 0;\n                // Make the scrollbar visible when it is repositioned, #15763.\n                scroller.group.show();\n                scroller.x = x;\n                scroller.y = y + this.trackBorderWidth;\n                scroller.width = width; // Width with buttons\n                scroller.height = height;\n                scroller.xOffset = xOffset;\n                scroller.yOffset = yOffset;\n                // If Scrollbar is a vertical type, swap options:\n                if (vertical) {\n                    scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n                    scroller.xOffset = xOffset = 0;\n                    scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n                    // Width without buttons\n                    scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n                    scroller.x = x = x + margin;\n                }\n                else {\n                    scroller.height = height = scroller.size;\n                    scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n                    // Width without buttons\n                    scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n                    scroller.y = scroller.y + margin;\n                }\n                // Set general position for a group:\n                scroller.group[method]({\n                    translateX: x,\n                    translateY: scroller.y\n                });\n                // Resize background/track:\n                scroller.track[method]({\n                    width: width,\n                    height: height\n                });\n                // Move right/bottom button to its place:\n                scroller.scrollbarButtons[1][method]({\n                    translateX: vertical ? 0 : width - xOffset,\n                    translateY: vertical ? height - yOffset : 0\n                });\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#removeEvents\n             */\n            Scrollbar.prototype.removeEvents = function () {\n                this._events.forEach(function (args) {\n                    removeEvent.apply(null, args);\n                });\n                this._events.length = 0;\n            };\n            /**\n             * Render scrollbar with all required items.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#render\n             */\n            Scrollbar.prototype.render = function () {\n                var scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n                    .attr({\n                    zIndex: options.zIndex\n                })\n                    .hide() // Initially hide the scrollbar #15863\n                    .add();\n                // Draw the scrollbar group\n                scroller.group = group;\n                // Draw the scrollbar track:\n                scroller.track = renderer.rect()\n                    .addClass('highcharts-scrollbar-track')\n                    .attr({\n                    r: options.trackBorderRadius || 0,\n                    height: size,\n                    width: size\n                }).add(group);\n                if (!styledMode) {\n                    scroller.track.attr({\n                        fill: options.trackBackgroundColor,\n                        stroke: options.trackBorderColor,\n                        'stroke-width': options.trackBorderWidth\n                    });\n                }\n                var trackBorderWidth = scroller.trackBorderWidth =\n                    scroller.track.strokeWidth();\n                scroller.track.attr({\n                    x: -trackBorderWidth % 2 / 2,\n                    y: -trackBorderWidth % 2 / 2\n                });\n                // Draw the scrollbar itself\n                scroller.scrollbarGroup = renderer.g().add(group);\n                scroller.scrollbar = renderer.rect()\n                    .addClass('highcharts-scrollbar-thumb')\n                    .attr({\n                    height: size - trackBorderWidth,\n                    width: size - trackBorderWidth,\n                    r: options.barBorderRadius || 0\n                }).add(scroller.scrollbarGroup);\n                scroller.scrollbarRifles = renderer\n                    .path(Scrollbar.swapXY([\n                    ['M', -3, size / 4],\n                    ['L', -3, 2 * size / 3],\n                    ['M', 0, size / 4],\n                    ['L', 0, 2 * size / 3],\n                    ['M', 3, size / 4],\n                    ['L', 3, 2 * size / 3]\n                ], options.vertical))\n                    .addClass('highcharts-scrollbar-rifles')\n                    .add(scroller.scrollbarGroup);\n                if (!styledMode) {\n                    scroller.scrollbar.attr({\n                        fill: options.barBackgroundColor,\n                        stroke: options.barBorderColor,\n                        'stroke-width': options.barBorderWidth\n                    });\n                    scroller.scrollbarRifles.attr({\n                        stroke: options.rifleColor,\n                        'stroke-width': 1\n                    });\n                }\n                scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n                scroller.scrollbarGroup.translate(-scroller.scrollbarStrokeWidth % 2 / 2, -scroller.scrollbarStrokeWidth % 2 / 2);\n                // Draw the buttons:\n                scroller.drawScrollbarButton(0);\n                scroller.drawScrollbarButton(1);\n            };\n            /**\n             * Set scrollbar size, with a given scale.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#setRange\n             * @param {number} from\n             *        scale (0-1) where bar should start\n             * @param {number} to\n             *        scale (0-1) where bar should end\n             */\n            Scrollbar.prototype.setRange = function (from, to) {\n                var scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n                    !this.hasDragged &&\n                    !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n                if (!defined(fullWidth)) {\n                    return;\n                }\n                var toPX = fullWidth * Math.min(to, 1);\n                var fromPX, newSize;\n                from = Math.max(from, 0);\n                fromPX = Math.ceil(fullWidth * from);\n                scroller.calculatedWidth = newSize = correctFloat(toPX - fromPX);\n                // We need to recalculate position, if minWidth is used\n                if (newSize < minWidth) {\n                    fromPX = (fullWidth - minWidth + newSize) * from;\n                    newSize = minWidth;\n                }\n                var newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n                var newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n                // Store current position:\n                scroller.from = from;\n                scroller.to = to;\n                if (!vertical) {\n                    scroller.scrollbarGroup[method]({\n                        translateX: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        width: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateX: newRiflesPos\n                    });\n                    scroller.scrollbarLeft = newPos;\n                    scroller.scrollbarTop = 0;\n                }\n                else {\n                    scroller.scrollbarGroup[method]({\n                        translateY: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        height: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateY: newRiflesPos\n                    });\n                    scroller.scrollbarTop = newPos;\n                    scroller.scrollbarLeft = 0;\n                }\n                if (newSize <= 12) {\n                    scroller.scrollbarRifles.hide();\n                }\n                else {\n                    scroller.scrollbarRifles.show();\n                }\n                // Show or hide the scrollbar based on the showFull setting\n                if (options.showFull === false) {\n                    if (from <= 0 && to >= 1) {\n                        scroller.group.hide();\n                    }\n                    else {\n                        scroller.group.show();\n                    }\n                }\n                scroller.rendered = true;\n            };\n            /**\n             * Checks if the extremes should be updated in response to a scrollbar\n             * change event.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#shouldUpdateExtremes\n             */\n            Scrollbar.prototype.shouldUpdateExtremes = function (eventType) {\n                return (pick(this.options.liveRedraw, H.svg &&\n                    !H.isTouchDevice &&\n                    !this.chart.boosted) ||\n                    // Mouseup always should change extremes\n                    eventType === 'mouseup' ||\n                    eventType === 'touchend' ||\n                    // Internal events\n                    !defined(eventType));\n            };\n            Scrollbar.prototype.trackClick = function (e) {\n                var _a;\n                var scroller = this;\n                var normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n                if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n                    (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n                    // On the top or on the left side of the track:\n                    scroller.updatePosition(scroller.from + range, scroller.to + range);\n                }\n                else {\n                    // On the bottom or the right side of the track:\n                    scroller.updatePosition(scroller.from - range, scroller.to - range);\n                }\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Update the scrollbar with new options\n             *\n             * @private\n             * @function Highcharts.Scrollbar#update\n             * @param  {Highcharts.ScrollbarOptions} options\n             */\n            Scrollbar.prototype.update = function (options) {\n                this.destroy();\n                this.init(this.chart.renderer, merge(true, this.options, options), this.chart);\n            };\n            /**\n             * Update position option in the Scrollbar, with normalized 0-1 scale\n             *\n             * @private\n             * @function Highcharts.Scrollbar#updatePosition\n             * @param  {number} from\n             * @param  {number} to\n             */\n            Scrollbar.prototype.updatePosition = function (from, to) {\n                if (to > 1) {\n                    from = correctFloat(1 - correctFloat(to - from));\n                    to = 1;\n                }\n                if (from < 0) {\n                    to = correctFloat(to - from);\n                    from = 0;\n                }\n                this.from = from;\n                this.to = to;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Scrollbar.defaultOptions = ScrollbarDefaults;\n            return Scrollbar;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        defaultOptions.scrollbar = merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scrollbar;\n    });\n    _registerModule(_modules, 'Stock/Navigator/Navigator.js', [_modules['Core/Axis/Axis.js'], _modules['Stock/Navigator/ChartNavigatorComposition.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorComposition.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Utilities.js']], function (Axis, ChartNavigatorComposition, D, H, NavigatorAxisAdditions, NavigatorComposition, Scrollbar, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, clamp = U.clamp, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, erase = U.erase, extend = U.extend, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Finding the min or max of a set of variables where we don't know if they are\n         * defined, is a pattern that is repeated several places in Highcharts. Consider\n         * making this a global utility method.\n         * @private\n         */\n        function numExt(extreme) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var numbers = [].filter.call(args, isNumber);\n            if (numbers.length) {\n                return Math[extreme].apply(0, numbers);\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Navigator class\n         *\n         * @private\n         * @class\n         * @name Highcharts.Navigator\n         *\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         */\n        var Navigator = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Navigator(chart) {\n                this.scrollbarHeight = 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Navigator.compose = function (ChartClass, AxisClass, SeriesClass) {\n                ChartNavigatorComposition.compose(ChartClass, Navigator);\n                NavigatorComposition.compose(ChartClass, AxisClass, SeriesClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draw one of the handles on the side of the zoomed range in the navigator.\n             *\n             * @private\n             * @function Highcharts.Navigator#drawHandle\n             *\n             * @param {number} x\n             *        The x center for the handle\n             *\n             * @param {number} index\n             *        0 for left and 1 for right\n             *\n             * @param {boolean|undefined} inverted\n             *        Flag for chart.inverted\n             *\n             * @param {string} verb\n             *        Use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawHandle = function (x, index, inverted, verb) {\n                var navigator = this, height = navigator.navigatorOptions.handles.height;\n                // Place it\n                navigator.handles[index][verb](inverted ? {\n                    translateX: Math.round(navigator.left + navigator.height / 2),\n                    translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n                } : {\n                    translateX: Math.round(navigator.left + parseInt(x, 10)),\n                    translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawOutline\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawOutline = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n                scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n                var left = navigator.left, verticalMin, path;\n                if (inverted) {\n                    verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n                    zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n                    path = [\n                        [\n                            'M',\n                            left + height,\n                            navigatorTop - scrollButtonSize - outlineCorrection\n                        ],\n                        // Top right of zoomed range\n                        ['L', left + height, verticalMin],\n                        ['L', left, verticalMin],\n                        ['M', left, zoomedMax],\n                        ['L', left + height, zoomedMax],\n                        [\n                            'L',\n                            left + height,\n                            navigatorTop + navigatorSize + scrollButtonSize\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // Upper left of zoomed range\n                        ['M', left + height, verticalMin - halfOutline], \n                        // Upper right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            zoomedMax + halfOutline\n                        ]);\n                    }\n                }\n                else {\n                    left -= scrollButtonSize;\n                    zoomedMin += left + scrollButtonSize - outlineCorrection;\n                    zoomedMax += left + scrollButtonSize - outlineCorrection;\n                    path = [\n                        // Left\n                        ['M', left, lineTop],\n                        // Upper left of zoomed range\n                        ['L', zoomedMin, lineTop],\n                        // Lower left of z.r.\n                        ['L', zoomedMin, lineBtm],\n                        // Lower right of z.r.\n                        ['M', zoomedMax, lineBtm],\n                        // Upper right of z.r.\n                        ['L', zoomedMax, lineTop],\n                        // Right\n                        [\n                            'L',\n                            left + navigatorSize + scrollButtonSize * 2,\n                            navigatorTop + halfOutline\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // Upper left of zoomed range\n                        ['M', zoomedMin - halfOutline, lineTop], \n                        // Upper right of z.r.\n                        ['L', zoomedMax + halfOutline, lineTop]);\n                    }\n                }\n                navigator.outline[verb]({\n                    d: path\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawMasks\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawMasks = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n                var height, width, x, y;\n                // Determine rectangle position & size\n                // According to (non)inverted position:\n                if (inverted) {\n                    x = [left, left, left];\n                    y = [top, top + zoomedMin, top + zoomedMax];\n                    width = [navigatorHeight, navigatorHeight, navigatorHeight];\n                    height = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                }\n                else {\n                    x = [left, left + zoomedMin, left + zoomedMax];\n                    y = [top, top, top];\n                    width = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                    height = [navigatorHeight, navigatorHeight, navigatorHeight];\n                }\n                navigator.shades.forEach(function (shade, i) {\n                    shade[verb]({\n                        x: x[i],\n                        y: y[i],\n                        width: width[i],\n                        height: height[i]\n                    });\n                });\n            };\n            /**\n             * Generate DOM elements for a navigator:\n             *\n             * - main navigator group\n             *\n             * - all shades\n             *\n             * - outline\n             *\n             * - handles\n             *\n             * @private\n             * @function Highcharts.Navigator#renderElements\n             */\n            Navigator.prototype.renderElements = function () {\n                var navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n                    cursor: inverted ? 'ns-resize' : 'ew-resize'\n                }, \n                // Create the main navigator group\n                navigatorGroup = navigator.navigatorGroup = renderer\n                    .g('navigator')\n                    .attr({\n                    zIndex: 8,\n                    visibility: 'hidden'\n                })\n                    .add();\n                // Create masks, each mask will get events and fill:\n                [\n                    !maskInside,\n                    maskInside,\n                    !maskInside\n                ].forEach(function (hasMask, index) {\n                    var shade = renderer.rect()\n                        .addClass('highcharts-navigator-mask' +\n                        (index === 1 ? '-inside' : '-outside'))\n                        .add(navigatorGroup);\n                    if (!chart.styledMode) {\n                        shade.attr({\n                            fill: hasMask ?\n                                navigatorOptions.maskFill :\n                                'rgba(0,0,0,0)'\n                        });\n                        if (index === 1) {\n                            shade.css(mouseCursor);\n                        }\n                    }\n                    navigator.shades[index] = shade;\n                });\n                // Create the outline:\n                navigator.outline = renderer.path()\n                    .addClass('highcharts-navigator-outline')\n                    .add(navigatorGroup);\n                if (!chart.styledMode) {\n                    navigator.outline.attr({\n                        'stroke-width': navigatorOptions.outlineWidth,\n                        stroke: navigatorOptions.outlineColor\n                    });\n                }\n                // Create the handlers:\n                if (navigatorOptions.handles && navigatorOptions.handles.enabled) {\n                    var handlesOptions_1 = navigatorOptions.handles, height_1 = handlesOptions_1.height, width_1 = handlesOptions_1.width;\n                    [0, 1].forEach(function (index) {\n                        navigator.handles[index] = renderer.symbol(handlesOptions_1.symbols[index], -width_1 / 2 - 1, 0, width_1, height_1, handlesOptions_1);\n                        if (chart.inverted) {\n                            navigator.handles[index].attr({\n                                rotation: 90,\n                                rotationOriginX: Math.floor(-width_1 / 2),\n                                rotationOriginY: (height_1 + width_1) / 2\n                            });\n                        }\n                        // Z index is 6 for right handle, 7 for left. Can't be 10,\n                        // because of the tooltip in inverted chart (#2908).\n                        navigator.handles[index].attr({ zIndex: 7 - index })\n                            .addClass('highcharts-navigator-handle ' +\n                            'highcharts-navigator-handle-' +\n                            ['left', 'right'][index]).add(navigatorGroup);\n                        if (!chart.styledMode) {\n                            navigator.handles[index]\n                                .attr({\n                                fill: handlesOptions_1.backgroundColor,\n                                stroke: handlesOptions_1.borderColor,\n                                'stroke-width': handlesOptions_1.lineWidth\n                            })\n                                .css(mouseCursor);\n                        }\n                    });\n                }\n            };\n            /**\n             * Update navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#update\n             *\n             * @param {Highcharts.NavigatorOptions} options\n             *        Options to merge in when updating navigator\n             */\n            Navigator.prototype.update = function (options) {\n                // Remove references to old navigator series in base series\n                (this.series || []).forEach(function (series) {\n                    if (series.baseSeries) {\n                        delete series.baseSeries.navigatorSeries;\n                    }\n                });\n                // Destroy and rebuild navigator\n                this.destroy();\n                var chartOptions = this.chart.options;\n                merge(true, chartOptions.navigator, options);\n                this.init(this.chart);\n            };\n            /**\n             * Render the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#render\n             * @param {number} min\n             *        X axis value minimum\n             * @param {number} max\n             *        X axis value maximum\n             * @param {number} [pxMin]\n             *        Pixel value minimum\n             * @param {number} [pxMax]\n             *        Pixel value maximum\n             */\n            Navigator.prototype.render = function (min, max, pxMin, pxMax) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n                var navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n                // Don't redraw while moving the handles (#4703).\n                if (this.hasDragged && !defined(pxMin)) {\n                    return;\n                }\n                min = correctFloat(min - pointRange / 2);\n                max = correctFloat(max + pointRange / 2);\n                // Don't render the navigator until we have data (#486, #4202, #5172).\n                if (!isNumber(min) || !isNumber(max)) {\n                    // However, if navigator was already rendered, we may need to resize\n                    // it. For example hidden series, but visible navigator (#6022).\n                    if (rendered) {\n                        pxMin = 0;\n                        pxMax = pick(xAxis.width, scrollbarXAxis.width);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                navigator.left = pick(xAxis.left, \n                // In case of scrollbar only, without navigator\n                chart.plotLeft + scrollButtonSize +\n                    (inverted ? chart.plotWidth : 0));\n                var zoomedMax = navigator.size = navigatorSize = pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n                    2 * scrollButtonSize);\n                if (inverted) {\n                    navigatorWidth = scrollbarHeight;\n                }\n                else {\n                    navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n                }\n                // Get the pixel position of the handles\n                pxMin = pick(pxMin, xAxis.toPixels(min, true));\n                pxMax = pick(pxMax, xAxis.toPixels(max, true));\n                // Verify (#1851, #2238)\n                if (!isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n                    pxMin = 0;\n                    pxMax = navigatorWidth;\n                }\n                // Are we below the minRange? (#2618, #6191)\n                var newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(correctFloat(newMax - newMin));\n                if (currentRange < minRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n                    }\n                }\n                else if (defined(maxRange) &&\n                    correctFloat(currentRange - pointRange) > maxRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n                    }\n                }\n                // Handles are allowed to cross, but never exceed the plot area\n                navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n                navigator.zoomedMin = clamp(navigator.fixedWidth ?\n                    navigator.zoomedMax - navigator.fixedWidth :\n                    Math.min(pxMin, pxMax), 0, zoomedMax);\n                navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n                zoomedMax = Math.round(navigator.zoomedMax);\n                var zoomedMin = Math.round(navigator.zoomedMin);\n                if (navigatorEnabled) {\n                    navigator.navigatorGroup.attr({\n                        visibility: 'inherit'\n                    });\n                    // Place elements\n                    verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n                    navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    if (navigator.navigatorOptions.handles.enabled) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n                if (navigator.scrollbar) {\n                    if (inverted) {\n                        scrollbarTop = navigator.top - scrollButtonSize;\n                        scrollbarLeft = navigator.left - scrollbarHeight +\n                            (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                                // Multiple axes has offsets:\n                                (scrollbarXAxis.titleOffset || 0) +\n                                    // Self margin from the axis.title\n                                    scrollbarXAxis.axisTitleMargin);\n                        scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n                    }\n                    else {\n                        scrollbarTop = navigator.top + (navigatorEnabled ?\n                            navigator.height :\n                            -scrollbarHeight);\n                        scrollbarLeft = navigator.left - scrollButtonSize;\n                    }\n                    // Reposition scrollbar\n                    navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n                    // Keep scale 0-1\n                    navigator.scrollbar.setRange(\n                    // Use real value, not rounded because range can be very small\n                    // (#1716)\n                    navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n                }\n                navigator.rendered = true;\n                fireEvent(this, 'afterRender');\n            };\n            /**\n             * Set up the mouse and touch events for the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#addMouseEvents\n             */\n            Navigator.prototype.addMouseEvents = function () {\n                var navigator = this, chart = navigator.chart, container = chart.container;\n                var eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n                /**\n                 * Create mouse events' handlers.\n                 * Make them as separate functions to enable wrapping them:\n                 */\n                navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n                    navigator.onMouseMove(e);\n                };\n                navigator.mouseUpHandler = mouseUpHandler = function (e) {\n                    navigator.onMouseUp(e);\n                };\n                // Add shades and handles mousedown events\n                eventsToUnbind = navigator.getPartsEvents('mousedown');\n                eventsToUnbind.push(\n                // Add mouse move and mouseup events. These are bind to doc/div,\n                // because Navigator.grabbedSomething flags are stored in mousedown\n                // events\n                addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), addEvent(container.ownerDocument, 'mouseup', mouseUpHandler), \n                // Touch events\n                addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n                eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n                navigator.eventsToUnbind = eventsToUnbind;\n                // Data events\n                if (navigator.series && navigator.series[0]) {\n                    eventsToUnbind.push(addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                        chart.navigator.modifyNavigatorAxisExtremes();\n                    }));\n                }\n            };\n            /**\n             * Generate events for handles and masks\n             *\n             * @private\n             * @function Highcharts.Navigator#getPartsEvents\n             *\n             * @param {string} eventName\n             *        Event name handler, 'mousedown' or 'touchstart'\n             *\n             * @return {Array<Function>}\n             *         An array of functions to remove navigator functions from the\n             *         events again.\n             */\n            Navigator.prototype.getPartsEvents = function (eventName) {\n                var navigator = this, events = [];\n                ['shades', 'handles'].forEach(function (name) {\n                    navigator[name].forEach(function (navigatorItem, index) {\n                        events.push(addEvent(navigatorItem.element, eventName, function (e) {\n                            navigator[name + 'Mousedown'](e, index);\n                        }));\n                    });\n                });\n                return events;\n            };\n            /**\n             * Mousedown on a shaded mask, either:\n             *\n             * - will be stored for future drag&drop\n             *\n             * - will directly shift to a new range\n             *\n             * @private\n             * @function Highcharts.Navigator#shadesMousedown\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             *\n             * @param {number} index\n             *        Index of a mask in Navigator.shades array\n             */\n            Navigator.prototype.shadesMousedown = function (e, index) {\n                var _a;\n                e = ((_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n                var navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n                // For inverted chart, swap some options:\n                if (chart.inverted) {\n                    chartX = e.chartY;\n                    navigatorPosition = navigator.top;\n                }\n                if (index === 1) {\n                    // Store information for drag&drop\n                    navigator.grabbedCenter = chartX;\n                    navigator.fixedWidth = range;\n                    navigator.dragOffset = chartX - zoomedMin;\n                }\n                else {\n                    // Shift the range by clicking on shaded areas\n                    left = chartX - navigatorPosition - range / 2;\n                    if (index === 0) {\n                        left = Math.max(0, left);\n                    }\n                    else if (index === 2 && left + range >= navigatorSize) {\n                        left = navigatorSize - range;\n                        if (navigator.reversedExtremes) {\n                            // #7713\n                            left -= range;\n                            fixedMin = navigator.getUnionExtremes().dataMin;\n                        }\n                        else {\n                            // #2293, #3543\n                            fixedMax = navigator.getUnionExtremes().dataMax;\n                        }\n                    }\n                    if (left !== zoomedMin) { // It has actually moved\n                        navigator.fixedWidth = range; // #1370\n                        ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                        if (defined(ext.min)) { // #7411\n                            fireEvent(this, 'setRange', {\n                                min: Math.min(ext.min, ext.max),\n                                max: Math.max(ext.min, ext.max),\n                                redraw: true,\n                                eventArguments: {\n                                    trigger: 'navigator'\n                                }\n                            });\n                        }\n                    }\n                }\n            };\n            /**\n             * Mousedown on a handle mask.\n             * Will store necessary information for drag&drop.\n             *\n             * @private\n             * @function Highcharts.Navigator#handlesMousedown\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             * @param {number} index\n             *        Index of a handle in Navigator.handles array\n             */\n            Navigator.prototype.handlesMousedown = function (e, index) {\n                var _a;\n                e = ((_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                var navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n                // For reversed axes, min and max are changed,\n                // so the other extreme should be stored\n                reverse = navigator.reversedExtremes;\n                if (index === 0) {\n                    // Grab the left handle\n                    navigator.grabbedLeft = true;\n                    navigator.otherHandlePos = navigator.zoomedMax;\n                    navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n                }\n                else {\n                    // Grab the right handle\n                    navigator.grabbedRight = true;\n                    navigator.otherHandlePos = navigator.zoomedMin;\n                    navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n                }\n                chart.setFixedRange(void 0);\n            };\n            /**\n             * Mouse move event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseMove\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseMove = function (e) {\n                var _a;\n                var navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n                var left = navigator.left, chartX;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n                // the finger down in the center of the scrollbar. This should be\n                // ignored.\n                if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n                    e = ((_a = chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                    chartX = e.chartX;\n                    // Swap some options for inverted chart\n                    if (inverted) {\n                        left = navigator.top;\n                        chartX = e.chartY;\n                    }\n                    // Drag left handle or top handle\n                    if (navigator.grabbedLeft) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                        // Drag right handle or bottom handle\n                    }\n                    else if (navigator.grabbedRight) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                        // Drag scrollbar or open area in navigator\n                    }\n                    else if (navigator.grabbedCenter) {\n                        navigator.hasDragged = true;\n                        if (chartX < dragOffset) { // Outside left\n                            chartX = dragOffset;\n                            // Outside right\n                        }\n                        else if (chartX >\n                            navigatorSize + dragOffset - range) {\n                            chartX = navigatorSize + dragOffset - range;\n                        }\n                        navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n                    }\n                    if (navigator.hasDragged &&\n                        navigator.scrollbar &&\n                        pick(navigator.scrollbar.options.liveRedraw, \n                        // By default, don't run live redraw on touch\n                        // devices or if the chart is in boost.\n                        !isTouchDevice &&\n                            !this.chart.boosted)) {\n                        e.DOMType = e.type;\n                        setTimeout(function () {\n                            navigator.onMouseUp(e);\n                        }, 0);\n                    }\n                }\n            };\n            /**\n             * Mouse up event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseUp\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseUp = function (e) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n                    'animate' : 'attr';\n                var zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n                if (\n                // MouseUp is called for both, navigator and scrollbar (that order),\n                // which causes calling afterSetExtremes twice. Prevent first call\n                // by checking if scrollbar is going to set new extremes (#6334)\n                (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n                    e.trigger === 'scrollbar') {\n                    unionExtremes = navigator.getUnionExtremes();\n                    // When dragging one handle, make sure the other one doesn't change\n                    if (navigator.zoomedMin === navigator.otherHandlePos) {\n                        fixedMin = navigator.fixedExtreme;\n                    }\n                    else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                        fixedMax = navigator.fixedExtreme;\n                    }\n                    // Snap to right edge (#4076)\n                    if (navigator.zoomedMax === navigator.size) {\n                        fixedMax = navigator.reversedExtremes ?\n                            unionExtremes.dataMin :\n                            unionExtremes.dataMax;\n                    }\n                    // Snap to left edge (#7576)\n                    if (navigator.zoomedMin === 0) {\n                        fixedMin = navigator.reversedExtremes ?\n                            unionExtremes.dataMax :\n                            unionExtremes.dataMin;\n                    }\n                    ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n                    if (defined(ext.min)) {\n                        fireEvent(this, 'setRange', {\n                            min: Math.min(ext.min, ext.max),\n                            max: Math.max(ext.min, ext.max),\n                            redraw: true,\n                            animation: navigator.hasDragged ? false : null,\n                            eventArguments: {\n                                trigger: 'navigator',\n                                triggerOp: 'navigator-drag',\n                                DOMEvent: DOMEvent // #1838\n                            }\n                        });\n                    }\n                }\n                if (e.DOMType !== 'mousemove' &&\n                    e.DOMType !== 'touchmove') {\n                    navigator.grabbedLeft = navigator.grabbedRight =\n                        navigator.grabbedCenter = navigator.fixedWidth =\n                            navigator.fixedExtreme = navigator.otherHandlePos =\n                                navigator.hasDragged = navigator.dragOffset = null;\n                }\n                // Update position of navigator shades, outline and handles (#12573)\n                if (navigator.navigatorEnabled &&\n                    isNumber(navigator.zoomedMin) &&\n                    isNumber(navigator.zoomedMax)) {\n                    zoomedMin = Math.round(navigator.zoomedMin);\n                    zoomedMax = Math.round(navigator.zoomedMax);\n                    if (navigator.shades) {\n                        navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.outline) {\n                        navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.navigatorOptions.handles.enabled &&\n                        Object.keys(navigator.handles).length ===\n                            navigator.handles.length) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeEvents\n             */\n            Navigator.prototype.removeEvents = function () {\n                if (this.eventsToUnbind) {\n                    this.eventsToUnbind.forEach(function (unbind) {\n                        unbind();\n                    });\n                    this.eventsToUnbind = void 0;\n                }\n                this.removeBaseSeriesEvents();\n            };\n            /**\n             * Remove data events.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeBaseSeriesEvents\n             */\n            Navigator.prototype.removeBaseSeriesEvents = function () {\n                var baseSeries = this.baseSeries || [];\n                if (this.navigatorEnabled && baseSeries[0]) {\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    // We only listen for extremes-events on the first baseSeries\n                    if (baseSeries[0].xAxis) {\n                        removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n                    }\n                }\n            };\n            /**\n             * Initialize the Navigator object\n             *\n             * @private\n             * @function Highcharts.Navigator#init\n             */\n            Navigator.prototype.init = function (chart) {\n                var chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n                this.handles = [];\n                this.shades = [];\n                this.chart = chart;\n                this.setBaseSeries();\n                this.height = height;\n                this.scrollbarHeight = scrollbarHeight;\n                this.scrollButtonSize = scrollButtonSize;\n                this.scrollbarEnabled = scrollbarEnabled;\n                this.navigatorEnabled = navigatorEnabled;\n                this.navigatorOptions = navigatorOptions;\n                this.scrollbarOptions = scrollbarOptions;\n                this.opposite = pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n                var navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n                    chart.xAxis[0] || { options: {} };\n                chart.isDirtyBox = true;\n                if (navigator.navigatorEnabled) {\n                    // An x axis is required for scrollbar also\n                    navigator.xAxis = new Axis(chart, merge({\n                        // Inherit base xAxis' break, ordinal options and overscroll\n                        breaks: baseXaxis.options.breaks,\n                        ordinal: baseXaxis.options.ordinal,\n                        overscroll: baseXaxis.options.overscroll\n                    }, navigatorOptions.xAxis, {\n                        id: 'navigator-x-axis',\n                        yAxis: 'navigator-y-axis',\n                        type: 'datetime',\n                        index: xAxisIndex,\n                        isInternal: true,\n                        offset: 0,\n                        keepOrdinalPadding: true,\n                        startOnTick: false,\n                        endOnTick: false,\n                        minPadding: 0,\n                        maxPadding: 0,\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        offsets: [scrollButtonSize, 0, -scrollButtonSize, 0],\n                        width: height\n                    } : {\n                        offsets: [0, -scrollButtonSize, 0, scrollButtonSize],\n                        height: height\n                    }), 'xAxis');\n                    navigator.yAxis = new Axis(chart, merge(navigatorOptions.yAxis, {\n                        id: 'navigator-y-axis',\n                        alignTicks: false,\n                        offset: 0,\n                        index: yAxisIndex,\n                        isInternal: true,\n                        reversed: pick((navigatorOptions.yAxis &&\n                            navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false),\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        width: height\n                    } : {\n                        height: height\n                    }), 'yAxis');\n                    // If we have a base series, initialize the navigator series\n                    if (baseSeries || navigatorOptions.series.data) {\n                        navigator.updateNavigatorSeries(false);\n                        // If not, set up an event to listen for added series\n                    }\n                    else if (chart.series.length === 0) {\n                        navigator.unbindRedraw = addEvent(chart, 'beforeRedraw', function () {\n                            // We've got one, now add it as base\n                            if (chart.series.length > 0 && !navigator.series) {\n                                navigator.setBaseSeries();\n                                navigator.unbindRedraw(); // Reset\n                            }\n                        });\n                    }\n                    navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n                    // Render items, so we can bind events to them:\n                    navigator.renderElements();\n                    // Add mouse events\n                    navigator.addMouseEvents();\n                    // In case of scrollbar only, fake an x axis to get translation\n                }\n                else {\n                    navigator.xAxis = {\n                        chart: chart,\n                        navigatorAxis: {\n                            fake: true\n                        },\n                        translate: function (value, reverse) {\n                            var axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                            return reverse ?\n                                // From pixel to value\n                                (value * valueRange / scrollTrackWidth) + min :\n                                // From value to pixel\n                                scrollTrackWidth * (value - min) / valueRange;\n                        },\n                        toPixels: function (value) {\n                            return this.translate(value);\n                        },\n                        toValue: function (value) {\n                            return this.translate(value, true);\n                        }\n                    };\n                    navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n                    navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisAdditions.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n                }\n                // Initialize the scrollbar\n                if (chart.options.scrollbar.enabled) {\n                    var options = merge(chart.options.scrollbar, { vertical: chart.inverted });\n                    if (!isNumber(options.margin) && navigator.navigatorEnabled) {\n                        options.margin = chart.inverted ? -3 : 3;\n                    }\n                    chart.scrollbar = navigator.scrollbar = new Scrollbar(chart.renderer, options, chart);\n                    addEvent(navigator.scrollbar, 'changed', function (e) {\n                        var range = navigator.size, to = range * this.to, from = range * this.from;\n                        navigator.hasDragged = navigator.scrollbar.hasDragged;\n                        navigator.render(0, 0, from, to);\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            setTimeout(function () {\n                                navigator.onMouseUp(e);\n                            });\n                        }\n                    });\n                }\n                // Add data events\n                navigator.addBaseSeriesEvents();\n                // Add redraw events\n                navigator.addChartEvents();\n            };\n            /**\n             * Get the union data extremes of the chart - the outer data extremes of the\n             * base X axis and the navigator axis.\n             *\n             * @private\n             * @function Highcharts.Navigator#getUnionExtremes\n             */\n            Navigator.prototype.getUnionExtremes = function (returnFalseOnNoBaseSeries) {\n                var baseAxis = this.chart.xAxis[0], navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n                var ret;\n                if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n                    ret = {\n                        dataMin: pick(// #4053\n                        navAxisOptions && navAxisOptions.min, numExt('min', baseAxisOptions.min, baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                        dataMax: pick(navAxisOptions && navAxisOptions.max, numExt('max', baseAxisOptions.max, baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n                    };\n                }\n                return ret;\n            };\n            /**\n             * Set the base series and update the navigator series from this. With a bit\n             * of modification we should be able to make this an API method to be called\n             * from the outside\n             *\n             * @private\n             * @function Highcharts.Navigator#setBaseSeries\n             * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n             *        Additional series options for a navigator\n             * @param {boolean} [redraw]\n             *        Whether to redraw after update.\n             */\n            Navigator.prototype.setBaseSeries = function (baseSeriesOptions, redraw) {\n                var chart = this.chart, baseSeries = this.baseSeries = [];\n                baseSeriesOptions = (baseSeriesOptions ||\n                    chart.options && chart.options.navigator.baseSeries ||\n                    (chart.series.length ?\n                        // Find the first non-navigator series (#8430)\n                        find(chart.series, function (s) { return (!s.options.isInternal); }).index :\n                        0));\n                // Iterate through series and add the ones that should be shown in\n                // navigator.\n                (chart.series || []).forEach(function (series, i) {\n                    if (\n                    // Don't include existing nav series\n                    !series.options.isInternal &&\n                        (series.options.showInNavigator ||\n                            (i === baseSeriesOptions ||\n                                series.options.id === baseSeriesOptions) &&\n                                series.options.showInNavigator !== false)) {\n                        baseSeries.push(series);\n                    }\n                });\n                // When run after render, this.xAxis already exists\n                if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n                    this.updateNavigatorSeries(true, redraw);\n                }\n            };\n            /**\n             * Update series in the navigator from baseSeries, adding new if does not\n             * exist.\n             *\n             * @private\n             * @function Highcharts.Navigator.updateNavigatorSeries\n             */\n            Navigator.prototype.updateNavigatorSeries = function (addEvents, redraw) {\n                var navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n                    enableMouseTracking: false,\n                    index: null,\n                    linkedTo: null,\n                    group: 'nav',\n                    padXAxis: false,\n                    xAxis: 'navigator-x-axis',\n                    yAxis: 'navigator-y-axis',\n                    showInLegend: false,\n                    stacking: void 0,\n                    isInternal: true,\n                    states: {\n                        inactive: {\n                            opacity: 1\n                        }\n                    }\n                }, \n                // Remove navigator series that are no longer in the baseSeries\n                navigatorSeries = navigator.series =\n                    (navigator.series || []).filter(function (navSeries) {\n                        var base = navSeries.baseSeries;\n                        if (baseSeries.indexOf(base) < 0) { // Not in array\n                            // If there is still a base series connected to this\n                            // series, remove event handler and reference.\n                            if (base) {\n                                removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                                delete base.navigatorSeries;\n                            }\n                            // Kill the nav series. It may already have been\n                            // destroyed (#8715).\n                            if (navSeries.chart) {\n                                navSeries.destroy();\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                var baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n                // Go through each base series and merge the options to create new\n                // series\n                if (baseSeries && baseSeries.length) {\n                    baseSeries.forEach(function (base) {\n                        var linkedNavSeries = base.navigatorSeries, userNavOptions = extend(\n                        // Grab color and visibility from base as default\n                        {\n                            color: base.color,\n                            visible: base.visible\n                        }, !isArray(chartNavigatorSeriesOptions) ?\n                            chartNavigatorSeriesOptions :\n                            defaultOptions.navigator.series);\n                        // Don't update if the series exists in nav and we have disabled\n                        // adaptToUpdatedData.\n                        if (linkedNavSeries &&\n                            navigator.navigatorOptions.adaptToUpdatedData === false) {\n                            return;\n                        }\n                        navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                        baseOptions = base.options || {};\n                        baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                        // The dataLabels options are not merged correctly\n                        // if the settings are an array, #13847.\n                        userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                        mergedNavSeriesOptions = merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                        // Once nav series type is resolved, pick correct pointRange\n                        mergedNavSeriesOptions.pointRange = pick(\n                        // Stricte set pointRange in options\n                        userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                        // Fallback to default values, e.g. `null` for column\n                        defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                        // Merge data separately. Do a slice to avoid mutating the\n                        // navigator options from base series (#4923).\n                        var navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                        navigator.hasNavigatorData =\n                            navigator.hasNavigatorData || !!navigatorSeriesData;\n                        mergedNavSeriesOptions.data =\n                            navigatorSeriesData ||\n                                baseOptions.data && baseOptions.data.slice(0);\n                        // Update or add the series\n                        if (linkedNavSeries && linkedNavSeries.options) {\n                            linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                        }\n                        else {\n                            base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                            // Set data on initial run with dataSorting enabled (#20318)\n                            chart.setSortedData();\n                            base.navigatorSeries.baseSeries = base; // Store ref\n                            navigatorSeries.push(base.navigatorSeries);\n                        }\n                    });\n                }\n                // If user has defined data (and no base series) or explicitly defined\n                // navigator.series as an array, we create these series on top of any\n                // base series.\n                if (chartNavigatorSeriesOptions.data &&\n                    !(baseSeries && baseSeries.length) ||\n                    isArray(chartNavigatorSeriesOptions)) {\n                    navigator.hasNavigatorData = false;\n                    // Allow navigator.series to be an array\n                    chartNavigatorSeriesOptions =\n                        splat(chartNavigatorSeriesOptions);\n                    chartNavigatorSeriesOptions.forEach(function (userSeriesOptions, i) {\n                        navSeriesMixin.name =\n                            'Navigator ' + (navigatorSeries.length + 1);\n                        mergedNavSeriesOptions = merge(defaultOptions.navigator.series, {\n                            // Since we don't have a base series to pull color from,\n                            // try to fake it by using color from series with same\n                            // index. Otherwise pull from the colors array. We need\n                            // an explicit color as otherwise updates will increment\n                            // color counter and we'll get a new color for each\n                            // update of the nav series.\n                            color: chart.series[i] &&\n                                !chart.series[i].options.isInternal &&\n                                chart.series[i].color ||\n                                chart.options.colors[i] ||\n                                chart.options.colors[0]\n                        }, navSeriesMixin, userSeriesOptions);\n                        mergedNavSeriesOptions.data = userSeriesOptions.data;\n                        if (mergedNavSeriesOptions.data) {\n                            navigator.hasNavigatorData = true;\n                            navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                        }\n                    });\n                }\n                if (addEvents) {\n                    this.addBaseSeriesEvents();\n                }\n            };\n            /**\n             * Add data events.\n             * For example when main series is updated we need to recalculate extremes\n             *\n             * @private\n             * @function Highcharts.Navigator#addBaseSeriesEvent\n             */\n            Navigator.prototype.addBaseSeriesEvents = function () {\n                var _this = this;\n                var navigator = this, baseSeries = navigator.baseSeries || [];\n                // Bind modified extremes event to first base's xAxis only.\n                // In event of > 1 base-xAxes, the navigator will ignore those.\n                // Adding this multiple times to the same axis is no problem, as\n                // duplicates should be discarded by the browser.\n                if (baseSeries[0] && baseSeries[0].xAxis) {\n                    baseSeries[0].eventsToUnbind.push(addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n                }\n                baseSeries.forEach(function (base) {\n                    // Link base series show/hide to navigator series visibility\n                    base.eventsToUnbind.push(addEvent(base, 'show', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(true, false);\n                        }\n                    }));\n                    base.eventsToUnbind.push(addEvent(base, 'hide', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(false, false);\n                        }\n                    }));\n                    // Respond to updated data in the base series, unless explicitly\n                    // not adapting to data changes.\n                    if (_this.navigatorOptions.adaptToUpdatedData !== false) {\n                        if (base.xAxis) {\n                            base.eventsToUnbind.push(addEvent(base, 'updatedData', _this.updatedDataHandler));\n                        }\n                    }\n                    // Handle series removal\n                    base.eventsToUnbind.push(addEvent(base, 'remove', function () {\n                        if (this.navigatorSeries) {\n                            erase(navigator.series, this.navigatorSeries);\n                            if (defined(this.navigatorSeries.options)) {\n                                this.navigatorSeries.remove(false);\n                            }\n                            delete this.navigatorSeries;\n                        }\n                    }));\n                });\n            };\n            /**\n             * Get minimum from all base series connected to the navigator\n             * @private\n             * @param {number} currentSeriesMin\n             *        Minium from the current series\n             * @return {number}\n             *         Minimum from all series\n             */\n            Navigator.prototype.getBaseSeriesMin = function (currentSeriesMin) {\n                return this.baseSeries.reduce(function (min, series) {\n                    // (#10193)\n                    return Math.min(min, series.xData && series.xData.length ?\n                        series.xData[0] : min);\n                }, currentSeriesMin);\n            };\n            /**\n             * Set the navigator x axis extremes to reflect the total. The navigator\n             * extremes should always be the extremes of the union of all series in the\n             * chart as well as the navigator series.\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n             */\n            Navigator.prototype.modifyNavigatorAxisExtremes = function () {\n                var xAxis = this.xAxis;\n                if (typeof xAxis.getExtremes !== 'undefined') {\n                    var unionExtremes = this.getUnionExtremes(true);\n                    if (unionExtremes &&\n                        (unionExtremes.dataMin !== xAxis.min ||\n                            unionExtremes.dataMax !== xAxis.max)) {\n                        xAxis.min = unionExtremes.dataMin;\n                        xAxis.max = unionExtremes.dataMax;\n                    }\n                }\n            };\n            /**\n             * Hook to modify the base axis extremes with information from the Navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyBaseAxisExtremes\n             */\n            Navigator.prototype.modifyBaseAxisExtremes = function () {\n                var _a;\n                var baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = pick((_a = baseXAxis.ordinal) === null || _a === void 0 ? void 0 : _a.convertOverscroll(baseXAxis.options.overscroll), 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n                // When the extremes have been set by range selector button, don't\n                // stick to min or max. The range selector buttons will handle the\n                // extremes. (#5489)\n                unmutable = baseXAxis.eventArgs &&\n                    baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n                var newMax, newMin;\n                if (!unmutable) {\n                    // If the zoomed range is already at the min, move it to the right\n                    // as new data comes in\n                    if (stickToMin) {\n                        newMin = baseDataMin;\n                        newMax = newMin + range;\n                    }\n                    // If the zoomed range is already at the max, move it to the right\n                    // as new data comes in\n                    if (stickToMax) {\n                        newMax = baseDataMax + overscroll;\n                        // If stickToMin is true, the new min value is set above\n                        if (!stickToMin) {\n                            newMin = Math.max(baseDataMin, // Don't go below data extremes (#13184)\n                            newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                                navigatorSeries.xData[0] :\n                                -Number.MAX_VALUE));\n                        }\n                    }\n                    // Update the extremes\n                    if (hasSetExtremes && (stickToMin || stickToMax)) {\n                        if (isNumber(newMin)) {\n                            baseXAxis.min = baseXAxis.userMin = newMin;\n                            baseXAxis.max = baseXAxis.userMax = newMax;\n                        }\n                    }\n                }\n                // Reset\n                navigator.stickToMin =\n                    navigator.stickToMax = null;\n            };\n            /**\n             * Handler for updated data on the base series. When data is modified, the\n             * navigator series must reflect it. This is called from the Chart.redraw\n             * function before axis and series extremes are computed.\n             *\n             * @private\n             * @function Highcharts.Navigator#updateDataHandler\n             */\n            Navigator.prototype.updatedDataHandler = function () {\n                var navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n                    Math.round(navigator.zoomedMin) === 0 :\n                    Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n                // If the scrollbar is scrolled all the way to the right, keep right as\n                // new data comes in, unless user set navigator.stickToMax to false.\n                navigator.stickToMax = pick(this.chart.options.navigator &&\n                    this.chart.options.navigator.stickToMax, shouldStickToMax);\n                navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n                // Set the navigator series data to the new data of the base series\n                if (navigatorSeries && !navigator.hasNavigatorData) {\n                    navigatorSeries.options.pointStart = baseSeries.xData[0];\n                    navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n                }\n            };\n            /**\n             * Detect if the zoomed area should stick to the minimum, #14742.\n             *\n             * @private\n             * @function Highcharts.Navigator#shouldStickToMin\n             */\n            Navigator.prototype.shouldStickToMin = function (baseSeries, navigator) {\n                var xDataMin = navigator.getBaseSeriesMin(baseSeries.xData[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n                var stickToMin = true;\n                if (isNumber(max) && isNumber(min)) {\n                    // If range declared, stick to the minimum only if the range\n                    // is smaller than the data set range.\n                    if (range && max - xDataMin > 0) {\n                        stickToMin = max - xDataMin < range;\n                    }\n                    else {\n                        // If the current axis minimum falls outside the new\n                        // updated dataset, we must adjust.\n                        stickToMin = min <= xDataMin;\n                    }\n                }\n                else {\n                    stickToMin = false; // #15864\n                }\n                return stickToMin;\n            };\n            /**\n             * Add chart events, like redrawing navigator, when chart requires that.\n             *\n             * @private\n             * @function Highcharts.Navigator#addChartEvents\n             */\n            Navigator.prototype.addChartEvents = function () {\n                if (!this.eventsToUnbind) {\n                    this.eventsToUnbind = [];\n                }\n                this.eventsToUnbind.push(\n                // Move the scrollbar after redraw, like after data updata even if\n                // axes don't redraw\n                addEvent(this.chart, 'redraw', function () {\n                    var navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                        navigator.baseSeries[0] &&\n                        navigator.baseSeries[0].xAxis ||\n                        this.xAxis[0]); // #5709, #13114\n                    if (xAxis) {\n                        navigator.render(xAxis.min, xAxis.max);\n                    }\n                }), \n                // Make room for the navigator, can be placed around the chart:\n                addEvent(this.chart, 'getMargins', function () {\n                    var chart = this, navigator = chart.navigator;\n                    var marginName = navigator.opposite ?\n                        'plotTop' : 'marginBottom';\n                    if (chart.inverted) {\n                        marginName = navigator.opposite ?\n                            'marginRight' : 'plotLeft';\n                    }\n                    chart[marginName] =\n                        (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                            navigator.height + navigator.scrollbarHeight :\n                            0) + navigator.navigatorOptions.margin;\n                }), addEvent(Navigator, 'setRange', function (e) {\n                    this.chart.xAxis[0].setExtremes(e.min, e.max, e.redraw, e.animation, e.eventArguments);\n                }));\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Navigator#destroy\n             */\n            Navigator.prototype.destroy = function () {\n                var _this = this;\n                // Disconnect events added in addEvents\n                this.removeEvents();\n                if (this.xAxis) {\n                    erase(this.chart.xAxis, this.xAxis);\n                    erase(this.chart.axes, this.xAxis);\n                }\n                if (this.yAxis) {\n                    erase(this.chart.yAxis, this.yAxis);\n                    erase(this.chart.axes, this.yAxis);\n                }\n                // Destroy series\n                (this.series || []).forEach(function (s) {\n                    if (s.destroy) {\n                        s.destroy();\n                    }\n                });\n                // Destroy properties\n                [\n                    'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n                    'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n                    'rendered'\n                ].forEach(function (prop) {\n                    if (_this[prop] && _this[prop].destroy) {\n                        _this[prop].destroy();\n                    }\n                    _this[prop] = null;\n                });\n                // Destroy elements in collection\n                [this.handles].forEach(function (coll) {\n                    destroyObjectProperties(coll);\n                });\n            };\n            return Navigator;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Navigator;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Declarations\n         *\n         * */\n        /**\n         * Language object. The language object is global and it can't be set\n         * on each chart initialization. Instead, use `Highcharts.setOptions` to\n         * set it before any chart is initialized.\n         *\n         * ```js\n         * Highcharts.setOptions({\n         *     lang: {\n         *         months: [\n         *             'Janvier', 'FÃ©vrier', 'Mars', 'Avril',\n         *             'Mai', 'Juin', 'Juillet', 'AoÃ»t',\n         *             'Septembre', 'Octobre', 'Novembre', 'DÃ©cembre'\n         *         ],\n         *         weekdays: [\n         *             'Dimanche', 'Lundi', 'Mardi', 'Mercredi',\n         *             'Jeudi', 'Vendredi', 'Samedi'\n         *         ]\n         *     }\n         * });\n         * ```\n         *\n         * @optionparent lang\n         */\n        var lang = {\n            /**\n             * The text for the label for the range selector buttons.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorZoom: 'Zoom',\n            /**\n             * The text for the label for the \"from\" input box in the range\n             * selector. Since v9.0, this string is empty as the label is not\n             * rendered by default.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorFrom: '',\n            /**\n             * The text for the label for the \"to\" input box in the range selector.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorTo: 'â†’'\n        };\n        /**\n         * The range selector is a tool for selecting ranges to display within\n         * the chart. It provides buttons to select preconfigured ranges in\n         * the chart, like 1 day, 1 week, 1 month etc. It also provides input\n         * boxes where min and max dates can be manually input.\n         *\n         * @product      highstock gantt\n         * @optionparent rangeSelector\n         */\n        var rangeSelector = {\n            /**\n             * Whether to enable all buttons from the start. By default buttons are\n             * only enabled if the corresponding time range exists on the X axis,\n             * but enabling all buttons allows for dynamically loading different\n             * time ranges.\n             *\n             * @sample {highstock} stock/rangeselector/allbuttonsenabled-true/\n             *         All buttons enabled\n             *\n             * @since     2.0.3\n             */\n            allButtonsEnabled: false,\n            /**\n             * An array of configuration objects for the buttons.\n             *\n             * Defaults to:\n             * ```js\n             * buttons: [{\n             *     type: 'month',\n             *     count: 1,\n             *     text: '1m',\n             *     title: 'View 1 month'\n             * }, {\n             *     type: 'month',\n             *     count: 3,\n             *     text: '3m',\n             *     title: 'View 3 months'\n             * }, {\n             *     type: 'month',\n             *     count: 6,\n             *     text: '6m',\n             *     title: 'View 6 months'\n             * }, {\n             *     type: 'ytd',\n             *     text: 'YTD',\n             *     title: 'View year to date'\n             * }, {\n             *     type: 'year',\n             *     count: 1,\n             *     text: '1y',\n             *     title: 'View 1 year'\n             * }, {\n             *     type: 'all',\n             *     text: 'All',\n             *     title: 'View all'\n             * }]\n             * ```\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by buttons\n             *\n             * @type      {Array<*>}\n             */\n            buttons: void 0,\n            /**\n             * How many units of the defined type the button should span. If `type`\n             * is \"month\" and `count` is 3, the button spans three months.\n             *\n             * @type      {number}\n             * @default   1\n             * @apioption rangeSelector.buttons.count\n             */\n            /**\n             * Fires when clicking on the rangeSelector button. One parameter,\n             * event, is passed to the function, containing common event\n             * information.\n             *\n             * ```js\n             * click: function(e) {\n             *   console.log(this);\n             * }\n             * ```\n             *\n             * Return false to stop default button's click action.\n             *\n             * @sample {highstock} stock/rangeselector/button-click/\n             *         Click event on the button\n             *\n             * @type      {Highcharts.RangeSelectorClickCallbackFunction}\n             * @apioption rangeSelector.buttons.events.click\n             */\n            /**\n             * Additional range (in milliseconds) added to the end of the calculated\n             * time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMax\n             */\n            /**\n             * Additional range (in milliseconds) added to the start of the\n             * calculated time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMin\n             */\n            /**\n             * When buttons apply dataGrouping on a series, by default zooming\n             * in/out will deselect buttons and unset dataGrouping. Enable this\n             * option to keep buttons selected when extremes change.\n             *\n             * @sample {highstock} stock/rangeselector/preserve-datagrouping/\n             *         Different preserveDataGrouping settings\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     6.1.2\n             * @apioption rangeSelector.buttons.preserveDataGrouping\n             */\n            /**\n             * A custom data grouping object for each button.\n             *\n             * @see [series.dataGrouping](#plotOptions.series.dataGrouping)\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by range selector buttons\n             *\n             * @type      {*}\n             * @extends   plotOptions.series.dataGrouping\n             * @apioption rangeSelector.buttons.dataGrouping\n             */\n            /**\n             * The text for the button itself.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.text\n             */\n            /**\n             * Explanation for the button, shown as a tooltip on hover, and used by\n             * assistive technology.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.title\n             */\n            /**\n             * Defined the time span for the button. Can be one of `millisecond`,\n             * `second`, `minute`, `hour`, `day`, `week`, `month`, `year`, `ytd`,\n             * and `all`.\n             *\n             * @type       {Highcharts.RangeSelectorButtonTypeValue}\n             * @apioption  rangeSelector.buttons.type\n             */\n            /**\n             * The space in pixels between the buttons in the range selector.\n             */\n            buttonSpacing: 5,\n            /**\n             * Whether to collapse the range selector buttons into a dropdown when\n             * there is not enough room to show everything in a single row, instead\n             * of dividing the range selector into multiple rows.\n             * Can be one of the following:\n             *  - `always`: Always collapse\n             *  - `responsive`: Only collapse when there is not enough room\n             *  - `never`: Never collapse\n             *\n             * @sample {highstock} stock/rangeselector/dropdown/\n             *         Dropdown option\n             *\n             * @validvalue [\"always\", \"responsive\", \"never\"]\n             * @since 9.0.0\n             */\n            dropdown: 'responsive',\n            /**\n             * Enable or disable the range selector. Default to `true` for stock\n             * charts, using the `stockChart` factory.\n             *\n             * @sample {highstock} stock/rangeselector/enabled/\n             *         Disable the range selector\n             *\n             * @type {boolean|undefined}\n             * @default {highstock} true\n             */\n            enabled: void 0,\n            /**\n             * The vertical alignment of the rangeselector box. Allowed properties\n             * are `top`, `middle`, `bottom`.\n             *\n             * @sample {highstock} stock/rangeselector/vertical-align-middle/\n             *         Middle\n             * @sample {highstock} stock/rangeselector/vertical-align-bottom/\n             *         Bottom\n             *\n             * @type  {Highcharts.VerticalAlignValue}\n             * @since 6.0.0\n             */\n            verticalAlign: 'top',\n            /**\n             * A collection of attributes for the buttons. The object takes SVG\n             * attributes like `fill`, `stroke`, `stroke-width`, as well as `style`,\n             * a collection of CSS properties for the text.\n             *\n             * The object can also be extended with states, so you can set\n             * presentational options for `hover`, `select` or `disabled` button\n             * states.\n             *\n             * CSS styles for the text label.\n             *\n             * In styled mode, the buttons are styled by the\n             * `.highcharts-range-selector-buttons .highcharts-button` rule with its\n             * different states.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.SVGAttributes}\n             */\n            buttonTheme: {\n                /** @ignore */\n                width: 28,\n                /** @ignore */\n                height: 18,\n                /** @ignore */\n                padding: 2,\n                /** @ignore */\n                zIndex: 7 // #484, #852\n            },\n            /**\n             * When the rangeselector is floating, the plot area does not reserve\n             * space for it. This opens for positioning anywhere on the chart.\n             *\n             * @sample {highstock} stock/rangeselector/floating/\n             *         Placing the range selector between the plot area and the\n             *         navigator\n             *\n             * @since 6.0.0\n             */\n            floating: false,\n            /**\n             * The x offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            x: 0,\n            /**\n             * The y offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            y: 0,\n            /**\n             * Deprecated. The height of the range selector. Currently it is\n             * calculated dynamically.\n             *\n             * @deprecated\n             * @type  {number|undefined}\n             * @since 2.1.9\n             */\n            height: void 0,\n            /**\n             * The border color of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.ColorString}\n             * @since     1.3.7\n             */\n            inputBoxBorderColor: 'none',\n            /**\n             * The pixel height of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @since     1.3.7\n             */\n            inputBoxHeight: 17,\n            /**\n             * The pixel width of the date input boxes. When `undefined`, the width\n             * is fitted to the rendered content.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type   {number|undefined}\n             * @since  1.3.7\n             */\n            inputBoxWidth: void 0,\n            /**\n             * The date format in the input boxes when not selected for editing.\n             * Defaults to `%e %b %Y`.\n             *\n             * This is used to determine which type of input to show,\n             * `datetime-local`, `date` or `time` and falling back to `text` when\n             * the browser does not support the input type or the format contains\n             * milliseconds.\n             *\n             * @sample {highstock} stock/rangeselector/input-type/\n             *         Input types\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputDateFormat: '%e %b %Y',\n            /**\n             * A custom callback function to parse values entered in the input boxes\n             * and return a valid JavaScript time as milliseconds since 1970.\n             * The first argument passed is a value to parse,\n             * second is a boolean indicating use of the UTC time.\n             *\n             * This will only get called for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             * @type      {Highcharts.RangeSelectorParseCallbackFunction}\n             * @since     1.3.3\n             */\n            inputDateParser: void 0,\n            /**\n             * The date format in the input boxes when they are selected for\n             * editing. This must be a format that is recognized by JavaScript\n             * Date.parse.\n             *\n             * This will only be used for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputEditDateFormat: '%Y-%m-%d',\n            /**\n             * Enable or disable the date input boxes.\n             */\n            inputEnabled: true,\n            /**\n             * Positioning for the input boxes. Allowed properties are `align`,\n             *  `x` and `y`.\n             *\n             * @since 1.2.4\n             */\n            inputPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'right',\n                /**\n                 * X offset of the input row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the input row.\n                 */\n                y: 0\n            },\n            /**\n             * The space in pixels between the labels and the date input boxes in\n             * the range selector.\n             *\n             * @since 9.0.0\n             */\n            inputSpacing: 5,\n            /**\n             * The index of the button to appear pre-selected. If the selected range\n             * exceeds the total data range and the 'all' option is available,\n             * the 'all' option, showing the full range, is automatically selected.\n             *\n             * @type      {number}\n             */\n            selected: void 0,\n            /**\n             * Positioning for the button row.\n             *\n             * @since 1.2.4\n             */\n            buttonPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'left',\n                /**\n                 * X offset of the button row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the button row.\n                 */\n                y: 0\n            },\n            /**\n             * CSS for the HTML inputs in the range selector.\n             *\n             * In styled mode, the inputs are styled by the\n             * `.highcharts-range-input text` rule in SVG mode, and\n             * `input.highcharts-range-selector` when active.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.CSSObject}\n             * @apioption rangeSelector.inputStyle\n             */\n            inputStyle: {\n                /** @ignore */\n                color: \"#334eff\" /* Palette.highlightColor80 */,\n                /** @ignore */\n                cursor: 'pointer',\n                /** @ignore */\n                fontSize: '0.8em'\n            },\n            /**\n             * CSS styles for the labels - the Zoom, From and To texts.\n             *\n             * In styled mode, the labels are styled by the\n             * `.highcharts-range-label` class.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.CSSObject}\n             */\n            labelStyle: {\n                /** @ignore */\n                color: \"#666666\" /* Palette.neutralColor60 */,\n                /** @ignore */\n                fontSize: '0.8em'\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorDefaults = {\n            lang: lang,\n            rangeSelector: rangeSelector\n        };\n\n        return RangeSelectorDefaults;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Core/Utilities.js']], function (D, H, RangeSelectorDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var chartDestroyEvents = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var RangeSelectorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the axis min value based on the range option and the current max. For\n         * stock charts this is extended via the {@link RangeSelector} so that if the\n         * selected range is a multiple of months or years, it is compensated for\n         * various month lengths.\n         *\n         * @private\n         * @function Highcharts.Axis#minFromRange\n         * @return {number|undefined}\n         *         The new minimum value.\n         */\n        function axisMinFromRange() {\n            var rangeOptions = this.range, type = rangeOptions.type, max = this.max, time = this.chart.time, \n            // Get the true range from a start date\n            getTrueRange = function (base, count) {\n                var timeName = type === 'year' ?\n                    'FullYear' : 'Month';\n                var date = new time.Date(base);\n                var basePeriod = time.get(timeName, date);\n                time.set(timeName, date, basePeriod + count);\n                if (basePeriod === time.get(timeName, date)) {\n                    time.set('Date', date, 0); // #6537\n                }\n                return date.getTime() - base;\n            };\n            var min, range;\n            if (isNumber(rangeOptions)) {\n                min = max - rangeOptions;\n                range = rangeOptions;\n            }\n            else if (rangeOptions) {\n                min = max + getTrueRange(max, -(rangeOptions.count || 1));\n                // Let the fixedRange reflect initial settings (#5930)\n                if (this.chart) {\n                    this.chart.setFixedRange(max - min);\n                }\n            }\n            var dataMin = pick(this.dataMin, Number.MIN_VALUE);\n            if (!isNumber(min)) {\n                min = dataMin;\n            }\n            if (min <= dataMin) {\n                min = dataMin;\n                if (typeof range === 'undefined') { // #4501\n                    range = getTrueRange(min, rangeOptions.count);\n                }\n                this.newMax = Math.min(min + range, pick(this.dataMax, Number.MAX_VALUE));\n            }\n            if (!isNumber(max)) {\n                min = void 0;\n            }\n            else if (!isNumber(rangeOptions) &&\n                rangeOptions &&\n                rangeOptions._offsetMin) {\n                min += rangeOptions._offsetMin;\n            }\n            return min;\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, RangeSelectorClass) {\n            RangeSelectorConstructor = RangeSelectorClass;\n            if (pushUnique(composed, 'RangeSelector')) {\n                var chartProto = ChartClass.prototype;\n                AxisClass.prototype.minFromRange = axisMinFromRange;\n                addEvent(ChartClass, 'afterGetContainer', onChartAfterGetContainer);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'destroy', onChartDestroy);\n                addEvent(ChartClass, 'getMargins', onChartGetMargins);\n                addEvent(ChartClass, 'render', onChartRender);\n                addEvent(ChartClass, 'update', onChartUpdate);\n                chartProto.callbacks.push(onChartCallback);\n                extend(defaultOptions, { rangeSelector: RangeSelectorDefaults.rangeSelector });\n                extend(defaultOptions.lang, RangeSelectorDefaults.lang);\n            }\n        }\n        /**\n         * Initialize rangeselector for stock charts\n         * @private\n         */\n        function onChartAfterGetContainer() {\n            if (this.options.rangeSelector &&\n                this.options.rangeSelector.enabled) {\n                this.rangeSelector = new RangeSelectorConstructor(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartBeforeRender() {\n            var chart = this, axes = chart.axes, rangeSelector = chart.rangeSelector;\n            if (rangeSelector) {\n                if (isNumber(rangeSelector.deferredYTDClick)) {\n                    rangeSelector.clickButton(rangeSelector.deferredYTDClick);\n                    delete rangeSelector.deferredYTDClick;\n                }\n                axes.forEach(function (axis) {\n                    axis.updateNames();\n                    axis.setScale();\n                });\n                chart.getAxisMargins();\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var extremes, legend, alignTo, verticalAlign;\n            var rangeSelector = chart.rangeSelector, redraw = function () {\n                if (rangeSelector) {\n                    extremes = chart.xAxis[0].getExtremes();\n                    legend = chart.legend;\n                    verticalAlign = (rangeSelector &&\n                        rangeSelector.options.verticalAlign);\n                    if (isNumber(extremes.min)) {\n                        rangeSelector.render(extremes.min, extremes.max);\n                    }\n                    // Re-align the legend so that it's below the rangeselector\n                    if (legend.display &&\n                        verticalAlign === 'top' &&\n                        verticalAlign === legend.options.verticalAlign) {\n                        // Create a new alignment box for the legend.\n                        alignTo = merge(chart.spacingBox);\n                        if (legend.options.layout === 'vertical') {\n                            alignTo.y = chart.plotTop;\n                        }\n                        else {\n                            alignTo.y += rangeSelector.getHeight();\n                        }\n                        legend.group.placed = false; // Don't animate the alignment.\n                        legend.align(alignTo);\n                    }\n                }\n            };\n            if (rangeSelector) {\n                var events = find(chartDestroyEvents, function (e) { return e[0] === chart; });\n                if (!events) {\n                    chartDestroyEvents.push([chart, [\n                            // Redraw the scroller on setExtremes\n                            addEvent(chart.xAxis[0], 'afterSetExtremes', function (e) {\n                                if (rangeSelector) {\n                                    rangeSelector.render(e.min, e.max);\n                                }\n                            }),\n                            // Redraw the scroller chart resize\n                            addEvent(chart, 'redraw', redraw)\n                        ]]);\n                }\n                // Do it now\n                redraw();\n            }\n        }\n        /**\n         * Remove resize/afterSetExtremes at chart destroy.\n         * @private\n         */\n        function onChartDestroy() {\n            for (var i = 0, iEnd = chartDestroyEvents.length; i < iEnd; ++i) {\n                var events = chartDestroyEvents[i];\n                if (events[0] === this) {\n                    events[1].forEach(function (unbind) { return unbind(); });\n                    chartDestroyEvents.splice(i, 1);\n                    return;\n                }\n            }\n        }\n        /**\n         *\n         */\n        function onChartGetMargins() {\n            var rangeSelector = this.rangeSelector;\n            if (rangeSelector) {\n                var rangeSelectorHeight = rangeSelector.getHeight();\n                if (this.extraTopMargin) {\n                    this.plotTop += rangeSelectorHeight;\n                }\n                if (this.extraBottomMargin) {\n                    this.marginBottom += rangeSelectorHeight;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartRender() {\n            var chart = this, rangeSelector = chart.rangeSelector;\n            if (rangeSelector && !rangeSelector.options.floating) {\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (verticalAlign === 'bottom') {\n                    this.extraBottomMargin = true;\n                }\n                else if (verticalAlign !== 'middle') {\n                    this.extraTopMargin = true;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartUpdate(e) {\n            var chart = this, options = e.options, optionsRangeSelector = options.rangeSelector, extraBottomMarginWas = this.extraBottomMargin, extraTopMarginWas = this.extraTopMargin;\n            var rangeSelector = chart.rangeSelector;\n            if (optionsRangeSelector &&\n                optionsRangeSelector.enabled &&\n                !defined(rangeSelector) &&\n                this.options.rangeSelector) {\n                this.options.rangeSelector.enabled = true;\n                this.rangeSelector = rangeSelector = new RangeSelectorConstructor(this);\n            }\n            this.extraBottomMargin = false;\n            this.extraTopMargin = false;\n            if (rangeSelector) {\n                onChartCallback(this);\n                var verticalAlign = (optionsRangeSelector &&\n                    optionsRangeSelector.verticalAlign) || (rangeSelector.options && rangeSelector.options.verticalAlign);\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n                if (this.extraBottomMargin !== extraBottomMarginWas ||\n                    this.extraTopMargin !== extraTopMarginWas) {\n                    this.isDirtyBox = true;\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorComposition = {\n            compose: compose\n        };\n\n        return RangeSelectorComposition;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelector.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorComposition.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (Axis, D, H, RangeSelectorComposition, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, createElement = U.createElement, css = U.css, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, discardElement = U.discardElement, extend = U.extend, fireEvent = U.fireEvent, isNumber = U.isNumber, merge = U.merge, objectEach = U.objectEach, pad = U.pad, pick = U.pick, pInt = U.pInt, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the preferred input type based on a date format string.\n         *\n         * @private\n         * @function preferredInputType\n         */\n        function preferredInputType(format) {\n            var ms = format.indexOf('%L') !== -1;\n            if (ms) {\n                return 'text';\n            }\n            var date = ['a', 'A', 'd', 'e', 'w', 'b', 'B', 'm', 'o', 'y', 'Y']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            var time = ['H', 'k', 'I', 'l', 'M', 'S']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            if (date && time) {\n                return 'datetime-local';\n            }\n            if (date) {\n                return 'date';\n            }\n            if (time) {\n                return 'time';\n            }\n            return 'text';\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The range selector.\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelector\n         * @param {Highcharts.Chart} chart\n         */\n        var RangeSelector = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function RangeSelector(chart) {\n                this.buttonOptions = RangeSelector.prototype.defaultButtons;\n                this.initialButtonGroupWidth = 0;\n                this.chart = chart;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            RangeSelector.compose = function (AxisClass, ChartClass) {\n                RangeSelectorComposition.compose(AxisClass, ChartClass, RangeSelector);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * The method to run when one of the buttons in the range selectors is\n             * clicked\n             *\n             * @private\n             * @function Highcharts.RangeSelector#clickButton\n             * @param {number} i\n             *        The index of the button\n             * @param {boolean} [redraw]\n             */\n            RangeSelector.prototype.clickButton = function (i, redraw) {\n                var rangeSelector = this, chart = rangeSelector.chart, rangeOptions = rangeSelector.buttonOptions[i], baseAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || baseAxis || {}, type = rangeOptions.type, dataGrouping = rangeOptions.dataGrouping;\n                var dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, newMin, newMax = baseAxis && Math.round(Math.min(baseAxis.max, pick(dataMax, baseAxis.max))), // #1568\n                baseXAxisOptions, range = rangeOptions._range, rangeMin, minSetting, rangeSetting, ctx, ytdExtremes, addOffsetMin = true;\n                // Chart has no data, base series is removed\n                if (dataMin === null || dataMax === null) {\n                    return;\n                }\n                rangeSelector.setSelected(i);\n                // Apply dataGrouping associated to button\n                if (dataGrouping) {\n                    this.forcedDataGrouping = true;\n                    Axis.prototype.setDataGrouping.call(baseAxis || { chart: this.chart }, dataGrouping, false);\n                    this.frozenStates = rangeOptions.preserveDataGrouping;\n                }\n                // Apply range\n                if (type === 'month' || type === 'year') {\n                    if (!baseAxis) {\n                        // This is set to the user options and picked up later when the\n                        // axis is instantiated so that we know the min and max.\n                        range = rangeOptions;\n                    }\n                    else {\n                        ctx = {\n                            range: rangeOptions,\n                            max: newMax,\n                            chart: chart,\n                            dataMin: dataMin,\n                            dataMax: dataMax\n                        };\n                        newMin = baseAxis.minFromRange.call(ctx);\n                        if (isNumber(ctx.newMax)) {\n                            newMax = ctx.newMax;\n                        }\n                        // #15799: offsetMin is added in minFromRange so that it works\n                        // with pre-selected buttons as well\n                        addOffsetMin = false;\n                    }\n                    // Fixed times like minutes, hours, days\n                }\n                else if (range) {\n                    newMin = Math.max(newMax - range, dataMin);\n                    newMax = Math.min(newMin + range, dataMax);\n                    addOffsetMin = false;\n                }\n                else if (type === 'ytd') {\n                    // On user clicks on the buttons, or a delayed action running from\n                    // the beforeRender event (below), the baseAxis is defined.\n                    if (baseAxis) {\n                        // When \"ytd\" is the pre-selected button for the initial view,\n                        // its calculation is delayed and rerun in the beforeRender\n                        // event (below). When the series are initialized, but before\n                        // the chart is rendered, we have access to the xData array\n                        // (#942).\n                        if (typeof dataMax === 'undefined' ||\n                            typeof dataMin === 'undefined') {\n                            dataMin = Number.MAX_VALUE;\n                            dataMax = Number.MIN_VALUE;\n                            chart.series.forEach(function (series) {\n                                // Reassign it to the last item\n                                var xData = series.xData;\n                                if (xData) {\n                                    dataMin = Math.min(xData[0], dataMin);\n                                    dataMax = Math.max(xData[xData.length - 1], dataMax);\n                                }\n                            });\n                            redraw = false;\n                        }\n                        ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC);\n                        newMin = rangeMin = ytdExtremes.min;\n                        newMax = ytdExtremes.max;\n                        // \"ytd\" is pre-selected. We don't yet have access to processed\n                        // point and extremes data (things like pointStart and pointInterval\n                        // are missing), so we delay the process (#942)\n                    }\n                    else {\n                        rangeSelector.deferredYTDClick = i;\n                        return;\n                    }\n                }\n                else if (type === 'all' && baseAxis) {\n                    // If the navigator exist and the axis range is declared reset that\n                    // range and from now on only use the range set by a user, #14742.\n                    if (chart.navigator && chart.navigator.baseSeries[0]) {\n                        chart.navigator.baseSeries[0].xAxis.options.range = void 0;\n                    }\n                    newMin = dataMin;\n                    newMax = dataMax;\n                }\n                if (addOffsetMin && rangeOptions._offsetMin && defined(newMin)) {\n                    newMin += rangeOptions._offsetMin;\n                }\n                if (rangeOptions._offsetMax && defined(newMax)) {\n                    newMax += rangeOptions._offsetMax;\n                }\n                if (this.dropdown) {\n                    this.dropdown.selectedIndex = i + 1;\n                }\n                // Update the chart\n                if (!baseAxis) {\n                    // Axis not yet instantiated. Temporarily set min and range\n                    // options and remove them on chart load (#4317).\n                    baseXAxisOptions = splat(chart.options.xAxis)[0];\n                    rangeSetting = baseXAxisOptions.range;\n                    baseXAxisOptions.range = range;\n                    minSetting = baseXAxisOptions.min;\n                    baseXAxisOptions.min = rangeMin;\n                    addEvent(chart, 'load', function resetMinAndRange() {\n                        chart.setFixedRange(rangeOptions._range);\n                        baseXAxisOptions.range = rangeSetting;\n                        baseXAxisOptions.min = minSetting;\n                    });\n                }\n                else {\n                    // Existing axis object. Set extremes after render time.\n                    baseAxis.setExtremes(newMin, newMax, pick(redraw, true), void 0, // Auto animation\n                    {\n                        trigger: 'rangeSelectorButton',\n                        rangeSelectorButton: rangeOptions\n                    });\n                    chart.setFixedRange(rangeOptions._range);\n                }\n                fireEvent(this, 'afterBtnClick');\n            };\n            /**\n             * Set the selected option. This method only sets the internal flag, it\n             * doesn't update the buttons or the actual zoomed range.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setSelected\n             * @param {number} [selected]\n             */\n            RangeSelector.prototype.setSelected = function (selected) {\n                this.selected = this.options.selected = selected;\n            };\n            /**\n             * Initialize the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#init\n             * @param {Highcharts.Chart} chart\n             */\n            RangeSelector.prototype.init = function (chart) {\n                var rangeSelector = this, options = chart.options.rangeSelector, buttonOptions = (options.buttons || rangeSelector.defaultButtons.slice()), selectedOption = options.selected, blurInputs = function () {\n                    var minInput = rangeSelector.minInput, maxInput = rangeSelector.maxInput;\n                    // #3274 in some case blur is not defined\n                    if (minInput && !!minInput.blur) {\n                        fireEvent(minInput, 'blur');\n                    }\n                    if (maxInput && !!maxInput.blur) {\n                        fireEvent(maxInput, 'blur');\n                    }\n                };\n                rangeSelector.chart = chart;\n                rangeSelector.options = options;\n                rangeSelector.buttons = [];\n                rangeSelector.buttonOptions = buttonOptions;\n                this.eventsToUnbind = [];\n                this.eventsToUnbind.push(addEvent(chart.container, 'mousedown', blurInputs));\n                this.eventsToUnbind.push(addEvent(chart, 'resize', blurInputs));\n                // Extend the buttonOptions with actual range\n                buttonOptions.forEach(rangeSelector.computeButtonRange);\n                // Zoomed range based on a pre-selected button index\n                if (typeof selectedOption !== 'undefined' &&\n                    buttonOptions[selectedOption]) {\n                    this.clickButton(selectedOption, false);\n                }\n                this.eventsToUnbind.push(addEvent(chart, 'load', function () {\n                    // If a data grouping is applied to the current button, release it\n                    // when extremes change\n                    if (chart.xAxis && chart.xAxis[0]) {\n                        addEvent(chart.xAxis[0], 'setExtremes', function (e) {\n                            if (isNumber(this.max) &&\n                                isNumber(this.min) &&\n                                this.max - this.min !== chart.fixedRange &&\n                                e.trigger !== 'rangeSelectorButton' &&\n                                e.trigger !== 'updatedData' &&\n                                rangeSelector.forcedDataGrouping &&\n                                !rangeSelector.frozenStates) {\n                                this.setDataGrouping(false, false);\n                            }\n                        });\n                    }\n                }));\n            };\n            /**\n             * Dynamically update the range selector buttons after a new range has been\n             * set\n             *\n             * @private\n             * @function Highcharts.RangeSelector#updateButtonStates\n             */\n            RangeSelector.prototype.updateButtonStates = function () {\n                var rangeSelector = this, chart = this.chart, dropdown = this.dropdown, baseAxis = chart.xAxis[0], actualRange = Math.round(baseAxis.max - baseAxis.min), hasNoData = !baseAxis.hasVisibleSeries, day = 24 * 36e5, // A single day in milliseconds\n                unionExtremes = (chart.scroller &&\n                    chart.scroller.getUnionExtremes()) || baseAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC), ytdMin = ytdExtremes.min, ytdMax = ytdExtremes.max, selected = rangeSelector.selected, allButtonsEnabled = rangeSelector.options.allButtonsEnabled, buttons = rangeSelector.buttons;\n                var selectedExists = isNumber(selected), isSelectedTooGreat = false;\n                rangeSelector.buttonOptions.forEach(function (rangeOptions, i) {\n                    var _a;\n                    var range = rangeOptions._range, type = rangeOptions.type, count = rangeOptions.count || 1, button = buttons[i], offsetRange = rangeOptions._offsetMax -\n                        rangeOptions._offsetMin, isSelected = i === selected, \n                    // Disable buttons where the range exceeds what is allowed in\n                    // the current view\n                    isTooGreatRange = range >\n                        dataMax - dataMin, \n                    // Disable buttons where the range is smaller than the minimum\n                    // range\n                    isTooSmallRange = range < baseAxis.minRange;\n                    var state = 0, \n                    // Do not select the YTD button if not explicitly told so\n                    isYTDButNotSelected = false, \n                    // Disable the All button if we're already showing all\n                    isAllButAlreadyShowingAll = false, isSameRange = range === actualRange;\n                    if (isSelected && isTooGreatRange) {\n                        isSelectedTooGreat = true;\n                    }\n                    if (baseAxis.isOrdinal &&\n                        ((_a = baseAxis.ordinal) === null || _a === void 0 ? void 0 : _a.positions) &&\n                        range &&\n                        actualRange < range) {\n                        // Handle ordinal ranges\n                        var positions = baseAxis.ordinal.positions;\n                        if (positions[positions.length - 1] - positions[0] > range) {\n                            isSameRange = true;\n                        }\n                    }\n                    else if (\n                    // Months and years have variable range so we check the extremes\n                    (type === 'month' || type === 'year') &&\n                        (actualRange + 36e5 >=\n                            { month: 28, year: 365 }[type] * day * count - offsetRange) &&\n                        (actualRange - 36e5 <=\n                            { month: 31, year: 366 }[type] * day * count + offsetRange)) {\n                        isSameRange = true;\n                    }\n                    else if (type === 'ytd') {\n                        isSameRange = (ytdMax - ytdMin + offsetRange) === actualRange;\n                        isYTDButNotSelected = !isSelected;\n                    }\n                    else if (type === 'all') {\n                        isSameRange = (baseAxis.max - baseAxis.min >=\n                            dataMax - dataMin);\n                        isAllButAlreadyShowingAll = (!isSelected &&\n                            selectedExists &&\n                            isSameRange);\n                    }\n                    // The new zoom area happens to match the range for a button - mark\n                    // it selected. This happens when scrolling across an ordinal gap.\n                    // It can be seen in the intraday demos when selecting 1h and scroll\n                    // across the night gap.\n                    var disable = (!allButtonsEnabled &&\n                        !(isSelectedTooGreat && type === 'all') &&\n                        (isTooGreatRange ||\n                            isTooSmallRange ||\n                            isAllButAlreadyShowingAll ||\n                            hasNoData));\n                    var select = ((isSelectedTooGreat && type === 'all') ||\n                        (isSelected && isSameRange) ||\n                        (isSameRange && !selectedExists && !isYTDButNotSelected) ||\n                        (isSelected && rangeSelector.frozenStates));\n                    if (disable) {\n                        state = 3;\n                    }\n                    else if (select) {\n                        selectedExists = true; // Only one button can be selected\n                        state = 2;\n                    }\n                    // If state has changed, update the button\n                    if (button.state !== state) {\n                        button.setState(state);\n                        if (dropdown) {\n                            dropdown.options[i + 1].disabled = disable;\n                            if (state === 2) {\n                                dropdown.selectedIndex = i + 1;\n                            }\n                        }\n                        // Reset (#9209)\n                        if (state === 0 && selected === i) {\n                            rangeSelector.setSelected();\n                        }\n                        else if ((state === 2 && !defined(selected)) ||\n                            isSelectedTooGreat) {\n                            rangeSelector.setSelected(i);\n                        }\n                    }\n                });\n            };\n            /**\n             * Compute and cache the range for an individual button\n             *\n             * @private\n             * @function Highcharts.RangeSelector#computeButtonRange\n             * @param {Highcharts.RangeSelectorButtonsOptions} rangeOptions\n             */\n            RangeSelector.prototype.computeButtonRange = function (rangeOptions) {\n                var type = rangeOptions.type, count = rangeOptions.count || 1, \n                // These time intervals have a fixed number of milliseconds, as\n                // opposed to month, ytd and year\n                fixedTimes = {\n                    millisecond: 1,\n                    second: 1000,\n                    minute: 60 * 1000,\n                    hour: 3600 * 1000,\n                    day: 24 * 3600 * 1000,\n                    week: 7 * 24 * 3600 * 1000\n                };\n                // Store the range on the button object\n                if (fixedTimes[type]) {\n                    rangeOptions._range = fixedTimes[type] * count;\n                }\n                else if (type === 'month' || type === 'year') {\n                    rangeOptions._range = {\n                        month: 30,\n                        year: 365\n                    }[type] * 24 * 36e5 * count;\n                }\n                rangeOptions._offsetMin = pick(rangeOptions.offsetMin, 0);\n                rangeOptions._offsetMax = pick(rangeOptions.offsetMax, 0);\n                rangeOptions._range +=\n                    rangeOptions._offsetMax - rangeOptions._offsetMin;\n            };\n            /**\n             * Get the unix timestamp of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getInputValue\n             */\n            RangeSelector.prototype.getInputValue = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                var options = this.chart.options\n                    .rangeSelector;\n                var time = this.chart.time;\n                if (input) {\n                    return ((input.type === 'text' && options.inputDateParser) ||\n                        this.defaultInputDateParser)(input.value, time.useUTC, time);\n                }\n                return 0;\n            };\n            /**\n             * Set the internal and displayed value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputValue\n             */\n            RangeSelector.prototype.setInputValue = function (name, inputTime) {\n                var options = this.options, time = this.chart.time, input = name === 'min' ? this.minInput : this.maxInput, dateBox = name === 'min' ? this.minDateBox : this.maxDateBox;\n                if (input) {\n                    var hcTimeAttr = input.getAttribute('data-hc-time');\n                    var updatedTime = defined(hcTimeAttr) ? Number(hcTimeAttr) : void 0;\n                    if (defined(inputTime)) {\n                        var previousTime = updatedTime;\n                        if (defined(previousTime)) {\n                            input.setAttribute('data-hc-time-previous', previousTime);\n                        }\n                        input.setAttribute('data-hc-time', inputTime);\n                        updatedTime = inputTime;\n                    }\n                    input.value = time.dateFormat((this.inputTypeFormats[input.type] ||\n                        options.inputEditDateFormat), updatedTime);\n                    if (dateBox) {\n                        dateBox.attr({\n                            text: time.dateFormat(options.inputDateFormat, updatedTime)\n                        });\n                    }\n                }\n            };\n            /**\n             * Set the min and max value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputExtremes\n             */\n            RangeSelector.prototype.setInputExtremes = function (name, min, max) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    var format = this.inputTypeFormats[input.type];\n                    var time = this.chart.time;\n                    if (format) {\n                        var newMin = time.dateFormat(format, min);\n                        if (input.min !== newMin) {\n                            input.min = newMin;\n                        }\n                        var newMax = time.dateFormat(format, max);\n                        if (input.max !== newMax) {\n                            input.max = newMax;\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#showInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.showInput = function (name) {\n                var dateBox = name === 'min' ? this.minDateBox : this.maxDateBox, input = name === 'min' ? this.minInput : this.maxInput;\n                if (input && dateBox && this.inputGroup) {\n                    var isTextInput = input.type === 'text', _a = this.inputGroup, _b = _a.translateX, translateX = _b === void 0 ? 0 : _b, _c = _a.translateY, translateY = _c === void 0 ? 0 : _c, _d = dateBox.x, x = _d === void 0 ? 0 : _d, _e = dateBox.width, width = _e === void 0 ? 0 : _e, _f = dateBox.height, height = _f === void 0 ? 0 : _f, inputBoxWidth = this.options.inputBoxWidth;\n                    css(input, {\n                        width: isTextInput ?\n                            ((width + (inputBoxWidth ? -2 : 20)) + 'px') :\n                            'auto',\n                        height: (height - 2) + 'px',\n                        border: '2px solid silver'\n                    });\n                    if (isTextInput && inputBoxWidth) {\n                        css(input, {\n                            left: (translateX + x) + 'px',\n                            top: translateY + 'px'\n                        });\n                        // Inputs of types date, time or datetime-local should be centered\n                        // on top of the dateBox\n                    }\n                    else {\n                        css(input, {\n                            left: Math.min(Math.round(x +\n                                translateX -\n                                (input.offsetWidth - width) / 2), this.chart.chartWidth - input.offsetWidth) + 'px',\n                            top: (translateY - (input.offsetHeight - height) / 2) + 'px'\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.hideInput = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    css(input, {\n                        top: '-9999em',\n                        border: 0,\n                        width: '1px',\n                        height: '1px'\n                    });\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#defaultInputDateParser\n             */\n            RangeSelector.prototype.defaultInputDateParser = function (inputDate, useUTC, time) {\n                var hasTimezone = function (str) {\n                    return str.length > 6 &&\n                        (str.lastIndexOf('-') === str.length - 6 ||\n                            str.lastIndexOf('+') === str.length - 6);\n                };\n                var input = inputDate.split('/').join('-').split(' ').join('T');\n                if (input.indexOf('T') === -1) {\n                    input += 'T00:00';\n                }\n                if (useUTC) {\n                    input += 'Z';\n                }\n                else if (H.isSafari && !hasTimezone(input)) {\n                    var offset = new Date(input).getTimezoneOffset() / 60;\n                    input += offset <= 0 ? \"+\".concat(pad(-offset), \":00\") : \"-\".concat(pad(offset), \":00\");\n                }\n                var date = Date.parse(input);\n                // If the value isn't parsed directly to a value by the\n                // browser's Date.parse method, try\n                // parsing it a different way\n                if (!isNumber(date)) {\n                    var parts = inputDate.split('-');\n                    date = Date.UTC(pInt(parts[0]), pInt(parts[1]) - 1, pInt(parts[2]));\n                }\n                if (time && useUTC && isNumber(date)) {\n                    date += time.getTimezoneOffset(date);\n                }\n                return date;\n            };\n            /**\n             * Draw either the 'from' or the 'to' HTML input box of the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#drawInput\n             */\n            RangeSelector.prototype.drawInput = function (name) {\n                var _a = this, chart = _a.chart, div = _a.div, inputGroup = _a.inputGroup;\n                var rangeSelector = this, chartStyle = chart.renderer.style || {}, renderer = chart.renderer, options = chart.options.rangeSelector, lang = defaultOptions.lang, isMin = name === 'min';\n                /**\n                 * @private\n                 */\n                function updateExtremes() {\n                    var maxInput = rangeSelector.maxInput, minInput = rangeSelector.minInput, chartAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chartAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax;\n                    var value = rangeSelector.getInputValue(name);\n                    if (value !== Number(input.getAttribute('data-hc-time-previous')) &&\n                        isNumber(value)) {\n                        input.setAttribute('data-hc-time-previous', value);\n                        // Validate the extremes. If it goes beyond the data min or\n                        // max, use the actual data extreme (#2438).\n                        if (isMin && maxInput && isNumber(dataMin)) {\n                            if (value > Number(maxInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value < dataMin) {\n                                value = dataMin;\n                            }\n                        }\n                        else if (minInput && isNumber(dataMax)) {\n                            if (value < Number(minInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value > dataMax) {\n                                value = dataMax;\n                            }\n                        }\n                        // Set the extremes\n                        if (typeof value !== 'undefined') { // @todo typeof undefined\n                            chartAxis.setExtremes(isMin ? value : chartAxis.min, isMin ? chartAxis.max : value, void 0, void 0, { trigger: 'rangeSelectorInput' });\n                        }\n                    }\n                }\n                // Create the text label\n                var text = lang[isMin ? 'rangeSelectorFrom' : 'rangeSelectorTo'] || '';\n                var label = renderer\n                    .label(text, 0)\n                    .addClass('highcharts-range-label')\n                    .attr({\n                    padding: text ? 2 : 0,\n                    height: text ? options.inputBoxHeight : 0\n                })\n                    .add(inputGroup);\n                // Create an SVG label that shows updated date ranges and records click\n                // events that bring in the HTML input.\n                var dateBox = renderer\n                    .label('', 0)\n                    .addClass('highcharts-range-input')\n                    .attr({\n                    padding: 2,\n                    width: options.inputBoxWidth,\n                    height: options.inputBoxHeight,\n                    'text-align': 'center'\n                })\n                    .on('click', function () {\n                    // If it is already focused, the onfocus event doesn't fire\n                    // (#3713)\n                    rangeSelector.showInput(name);\n                    rangeSelector[name + 'Input'].focus();\n                });\n                if (!chart.styledMode) {\n                    dateBox.attr({\n                        stroke: options.inputBoxBorderColor,\n                        'stroke-width': 1\n                    });\n                }\n                dateBox.add(inputGroup);\n                // Create the HTML input element. This is rendered as 1x1 pixel then set\n                // to the right size when focused.\n                var input = createElement('input', {\n                    name: name,\n                    className: 'highcharts-range-selector'\n                }, void 0, div);\n                // #14788: Setting input.type to an unsupported type throws in IE, so\n                // we need to use setAttribute instead\n                input.setAttribute('type', preferredInputType(options.inputDateFormat || '%e %b %Y'));\n                if (!chart.styledMode) {\n                    // Styles\n                    label.css(merge(chartStyle, options.labelStyle));\n                    dateBox.css(merge({\n                        color: \"#333333\" /* Palette.neutralColor80 */\n                    }, chartStyle, options.inputStyle));\n                    css(input, extend({\n                        position: 'absolute',\n                        border: 0,\n                        boxShadow: '0 0 15px rgba(0,0,0,0.3)',\n                        width: '1px',\n                        height: '1px',\n                        padding: 0,\n                        textAlign: 'center',\n                        fontSize: chartStyle.fontSize,\n                        fontFamily: chartStyle.fontFamily,\n                        top: '-9999em' // #4798\n                    }, options.inputStyle));\n                }\n                // Blow up the input box\n                input.onfocus = function () {\n                    rangeSelector.showInput(name);\n                };\n                // Hide away the input box\n                input.onblur = function () {\n                    // Update extremes only when inputs are active\n                    if (input === H.doc.activeElement) { // Only when focused\n                        // Update also when no `change` event is triggered, like when\n                        // clicking inside the SVG (#4710)\n                        updateExtremes();\n                    }\n                    // #10404 - move hide and blur outside focus\n                    rangeSelector.hideInput(name);\n                    rangeSelector.setInputValue(name);\n                    input.blur(); // #4606\n                };\n                var keyDown = false;\n                // Handle changes in the input boxes\n                input.onchange = function () {\n                    // Update extremes and blur input when clicking date input calendar\n                    if (!keyDown) {\n                        updateExtremes();\n                        rangeSelector.hideInput(name);\n                        input.blur();\n                    }\n                };\n                input.onkeypress = function (event) {\n                    // IE does not fire onchange on enter\n                    if (event.keyCode === 13) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeydown = function (event) {\n                    keyDown = true;\n                    // Arrow keys\n                    if (event.keyCode === 38 || event.keyCode === 40) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeyup = function () {\n                    keyDown = false;\n                };\n                return { dateBox: dateBox, input: input, label: label };\n            };\n            /**\n             * Get the position of the range selector buttons and inputs. This can be\n             * overridden from outside for custom positioning.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getPosition\n             */\n            RangeSelector.prototype.getPosition = function () {\n                var chart = this.chart, options = chart.options.rangeSelector, top = options.verticalAlign === 'top' ?\n                    chart.plotTop - chart.axisOffset[0] :\n                    0; // Set offset only for verticalAlign top\n                return {\n                    buttonTop: top + options.buttonPosition.y,\n                    inputTop: top + options.inputPosition.y - 10\n                };\n            };\n            /**\n             * Get the extremes of YTD. Will choose dataMax if its value is lower than\n             * the current timestamp. Will choose dataMin if its value is higher than\n             * the timestamp for the start of current year.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getYTDExtremes\n             * @return {*}\n             * Returns min and max for the YTD\n             */\n            RangeSelector.prototype.getYTDExtremes = function (dataMax, dataMin, useUTC) {\n                var time = this.chart.time, now = new time.Date(dataMax), year = time.get('FullYear', now), startOfYear = useUTC ?\n                    time.Date.UTC(year, 0, 1) : // eslint-disable-line new-cap\n                    +new time.Date(year, 0, 1), min = Math.max(dataMin, startOfYear), ts = now.getTime();\n                return {\n                    max: Math.min(dataMax || ts, ts),\n                    min: min\n                };\n            };\n            /**\n             * Render the range selector including the buttons and the inputs. The first\n             * time render is called, the elements are created and positioned. On\n             * subsequent calls, they are moved and updated.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#render\n             * @param {number} [min]\n             *        X axis minimum\n             * @param {number} [max]\n             *        X axis maximum\n             */\n            RangeSelector.prototype.render = function (min, max) {\n                var chart = this.chart, renderer = chart.renderer, container = chart.container, chartOptions = chart.options, options = chartOptions.rangeSelector, \n                // Place inputs above the container\n                inputsZIndex = pick(chartOptions.chart.style &&\n                    chartOptions.chart.style.zIndex, 0) + 1, inputEnabled = options.inputEnabled, rendered = this.rendered;\n                if (options.enabled === false) {\n                    return;\n                }\n                // Create the elements\n                if (!rendered) {\n                    this.group = renderer.g('range-selector-group')\n                        .attr({\n                        zIndex: 7\n                    })\n                        .add();\n                    this.div = createElement('div', void 0, {\n                        position: 'relative',\n                        height: 0,\n                        zIndex: inputsZIndex\n                    });\n                    if (this.buttonOptions.length) {\n                        this.renderButtons();\n                    }\n                    // First create a wrapper outside the container in order to make\n                    // the inputs work and make export correct\n                    if (container.parentNode) {\n                        container.parentNode.insertBefore(this.div, container);\n                    }\n                    if (inputEnabled) {\n                        // Create the group to keep the inputs\n                        this.inputGroup = renderer.g('input-group').add(this.group);\n                        var minElems = this.drawInput('min');\n                        this.minDateBox = minElems.dateBox;\n                        this.minLabel = minElems.label;\n                        this.minInput = minElems.input;\n                        var maxElems = this.drawInput('max');\n                        this.maxDateBox = maxElems.dateBox;\n                        this.maxLabel = maxElems.label;\n                        this.maxInput = maxElems.input;\n                    }\n                }\n                if (inputEnabled) {\n                    // Set or reset the input values\n                    this.setInputValue('min', min);\n                    this.setInputValue('max', max);\n                    var unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chart.xAxis[0] || {};\n                    if (defined(unionExtremes.dataMin) &&\n                        defined(unionExtremes.dataMax)) {\n                        var minRange = chart.xAxis[0].minRange || 0;\n                        this.setInputExtremes('min', unionExtremes.dataMin, Math.min(unionExtremes.dataMax, this.getInputValue('max')) - minRange);\n                        this.setInputExtremes('max', Math.max(unionExtremes.dataMin, this.getInputValue('min')) + minRange, unionExtremes.dataMax);\n                    }\n                    // Reflow\n                    if (this.inputGroup) {\n                        var x_1 = 0;\n                        [\n                            this.minLabel,\n                            this.minDateBox,\n                            this.maxLabel,\n                            this.maxDateBox\n                        ].forEach(function (label) {\n                            if (label) {\n                                var width = label.getBBox().width;\n                                if (width) {\n                                    label.attr({ x: x_1 });\n                                    x_1 += width + options.inputSpacing;\n                                }\n                            }\n                        });\n                    }\n                }\n                this.alignElements();\n                this.rendered = true;\n            };\n            /**\n             * Render the range buttons. This only runs the first time, later the\n             * positioning is laid out in alignElements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#renderButtons\n             */\n            RangeSelector.prototype.renderButtons = function () {\n                var _this = this;\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options;\n                var lang = defaultOptions.lang;\n                var renderer = chart.renderer;\n                var buttonTheme = merge(options.buttonTheme);\n                var states = buttonTheme && buttonTheme.states;\n                // Prevent the button from resetting the width when the button state\n                // changes since we need more control over the width when collapsing\n                // the buttons\n                var width = buttonTheme.width || 28;\n                delete buttonTheme.width;\n                delete buttonTheme.states;\n                this.buttonGroup = renderer.g('range-selector-buttons').add(this.group);\n                var dropdown = this.dropdown = createElement('select', void 0, {\n                    position: 'absolute',\n                    width: '1px',\n                    height: '1px',\n                    padding: 0,\n                    border: 0,\n                    top: '-9999em',\n                    cursor: 'pointer',\n                    opacity: 0.0001\n                }, this.div);\n                // Prevent page zoom on iPhone\n                addEvent(dropdown, 'touchstart', function () {\n                    dropdown.style.fontSize = '16px';\n                });\n                // Forward events from select to button\n                [\n                    [H.isMS ? 'mouseover' : 'mouseenter'],\n                    [H.isMS ? 'mouseout' : 'mouseleave'],\n                    ['change', 'click']\n                ].forEach(function (_a) {\n                    var from = _a[0], to = _a[1];\n                    addEvent(dropdown, from, function () {\n                        var button = buttons[_this.currentButtonIndex()];\n                        if (button) {\n                            fireEvent(button.element, to || from);\n                        }\n                    });\n                });\n                this.zoomText = renderer\n                    .label((lang && lang.rangeSelectorZoom) || '', 0)\n                    .attr({\n                    padding: options.buttonTheme.padding,\n                    height: options.buttonTheme.height,\n                    paddingLeft: 0,\n                    paddingRight: 0\n                })\n                    .add(this.buttonGroup);\n                if (!this.chart.styledMode) {\n                    this.zoomText.css(options.labelStyle);\n                    buttonTheme['stroke-width'] = pick(buttonTheme['stroke-width'], 0);\n                }\n                createElement('option', {\n                    textContent: this.zoomText.textStr,\n                    disabled: true\n                }, void 0, dropdown);\n                this.buttonOptions.forEach(function (rangeOptions, i) {\n                    createElement('option', {\n                        textContent: rangeOptions.title || rangeOptions.text\n                    }, void 0, dropdown);\n                    buttons[i] = renderer\n                        .button(rangeOptions.text, 0, 0, function (e) {\n                        // Extract events from button object and call\n                        var buttonEvents = (rangeOptions.events && rangeOptions.events.click);\n                        var callDefaultEvent;\n                        if (buttonEvents) {\n                            callDefaultEvent =\n                                buttonEvents.call(rangeOptions, e);\n                        }\n                        if (callDefaultEvent !== false) {\n                            _this.clickButton(i);\n                        }\n                        _this.isActive = true;\n                    }, buttonTheme, states && states.hover, states && states.select, states && states.disabled)\n                        .attr({\n                        'text-align': 'center',\n                        width: width\n                    })\n                        .add(_this.buttonGroup);\n                    if (rangeOptions.title) {\n                        buttons[i].attr('title', rangeOptions.title);\n                    }\n                });\n            };\n            /**\n             * Align the elements horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignElements\n             */\n            RangeSelector.prototype.alignElements = function () {\n                var _this = this;\n                var _a = this, buttonGroup = _a.buttonGroup, buttons = _a.buttons, chart = _a.chart, group = _a.group, inputGroup = _a.inputGroup, options = _a.options, zoomText = _a.zoomText;\n                var chartOptions = chart.options;\n                var navButtonOptions = (chartOptions.exporting &&\n                    chartOptions.exporting.enabled !== false &&\n                    chartOptions.navigation &&\n                    chartOptions.navigation.buttonOptions);\n                var buttonPosition = options.buttonPosition, inputPosition = options.inputPosition, verticalAlign = options.verticalAlign;\n                // Get the X offset required to avoid overlapping with the exporting\n                // button. This is used both by the buttonGroup and the inputGroup.\n                var getXOffsetForExportButton = function (group, position) {\n                    if (navButtonOptions &&\n                        _this.titleCollision(chart) &&\n                        verticalAlign === 'top' &&\n                        position.align === 'right' && ((position.y -\n                        group.getBBox().height - 12) <\n                        ((navButtonOptions.y || 0) +\n                            (navButtonOptions.height || 0) +\n                            chart.spacing[0]))) {\n                        return -40;\n                    }\n                    return 0;\n                };\n                var plotLeft = chart.plotLeft;\n                if (group && buttonPosition && inputPosition) {\n                    var translateX = buttonPosition.x - chart.spacing[3];\n                    if (buttonGroup) {\n                        this.positionButtons();\n                        if (!this.initialButtonGroupWidth) {\n                            var width_1 = 0;\n                            if (zoomText) {\n                                width_1 += zoomText.getBBox().width + 5;\n                            }\n                            buttons.forEach(function (button, i) {\n                                width_1 += button.width || 0;\n                                if (i !== buttons.length - 1) {\n                                    width_1 += options.buttonSpacing;\n                                }\n                            });\n                            this.initialButtonGroupWidth = width_1;\n                        }\n                        plotLeft -= chart.spacing[3];\n                        this.updateButtonStates();\n                        // Detect collision between button group and exporting\n                        var xOffsetForExportButton_1 = getXOffsetForExportButton(buttonGroup, buttonPosition);\n                        this.alignButtonGroup(xOffsetForExportButton_1);\n                        // Skip animation\n                        group.placed = buttonGroup.placed = chart.hasLoaded;\n                    }\n                    var xOffsetForExportButton = 0;\n                    if (inputGroup) {\n                        // Detect collision between the input group and exporting button\n                        xOffsetForExportButton = getXOffsetForExportButton(inputGroup, inputPosition);\n                        if (inputPosition.align === 'left') {\n                            translateX = plotLeft;\n                        }\n                        else if (inputPosition.align === 'right') {\n                            translateX = -Math.max(chart.axisOffset[1], -xOffsetForExportButton);\n                        }\n                        // Update the alignment to the updated spacing box\n                        inputGroup.align({\n                            y: inputPosition.y,\n                            width: inputGroup.getBBox().width,\n                            align: inputPosition.align,\n                            // Fix wrong getBBox() value on right align\n                            x: inputPosition.x + translateX - 2\n                        }, true, chart.spacingBox);\n                        // Skip animation\n                        inputGroup.placed = chart.hasLoaded;\n                    }\n                    this.handleCollision(xOffsetForExportButton);\n                    // Vertical align\n                    group.align({\n                        verticalAlign: verticalAlign\n                    }, true, chart.spacingBox);\n                    var alignTranslateY = group.alignAttr.translateY;\n                    // Set position\n                    var groupHeight = group.getBBox().height + 20; // # 20 padding\n                    var translateY = 0;\n                    // Calculate bottom position\n                    if (verticalAlign === 'bottom') {\n                        var legendOptions = chart.legend && chart.legend.options;\n                        var legendHeight = (legendOptions &&\n                            legendOptions.verticalAlign === 'bottom' &&\n                            legendOptions.enabled &&\n                            !legendOptions.floating ?\n                            (chart.legend.legendHeight +\n                                pick(legendOptions.margin, 10)) :\n                            0);\n                        groupHeight = groupHeight + legendHeight - 20;\n                        translateY = (alignTranslateY -\n                            groupHeight -\n                            (options.floating ? 0 : options.y) -\n                            (chart.titleOffset ? chart.titleOffset[2] : 0) -\n                            10 // 10 spacing\n                        );\n                    }\n                    if (verticalAlign === 'top') {\n                        if (options.floating) {\n                            translateY = 0;\n                        }\n                        if (chart.titleOffset && chart.titleOffset[0]) {\n                            translateY = chart.titleOffset[0];\n                        }\n                        translateY += ((chart.margin[0] - chart.spacing[0]) || 0);\n                    }\n                    else if (verticalAlign === 'middle') {\n                        if (inputPosition.y === buttonPosition.y) {\n                            translateY = alignTranslateY;\n                        }\n                        else if (inputPosition.y || buttonPosition.y) {\n                            if (inputPosition.y < 0 ||\n                                buttonPosition.y < 0) {\n                                translateY -= Math.min(inputPosition.y, buttonPosition.y);\n                            }\n                            else {\n                                translateY = alignTranslateY - groupHeight;\n                            }\n                        }\n                    }\n                    group.translate(options.x, options.y + Math.floor(translateY));\n                    // Translate HTML inputs\n                    var _b = this, minInput = _b.minInput, maxInput = _b.maxInput, dropdown = _b.dropdown;\n                    if (options.inputEnabled && minInput && maxInput) {\n                        minInput.style.marginTop = group.translateY + 'px';\n                        maxInput.style.marginTop = group.translateY + 'px';\n                    }\n                    if (dropdown) {\n                        dropdown.style.marginTop = group.translateY + 'px';\n                    }\n                }\n            };\n            /**\n             * Align the button group horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignButtonGroup\n             * @param {number} xOffsetForExportButton\n             * @param {number} [width]\n             */\n            RangeSelector.prototype.alignButtonGroup = function (xOffsetForExportButton, width) {\n                var _a = this, chart = _a.chart, options = _a.options, buttonGroup = _a.buttonGroup;\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft - chart.spacing[3];\n                var translateX = buttonPosition.x - chart.spacing[3];\n                if (buttonPosition.align === 'right') {\n                    translateX += xOffsetForExportButton - plotLeft; // #13014\n                }\n                else if (buttonPosition.align === 'center') {\n                    translateX -= plotLeft / 2;\n                }\n                if (buttonGroup) {\n                    // Align button group\n                    buttonGroup.align({\n                        y: buttonPosition.y,\n                        width: pick(width, this.initialButtonGroupWidth),\n                        align: buttonPosition.align,\n                        x: translateX\n                    }, true, chart.spacingBox);\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#positionButtons\n             */\n            RangeSelector.prototype.positionButtons = function () {\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options, zoomText = _a.zoomText;\n                var verb = chart.hasLoaded ? 'animate' : 'attr';\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft;\n                var buttonLeft = plotLeft;\n                if (zoomText && zoomText.visibility !== 'hidden') {\n                    // #8769, allow dynamically updating margins\n                    zoomText[verb]({\n                        x: pick(plotLeft + buttonPosition.x, plotLeft)\n                    });\n                    // Button start position\n                    buttonLeft += buttonPosition.x +\n                        zoomText.getBBox().width + 5;\n                }\n                for (var i = 0, iEnd = this.buttonOptions.length; i < iEnd; ++i) {\n                    if (buttons[i].visibility !== 'hidden') {\n                        buttons[i][verb]({ x: buttonLeft });\n                        // Increase the button position for the next button\n                        buttonLeft += (buttons[i].width || 0) + options.buttonSpacing;\n                    }\n                    else {\n                        buttons[i][verb]({ x: plotLeft });\n                    }\n                }\n            };\n            /**\n             * Handle collision between the button group and the input group\n             *\n             * @private\n             * @function Highcharts.RangeSelector#handleCollision\n             *\n             * @param  {number} xOffsetForExportButton\n             *                  The X offset of the group required to make room for the\n             *                  exporting button\n             */\n            RangeSelector.prototype.handleCollision = function (xOffsetForExportButton) {\n                var _this = this;\n                var _a = this, chart = _a.chart, buttonGroup = _a.buttonGroup, inputGroup = _a.inputGroup;\n                var _b = this.options, buttonPosition = _b.buttonPosition, dropdown = _b.dropdown, inputPosition = _b.inputPosition;\n                var maxButtonWidth = function () {\n                    var buttonWidth = 0;\n                    _this.buttons.forEach(function (button) {\n                        var bBox = button.getBBox();\n                        if (bBox.width > buttonWidth) {\n                            buttonWidth = bBox.width;\n                        }\n                    });\n                    return buttonWidth;\n                };\n                var groupsOverlap = function (buttonGroupWidth) {\n                    if (inputGroup && buttonGroup) {\n                        var inputGroupX = (inputGroup.alignAttr.translateX +\n                            inputGroup.alignOptions.x -\n                            xOffsetForExportButton +\n                            // `getBBox` for detecing left margin\n                            inputGroup.getBBox().x +\n                            // 2px padding to not overlap input and label\n                            2);\n                        var inputGroupWidth = inputGroup.alignOptions.width;\n                        var buttonGroupX = buttonGroup.alignAttr.translateX +\n                            buttonGroup.getBBox().x;\n                        return (buttonGroupX + buttonGroupWidth > inputGroupX) &&\n                            (inputGroupX + inputGroupWidth > buttonGroupX) &&\n                            (buttonPosition.y <\n                                (inputPosition.y +\n                                    inputGroup.getBBox().height));\n                    }\n                    return false;\n                };\n                var moveInputsDown = function () {\n                    if (inputGroup && buttonGroup) {\n                        inputGroup.attr({\n                            translateX: inputGroup.alignAttr.translateX + (chart.axisOffset[1] >= -xOffsetForExportButton ?\n                                0 :\n                                -xOffsetForExportButton),\n                            translateY: inputGroup.alignAttr.translateY +\n                                buttonGroup.getBBox().height + 10\n                        });\n                    }\n                };\n                if (buttonGroup) {\n                    if (dropdown === 'always') {\n                        this.collapseButtons(xOffsetForExportButton);\n                        if (groupsOverlap(maxButtonWidth())) {\n                            // Move the inputs down if there is still a collision\n                            // after collapsing the buttons\n                            moveInputsDown();\n                        }\n                        return;\n                    }\n                    if (dropdown === 'never') {\n                        this.expandButtons();\n                    }\n                }\n                // Detect collision\n                if (inputGroup && buttonGroup) {\n                    if ((inputPosition.align === buttonPosition.align) ||\n                        // 20 is minimal spacing between elements\n                        groupsOverlap(this.initialButtonGroupWidth + 20)) {\n                        if (dropdown === 'responsive') {\n                            this.collapseButtons(xOffsetForExportButton);\n                            if (groupsOverlap(maxButtonWidth())) {\n                                moveInputsDown();\n                            }\n                        }\n                        else {\n                            moveInputsDown();\n                        }\n                    }\n                    else if (dropdown === 'responsive') {\n                        this.expandButtons();\n                    }\n                }\n                else if (buttonGroup && dropdown === 'responsive') {\n                    if (this.initialButtonGroupWidth > chart.plotWidth) {\n                        this.collapseButtons(xOffsetForExportButton);\n                    }\n                    else {\n                        this.expandButtons();\n                    }\n                }\n            };\n            /**\n             * Collapse the buttons and put the select element on top.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#collapseButtons\n             * @param {number} xOffsetForExportButton\n             */\n            RangeSelector.prototype.collapseButtons = function (xOffsetForExportButton) {\n                var _a = this, buttons = _a.buttons, buttonOptions = _a.buttonOptions, chart = _a.chart, dropdown = _a.dropdown, options = _a.options, zoomText = _a.zoomText;\n                // If the buttons are already collapsed do nothing.\n                if (this.isCollapsed === true) {\n                    return;\n                }\n                this.isCollapsed = true;\n                var userButtonTheme = (chart.userOptions.rangeSelector &&\n                    chart.userOptions.rangeSelector.buttonTheme) || {};\n                var getAttribs = function (text) { return ({\n                    text: text ? \"\".concat(text, \" \\u25BE\") : 'â–¾',\n                    width: 'auto',\n                    paddingLeft: pick(options.buttonTheme.paddingLeft, userButtonTheme.padding, 8),\n                    paddingRight: pick(options.buttonTheme.paddingRight, userButtonTheme.padding, 8)\n                }); };\n                if (zoomText) {\n                    zoomText.hide();\n                }\n                var hasActiveButton = false;\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    if (button.state !== 2) {\n                        button.hide();\n                    }\n                    else {\n                        button.show();\n                        button.attr(getAttribs(rangeOptions.text));\n                        hasActiveButton = true;\n                    }\n                });\n                if (!hasActiveButton) {\n                    if (dropdown) {\n                        dropdown.selectedIndex = 0;\n                    }\n                    buttons[0].show();\n                    buttons[0].attr(getAttribs(this.zoomText && this.zoomText.textStr));\n                }\n                var align = options.buttonPosition.align;\n                this.positionButtons();\n                if (align === 'right' || align === 'center') {\n                    this.alignButtonGroup(xOffsetForExportButton, buttons[this.currentButtonIndex()].getBBox().width);\n                }\n                this.showDropdown();\n            };\n            /**\n             * Show all the buttons and hide the select element.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#expandButtons\n             */\n            RangeSelector.prototype.expandButtons = function () {\n                var _a = this, buttons = _a.buttons, buttonOptions = _a.buttonOptions, options = _a.options, zoomText = _a.zoomText;\n                this.hideDropdown();\n                // If buttons are already not collapsed, do nothing.\n                if (this.isCollapsed === false) {\n                    return;\n                }\n                this.isCollapsed = false;\n                if (zoomText) {\n                    zoomText.show();\n                }\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    button.show();\n                    button.attr({\n                        text: rangeOptions.text,\n                        width: options.buttonTheme.width || 28,\n                        paddingLeft: pick(options.buttonTheme.paddingLeft, 'unset'),\n                        paddingRight: pick(options.buttonTheme.paddingRight, 'unset')\n                    });\n                    if (button.state < 2) {\n                        button.setState(0);\n                    }\n                });\n                this.positionButtons();\n            };\n            /**\n             * Get the index of the visible button when the buttons are collapsed.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#currentButtonIndex\n             */\n            RangeSelector.prototype.currentButtonIndex = function () {\n                var dropdown = this.dropdown;\n                if (dropdown && dropdown.selectedIndex > 0) {\n                    return dropdown.selectedIndex - 1;\n                }\n                return 0;\n            };\n            /**\n             * Position the select element on top of the button.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#showDropdown\n             */\n            RangeSelector.prototype.showDropdown = function () {\n                var _a = this, buttonGroup = _a.buttonGroup, buttons = _a.buttons, chart = _a.chart, dropdown = _a.dropdown;\n                if (buttonGroup && dropdown) {\n                    var _b = buttonGroup.translateX, translateX = _b === void 0 ? 0 : _b, _c = buttonGroup.translateY, translateY = _c === void 0 ? 0 : _c, bBox = buttons[this.currentButtonIndex()].getBBox();\n                    css(dropdown, {\n                        left: (chart.plotLeft + translateX) + 'px',\n                        top: (translateY + 0.5) + 'px',\n                        width: bBox.width + 'px',\n                        height: bBox.height + 'px'\n                    });\n                    this.hasVisibleDropdown = true;\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideDropdown\n             */\n            RangeSelector.prototype.hideDropdown = function () {\n                var dropdown = this.dropdown;\n                if (dropdown) {\n                    css(dropdown, {\n                        top: '-9999em',\n                        width: '1px',\n                        height: '1px'\n                    });\n                    this.hasVisibleDropdown = false;\n                }\n            };\n            /**\n             * Extracts height of range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getHeight\n             * @return {number}\n             * Returns rangeSelector height\n             */\n            RangeSelector.prototype.getHeight = function () {\n                var rangeSelector = this, options = rangeSelector.options, rangeSelectorGroup = rangeSelector.group, inputPosition = options.inputPosition, buttonPosition = options.buttonPosition, yPosition = options.y, buttonPositionY = buttonPosition.y, inputPositionY = inputPosition.y;\n                var rangeSelectorHeight = 0;\n                if (options.height) {\n                    return options.height;\n                }\n                // Align the elements before we read the height in case we're switching\n                // between wrapped and non-wrapped layout\n                this.alignElements();\n                rangeSelectorHeight = rangeSelectorGroup ?\n                    // 13px to keep back compatibility\n                    (rangeSelectorGroup.getBBox(true).height) + 13 +\n                        yPosition :\n                    0;\n                var minPosition = Math.min(inputPositionY, buttonPositionY);\n                if ((inputPositionY < 0 && buttonPositionY < 0) ||\n                    (inputPositionY > 0 && buttonPositionY > 0)) {\n                    rangeSelectorHeight += Math.abs(minPosition);\n                }\n                return rangeSelectorHeight;\n            };\n            /**\n             * Detect collision with title or subtitle\n             *\n             * @private\n             * @function Highcharts.RangeSelector#titleCollision\n             * @return {boolean}\n             * Returns collision status\n             */\n            RangeSelector.prototype.titleCollision = function (chart) {\n                return !(chart.options.title.text ||\n                    chart.options.subtitle.text);\n            };\n            /**\n             * Update the range selector with new options\n             *\n             * @private\n             * @function Highcharts.RangeSelector#update\n             * @param {Highcharts.RangeSelectorOptions} options\n             */\n            RangeSelector.prototype.update = function (options) {\n                var chart = this.chart;\n                merge(true, chart.options.rangeSelector, options);\n                this.destroy();\n                this.init(chart);\n                this.render();\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#destroy\n             */\n            RangeSelector.prototype.destroy = function () {\n                var rSelector = this, minInput = rSelector.minInput, maxInput = rSelector.maxInput;\n                if (rSelector.eventsToUnbind) {\n                    rSelector.eventsToUnbind.forEach(function (unbind) { return unbind(); });\n                    rSelector.eventsToUnbind = void 0;\n                }\n                // Destroy elements in collections\n                destroyObjectProperties(rSelector.buttons);\n                // Clear input element events\n                if (minInput) {\n                    minInput.onfocus = minInput.onblur = minInput.onchange = null;\n                }\n                if (maxInput) {\n                    maxInput.onfocus = maxInput.onblur = maxInput.onchange = null;\n                }\n                // Destroy HTML and SVG elements\n                objectEach(rSelector, function (val, key) {\n                    if (val && key !== 'chart') {\n                        if (val instanceof SVGElement) {\n                            // SVGElement\n                            val.destroy();\n                        }\n                        else if (val instanceof window.HTMLElement) {\n                            // HTML element\n                            discardElement(val);\n                        }\n                    }\n                    if (val !== RangeSelector.prototype[key]) {\n                        rSelector[key] = null;\n                    }\n                }, this);\n            };\n            return RangeSelector;\n        }());\n        extend(RangeSelector.prototype, {\n            /**\n             * The default buttons for pre-selecting time frames.\n             * @private\n             */\n            defaultButtons: [{\n                    type: 'month',\n                    count: 1,\n                    text: '1m',\n                    title: 'View 1 month'\n                }, {\n                    type: 'month',\n                    count: 3,\n                    text: '3m',\n                    title: 'View 3 months'\n                }, {\n                    type: 'month',\n                    count: 6,\n                    text: '6m',\n                    title: 'View 6 months'\n                }, {\n                    type: 'ytd',\n                    text: 'YTD',\n                    title: 'View year to date'\n                }, {\n                    type: 'year',\n                    count: 1,\n                    text: '1y',\n                    title: 'View 1 year'\n                }, {\n                    type: 'all',\n                    text: 'All',\n                    title: 'View all'\n                }],\n            /**\n             * The date formats to use when setting min, max and value on date inputs.\n             * @private\n             */\n            inputTypeFormats: {\n                'datetime-local': '%Y-%m-%dT%H:%M:%S',\n                'date': '%Y-%m-%d',\n                'time': '%H:%M:%S'\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Define the time span for the button\n         *\n         * @typedef {\"all\"|\"day\"|\"hour\"|\"millisecond\"|\"minute\"|\"month\"|\"second\"|\"week\"|\"year\"|\"ytd\"} Highcharts.RangeSelectorButtonTypeValue\n         */\n        /**\n         * Callback function to react on button clicks.\n         *\n         * @callback Highcharts.RangeSelectorClickCallbackFunction\n         *\n         * @param {global.Event} e\n         *        Event arguments.\n         *\n         * @param {boolean|undefined}\n         *        Return false to cancel the default button event.\n         */\n        /**\n         * Callback function to parse values entered in the input boxes and return a\n         * valid JavaScript time as milliseconds since 1970.\n         *\n         * @callback Highcharts.RangeSelectorParseCallbackFunction\n         *\n         * @param {string} value\n         *        Input value to parse.\n         *\n         * @return {number}\n         *         Parsed JavaScript time value.\n         */\n        (''); // Keeps doclets above in JS file\n\n        return RangeSelector;\n    });\n    _registerModule(_modules, 'Series/PathUtilities.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var getLinkPath = {\n            'default': getDefaultPath,\n            straight: getStraightPath,\n            curved: getCurvedPath\n        };\n        /**\n         *\n         */\n        function getDefaultPath(pathParams) {\n            var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.width, width = _a === void 0 ? 0 : _a, _b = pathParams.inverted, inverted = _b === void 0 ? false : _b, radius = pathParams.radius, parentVisible = pathParams.parentVisible;\n            var path = [\n                ['M', x1, y1],\n                ['L', x1, y1],\n                ['C', x1, y1, x1, y2, x1, y2],\n                ['L', x1, y2],\n                ['C', x1, y1, x1, y2, x1, y2],\n                ['L', x1, y2]\n            ];\n            return parentVisible ?\n                applyRadius([\n                    ['M', x1, y1],\n                    ['L', x1 + width * (inverted ? -0.5 : 0.5), y1],\n                    ['L', x1 + width * (inverted ? -0.5 : 0.5), y2],\n                    ['L', x2, y2]\n                ], radius) :\n                path;\n        }\n        /**\n         *\n         */\n        function getStraightPath(pathParams) {\n            var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.width, width = _a === void 0 ? 0 : _a, _b = pathParams.inverted, inverted = _b === void 0 ? false : _b, parentVisible = pathParams.parentVisible;\n            return parentVisible ? [\n                ['M', x1, y1],\n                ['L', x1 + width * (inverted ? -1 : 1), y2],\n                ['L', x2, y2]\n            ] : [\n                ['M', x1, y1],\n                ['L', x1, y2],\n                ['L', x1, y2]\n            ];\n        }\n        /**\n         *\n         */\n        function getCurvedPath(pathParams) {\n            var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.offset, offset = _a === void 0 ? 0 : _a, _b = pathParams.width, width = _b === void 0 ? 0 : _b, _c = pathParams.inverted, inverted = _c === void 0 ? false : _c, parentVisible = pathParams.parentVisible;\n            return parentVisible ?\n                [\n                    ['M', x1, y1],\n                    [\n                        'C',\n                        x1 + offset,\n                        y1,\n                        x1 - offset + width * (inverted ? -1 : 1),\n                        y2,\n                        x1 + width * (inverted ? -1 : 1),\n                        y2\n                    ],\n                    ['L', x2, y2]\n                ] :\n                [\n                    ['M', x1, y1],\n                    ['C', x1, y1, x1, y2, x1, y2],\n                    ['L', x2, y2]\n                ];\n        }\n        /**\n         * General function to apply corner radius to a path\n         * @private\n         */\n        function applyRadius(path, r) {\n            var d = [];\n            for (var i = 0; i < path.length; i++) {\n                var x = path[i][1];\n                var y = path[i][2];\n                if (typeof x === 'number' && typeof y === 'number') {\n                    // MoveTo\n                    if (i === 0) {\n                        d.push(['M', x, y]);\n                    }\n                    else if (i === path.length - 1) {\n                        d.push(['L', x, y]);\n                        // CurveTo\n                    }\n                    else if (r) {\n                        var prevSeg = path[i - 1];\n                        var nextSeg = path[i + 1];\n                        if (prevSeg && nextSeg) {\n                            var x1 = prevSeg[1], y1 = prevSeg[2], x2 = nextSeg[1], y2 = nextSeg[2];\n                            // Only apply to breaks\n                            if (typeof x1 === 'number' &&\n                                typeof x2 === 'number' &&\n                                typeof y1 === 'number' &&\n                                typeof y2 === 'number' &&\n                                x1 !== x2 &&\n                                y1 !== y2) {\n                                var directionX = x1 < x2 ? 1 : -1, directionY = y1 < y2 ? 1 : -1;\n                                d.push([\n                                    'L',\n                                    x - directionX * Math.min(Math.abs(x - x1), r),\n                                    y - directionY * Math.min(Math.abs(y - y1), r)\n                                ], [\n                                    'C',\n                                    x,\n                                    y,\n                                    x,\n                                    y,\n                                    x + directionX * Math.min(Math.abs(x - x2), r),\n                                    y + directionY * Math.min(Math.abs(y - y2), r)\n                                ]);\n                            }\n                        }\n                        // LineTo\n                    }\n                    else {\n                        d.push(['L', x, y]);\n                    }\n                }\n            }\n            return d;\n        }\n        var PathUtilities = {\n            applyRadius: applyRadius,\n            getLinkPath: getLinkPath\n        };\n\n        return PathUtilities;\n    });\n    _registerModule(_modules, 'Gantt/PathfinderAlgorithms.js', [_modules['Series/PathUtilities.js'], _modules['Core/Utilities.js']], function (PathUtilities, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Author: Ã˜ystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var min = Math.min, max = Math.max, abs = Math.abs;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get index of last obstacle before xMin. Employs a type of binary search, and\n         * thus requires that obstacles are sorted by xMin value.\n         *\n         * @private\n         * @function findLastObstacleBefore\n         *\n         * @param {Array<object>} obstacles\n         *        Array of obstacles to search in.\n         *\n         * @param {number} xMin\n         *        The xMin threshold.\n         *\n         * @param {number} [startIx]\n         *        Starting index to search from. Must be within array range.\n         *\n         * @return {number}\n         *         The index of the last obstacle element before xMin.\n         */\n        function findLastObstacleBefore(obstacles, xMin, startIx) {\n            var min = xMin - 0.0000001; // Make sure we include all obstacles at xMin\n            var left = startIx || 0, // Left limit\n            right = obstacles.length - 1, // Right limit\n            cursor, cmp;\n            while (left <= right) {\n                cursor = (right + left) >> 1;\n                cmp = min - obstacles[cursor].xMin;\n                if (cmp > 0) {\n                    left = cursor + 1;\n                }\n                else if (cmp < 0) {\n                    right = cursor - 1;\n                }\n                else {\n                    return cursor;\n                }\n            }\n            return left > 0 ? left - 1 : 0;\n        }\n        /**\n         * Test if a point lays within an obstacle.\n         *\n         * @private\n         * @function pointWithinObstacle\n         *\n         * @param {Object} obstacle\n         *        Obstacle to test.\n         *\n         * @param {Highcharts.Point} point\n         *        Point with x/y props.\n         *\n         * @return {boolean}\n         *         Whether point is within the obstacle or not.\n         */\n        function pointWithinObstacle(obstacle, point) {\n            return (point.x <= obstacle.xMax &&\n                point.x >= obstacle.xMin &&\n                point.y <= obstacle.yMax &&\n                point.y >= obstacle.yMin);\n        }\n        /**\n         * Find the index of an obstacle that wraps around a point.\n         * Returns -1 if not found.\n         *\n         * @private\n         * @function findObstacleFromPoint\n         *\n         * @param {Array<object>} obstacles\n         *        Obstacles to test.\n         *\n         * @param {Highcharts.Point} point\n         *        Point with x/y props.\n         *\n         * @return {number}\n         *         Ix of the obstacle in the array, or -1 if not found.\n         */\n        function findObstacleFromPoint(obstacles, point) {\n            var i = findLastObstacleBefore(obstacles, point.x + 1) + 1;\n            while (i--) {\n                if (obstacles[i].xMax >= point.x &&\n                    // Optimization using lazy evaluation\n                    pointWithinObstacle(obstacles[i], point)) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        /**\n         * Get SVG path array from array of line segments.\n         *\n         * @private\n         * @function pathFromSegments\n         *\n         * @param {Array<object>} segments\n         *        The segments to build the path from.\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         SVG path array as accepted by the SVG Renderer.\n         */\n        function pathFromSegments(segments) {\n            var path = [];\n            if (segments.length) {\n                path.push(['M', segments[0].start.x, segments[0].start.y]);\n                for (var i = 0; i < segments.length; ++i) {\n                    path.push(['L', segments[i].end.x, segments[i].end.y]);\n                }\n            }\n            return path;\n        }\n        /**\n         * Limits obstacle max/mins in all directions to bounds. Modifies input\n         * obstacle.\n         *\n         * @private\n         * @function limitObstacleToBounds\n         *\n         * @param {Object} obstacle\n         *        Obstacle to limit.\n         *\n         * @param {Object} bounds\n         *        Bounds to use as limit.\n         *\n         * @return {void}\n         */\n        function limitObstacleToBounds(obstacle, bounds) {\n            obstacle.yMin = max(obstacle.yMin, bounds.yMin);\n            obstacle.yMax = min(obstacle.yMax, bounds.yMax);\n            obstacle.xMin = max(obstacle.xMin, bounds.xMin);\n            obstacle.xMax = min(obstacle.xMax, bounds.xMax);\n        }\n        /**\n         * Get an SVG path from a starting coordinate to an ending coordinate.\n         * Draws a straight line.\n         *\n         * @function Highcharts.Pathfinder.algorithms.straight\n         *\n         * @param {Highcharts.PositionObject} start\n         *        Starting coordinate, object with x/y props.\n         *\n         * @param {Highcharts.PositionObject} end\n         *        Ending coordinate, object with x/y props.\n         *\n         * @return {Object}\n         *         An object with the SVG path in Array form as accepted by the SVG\n         *         renderer, as well as an array of new obstacles making up this\n         *         path.\n         */\n        function straight(start, end) {\n            return {\n                path: [\n                    ['M', start.x, start.y],\n                    ['L', end.x, end.y]\n                ],\n                obstacles: [{ start: start, end: end }]\n            };\n        }\n        /**\n         * Find a path from a starting coordinate to an ending coordinate, using\n         * right angles only, and taking only starting/ending obstacle into\n         * consideration.\n         *\n         * @function Highcharts.Pathfinder.algorithms.simpleConnect\n         *\n         * @param {Highcharts.PositionObject} start\n         *        Starting coordinate, object with x/y props.\n         *\n         * @param {Highcharts.PositionObject} end\n         *        Ending coordinate, object with x/y props.\n         *\n         * @param {Object} options\n         *        Options for the algorithm:\n         *        - chartObstacles: Array of chart obstacles to avoid\n         *        - startDirectionX: Optional. True if starting in the X direction.\n         *          If not provided, the algorithm starts in the direction that is\n         *          the furthest between start/end.\n         *\n         * @return {Object}\n         *         An object with the SVG path in Array form as accepted by the SVG\n         *         renderer, as well as an array of new obstacles making up this\n         *         path.\n         */\n        var simpleConnect = function (start, end, options) {\n            var segments = [], chartObstacles = options.chartObstacles, startObstacleIx = findObstacleFromPoint(chartObstacles, start), endObstacleIx = findObstacleFromPoint(chartObstacles, end);\n            var endSegment, dir = pick(options.startDirectionX, abs(end.x - start.x) > abs(end.y - start.y)) ? 'x' : 'y', startObstacle, endObstacle, waypoint, useMax, endPoint;\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Return a clone of a point with a property set from a target object,\n             * optionally with an offset\n             * @private\n             */\n            function copyFromPoint(from, fromKey, to, toKey, offset) {\n                var point = {\n                    x: from.x,\n                    y: from.y\n                };\n                point[fromKey] = to[toKey || fromKey] + (offset || 0);\n                return point;\n            }\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Return waypoint outside obstacle.\n             * @private\n             */\n            function getMeOut(obstacle, point, direction) {\n                var useMax = abs(point[direction] - obstacle[direction + 'Min']) >\n                    abs(point[direction] - obstacle[direction + 'Max']);\n                return copyFromPoint(point, direction, obstacle, direction + (useMax ? 'Max' : 'Min'), useMax ? 1 : -1);\n            }\n            // Pull out end point\n            if (endObstacleIx > -1) {\n                endObstacle = chartObstacles[endObstacleIx];\n                waypoint = getMeOut(endObstacle, end, dir);\n                endSegment = {\n                    start: waypoint,\n                    end: end\n                };\n                endPoint = waypoint;\n            }\n            else {\n                endPoint = end;\n            }\n            // If an obstacle envelops the start point, add a segment to get out,\n            // and around it.\n            if (startObstacleIx > -1) {\n                startObstacle = chartObstacles[startObstacleIx];\n                waypoint = getMeOut(startObstacle, start, dir);\n                segments.push({\n                    start: start,\n                    end: waypoint\n                });\n                // If we are going back again, switch direction to get around start\n                // obstacle.\n                if (\n                // Going towards max from start:\n                waypoint[dir] >= start[dir] ===\n                    // Going towards min to end:\n                    waypoint[dir] >= endPoint[dir]) {\n                    dir = dir === 'y' ? 'x' : 'y';\n                    useMax = start[dir] < end[dir];\n                    segments.push({\n                        start: waypoint,\n                        end: copyFromPoint(waypoint, dir, startObstacle, dir + (useMax ? 'Max' : 'Min'), useMax ? 1 : -1)\n                    });\n                    // Switch direction again\n                    dir = dir === 'y' ? 'x' : 'y';\n                }\n            }\n            // We are around the start obstacle. Go towards the end in one\n            // direction.\n            var prevWaypoint = segments.length ?\n                segments[segments.length - 1].end :\n                start;\n            waypoint = copyFromPoint(prevWaypoint, dir, endPoint);\n            segments.push({\n                start: prevWaypoint,\n                end: waypoint\n            });\n            // Final run to end point in the other direction\n            dir = dir === 'y' ? 'x' : 'y';\n            var waypoint2 = copyFromPoint(waypoint, dir, endPoint);\n            segments.push({\n                start: waypoint,\n                end: waypoint2\n            });\n            // Finally add the endSegment\n            segments.push(endSegment);\n            var path = PathUtilities.applyRadius(pathFromSegments(segments), options.radius);\n            return {\n                path: path,\n                obstacles: segments\n            };\n        };\n        simpleConnect.requiresObstacles = true;\n        /**\n         * Find a path from a starting coordinate to an ending coordinate, taking\n         * obstacles into consideration. Might not always find the optimal path,\n         * but is fast, and usually good enough.\n         *\n         * @function Highcharts.Pathfinder.algorithms.fastAvoid\n         *\n         * @param {Highcharts.PositionObject} start\n         *        Starting coordinate, object with x/y props.\n         *\n         * @param {Highcharts.PositionObject} end\n         *        Ending coordinate, object with x/y props.\n         *\n         * @param {Object} options\n         *        Options for the algorithm.\n         *        - chartObstacles:  Array of chart obstacles to avoid\n         *        - lineObstacles:   Array of line obstacles to jump over\n         *        - obstacleMetrics: Object with metrics of chartObstacles cached\n         *        - hardBounds:      Hard boundaries to not cross\n         *        - obstacleOptions: Options for the obstacles, including margin\n         *        - startDirectionX: Optional. True if starting in the X direction.\n         *                           If not provided, the algorithm starts in the\n         *                           direction that is the furthest between\n         *                           start/end.\n         *\n         * @return {Object}\n         *         An object with the SVG path in Array form as accepted by the SVG\n         *         renderer, as well as an array of new obstacles making up this\n         *         path.\n         */\n        function fastAvoid(start, end, options) {\n            /*\n                Algorithm rules/description\n                - Find initial direction\n                - Determine soft/hard max for each direction.\n                - Move along initial direction until obstacle.\n                - Change direction.\n                - If hitting obstacle, first try to change length of previous line\n                    before changing direction again.\n\n                Soft min/max x = start/destination x +/- widest obstacle + margin\n                Soft min/max y = start/destination y +/- tallest obstacle + margin\n\n                @todo:\n                    - Make retrospective, try changing prev segment to reduce\n                        corners\n                    - Fix logic for breaking out of end-points - not always picking\n                        the best direction currently\n                    - When going around the end obstacle we should not always go the\n                        shortest route, rather pick the one closer to the end point\n            */\n            var dirIsX = pick(options.startDirectionX, abs(end.x - start.x) > abs(end.y - start.y)), dir = dirIsX ? 'x' : 'y', endSegments = [], \n            // Boundaries to stay within. If beyond soft boundary, prefer to\n            // change direction ASAP. If at hard max, always change immediately.\n            metrics = options.obstacleMetrics, softMinX = min(start.x, end.x) - metrics.maxWidth - 10, softMaxX = max(start.x, end.x) + metrics.maxWidth + 10, softMinY = min(start.y, end.y) - metrics.maxHeight - 10, softMaxY = max(start.y, end.y) + metrics.maxHeight + 10;\n            var segments, useMax, extractedEndPoint, forceObstacleBreak = false, // Used in clearPathTo to keep track of\n            // when to force break through an obstacle.\n            // Obstacles\n            chartObstacles = options.chartObstacles, endObstacleIx = findLastObstacleBefore(chartObstacles, softMaxX);\n            var startObstacleIx = findLastObstacleBefore(chartObstacles, softMinX);\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * How far can you go between two points before hitting an obstacle?\n             * Does not work for diagonal lines (because it doesn't have to).\n             * @private\n             */\n            function pivotPoint(fromPoint, toPoint, directionIsX) {\n                var searchDirection = fromPoint.x < toPoint.x ? 1 : -1;\n                var firstPoint, lastPoint, highestPoint, lowestPoint;\n                if (fromPoint.x < toPoint.x) {\n                    firstPoint = fromPoint;\n                    lastPoint = toPoint;\n                }\n                else {\n                    firstPoint = toPoint;\n                    lastPoint = fromPoint;\n                }\n                if (fromPoint.y < toPoint.y) {\n                    lowestPoint = fromPoint;\n                    highestPoint = toPoint;\n                }\n                else {\n                    lowestPoint = toPoint;\n                    highestPoint = fromPoint;\n                }\n                // Go through obstacle range in reverse if toPoint is before\n                // fromPoint in the X-dimension.\n                var i = searchDirection < 0 ?\n                    // Searching backwards, start at last obstacle before last point\n                    min(findLastObstacleBefore(chartObstacles, lastPoint.x), chartObstacles.length - 1) :\n                    // Forwards. Since we're not sorted by xMax, we have to look\n                    // at all obstacles.\n                    0;\n                // Go through obstacles in this X range\n                while (chartObstacles[i] && (searchDirection > 0 && chartObstacles[i].xMin <= lastPoint.x ||\n                    searchDirection < 0 && chartObstacles[i].xMax >= firstPoint.x)) {\n                    // If this obstacle is between from and to points in a straight\n                    // line, pivot at the intersection.\n                    if (chartObstacles[i].xMin <= lastPoint.x &&\n                        chartObstacles[i].xMax >= firstPoint.x &&\n                        chartObstacles[i].yMin <= highestPoint.y &&\n                        chartObstacles[i].yMax >= lowestPoint.y) {\n                        if (directionIsX) {\n                            return {\n                                y: fromPoint.y,\n                                x: fromPoint.x < toPoint.x ?\n                                    chartObstacles[i].xMin - 1 :\n                                    chartObstacles[i].xMax + 1,\n                                obstacle: chartObstacles[i]\n                            };\n                        }\n                        // Else ...\n                        return {\n                            x: fromPoint.x,\n                            y: fromPoint.y < toPoint.y ?\n                                chartObstacles[i].yMin - 1 :\n                                chartObstacles[i].yMax + 1,\n                            obstacle: chartObstacles[i]\n                        };\n                    }\n                    i += searchDirection;\n                }\n                return toPoint;\n            }\n            /**\n             * Decide in which direction to dodge or get out of an obstacle.\n             * Considers desired direction, which way is shortest, soft and hard\n             * bounds.\n             *\n             * (? Returns a string, either xMin, xMax, yMin or yMax.)\n             *\n             * @private\n             * @function\n             *\n             * @param {Object} obstacle\n             *        Obstacle to dodge/escape.\n             *\n             * @param {Object} fromPoint\n             *        Point with x/y props that's dodging/escaping.\n             *\n             * @param {Object} toPoint\n             *        Goal point.\n             *\n             * @param {boolean} dirIsX\n             *        Dodge in X dimension.\n             *\n             * @param {Object} bounds\n             *        Hard and soft boundaries.\n             *\n             * @return {boolean}\n             *         Use max or not.\n             */\n            function getDodgeDirection(obstacle, fromPoint, toPoint, dirIsX, bounds) {\n                var softBounds = bounds.soft, hardBounds = bounds.hard, dir = dirIsX ? 'x' : 'y', toPointMax = { x: fromPoint.x, y: fromPoint.y }, toPointMin = { x: fromPoint.x, y: fromPoint.y }, maxOutOfSoftBounds = obstacle[dir + 'Max'] >=\n                    softBounds[dir + 'Max'], minOutOfSoftBounds = obstacle[dir + 'Min'] <=\n                    softBounds[dir + 'Min'], maxOutOfHardBounds = obstacle[dir + 'Max'] >=\n                    hardBounds[dir + 'Max'], minOutOfHardBounds = obstacle[dir + 'Min'] <=\n                    hardBounds[dir + 'Min'], \n                // Find out if we should prefer one direction over the other if\n                // we can choose freely\n                minDistance = abs(obstacle[dir + 'Min'] - fromPoint[dir]), maxDistance = abs(obstacle[dir + 'Max'] - fromPoint[dir]);\n                var // If it's a small difference, pick the one leading towards dest\n                // point. Otherwise pick the shortest distance\n                useMax = abs(minDistance - maxDistance) < 10 ?\n                    fromPoint[dir] < toPoint[dir] :\n                    maxDistance < minDistance;\n                // Check if we hit any obstacles trying to go around in either\n                // direction.\n                toPointMin[dir] = obstacle[dir + 'Min'];\n                toPointMax[dir] = obstacle[dir + 'Max'];\n                var minPivot = pivotPoint(fromPoint, toPointMin, dirIsX)[dir] !==\n                    toPointMin[dir], maxPivot = pivotPoint(fromPoint, toPointMax, dirIsX)[dir] !==\n                    toPointMax[dir];\n                useMax = minPivot ?\n                    (maxPivot ? useMax : true) :\n                    (maxPivot ? false : useMax);\n                // `useMax` now contains our preferred choice, bounds not taken into\n                // account. If both or neither direction is out of bounds we want to\n                // use this.\n                // Deal with soft bounds\n                useMax = minOutOfSoftBounds ?\n                    (maxOutOfSoftBounds ? useMax : true) : // Out on min\n                    (maxOutOfSoftBounds ? false : useMax); // Not out on min\n                // Deal with hard bounds\n                useMax = minOutOfHardBounds ?\n                    (maxOutOfHardBounds ? useMax : true) : // Out on min\n                    (maxOutOfHardBounds ? false : useMax); // Not out on min\n                return useMax;\n            }\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Find a clear path between point.\n             * @private\n             */\n            function clearPathTo(fromPoint, toPoint, dirIsX) {\n                // Don't waste time if we've hit goal\n                if (fromPoint.x === toPoint.x && fromPoint.y === toPoint.y) {\n                    return [];\n                }\n                var dir = dirIsX ? 'x' : 'y', obstacleMargin = options.obstacleOptions.margin, bounds = {\n                    soft: {\n                        xMin: softMinX,\n                        xMax: softMaxX,\n                        yMin: softMinY,\n                        yMax: softMaxY\n                    },\n                    hard: options.hardBounds\n                };\n                var pivot, segments, waypoint, waypointUseMax, envelopingObstacle, secondEnvelopingObstacle, envelopWaypoint;\n                // If fromPoint is inside an obstacle we have a problem. Break out\n                // by just going to the outside of this obstacle. We prefer to go to\n                // the nearest edge in the chosen direction.\n                envelopingObstacle =\n                    findObstacleFromPoint(chartObstacles, fromPoint);\n                if (envelopingObstacle > -1) {\n                    envelopingObstacle = chartObstacles[envelopingObstacle];\n                    waypointUseMax = getDodgeDirection(envelopingObstacle, fromPoint, toPoint, dirIsX, bounds);\n                    // Cut obstacle to hard bounds to make sure we stay within\n                    limitObstacleToBounds(envelopingObstacle, options.hardBounds);\n                    envelopWaypoint = dirIsX ? {\n                        y: fromPoint.y,\n                        x: envelopingObstacle[waypointUseMax ? 'xMax' : 'xMin'] +\n                            (waypointUseMax ? 1 : -1)\n                    } : {\n                        x: fromPoint.x,\n                        y: envelopingObstacle[waypointUseMax ? 'yMax' : 'yMin'] +\n                            (waypointUseMax ? 1 : -1)\n                    };\n                    // If we crashed into another obstacle doing this, we put the\n                    // waypoint between them instead\n                    secondEnvelopingObstacle = findObstacleFromPoint(chartObstacles, envelopWaypoint);\n                    if (secondEnvelopingObstacle > -1) {\n                        secondEnvelopingObstacle = chartObstacles[secondEnvelopingObstacle];\n                        // Cut obstacle to hard bounds\n                        limitObstacleToBounds(secondEnvelopingObstacle, options.hardBounds);\n                        // Modify waypoint to lay between obstacles\n                        envelopWaypoint[dir] = waypointUseMax ? max(envelopingObstacle[dir + 'Max'] - obstacleMargin + 1, (secondEnvelopingObstacle[dir + 'Min'] +\n                            envelopingObstacle[dir + 'Max']) / 2) :\n                            min((envelopingObstacle[dir + 'Min'] + obstacleMargin - 1), ((secondEnvelopingObstacle[dir + 'Max'] +\n                                envelopingObstacle[dir + 'Min']) / 2));\n                        // We are not going anywhere. If this happens for the first\n                        // time, do nothing. Otherwise, try to go to the extreme of\n                        // the obstacle pair in the current direction.\n                        if (fromPoint.x === envelopWaypoint.x &&\n                            fromPoint.y === envelopWaypoint.y) {\n                            if (forceObstacleBreak) {\n                                envelopWaypoint[dir] = waypointUseMax ?\n                                    max(envelopingObstacle[dir + 'Max'], secondEnvelopingObstacle[dir + 'Max']) + 1 :\n                                    min(envelopingObstacle[dir + 'Min'], secondEnvelopingObstacle[dir + 'Min']) - 1;\n                            }\n                            // Toggle on if off, and the opposite\n                            forceObstacleBreak = !forceObstacleBreak;\n                        }\n                        else {\n                            // This point is not identical to previous.\n                            // Clear break trigger.\n                            forceObstacleBreak = false;\n                        }\n                    }\n                    segments = [{\n                            start: fromPoint,\n                            end: envelopWaypoint\n                        }];\n                }\n                else { // If not enveloping, use standard pivot calculation\n                    pivot = pivotPoint(fromPoint, {\n                        x: dirIsX ? toPoint.x : fromPoint.x,\n                        y: dirIsX ? fromPoint.y : toPoint.y\n                    }, dirIsX);\n                    segments = [{\n                            start: fromPoint,\n                            end: {\n                                x: pivot.x,\n                                y: pivot.y\n                            }\n                        }];\n                    // Pivot before goal, use a waypoint to dodge obstacle\n                    if (pivot[dirIsX ? 'x' : 'y'] !== toPoint[dirIsX ? 'x' : 'y']) {\n                        // Find direction of waypoint\n                        waypointUseMax = getDodgeDirection(pivot.obstacle, pivot, toPoint, !dirIsX, bounds);\n                        // Cut waypoint to hard bounds\n                        limitObstacleToBounds(pivot.obstacle, options.hardBounds);\n                        waypoint = {\n                            x: dirIsX ?\n                                pivot.x :\n                                pivot.obstacle[waypointUseMax ? 'xMax' : 'xMin'] +\n                                    (waypointUseMax ? 1 : -1),\n                            y: dirIsX ?\n                                pivot.obstacle[waypointUseMax ? 'yMax' : 'yMin'] +\n                                    (waypointUseMax ? 1 : -1) :\n                                pivot.y\n                        };\n                        // We're changing direction here, store that to make sure we\n                        // also change direction when adding the last segment array\n                        // after handling waypoint.\n                        dirIsX = !dirIsX;\n                        segments = segments.concat(clearPathTo({\n                            x: pivot.x,\n                            y: pivot.y\n                        }, waypoint, dirIsX));\n                    }\n                }\n                // Get segments for the other direction too\n                // Recursion is our friend\n                segments = segments.concat(clearPathTo(segments[segments.length - 1].end, toPoint, !dirIsX));\n                return segments;\n            }\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Extract point to outside of obstacle in whichever direction is\n             * closest. Returns new point outside obstacle.\n             * @private\n             */\n            function extractFromObstacle(obstacle, point, goalPoint) {\n                var dirIsX = min(obstacle.xMax - point.x, point.x - obstacle.xMin) <\n                    min(obstacle.yMax - point.y, point.y - obstacle.yMin), bounds = {\n                    soft: options.hardBounds,\n                    hard: options.hardBounds\n                }, useMax = getDodgeDirection(obstacle, point, goalPoint, dirIsX, bounds);\n                return dirIsX ? {\n                    y: point.y,\n                    x: obstacle[useMax ? 'xMax' : 'xMin'] + (useMax ? 1 : -1)\n                } : {\n                    x: point.x,\n                    y: obstacle[useMax ? 'yMax' : 'yMin'] + (useMax ? 1 : -1)\n                };\n            }\n            // Cut the obstacle array to soft bounds for optimization in large\n            // datasets.\n            chartObstacles =\n                chartObstacles.slice(startObstacleIx, endObstacleIx + 1);\n            // If an obstacle envelops the end point, move it out of there and add\n            // a little segment to where it was.\n            if ((endObstacleIx = findObstacleFromPoint(chartObstacles, end)) > -1) {\n                extractedEndPoint = extractFromObstacle(chartObstacles[endObstacleIx], end, start);\n                endSegments.push({\n                    end: end,\n                    start: extractedEndPoint\n                });\n                end = extractedEndPoint;\n            }\n            // If it's still inside one or more obstacles, get out of there by\n            // force-moving towards the start point.\n            while ((endObstacleIx = findObstacleFromPoint(chartObstacles, end)) > -1) {\n                useMax = end[dir] - start[dir] < 0;\n                extractedEndPoint = {\n                    x: end.x,\n                    y: end.y\n                };\n                extractedEndPoint[dir] = chartObstacles[endObstacleIx][useMax ? dir + 'Max' : dir + 'Min'] + (useMax ? 1 : -1);\n                endSegments.push({\n                    end: end,\n                    start: extractedEndPoint\n                });\n                end = extractedEndPoint;\n            }\n            // Find the path\n            segments = clearPathTo(start, end, dirIsX);\n            // Add the end-point segments\n            segments = segments.concat(endSegments.reverse());\n            return {\n                path: pathFromSegments(segments),\n                obstacles: segments\n            };\n        }\n        fastAvoid.requiresObstacles = true;\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        // Define the available pathfinding algorithms.\n        // Algorithms take up to 3 arguments: starting point, ending point, and an\n        // options object.\n        var algorithms = {\n            fastAvoid: fastAvoid,\n            straight: straight,\n            simpleConnect: simpleConnect\n        };\n\n        return algorithms;\n    });\n    _registerModule(_modules, 'Gantt/ConnectorsDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Defaults\n         *\n         * */\n        /*\n         @todo:\n             - Document how to write your own algorithms\n             - Consider adding a Point.pathTo method that wraps creating a connection\n               and rendering it\n        */\n        var connectorsDefaults = {\n            /**\n             * The Pathfinder module allows you to define connections between any two\n             * points, represented as lines - optionally with markers for the start\n             * and/or end points. Multiple algorithms are available for calculating how\n             * the connecting lines are drawn.\n             *\n             * Connector functionality requires Highcharts Gantt to be loaded. In Gantt\n             * charts, the connectors are used to draw dependencies between tasks.\n             *\n             * @see [dependency](series.gantt.data.dependency)\n             *\n             * @sample gantt/pathfinder/demo\n             *         Pathfinder connections\n             *\n             * @declare      Highcharts.ConnectorsOptions\n             * @product      gantt\n             * @optionparent connectors\n             */\n            connectors: {\n                /**\n                 * Enable connectors for this chart. Requires Highcharts Gantt.\n                 *\n                 * @type      {boolean}\n                 * @default   true\n                 * @since     6.2.0\n                 * @apioption connectors.enabled\n                 */\n                /**\n                 * Set the default dash style for this chart's connecting lines.\n                 *\n                 * @type      {string}\n                 * @default   solid\n                 * @since     6.2.0\n                 * @apioption connectors.dashStyle\n                 */\n                /**\n                 * Set the default color for this chart's Pathfinder connecting lines.\n                 * Defaults to the color of the point being connected.\n                 *\n                 * @type      {Highcharts.ColorString}\n                 * @since     6.2.0\n                 * @apioption connectors.lineColor\n                 */\n                /**\n                 * Set the default pathfinder margin to use, in pixels. Some Pathfinder\n                 * algorithms attempt to avoid obstacles, such as other points in the\n                 * chart. These algorithms use this margin to determine how close lines\n                 * can be to an obstacle. The default is to compute this automatically\n                 * from the size of the obstacles in the chart.\n                 *\n                 * To draw connecting lines close to existing points, set this to a low\n                 * number. For more space around existing points, set this number\n                 * higher.\n                 *\n                 * @sample gantt/pathfinder/algorithm-margin\n                 *         Small algorithmMargin\n                 *\n                 * @type      {number}\n                 * @since     6.2.0\n                 * @apioption connectors.algorithmMargin\n                 */\n                /**\n                 * Set the default pathfinder algorithm to use for this chart. It is\n                 * possible to define your own algorithms by adding them to the\n                 * Highcharts.Pathfinder.prototype.algorithms object before the chart\n                 * has been created.\n                 *\n                 * The default algorithms are as follows:\n                 *\n                 * `straight`:      Draws a straight line between the connecting\n                 *                  points. Does not avoid other points when drawing.\n                 *\n                 * `simpleConnect`: Finds a path between the points using right angles\n                 *                  only. Takes only starting/ending points into\n                 *                  account, and will not avoid other points.\n                 *\n                 * `fastAvoid`:     Finds a path between the points using right angles\n                 *                  only. Will attempt to avoid other points, but its\n                 *                  focus is performance over accuracy. Works well with\n                 *                  less dense datasets.\n                 *\n                 * Default value: `straight` is used as default for most series types,\n                 * while `simpleConnect` is used as default for Gantt series, to show\n                 * dependencies between points.\n                 *\n                 * @sample gantt/pathfinder/demo\n                 *         Different types used\n                 *\n                 * @type    {Highcharts.PathfinderTypeValue}\n                 * @default undefined\n                 * @since   6.2.0\n                 */\n                type: 'straight',\n                /**\n                 * The corner radius for the connector line.\n                 *\n                 * @since 11.2.0\n                 */\n                radius: 0,\n                /**\n                 * Set the default pixel width for this chart's Pathfinder connecting\n                 * lines.\n                 *\n                 * @since 6.2.0\n                 */\n                lineWidth: 1,\n                /**\n                 * Marker options for this chart's Pathfinder connectors. Note that\n                 * this option is overridden by the `startMarker` and `endMarker`\n                 * options.\n                 *\n                 * @declare Highcharts.ConnectorsMarkerOptions\n                 * @since   6.2.0\n                 */\n                marker: {\n                    /**\n                     * Set the radius of the connector markers. The default is\n                     * automatically computed based on the algorithmMargin setting.\n                     *\n                     * Setting marker.width and marker.height will override this\n                     * setting.\n                     *\n                     * @type      {number}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.radius\n                     */\n                    /**\n                     * Set the width of the connector markers. If not supplied, this\n                     * is inferred from the marker radius.\n                     *\n                     * @type      {number}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.width\n                     */\n                    /**\n                     * Set the height of the connector markers. If not supplied, this\n                     * is inferred from the marker radius.\n                     *\n                     * @type      {number}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.height\n                     */\n                    /**\n                     * Set the color of the connector markers. By default this is the\n                     * same as the connector color.\n                     *\n                     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.color\n                     */\n                    /**\n                     * Set the line/border color of the connector markers. By default\n                     * this is the same as the marker color.\n                     *\n                     * @type      {Highcharts.ColorString}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.lineColor\n                     */\n                    /**\n                     * Enable markers for the connectors.\n                     */\n                    enabled: false,\n                    /**\n                     * Horizontal alignment of the markers relative to the points.\n                     *\n                     * @type {Highcharts.AlignValue}\n                     */\n                    align: 'center',\n                    /**\n                     * Vertical alignment of the markers relative to the points.\n                     *\n                     * @type {Highcharts.VerticalAlignValue}\n                     */\n                    verticalAlign: 'middle',\n                    /**\n                     * Whether or not to draw the markers inside the points.\n                     */\n                    inside: false,\n                    /**\n                     * Set the line/border width of the pathfinder markers.\n                     */\n                    lineWidth: 1\n                },\n                /**\n                 * Marker options specific to the start markers for this chart's\n                 * Pathfinder connectors. Overrides the generic marker options.\n                 *\n                 * @declare Highcharts.ConnectorsStartMarkerOptions\n                 * @extends connectors.marker\n                 * @since   6.2.0\n                 */\n                startMarker: {\n                    /**\n                     * Set the symbol of the connector start markers.\n                     */\n                    symbol: 'diamond'\n                },\n                /**\n                 * Marker options specific to the end markers for this chart's\n                 * Pathfinder connectors. Overrides the generic marker options.\n                 *\n                 * @declare Highcharts.ConnectorsEndMarkerOptions\n                 * @extends connectors.marker\n                 * @since   6.2.0\n                 */\n                endMarker: {\n                    /**\n                     * Set the symbol of the connector end markers.\n                     */\n                    symbol: 'arrow-filled'\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Override Pathfinder connector options for a series. Requires Highcharts Gantt\n         * to be loaded.\n         *\n         * @declare   Highcharts.SeriesConnectorsOptionsObject\n         * @extends   connectors\n         * @since     6.2.0\n         * @excluding enabled, algorithmMargin\n         * @product   gantt\n         * @apioption plotOptions.series.connectors\n         */\n        /**\n         * Connect to a point. This option can be either a string, referring to the ID\n         * of another point, or an object, or an array of either. If the option is an\n         * array, each element defines a connection.\n         *\n         * @sample gantt/pathfinder/demo\n         *         Different connection types\n         *\n         * @declare   Highcharts.XrangePointConnectorsOptionsObject\n         * @type      {string|Array<string|*>|*}\n         * @extends   plotOptions.series.connectors\n         * @since     6.2.0\n         * @excluding enabled\n         * @product   gantt\n         * @requires  highcharts-gantt\n         * @apioption series.xrange.data.connect\n         */\n        /**\n         * The ID of the point to connect to.\n         *\n         * @type      {string}\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.xrange.data.connect.to\n         */\n        ''; // Keeps doclets above in JS file\n\n        return connectorsDefaults;\n    });\n    _registerModule(_modules, 'Gantt/PathfinderComposition.js', [_modules['Gantt/ConnectorsDefaults.js'], _modules['Core/Defaults.js'], _modules['Core/Utilities.js']], function (ConnectorsDefaults, D, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var setOptions = D.setOptions;\n        var defined = U.defined, error = U.error, merge = U.merge;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get point bounding box using plotX/plotY and shapeArgs. If using\n         * graphic.getBBox() directly, the bbox will be affected by animation.\n         *\n         * @private\n         * @function\n         *\n         * @param {Highcharts.Point} point\n         *        The point to get BB of.\n         *\n         * @return {Highcharts.Dictionary<number>|null}\n         *         Result xMax, xMin, yMax, yMin.\n         */\n        function getPointBB(point) {\n            var shapeArgs = point.shapeArgs;\n            // Prefer using shapeArgs (columns)\n            if (shapeArgs) {\n                return {\n                    xMin: shapeArgs.x || 0,\n                    xMax: (shapeArgs.x || 0) + (shapeArgs.width || 0),\n                    yMin: shapeArgs.y || 0,\n                    yMax: (shapeArgs.y || 0) + (shapeArgs.height || 0)\n                };\n            }\n            // Otherwise use plotX/plotY and bb\n            var bb = point.graphic && point.graphic.getBBox();\n            return bb ? {\n                xMin: point.plotX - bb.width / 2,\n                xMax: point.plotX + bb.width / 2,\n                yMin: point.plotY - bb.height / 2,\n                yMax: point.plotY + bb.height / 2\n            } : null;\n        }\n        /**\n         * Warn if using legacy options. Copy the options over. Note that this will\n         * still break if using the legacy options in chart.update, addSeries etc.\n         * @private\n         */\n        function warnLegacy(chart) {\n            if (chart.options.pathfinder ||\n                chart.series.reduce(function (acc, series) {\n                    if (series.options) {\n                        merge(true, (series.options.connectors = series.options.connectors ||\n                            {}), series.options.pathfinder);\n                    }\n                    return acc || series.options && series.options.pathfinder;\n                }, false)) {\n                merge(true, (chart.options.connectors = chart.options.connectors || {}), chart.options.pathfinder);\n                error('WARNING: Pathfinder options have been renamed. ' +\n                    'Use \"chart.connectors\" or \"series.connectors\" instead.');\n            }\n        }\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ConnectionComposition;\n        (function (ConnectionComposition) {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            function compose(ChartClass, PathfinderClass, PointClass) {\n                var pointProto = PointClass.prototype;\n                if (!pointProto.getPathfinderAnchorPoint) {\n                    // Initialize Pathfinder for charts\n                    ChartClass.prototype.callbacks.push(function (chart) {\n                        var options = chart.options;\n                        if (options.connectors.enabled !== false) {\n                            warnLegacy(chart);\n                            this.pathfinder = new PathfinderClass(this);\n                            this.pathfinder.update(true); // First draw, defer render\n                        }\n                    });\n                    pointProto.getMarkerVector = pointGetMarkerVector;\n                    pointProto.getPathfinderAnchorPoint = pointGetPathfinderAnchorPoint;\n                    pointProto.getRadiansToVector = pointGetRadiansToVector;\n                    // Set default Pathfinder options\n                    setOptions(ConnectorsDefaults);\n                }\n            }\n            ConnectionComposition.compose = compose;\n            /**\n             * Get coordinates of anchor point for pathfinder connection.\n             *\n             * @private\n             * @function Highcharts.Point#getPathfinderAnchorPoint\n             *\n             * @param {Highcharts.ConnectorsMarkerOptions} markerOptions\n             *        Connection options for position on point.\n             *\n             * @return {Highcharts.PositionObject}\n             *         An object with x/y properties for the position. Coordinates are\n             *         in plot values, not relative to point.\n             */\n            function pointGetPathfinderAnchorPoint(markerOptions) {\n                var bb = getPointBB(this);\n                var x, y;\n                switch (markerOptions.align) { // eslint-disable-line default-case\n                    case 'right':\n                        x = 'xMax';\n                        break;\n                    case 'left':\n                        x = 'xMin';\n                }\n                switch (markerOptions.verticalAlign) { // eslint-disable-line default-case\n                    case 'top':\n                        y = 'yMin';\n                        break;\n                    case 'bottom':\n                        y = 'yMax';\n                }\n                return {\n                    x: x ? bb[x] : (bb.xMin + bb.xMax) / 2,\n                    y: y ? bb[y] : (bb.yMin + bb.yMax) / 2\n                };\n            }\n            /**\n             * Utility to get the angle from one point to another.\n             *\n             * @private\n             * @function Highcharts.Point#getRadiansToVector\n             *\n             * @param {Highcharts.PositionObject} v1\n             *        The first vector, as an object with x/y properties.\n             *\n             * @param {Highcharts.PositionObject} v2\n             *        The second vector, as an object with x/y properties.\n             *\n             * @return {number}\n             *         The angle in degrees\n             */\n            function pointGetRadiansToVector(v1, v2) {\n                var box;\n                if (!defined(v2)) {\n                    box = getPointBB(this);\n                    if (box) {\n                        v2 = {\n                            x: (box.xMin + box.xMax) / 2,\n                            y: (box.yMin + box.yMax) / 2\n                        };\n                    }\n                }\n                return Math.atan2(v2.y - v1.y, v1.x - v2.x);\n            }\n            /**\n             * Utility to get the position of the marker, based on the path angle and\n             * the marker's radius.\n             *\n             * @private\n             * @function Highcharts.Point#getMarkerVector\n             *\n             * @param {number} radians\n             *        The angle in radians from the point center to another vector.\n             *\n             * @param {number} markerRadius\n             *        The radius of the marker, to calculate the additional distance to\n             *        the center of the marker.\n             *\n             * @param {Object} anchor\n             *        The anchor point of the path and marker as an object with x/y\n             *        properties.\n             *\n             * @return {Object}\n             *         The marker vector as an object with x/y properties.\n             */\n            function pointGetMarkerVector(radians, markerRadius, anchor) {\n                var twoPI = Math.PI * 2.0, bb = getPointBB(this), rectWidth = bb.xMax - bb.xMin, rectHeight = bb.yMax - bb.yMin, rAtan = Math.atan2(rectHeight, rectWidth), rectHalfWidth = rectWidth / 2.0, rectHalfHeight = rectHeight / 2.0, rectHorizontalCenter = bb.xMin + rectHalfWidth, rectVerticalCenter = bb.yMin + rectHalfHeight, edgePoint = {\n                    x: rectHorizontalCenter,\n                    y: rectVerticalCenter\n                };\n                var theta = radians, tanTheta = 1, leftOrRightRegion = false, xFactor = 1, yFactor = 1;\n                while (theta < -Math.PI) {\n                    theta += twoPI;\n                }\n                while (theta > Math.PI) {\n                    theta -= twoPI;\n                }\n                tanTheta = Math.tan(theta);\n                if ((theta > -rAtan) && (theta <= rAtan)) {\n                    // Right side\n                    yFactor = -1;\n                    leftOrRightRegion = true;\n                }\n                else if (theta > rAtan && theta <= (Math.PI - rAtan)) {\n                    // Top side\n                    yFactor = -1;\n                }\n                else if (theta > (Math.PI - rAtan) || theta <= -(Math.PI - rAtan)) {\n                    // Left side\n                    xFactor = -1;\n                    leftOrRightRegion = true;\n                }\n                else {\n                    // Bottom side\n                    xFactor = -1;\n                }\n                // Correct the edgePoint according to the placement of the marker\n                if (leftOrRightRegion) {\n                    edgePoint.x += xFactor * (rectHalfWidth);\n                    edgePoint.y += yFactor * (rectHalfWidth) * tanTheta;\n                }\n                else {\n                    edgePoint.x += xFactor * (rectHeight / (2.0 * tanTheta));\n                    edgePoint.y += yFactor * (rectHalfHeight);\n                }\n                if (anchor.x !== rectHorizontalCenter) {\n                    edgePoint.x = anchor.x;\n                }\n                if (anchor.y !== rectVerticalCenter) {\n                    edgePoint.y = anchor.y;\n                }\n                return {\n                    x: edgePoint.x + (markerRadius * Math.cos(theta)),\n                    y: edgePoint.y - (markerRadius * Math.sin(theta))\n                };\n            }\n        })(ConnectionComposition || (ConnectionComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ConnectionComposition;\n    });\n    _registerModule(_modules, 'Gantt/Pathfinder.js', [_modules['Gantt/Connection.js'], _modules['Gantt/PathfinderAlgorithms.js'], _modules['Gantt/PathfinderComposition.js'], _modules['Core/Series/Point.js'], _modules['Core/Utilities.js']], function (Connection, PathfinderAlgorithms, PathfinderComposition, Point, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, defined = U.defined, pick = U.pick, splat = U.splat;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var max = Math.max, min = Math.min;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get point bounding box using plotX/plotY and shapeArgs. If using\n         * graphic.getBBox() directly, the bbox will be affected by animation.\n         *\n         * @private\n         * @function\n         *\n         * @param {Highcharts.Point} point\n         *        The point to get BB of.\n         *\n         * @return {Highcharts.Dictionary<number>|null}\n         *         Result xMax, xMin, yMax, yMin.\n         */\n        function getPointBB(point) {\n            var shapeArgs = point.shapeArgs;\n            // Prefer using shapeArgs (columns)\n            if (shapeArgs) {\n                return {\n                    xMin: shapeArgs.x || 0,\n                    xMax: (shapeArgs.x || 0) + (shapeArgs.width || 0),\n                    yMin: shapeArgs.y || 0,\n                    yMax: (shapeArgs.y || 0) + (shapeArgs.height || 0)\n                };\n            }\n            // Otherwise use plotX/plotY and bb\n            var bb = point.graphic && point.graphic.getBBox();\n            return bb ? {\n                xMin: point.plotX - bb.width / 2,\n                xMax: point.plotX + bb.width / 2,\n                yMin: point.plotY - bb.height / 2,\n                yMax: point.plotY + bb.height / 2\n            } : null;\n        }\n        /**\n         * Compute smallest distance between two rectangles.\n         * @private\n         */\n        function calculateObstacleDistance(a, b, bbMargin) {\n            // Count the distance even if we are slightly off\n            var margin = pick(bbMargin, 10), yOverlap = a.yMax + margin > b.yMin - margin &&\n                a.yMin - margin < b.yMax + margin, xOverlap = a.xMax + margin > b.xMin - margin &&\n                a.xMin - margin < b.xMax + margin, xDistance = yOverlap ? (a.xMin > b.xMax ? a.xMin - b.xMax : b.xMin - a.xMax) : Infinity, yDistance = xOverlap ? (a.yMin > b.yMax ? a.yMin - b.yMax : b.yMin - a.yMax) : Infinity;\n            // If the rectangles collide, try recomputing with smaller margin.\n            // If they collide anyway, discard the obstacle.\n            if (xOverlap && yOverlap) {\n                return (margin ?\n                    calculateObstacleDistance(a, b, Math.floor(margin / 2)) :\n                    Infinity);\n            }\n            return min(xDistance, yDistance);\n        }\n        /**\n         * Calculate margin to place around obstacles for the pathfinder in pixels.\n         * Returns a minimum of 1 pixel margin.\n         *\n         * @private\n         * @function\n         *\n         * @param {Array<object>} obstacles\n         *        Obstacles to calculate margin from.\n         *\n         * @return {number}\n         *         The calculated margin in pixels. At least 1.\n         */\n        function calculateObstacleMargin(obstacles) {\n            var len = obstacles.length, distances = [];\n            var onstacleDistance;\n            // Go over all obstacles and compare them to the others.\n            for (var i = 0; i < len; ++i) {\n                // Compare to all obstacles ahead. We will already have compared this\n                // obstacle to the ones before.\n                for (var j = i + 1; j < len; ++j) {\n                    onstacleDistance =\n                        calculateObstacleDistance(obstacles[i], obstacles[j]);\n                    // TODO: Magic number 80\n                    if (onstacleDistance < 80) { // Ignore large distances\n                        distances.push(onstacleDistance);\n                    }\n                }\n            }\n            // Ensure we always have at least one value, even in very spacious charts\n            distances.push(80);\n            return max(Math.floor(distances.sort(function (a, b) {\n                return (a - b);\n            })[\n            // Discard first 10% of the relevant distances, and then grab\n            // the smallest one.\n            Math.floor(distances.length / 10)] / 2 - 1 // Divide the distance by 2 and subtract 1.\n            ), 1 // 1 is the minimum margin\n            );\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Pathfinder class.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Pathfinder\n         *\n         * @param {Highcharts.Chart} chart\n         *        The chart to operate on.\n         */\n        var Pathfinder = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Pathfinder(chart) {\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Pathfinder.compose = function (ChartClass, PointClass) {\n                PathfinderComposition.compose(ChartClass, Pathfinder, PointClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the Pathfinder object.\n             *\n             * @function Highcharts.Pathfinder#init\n             *\n             * @param {Highcharts.Chart} chart\n             *        The chart context.\n             */\n            Pathfinder.prototype.init = function (chart) {\n                // Initialize pathfinder with chart context\n                this.chart = chart;\n                // Init connection reference list\n                this.connections = [];\n                // Recalculate paths/obstacles on chart redraw\n                addEvent(chart, 'redraw', function () {\n                    this.pathfinder.update();\n                });\n            };\n            /**\n             * Update Pathfinder connections from scratch.\n             *\n             * @function Highcharts.Pathfinder#update\n             *\n             * @param {boolean} [deferRender]\n             *        Whether or not to defer rendering of connections until\n             *        series.afterAnimate event has fired. Used on first render.\n             */\n            Pathfinder.prototype.update = function (deferRender) {\n                var chart = this.chart, pathfinder = this, oldConnections = pathfinder.connections;\n                // Rebuild pathfinder connections from options\n                pathfinder.connections = [];\n                chart.series.forEach(function (series) {\n                    if (series.visible && !series.options.isInternal) {\n                        series.points.forEach(function (point) {\n                            var _a;\n                            var ganttPointOptions = point.options;\n                            // For Gantt series the connect could be\n                            // defined as a dependency\n                            if (ganttPointOptions && ganttPointOptions.dependency) {\n                                ganttPointOptions.connect = ganttPointOptions\n                                    .dependency;\n                            }\n                            var connects = (((_a = point.options) === null || _a === void 0 ? void 0 : _a.connect) &&\n                                splat(point.options.connect));\n                            var to;\n                            if (point.visible && point.isInside !== false && connects) {\n                                connects.forEach(function (connect) {\n                                    to = chart.get(typeof connect === 'string' ?\n                                        connect : connect.to);\n                                    if (to instanceof Point &&\n                                        to.series.visible &&\n                                        to.visible &&\n                                        to.isInside !== false) {\n                                        // Add new connection\n                                        pathfinder.connections.push(new Connection(point, // From\n                                        to, typeof connect === 'string' ?\n                                            {} :\n                                            connect));\n                                    }\n                                });\n                            }\n                        });\n                    }\n                });\n                // Clear connections that should not be updated, and move old info over\n                // to new connections.\n                for (var j = 0, k = void 0, found = void 0, lenOld = oldConnections.length, lenNew = pathfinder.connections.length; j < lenOld; ++j) {\n                    found = false;\n                    var oldCon = oldConnections[j];\n                    for (k = 0; k < lenNew; ++k) {\n                        var newCon = pathfinder.connections[k];\n                        if ((oldCon.options && oldCon.options.type) ===\n                            (newCon.options && newCon.options.type) &&\n                            oldCon.fromPoint === newCon.fromPoint &&\n                            oldCon.toPoint === newCon.toPoint) {\n                            newCon.graphics = oldCon.graphics;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        oldCon.destroy();\n                    }\n                }\n                // Clear obstacles to force recalculation. This must be done on every\n                // redraw in case positions have changed. Recalculation is handled in\n                // Connection.getPath on demand.\n                delete this.chartObstacles;\n                delete this.lineObstacles;\n                // Draw the pending connections\n                pathfinder.renderConnections(deferRender);\n            };\n            /**\n             * Draw the chart's connecting paths.\n             *\n             * @function Highcharts.Pathfinder#renderConnections\n             *\n             * @param {boolean} [deferRender]\n             *        Whether or not to defer render until series animation is finished.\n             *        Used on first render.\n             */\n            Pathfinder.prototype.renderConnections = function (deferRender) {\n                if (deferRender) {\n                    // Render after series are done animating\n                    this.chart.series.forEach(function (series) {\n                        var render = function () {\n                            // Find pathfinder connections belonging to this series\n                            // that haven't rendered, and render them now.\n                            var pathfinder = series.chart.pathfinder, conns = pathfinder && pathfinder.connections || [];\n                            conns.forEach(function (connection) {\n                                if (connection.fromPoint &&\n                                    connection.fromPoint.series === series) {\n                                    connection.render();\n                                }\n                            });\n                            if (series.pathfinderRemoveRenderEvent) {\n                                series.pathfinderRemoveRenderEvent();\n                                delete series.pathfinderRemoveRenderEvent;\n                            }\n                        };\n                        if (series.options.animation === false) {\n                            render();\n                        }\n                        else {\n                            series.pathfinderRemoveRenderEvent = addEvent(series, 'afterAnimate', render);\n                        }\n                    });\n                }\n                else {\n                    // Go through connections and render them\n                    this.connections.forEach(function (connection) {\n                        connection.render();\n                    });\n                }\n            };\n            /**\n             * Get obstacles for the points in the chart. Does not include connecting\n             * lines from Pathfinder. Applies algorithmMargin to the obstacles.\n             *\n             * @function Highcharts.Pathfinder#getChartObstacles\n             *\n             * @param {Object} options\n             *        Options for the calculation. Currently only\n             *        `options.algorithmMargin`.\n             *\n             * @param {number} options.algorithmMargin\n             *        The algorithm margin to use for the obstacles.\n\n            * @return {Array<object>}\n             *         An array of calculated obstacles. Each obstacle is defined as an\n             *         object with xMin, xMax, yMin and yMax properties.\n             */\n            Pathfinder.prototype.getChartObstacles = function (options) {\n                var series = this.chart.series, margin = pick(options.algorithmMargin, 0);\n                var obstacles = [], calculatedMargin;\n                for (var i = 0, sLen = series.length; i < sLen; ++i) {\n                    if (series[i].visible && !series[i].options.isInternal) {\n                        for (var j = 0, pLen = series[i].points.length, bb = void 0, point = void 0; j < pLen; ++j) {\n                            point = series[i].points[j];\n                            if (point.visible) {\n                                bb = getPointBB(point);\n                                if (bb) {\n                                    obstacles.push({\n                                        xMin: bb.xMin - margin,\n                                        xMax: bb.xMax + margin,\n                                        yMin: bb.yMin - margin,\n                                        yMax: bb.yMax + margin\n                                    });\n                                }\n                            }\n                        }\n                    }\n                }\n                // Sort obstacles by xMin for optimization\n                obstacles = obstacles.sort(function (a, b) {\n                    return a.xMin - b.xMin;\n                });\n                // Add auto-calculated margin if the option is not defined\n                if (!defined(options.algorithmMargin)) {\n                    calculatedMargin =\n                        options.algorithmMargin =\n                            calculateObstacleMargin(obstacles);\n                    obstacles.forEach(function (obstacle) {\n                        obstacle.xMin -= calculatedMargin;\n                        obstacle.xMax += calculatedMargin;\n                        obstacle.yMin -= calculatedMargin;\n                        obstacle.yMax += calculatedMargin;\n                    });\n                }\n                return obstacles;\n            };\n            /**\n             * Utility function to get metrics for obstacles:\n             * - Widest obstacle width\n             * - Tallest obstacle height\n             *\n             * @function Highcharts.Pathfinder#getObstacleMetrics\n             *\n             * @param {Array<object>} obstacles\n             *        An array of obstacles to inspect.\n             *\n             * @return {Object}\n             *         The calculated metrics, as an object with maxHeight and maxWidth\n             *         properties.\n             */\n            Pathfinder.prototype.getObstacleMetrics = function (obstacles) {\n                var maxWidth = 0, maxHeight = 0, width, height, i = obstacles.length;\n                while (i--) {\n                    width = obstacles[i].xMax - obstacles[i].xMin;\n                    height = obstacles[i].yMax - obstacles[i].yMin;\n                    if (maxWidth < width) {\n                        maxWidth = width;\n                    }\n                    if (maxHeight < height) {\n                        maxHeight = height;\n                    }\n                }\n                return {\n                    maxHeight: maxHeight,\n                    maxWidth: maxWidth\n                };\n            };\n            /**\n             * Utility to get which direction to start the pathfinding algorithm\n             * (X vs Y), calculated from a set of marker options.\n             *\n             * @function Highcharts.Pathfinder#getAlgorithmStartDirection\n             *\n             * @param {Highcharts.ConnectorsMarkerOptions} markerOptions\n             *        Marker options to calculate from.\n             *\n             * @return {boolean}\n             *         Returns true for X, false for Y, and undefined for autocalculate.\n             */\n            Pathfinder.prototype.getAlgorithmStartDirection = function (markerOptions) {\n                var xCenter = markerOptions.align !== 'left' &&\n                    markerOptions.align !== 'right', yCenter = markerOptions.verticalAlign !== 'top' &&\n                    markerOptions.verticalAlign !== 'bottom';\n                return xCenter ?\n                    (yCenter ? void 0 : false) : // When x is centered\n                    (yCenter ? true : void 0); // When x is off-center\n            };\n            return Pathfinder;\n        }());\n        /**\n         * @name Highcharts.Pathfinder#algorithms\n         * @type {Highcharts.Dictionary<Function>}\n         */\n        Pathfinder.prototype.algorithms = PathfinderAlgorithms;\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The default pathfinder algorithm to use for a chart. It is possible to define\n         * your own algorithms by adding them to the\n         * `Highcharts.Pathfinder.prototype.algorithms`\n         * object before the chart has been created.\n         *\n         * The default algorithms are as follows:\n         *\n         * `straight`:      Draws a straight line between the connecting\n         *                  points. Does not avoid other points when drawing.\n         *\n         * `simpleConnect`: Finds a path between the points using right angles\n         *                  only. Takes only starting/ending points into\n         *                  account, and will not avoid other points.\n         *\n         * `fastAvoid`:     Finds a path between the points using right angles\n         *                  only. Will attempt to avoid other points, but its\n         *                  focus is performance over accuracy. Works well with\n         *                  less dense datasets.\n         *\n         * @typedef {\"fastAvoid\"|\"simpleConnect\"|\"straight\"|string} Highcharts.PathfinderTypeValue\n         */\n        ''; // Keeps doclets above in JS file\n\n        return Pathfinder;\n    });\n    _registerModule(_modules, 'masters/modules/pathfinder.src.js', [_modules['Core/Globals.js'], _modules['Gantt/Pathfinder.js'], _modules['Extensions/ArrowSymbols.js']], function (Highcharts, Pathfinder, ArrowSymbols) {\n\n        var G = Highcharts;\n        G.Pathfinder = G.Pathfinder || Pathfinder;\n        ArrowSymbols.compose(G.SVGRenderer);\n        G.Pathfinder.compose(G.Chart, G.Point);\n\n        return Highcharts;\n    });\n    _registerModule(_modules, 'Extensions/StaticScale.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016-2024 Torstein Honsi, Lars Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /** @private */\n        function compose(AxisClass, ChartClass) {\n            var chartProto = ChartClass.prototype;\n            if (!chartProto.adjustHeight) {\n                addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                chartProto.adjustHeight = chartAdjustHeight;\n                addEvent(ChartClass, 'render', chartProto.adjustHeight);\n            }\n        }\n        /** @private */\n        function onAxisAfterSetOptions() {\n            var chartOptions = this.chart.options.chart;\n            if (!this.horiz &&\n                isNumber(this.options.staticScale) &&\n                (!chartOptions.height ||\n                    (chartOptions.scrollablePlotArea &&\n                        chartOptions.scrollablePlotArea.minHeight))) {\n                this.staticScale = this.options.staticScale;\n            }\n        }\n        /** @private */\n        function chartAdjustHeight() {\n            var chart = this;\n            if (chart.redrawTrigger !== 'adjustHeight') {\n                var _loop_1 = function (axis) {\n                    var chart_1 = axis.chart, animate = !!chart_1.initiatedScale &&\n                        chart_1.options.animation, staticScale = axis.options.staticScale;\n                    if (axis.staticScale && defined(axis.min)) {\n                        var height = pick(axis.brokenAxis && axis.brokenAxis.unitLength, axis.max + axis.tickInterval - axis.min) * staticScale;\n                        // Minimum height is 1 x staticScale.\n                        height = Math.max(height, staticScale);\n                        var diff = height - chart_1.plotHeight;\n                        if (!chart_1.scrollablePixelsY && Math.abs(diff) >= 1) {\n                            chart_1.plotHeight = height;\n                            chart_1.redrawTrigger = 'adjustHeight';\n                            chart_1.setSize(void 0, chart_1.chartHeight + diff, animate);\n                        }\n                        // Make sure clip rects have the right height before initial\n                        // animation.\n                        axis.series.forEach(function (series) {\n                            var clipRect = series.sharedClipKey &&\n                                chart_1.sharedClips[series.sharedClipKey];\n                            if (clipRect) {\n                                clipRect.attr(chart_1.inverted ? {\n                                    width: chart_1.plotHeight\n                                } : {\n                                    height: chart_1.plotHeight\n                                });\n                            }\n                        });\n                    }\n                };\n                for (var _i = 0, _a = (chart.axes || []); _i < _a.length; _i++) {\n                    var axis = _a[_i];\n                    _loop_1(axis);\n                }\n                this.initiatedScale = true;\n            }\n            this.redrawTrigger = null;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var StaticScale = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * For vertical axes only. Setting the static scale ensures that each tick unit\n         * is translated into a fixed pixel height. For example, setting the static\n         * scale to 24 results in each Y axis category taking up 24 pixels, and the\n         * height of the chart adjusts. Adding or removing items will make the chart\n         * resize.\n         *\n         * @sample gantt/xrange-series/demo/\n         *         X-range series with static scale\n         *\n         * @type      {number}\n         * @default   50\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption yAxis.staticScale\n         */\n        ''; // Keeps doclets above in JS file\n\n        return StaticScale;\n    });\n    _registerModule(_modules, 'masters/modules/static-scale.src.js', [_modules['Core/Globals.js'], _modules['Extensions/StaticScale.js']], function (Highcharts, StaticScale) {\n\n        var G = Highcharts;\n        StaticScale.compose(G.Axis, G.Chart);\n\n        return Highcharts;\n    });\n    _registerModule(_modules, 'Series/XRange/XRangeSeriesDefaults.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  X-range series module\n         *\n         *  (c) 2010-2024 Torstein Honsi, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var correctFloat = U.correctFloat, isNumber = U.isNumber, isObject = U.isObject;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The X-range series displays ranges on the X axis, typically time\n         * intervals with a start and end date.\n         *\n         * @sample {highcharts} highcharts/demo/x-range/\n         *         X-range\n         * @sample {highcharts} highcharts/css/x-range/\n         *         Styled mode X-range\n         * @sample {highcharts} highcharts/chart/inverted-xrange/\n         *         Inverted X-range\n         *\n         * @extends      plotOptions.column\n         * @since        6.0.0\n         * @product      highcharts highstock gantt\n         * @excluding    boostThreshold, crisp, cropThreshold, depth, edgeColor,\n         *               edgeWidth, findNearestPointBy, getExtremesFromAll,\n         *               negativeColor, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, softThreshold,\n         *               stacking, threshold, data, dataSorting, boostBlending\n         * @requires     modules/xrange\n         * @optionparent plotOptions.xrange\n         */\n        var XRangeSeriesDefaults = {\n            /**\n             * A partial fill for each point, typically used to visualize how much\n             * of a task is performed. The partial fill object can be set either on\n             * series or point level.\n             *\n             * @sample {highcharts} highcharts/demo/x-range\n             *         X-range with partial fill\n             *\n             * @product   highcharts highstock gantt\n             * @apioption plotOptions.xrange.partialFill\n             */\n            /**\n             * The fill color to be used for partial fills. Defaults to a darker\n             * shade of the point color.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product   highcharts highstock gantt\n             * @apioption plotOptions.xrange.partialFill.fill\n             */\n            /**\n             * A partial fill for each point, typically used to visualize how much\n             * of a task is performed. See [completed](series.gantt.data.completed).\n             *\n             * @sample gantt/demo/progress-indicator\n             *         Gantt with progress indicator\n             *\n             * @product   gantt\n             * @apioption plotOptions.gantt.partialFill\n             */\n            /**\n             * In an X-range series, this option makes all points of the same Y-axis\n             * category the same color.\n             */\n            colorByPoint: true,\n            dataLabels: {\n                formatter: function () {\n                    var amount = this.point.partialFill;\n                    if (isObject(amount)) {\n                        amount = amount.amount;\n                    }\n                    if (isNumber(amount) && amount > 0) {\n                        return correctFloat(amount * 100) + '%';\n                    }\n                },\n                inside: true,\n                verticalAlign: 'middle',\n                style: {\n                    whiteSpace: 'nowrap'\n                }\n            },\n            tooltip: {\n                headerFormat: '<span style=\"font-size: 0.8em\">{point.x} - {point.x2}</span><br/>',\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.yCategory}</b><br/>'\n            },\n            borderRadius: 3,\n            pointRange: 0\n        };\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n        /* *\n         *\n         * API Options\n         *\n         * */\n        /**\n         * An `xrange` series. If the [type](#series.xrange.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.xrange\n         * @excluding boostThreshold, crisp, cropThreshold, depth, edgeColor, edgeWidth,\n         *            findNearestPointBy, getExtremesFromAll, negativeColor,\n         *            pointInterval, pointIntervalUnit, pointPlacement, pointRange,\n         *            pointStart, softThreshold, stacking, threshold, dataSorting,\n         *            boostBlending\n         * @product   highcharts highstock gantt\n         * @requires  modules/xrange\n         * @apioption series.xrange\n         */\n        /**\n         * An array of data points for the series. For the `xrange` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of objects with named values. The objects are point configuration\n         *    objects as seen below.\n         *    ```js\n         *    data: [{\n         *        x: Date.UTC(2017, 0, 1),\n         *        x2: Date.UTC(2017, 0, 3),\n         *        name: \"Test\",\n         *        y: 0,\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: Date.UTC(2017, 0, 4),\n         *        x2: Date.UTC(2017, 0, 5),\n         *        name: \"Deploy\",\n         *        y: 1,\n         *        color: \"#FF0000\"\n         *    }]\n         *    ```\n         *\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @declare   Highcharts.XrangePointOptionsObject\n         * @type      {Array<*>}\n         * @extends   series.line.data\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data\n         */\n        /**\n         * The starting X value of the range point.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.x\n         */\n        /**\n         * The ending X value of the range point.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.x2\n         */\n        /**\n         * The Y value of the range point.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.y\n         */\n        /**\n         * A partial fill for each point, typically used to visualize how much of\n         * a task is performed. The partial fill object can be set either on series\n         * or point level.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range with partial fill\n         *\n         * @declare   Highcharts.XrangePointPartialFillOptionsObject\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.partialFill\n         */\n        /**\n         * The amount of the X-range point to be filled. Values can be 0-1 and are\n         * converted to percentages in the default data label formatter.\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.partialFill.amount\n         */\n        /**\n         * The fill color to be used for partial fills. Defaults to a darker shade\n         * of the point color.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.partialFill.fill\n         */\n        (''); // Adds doclets above to transpiled file\n\n        return XRangeSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/XRange/XRangePoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  X-range series module\n         *\n         *  (c) 2010-2024 Torstein Honsi, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnPoint = SeriesRegistry.seriesTypes.column.prototype.pointClass;\n        var extend = U.extend;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var XRangePoint = /** @class */ (function (_super) {\n            __extends(XRangePoint, _super);\n            /**\n             * Extend init to have y default to 0.\n             *\n             * @private\n             */\n            function XRangePoint(series, options) {\n                var _this = _super.call(this, series, options) || this;\n                if (!_this.y) {\n                    _this.y = 0;\n                }\n                return _this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * Return color of a point based on its category.\n             *\n             * @private\n             * @function getColorByCategory\n             *\n             * @param {object} series\n             *        The series which the point belongs to.\n             *\n             * @param {object} point\n             *        The point to calculate its color for.\n             *\n             * @return {object}\n             *         Returns an object containing the properties color and colorIndex.\n             */\n            XRangePoint.getColorByCategory = function (series, point) {\n                var colors = series.options.colors || series.chart.options.colors, colorCount = colors ?\n                    colors.length :\n                    series.chart.options.chart.colorCount, colorIndex = point.y % colorCount, color = colors && colors[colorIndex];\n                return {\n                    colorIndex: colorIndex,\n                    color: color\n                };\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            XRangePoint.prototype.resolveColor = function () {\n                var series = this.series;\n                if (series.options.colorByPoint && !this.options.color) {\n                    var colorByPoint = XRangePoint.getColorByCategory(series, this);\n                    if (!series.chart.styledMode) {\n                        this.color = colorByPoint.color;\n                    }\n                    if (!this.options.colorIndex) {\n                        this.colorIndex = colorByPoint.colorIndex;\n                    }\n                }\n                else {\n                    this.color = this.options.color || series.color;\n                }\n            };\n            /**\n             * @private\n             */\n            XRangePoint.prototype.setState = function () {\n                _super.prototype.setState.apply(this, arguments);\n                this.series.drawPoint(this, this.series.getAnimationVerb());\n            };\n            /**\n             * Add x2 and yCategory to the available properties for tooltip formats.\n             *\n             * @private\n             */\n            XRangePoint.prototype.getLabelConfig = function () {\n                var cfg = _super.prototype.getLabelConfig.call(this), yCats = this.series.yAxis.categories;\n                cfg.x2 = this.x2;\n                cfg.yCategory = this.yCategory = yCats && yCats[this.y];\n                // Use 'category' as 'key' to ensure tooltip datetime formatting.\n                // Use 'name' only when 'category' is undefined.\n                cfg.key = this.category || this.name;\n                return cfg;\n            };\n            /**\n             * @private\n             */\n            XRangePoint.prototype.isValid = function () {\n                return typeof this.x === 'number' &&\n                    typeof this.x2 === 'number';\n            };\n            return XRangePoint;\n        }(ColumnPoint));\n        extend(XRangePoint.prototype, {\n            ttBelow: false,\n            tooltipDateKeys: ['x', 'x2']\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * The ending X value of the range point.\n         * @name Highcharts.Point#x2\n         * @type {number|undefined}\n         * @requires modules/xrange\n         */\n        /**\n         * Extend applyOptions so that `colorByPoint` for x-range means that one\n         * color is applied per Y axis category.\n         *\n         * @private\n         * @function Highcharts.Point#applyOptions\n         *\n         * @return {Highcharts.Series}\n         */\n        /**\n         * @interface Highcharts.PointOptionsObject in parts/Point.ts\n         */ /**\n        * The ending X value of the range point.\n        * @name Highcharts.PointOptionsObject#x2\n        * @type {number|undefined}\n        * @requires modules/xrange\n        */\n        (''); // Keeps doclets above in JS file\n\n        return XRangePoint;\n    });\n    _registerModule(_modules, 'Series/XRange/XRangeSeries.js', [_modules['Core/Globals.js'], _modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js'], _modules['Series/XRange/XRangeSeriesDefaults.js'], _modules['Series/XRange/XRangePoint.js']], function (H, Color, SeriesRegistry, U, XRangeSeriesDefaults, XRangePoint) {\n        /* *\n         *\n         *  X-range series module\n         *\n         *  (c) 2010-2024 Torstein Honsi, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var composed = H.composed, noop = H.noop;\n        var color = Color.parse;\n        var ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var addEvent = U.addEvent, clamp = U.clamp, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, isObject = U.isObject, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique, relativeLength = U.relativeLength;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Max x2 should be considered in xAxis extremes\n         * @private\n         */\n        function onAxisAfterGetSeriesExtremes() {\n            var dataMax, modMax;\n            if (this.isXAxis) {\n                dataMax = pick(this.dataMax, -Number.MAX_VALUE);\n                for (var _i = 0, _a = this.series; _i < _a.length; _i++) {\n                    var series = _a[_i];\n                    if (series.x2Data) {\n                        for (var _b = 0, _c = series.x2Data; _b < _c.length; _b++) {\n                            var val = _c[_b];\n                            if (val && val > dataMax) {\n                                dataMax = val;\n                                modMax = true;\n                            }\n                        }\n                    }\n                }\n                if (modMax) {\n                    this.dataMax = dataMax;\n                }\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.xrange\n         *\n         * @augments Highcharts.Series\n         */\n        var XRangeSeries = /** @class */ (function (_super) {\n            __extends(XRangeSeries, _super);\n            function XRangeSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            XRangeSeries.compose = function (AxisClass) {\n                if (pushUnique(composed, 'Series.XRange')) {\n                    addEvent(AxisClass, 'afterGetSeriesExtremes', onAxisAfterGetSeriesExtremes);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.init = function () {\n                _super.prototype.init.apply(this, arguments);\n                this.options.stacking = void 0; // #13161\n            };\n            /**\n             * Borrow the column series metrics, but with swapped axes. This gives\n             * free access to features like groupPadding, grouping, pointWidth etc.\n             * @private\n             */\n            XRangeSeries.prototype.getColumnMetrics = function () {\n                var _this = this;\n                var swapAxes = function () {\n                    for (var _i = 0, _a = _this.chart.series; _i < _a.length; _i++) {\n                        var series = _a[_i];\n                        var xAxis = series.xAxis;\n                        series.xAxis = series.yAxis;\n                        series.yAxis = xAxis;\n                    }\n                };\n                swapAxes();\n                var metrics = _super.prototype.getColumnMetrics.call(this);\n                swapAxes();\n                return metrics;\n            };\n            /**\n             * Override cropData to show a point where x or x2 is outside visible range,\n             * but one of them is inside.\n             * @private\n             */\n            XRangeSeries.prototype.cropData = function (xData, yData, min, max) {\n                // Replace xData with x2Data to find the appropriate cropStart\n                var crop = _super.prototype.cropData.call(this, this.x2Data, yData, min, max);\n                // Re-insert the cropped xData\n                crop.xData = xData.slice(crop.start, crop.end);\n                return crop;\n            };\n            /**\n             * Finds the index of an existing point that matches the given point\n             * options.\n             *\n             * @private\n             *\n             * @param {Highcharts.XRangePointOptions} options\n             *        The options of the point.\n             *\n             * @return {number|undefined}\n             *         Returns index of a matching point, or undefined if no match is\n             *         found.\n             */\n            XRangeSeries.prototype.findPointIndex = function (options) {\n                var _a = this, cropStart = _a.cropStart, points = _a.points;\n                var id = options.id;\n                var pointIndex;\n                if (id) {\n                    var point = find(points, function (point) { return point.id === id; });\n                    pointIndex = point ? point.index : void 0;\n                }\n                if (typeof pointIndex === 'undefined') {\n                    var point = find(points, function (point) { return (point.x === options.x &&\n                        point.x2 === options.x2 &&\n                        !point.touched); });\n                    pointIndex = point ? point.index : void 0;\n                }\n                // Reduce pointIndex if data is cropped\n                if (this.cropped &&\n                    isNumber(pointIndex) &&\n                    isNumber(cropStart) &&\n                    pointIndex >= cropStart) {\n                    pointIndex -= cropStart;\n                }\n                return pointIndex;\n            };\n            XRangeSeries.prototype.alignDataLabel = function (point) {\n                var _a;\n                var oldPlotX = point.plotX;\n                point.plotX = pick(point.dlBox && point.dlBox.centerX, point.plotX);\n                if (point.dataLabel && ((_a = point.shapeArgs) === null || _a === void 0 ? void 0 : _a.width)) {\n                    point.dataLabel.css({\n                        width: \"\".concat(point.shapeArgs.width, \"px\")\n                    });\n                }\n                _super.prototype.alignDataLabel.apply(this, arguments);\n                point.plotX = oldPlotX;\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.translatePoint = function (point) {\n                var xAxis = this.xAxis, yAxis = this.yAxis, metrics = this.columnMetrics, options = this.options, minPointLength = options.minPointLength || 0, oldColWidth = (point.shapeArgs && point.shapeArgs.width || 0) / 2, seriesXOffset = this.pointXOffset = metrics.offset, posX = pick(point.x2, point.x + (point.len || 0)), borderRadius = options.borderRadius, plotTop = this.chart.plotTop, plotLeft = this.chart.plotLeft;\n                var plotX = point.plotX, plotX2 = xAxis.translate(posX, 0, 0, 0, 1);\n                var length = Math.abs(plotX2 - plotX), inverted = this.chart.inverted, borderWidth = pick(options.borderWidth, 1), crisper = borderWidth % 2 / 2;\n                var widthDifference, partialFill, yOffset = metrics.offset, pointHeight = Math.round(metrics.width), dlLeft, dlRight, dlWidth, clipRectWidth;\n                if (minPointLength) {\n                    widthDifference = minPointLength - length;\n                    if (widthDifference < 0) {\n                        widthDifference = 0;\n                    }\n                    plotX -= widthDifference / 2;\n                    plotX2 += widthDifference / 2;\n                }\n                plotX = Math.max(plotX, -10);\n                plotX2 = clamp(plotX2, -10, xAxis.len + 10);\n                // Handle individual pointWidth\n                if (defined(point.options.pointWidth)) {\n                    yOffset -= ((Math.ceil(point.options.pointWidth) - pointHeight) / 2);\n                    pointHeight = Math.ceil(point.options.pointWidth);\n                }\n                // Apply pointPlacement to the Y axis\n                if (options.pointPlacement &&\n                    isNumber(point.plotY) &&\n                    yAxis.categories) {\n                    point.plotY = yAxis.translate(point.y, 0, 1, 0, 1, options.pointPlacement);\n                }\n                var x = Math.floor(Math.min(plotX, plotX2)) + crisper, x2 = Math.floor(Math.max(plotX, plotX2)) + crisper, width = x2 - x;\n                var r = Math.min(relativeLength((typeof borderRadius === 'object' ?\n                    borderRadius.radius :\n                    borderRadius || 0), pointHeight), Math.min(width, pointHeight) / 2);\n                var shapeArgs = {\n                    x: x,\n                    y: Math.floor(point.plotY + yOffset) + crisper,\n                    width: width,\n                    height: pointHeight,\n                    r: r\n                };\n                point.shapeArgs = shapeArgs;\n                // Move tooltip to default position\n                if (!inverted) {\n                    point.tooltipPos[0] -= oldColWidth +\n                        seriesXOffset -\n                        shapeArgs.width / 2;\n                }\n                else {\n                    point.tooltipPos[1] += seriesXOffset +\n                        oldColWidth;\n                }\n                // Align data labels inside the shape and inside the plot area\n                dlLeft = shapeArgs.x;\n                dlRight = dlLeft + shapeArgs.width;\n                if (dlLeft < 0 || dlRight > xAxis.len) {\n                    dlLeft = clamp(dlLeft, 0, xAxis.len);\n                    dlRight = clamp(dlRight, 0, xAxis.len);\n                    dlWidth = dlRight - dlLeft;\n                    point.dlBox = merge(shapeArgs, {\n                        x: dlLeft,\n                        width: dlRight - dlLeft,\n                        centerX: dlWidth ? dlWidth / 2 : null\n                    });\n                }\n                else {\n                    point.dlBox = null;\n                }\n                // Tooltip position\n                var tooltipPos = point.tooltipPos;\n                var xIndex = !inverted ? 0 : 1;\n                var yIndex = !inverted ? 1 : 0;\n                var tooltipYOffset = (this.columnMetrics ?\n                    this.columnMetrics.offset :\n                    -metrics.width / 2);\n                // Centering tooltip position (#14147)\n                if (inverted) {\n                    tooltipPos[xIndex] += shapeArgs.width / 2;\n                }\n                else {\n                    tooltipPos[xIndex] = clamp(tooltipPos[xIndex] +\n                        (xAxis.reversed ? -1 : 0) * shapeArgs.width, xAxis.left - plotLeft, xAxis.left + xAxis.len - plotLeft - 1);\n                }\n                tooltipPos[yIndex] = clamp(tooltipPos[yIndex] + ((inverted ? -1 : 1) * tooltipYOffset), yAxis.top - plotTop, yAxis.top + yAxis.len - plotTop - 1);\n                // Add a partShapeArgs to the point, based on the shapeArgs property\n                partialFill = point.partialFill;\n                if (partialFill) {\n                    // Get the partial fill amount\n                    if (isObject(partialFill)) {\n                        partialFill = partialFill.amount;\n                    }\n                    // If it was not a number, assume 0\n                    if (!isNumber(partialFill)) {\n                        partialFill = 0;\n                    }\n                    point.partShapeArgs = merge(shapeArgs);\n                    clipRectWidth = Math.max(Math.round(length * partialFill + point.plotX -\n                        plotX), 0);\n                    point.clipRectArgs = {\n                        x: xAxis.reversed ? // #10717\n                            shapeArgs.x + length - clipRectWidth :\n                            shapeArgs.x,\n                        y: shapeArgs.y,\n                        width: clipRectWidth,\n                        height: shapeArgs.height\n                    };\n                }\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.translate = function () {\n                _super.prototype.translate.apply(this, arguments);\n                for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    this.translatePoint(point);\n                }\n            };\n            /**\n             * Draws a single point in the series. Needed for partial fill.\n             *\n             * This override turns point.graphic into a group containing the\n             * original graphic and an overlay displaying the partial fill.\n             *\n             * @private\n             *\n             * @param {Highcharts.Point} point\n             *        An instance of Point in the series.\n             *\n             * @param {\"animate\"|\"attr\"} verb\n             *        'animate' (animates changes) or 'attr' (sets options)\n             */\n            XRangeSeries.prototype.drawPoint = function (point, verb) {\n                var seriesOpts = this.options, renderer = this.chart.renderer, type = point.shapeType, shapeArgs = point.shapeArgs, partShapeArgs = point.partShapeArgs, clipRectArgs = point.clipRectArgs, pointState = point.state, stateOpts = (seriesOpts.states[pointState || 'normal'] ||\n                    {}), pointStateVerb = typeof pointState === 'undefined' ?\n                    'attr' : verb, pointAttr = this.pointAttribs(point, pointState), animation = pick(this.chart.options.chart.animation, stateOpts.animation);\n                var graphic = point.graphic, pfOptions = point.partialFill;\n                if (!point.isNull && point.visible !== false) {\n                    // Original graphic\n                    if (graphic) { // Update\n                        graphic.rect[verb](shapeArgs);\n                    }\n                    else {\n                        point.graphic = graphic = renderer.g('point')\n                            .addClass(point.getClassName())\n                            .add(point.group || this.group);\n                        graphic.rect = renderer[type](merge(shapeArgs))\n                            .addClass(point.getClassName())\n                            .addClass('highcharts-partfill-original')\n                            .add(graphic);\n                    }\n                    // Partial fill graphic\n                    if (partShapeArgs) {\n                        if (graphic.partRect) {\n                            graphic.partRect[verb](merge(partShapeArgs));\n                            graphic.partialClipRect[verb](merge(clipRectArgs));\n                        }\n                        else {\n                            graphic.partialClipRect = renderer.clipRect(clipRectArgs.x, clipRectArgs.y, clipRectArgs.width, clipRectArgs.height);\n                            graphic.partRect =\n                                renderer[type](partShapeArgs)\n                                    .addClass('highcharts-partfill-overlay')\n                                    .add(graphic)\n                                    .clip(graphic.partialClipRect);\n                        }\n                    }\n                    // Presentational\n                    if (!this.chart.styledMode) {\n                        graphic\n                            .rect[verb](pointAttr, animation)\n                            .shadow(seriesOpts.shadow);\n                        if (partShapeArgs) {\n                            // Ensure pfOptions is an object\n                            if (!isObject(pfOptions)) {\n                                pfOptions = {};\n                            }\n                            if (isObject(seriesOpts.partialFill)) {\n                                pfOptions = merge(seriesOpts.partialFill, pfOptions);\n                            }\n                            var fill = (pfOptions.fill ||\n                                color(pointAttr.fill).brighten(-0.3).get() ||\n                                color(point.color || this.color)\n                                    .brighten(-0.3).get());\n                            pointAttr.fill = fill;\n                            graphic\n                                .partRect[pointStateVerb](pointAttr, animation)\n                                .shadow(seriesOpts.shadow);\n                        }\n                    }\n                }\n                else if (graphic) {\n                    point.graphic = graphic.destroy(); // #1269\n                }\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.drawPoints = function () {\n                var verb = this.getAnimationVerb();\n                // Draw the columns\n                for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    this.drawPoint(point, verb);\n                }\n            };\n            /**\n             * Returns \"animate\", or \"attr\" if the number of points is above the\n             * animation limit.\n             *\n             * @private\n             */\n            XRangeSeries.prototype.getAnimationVerb = function () {\n                return (this.chart.pointCount < (this.options.animationLimit || 250) ?\n                    'animate' :\n                    'attr');\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.isPointInside = function (point) {\n                var shapeArgs = point.shapeArgs, plotX = point.plotX, plotY = point.plotY;\n                if (!shapeArgs) {\n                    return _super.prototype.isPointInside.apply(this, arguments);\n                }\n                var isInside = typeof plotX !== 'undefined' &&\n                    typeof plotY !== 'undefined' &&\n                    plotY >= 0 &&\n                    plotY <= this.yAxis.len &&\n                    (shapeArgs.x || 0) + (shapeArgs.width || 0) >= 0 &&\n                    plotX <= this.xAxis.len;\n                return isInside;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            XRangeSeries.defaultOptions = merge(ColumnSeries.defaultOptions, XRangeSeriesDefaults);\n            return XRangeSeries;\n        }(ColumnSeries));\n        extend(XRangeSeries.prototype, {\n            pointClass: XRangePoint,\n            pointArrayMap: ['x2', 'y'],\n            getExtremesFromAll: true,\n            parallelArrays: ['x', 'x2', 'y'],\n            requireSorting: false,\n            type: 'xrange',\n            animate: SeriesRegistry.series.prototype.animate,\n            autoIncrement: noop,\n            buildKDTree: noop\n        });\n        SeriesRegistry.registerSeriesType('xrange', XRangeSeries);\n        /* *\n         *\n         * Default Export\n         *\n         * */\n\n        return XRangeSeries;\n    });\n    _registerModule(_modules, 'masters/modules/xrange.src.js', [_modules['Core/Globals.js'], _modules['Series/XRange/XRangeSeries.js']], function (Highcharts, XRangeSeries) {\n\n        var G = Highcharts;\n        XRangeSeries.compose(G.Axis);\n\n        return Highcharts;\n    });\n    _registerModule(_modules, 'Series/Gantt/GanttPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var XRangePoint = SeriesRegistry.seriesTypes.xrange.prototype.pointClass;\n        var pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var GanttPoint = /** @class */ (function (_super) {\n            __extends(GanttPoint, _super);\n            function GanttPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            GanttPoint.setGanttPointAliases = function (options) {\n                /**\n                 * Add a value to options if the value exists.\n                 * @private\n                 */\n                function addIfExists(prop, val) {\n                    if (typeof val !== 'undefined') {\n                        options[prop] = val;\n                    }\n                }\n                addIfExists('x', pick(options.start, options.x));\n                addIfExists('x2', pick(options.end, options.x2));\n                addIfExists('partialFill', pick(options.completed, options.partialFill));\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Applies the options containing the x and y data and possible some\n             * extra properties. This is called on point init or from point.update.\n             *\n             * @private\n             * @function Highcharts.Point#applyOptions\n             *\n             * @param {Object} options\n             *        The point options\n             *\n             * @param {number} x\n             *        The x value\n             *\n             * @return {Highcharts.Point}\n             *         The Point instance\n             */\n            GanttPoint.prototype.applyOptions = function (options, x) {\n                var ganttPoint = _super.prototype.applyOptions.call(this, options, x);\n                GanttPoint.setGanttPointAliases(ganttPoint);\n                return ganttPoint;\n            };\n            GanttPoint.prototype.isValid = function () {\n                return ((typeof this.start === 'number' ||\n                    typeof this.x === 'number') &&\n                    (typeof this.end === 'number' ||\n                        typeof this.x2 === 'number' ||\n                        this.milestone));\n            };\n            return GanttPoint;\n        }(XRangePoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttPoint;\n    });\n    _registerModule(_modules, 'Series/Gantt/GanttSeriesDefaults.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isNumber = U.isNumber;\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `gantt` series. If the [type](#series.gantt.type) option is not specified,\n         * it is inherited from [chart.type](#chart.type).\n         *\n         * @extends      plotOptions.xrange\n         * @product      gantt\n         * @requires     highcharts-gantt\n         * @optionparent plotOptions.gantt\n         */\n        var GanttSeriesDefaults = {\n            // Options - default options merged with parent\n            grouping: false,\n            dataLabels: {\n                enabled: true\n            },\n            tooltip: {\n                headerFormat: '<span style=\"font-size: 0.8em\">{series.name}</span><br/>',\n                pointFormat: null,\n                pointFormatter: function () {\n                    var point = this, series = point.series, xAxis = series.xAxis, formats = series.tooltipOptions.dateTimeLabelFormats, startOfWeek = xAxis.options.startOfWeek, ttOptions = series.tooltipOptions, milestone = point.options.milestone;\n                    var format = ttOptions.xDateFormat, retVal = '<b>' + (point.name || point.yCategory) + '</b>';\n                    if (ttOptions.pointFormat) {\n                        return point.tooltipFormatter(ttOptions.pointFormat);\n                    }\n                    if (!format && isNumber(point.start)) {\n                        format = series.chart.time.getDateFormat(xAxis.closestPointRange, point.start, startOfWeek, formats || {});\n                    }\n                    var start = series.chart.time.dateFormat(format, point.start), end = series.chart.time.dateFormat(format, point.end);\n                    retVal += '<br/>';\n                    if (!milestone) {\n                        retVal += 'Start: ' + start + '<br/>';\n                        retVal += 'End: ' + end + '<br/>';\n                    }\n                    else {\n                        retVal += start + '<br/>';\n                    }\n                    return retVal;\n                }\n            },\n            connectors: {\n                type: 'simpleConnect',\n                /**\n                 * @declare Highcharts.ConnectorsAnimationOptionsObject\n                 */\n                animation: {\n                    reversed: true // Dependencies go from child to parent\n                },\n                radius: 0,\n                startMarker: {\n                    enabled: true,\n                    symbol: 'arrow-filled',\n                    radius: 4,\n                    fill: '#fa0',\n                    align: 'left'\n                },\n                endMarker: {\n                    enabled: false,\n                    align: 'right'\n                }\n            }\n        };\n        /**\n         * A `gantt` series.\n         *\n         * @extends   series,plotOptions.gantt\n         * @excluding boostThreshold, dashStyle, findNearestPointBy,\n         *            getExtremesFromAll, marker, negativeColor, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointStart\n         * @product   gantt\n         * @requires  highcharts-gantt\n         * @apioption series.gantt\n         */\n        /**\n         * Data for a Gantt series.\n         *\n         * @declare   Highcharts.GanttPointOptionsObject\n         * @type      {Array<*>}\n         * @extends   series.xrange.data\n         * @excluding className, connect, dataLabels, events,\n         *            partialFill, selected, x, x2\n         * @product   gantt\n         * @apioption series.gantt.data\n         */\n        /**\n         * Whether the grid node belonging to this point should start as collapsed. Used\n         * in axes of type treegrid.\n         *\n         * @sample {gantt} gantt/treegrid-axis/collapsed/\n         *         Start as collapsed\n         *\n         * @type      {boolean}\n         * @default   false\n         * @product   gantt\n         * @apioption series.gantt.data.collapsed\n         */\n        /**\n         * The start time of a task.\n         *\n         * @type      {number}\n         * @product   gantt\n         * @apioption series.gantt.data.start\n         */\n        /**\n         * The end time of a task.\n         *\n         * @type      {number}\n         * @product   gantt\n         * @apioption series.gantt.data.end\n         */\n        /**\n         * The Y value of a task.\n         *\n         * @type      {number}\n         * @product   gantt\n         * @apioption series.gantt.data.y\n         */\n        /**\n         * The name of a task. If a `treegrid` y-axis is used (default in Gantt charts),\n         * this will be picked up automatically, and used to calculate the y-value.\n         *\n         * @type      {string}\n         * @product   gantt\n         * @apioption series.gantt.data.name\n         */\n        /**\n         * Progress indicator, how much of the task completed. If it is a number, the\n         * `fill` will be applied automatically.\n         *\n         * @sample {gantt} gantt/demo/progress-indicator\n         *         Progress indicator\n         *\n         * @type      {number|*}\n         * @extends   series.xrange.data.partialFill\n         * @product   gantt\n         * @apioption series.gantt.data.completed\n         */\n        /**\n         * The amount of the progress indicator, ranging from 0 (not started) to 1\n         * (finished).\n         *\n         * @type      {number}\n         * @default   0\n         * @apioption series.gantt.data.completed.amount\n         */\n        /**\n         * The fill of the progress indicator. Defaults to a darkened variety of the\n         * main color.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @apioption series.gantt.data.completed.fill\n         */\n        /**\n         * The ID of the point (task) that this point depends on in Gantt charts.\n         * Aliases [connect](series.xrange.data.connect). Can also be an object,\n         * specifying further connecting [options](series.gantt.connectors) between the\n         * points. Multiple connections can be specified by providing an array.\n         *\n         * @sample gantt/demo/project-management\n         *         Dependencies\n         * @sample gantt/pathfinder/demo\n         *         Different connection types\n         *\n         * @type      {string|Array<string|*>|*}\n         * @extends   series.xrange.data.connect\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.gantt.data.dependency\n         */\n        /**\n         * Whether this point is a milestone. If so, only the `start` option is handled,\n         * while `end` is ignored.\n         *\n         * @sample gantt/gantt/milestones\n         *         Milestones\n         *\n         * @type      {boolean}\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.gantt.data.milestone\n         */\n        /**\n         * The ID of the parent point (task) of this point in Gantt charts.\n         *\n         * @sample gantt/demo/subtasks\n         *         Gantt chart with subtasks\n         *\n         * @type      {string}\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.gantt.data.parent\n         */\n        /**\n         * @excluding afterAnimate\n         * @apioption series.gantt.events\n         */\n        ''; // Detachs doclets above\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttSeriesDefaults;\n    });\n    _registerModule(_modules, 'Core/Axis/BrokenAxis.js', [_modules['Core/Axis/Stacking/StackItem.js'], _modules['Core/Utilities.js']], function (StackItem, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Axis with support of broken data rows.\n         * @private\n         */\n        var BrokenAxis;\n        (function (BrokenAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Adds support for broken axes.\n             * @private\n             */\n            function compose(AxisClass, SeriesClass) {\n                if (!AxisClass.keepProps.includes('brokenAxis')) {\n                    AxisClass.keepProps.push('brokenAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterSetTickPositions', onAxisAfterSetTickPositions);\n                    addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                    var seriesProto = SeriesClass.prototype;\n                    seriesProto.drawBreaks = seriesDrawBreaks;\n                    seriesProto.gappedPath = seriesGappedPath;\n                    addEvent(SeriesClass, 'afterGeneratePoints', onSeriesAfterGeneratePoints);\n                    addEvent(SeriesClass, 'afterRender', onSeriesAfterRender);\n                }\n                return AxisClass;\n            }\n            BrokenAxis.compose = compose;\n            /**\n             * @private\n             */\n            function onAxisAfterInit() {\n                if (typeof this.brokenAxis !== 'undefined') {\n                    this.brokenAxis.setBreaks(this.options.breaks, false);\n                }\n            }\n            /**\n             * Force Axis to be not-ordinal when breaks are defined.\n             * @private\n             */\n            function onAxisAfterSetOptions() {\n                var _a;\n                var axis = this;\n                if ((_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    axis.options.ordinal = false;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisAfterSetTickPositions() {\n                var axis = this, brokenAxis = axis.brokenAxis;\n                if (brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.hasBreaks) {\n                    var tickPositions = axis.tickPositions, info = axis.tickPositions.info, newPositions = [];\n                    for (var i = 0; i < tickPositions.length; i++) {\n                        if (!brokenAxis.isInAnyBreak(tickPositions[i])) {\n                            newPositions.push(tickPositions[i]);\n                        }\n                    }\n                    axis.tickPositions = newPositions;\n                    axis.tickPositions.info = info;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisInit() {\n                var axis = this;\n                if (!axis.brokenAxis) {\n                    axis.brokenAxis = new Additions(axis);\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterGeneratePoints() {\n                var _a, _b;\n                var _c = this, isDirty = _c.isDirty, connectNulls = _c.options.connectNulls, points = _c.points, xAxis = _c.xAxis, yAxis = _c.yAxis;\n                // Set, or reset visibility of the points. Axis.setBreaks marks\n                // the series as isDirty\n                if (isDirty) {\n                    var i = points.length;\n                    while (i--) {\n                        var point = points[i];\n                        // Respect nulls inside the break (#4275)\n                        var nullGap = point.y === null && connectNulls === false;\n                        var isPointInBreak = (!nullGap && (((_a = xAxis === null || xAxis === void 0 ? void 0 : xAxis.brokenAxis) === null || _a === void 0 ? void 0 : _a.isInAnyBreak(point.x, true)) ||\n                            ((_b = yAxis === null || yAxis === void 0 ? void 0 : yAxis.brokenAxis) === null || _b === void 0 ? void 0 : _b.isInAnyBreak(point.y, true))));\n                        // Set point.visible if in any break.\n                        // If not in break, reset visible to original value.\n                        point.visible = isPointInBreak ?\n                            false :\n                            point.options.visible !== false;\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterRender() {\n                this.drawBreaks(this.xAxis, ['x']);\n                this.drawBreaks(this.yAxis, pick(this.pointArrayMap, ['y']));\n            }\n            /**\n             * @private\n             */\n            function seriesDrawBreaks(axis, keys) {\n                var _a;\n                var series = this, points = series.points;\n                var breaks, threshold, y;\n                if ((_a = axis === null || axis === void 0 ? void 0 : axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    var brokenAxis_1 = axis.brokenAxis;\n                    keys.forEach(function (key) {\n                        var _a, _b;\n                        breaks = (brokenAxis_1 === null || brokenAxis_1 === void 0 ? void 0 : brokenAxis_1.breakArray) || [];\n                        threshold = axis.isXAxis ?\n                            axis.min :\n                            pick(series.options.threshold, axis.min);\n                        // Array of breaks that have been \"zoomed-out\" which means that\n                        // they were shown previously, but now after zoom, they are not\n                        // (#19885).\n                        var breaksOutOfRange = (_b = (_a = axis === null || axis === void 0 ? void 0 : axis.options) === null || _a === void 0 ? void 0 : _a.breaks) === null || _b === void 0 ? void 0 : _b.filter(function (brk) {\n                            var isOut = true;\n                            // Iterate to see if \"brk\" is in axis range\n                            for (var i = 0; i < breaks.length; i++) {\n                                var otherBreak = breaks[i];\n                                if (otherBreak.from === brk.from &&\n                                    otherBreak.to === brk.to) {\n                                    isOut = false;\n                                    break;\n                                }\n                            }\n                            return isOut;\n                        });\n                        points.forEach(function (point) {\n                            y = pick(point['stack' + key.toUpperCase()], point[key]);\n                            breaks.forEach(function (brk) {\n                                if (isNumber(threshold) && isNumber(y)) {\n                                    var eventName = '';\n                                    if ((threshold < brk.from && y > brk.to) ||\n                                        (threshold > brk.from && y < brk.from)) {\n                                        eventName = 'pointBreak';\n                                    }\n                                    else if ((threshold < brk.from &&\n                                        y > brk.from &&\n                                        y < brk.to) || (threshold > brk.from &&\n                                        y > brk.to &&\n                                        y < brk.from)) {\n                                        eventName = 'pointInBreak';\n                                    }\n                                    if (eventName) {\n                                        fireEvent(axis, eventName, { point: point, brk: brk });\n                                    }\n                                }\n                            });\n                            breaksOutOfRange === null || breaksOutOfRange === void 0 ? void 0 : breaksOutOfRange.forEach(function (brk) {\n                                fireEvent(axis, 'pointOutsideOfBreak', { point: point, brk: brk });\n                            });\n                        });\n                    });\n                }\n            }\n            /**\n             * Extend getGraphPath by identifying gaps in the data so that we\n             * can draw a gap in the line or area. This was moved from ordinal\n             * axis module to broken axis module as of #5045.\n             *\n             * @private\n             * @function Highcharts.Series#gappedPath\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Gapped path\n             */\n            function seriesGappedPath() {\n                var currentDataGrouping = this.currentDataGrouping, groupingSize = currentDataGrouping === null || currentDataGrouping === void 0 ? void 0 : currentDataGrouping.gapSize, points = this.points.slice(), yAxis = this.yAxis;\n                var gapSize = this.options.gapSize, i = points.length - 1, stack;\n                /**\n                 * Defines when to display a gap in the graph, together with the\n                 * [gapUnit](plotOptions.series.gapUnit) option.\n                 *\n                 * In case when `dataGrouping` is enabled, points can be grouped\n                 * into a larger time span. This can make the grouped points to\n                 * have a greater distance than the absolute value of `gapSize`\n                 * property, which will result in disappearing graph completely.\n                 * To prevent this situation the mentioned distance between\n                 * grouped points is used instead of previously defined\n                 * `gapSize`.\n                 *\n                 * In practice, this option is most often used to visualize gaps\n                 * in time series. In a stock chart, intraday data is available\n                 * for daytime hours, while gaps will appear in nights and\n                 * weekends.\n                 *\n                 * @see [gapUnit](plotOptions.series.gapUnit)\n                 * @see [xAxis.breaks](#xAxis.breaks)\n                 *\n                 * @sample {highstock} stock/plotoptions/series-gapsize/\n                 * Setting the gap size to 2 introduces gaps for weekends in\n                 * daily datasets.\n                 *\n                 * @type      {number}\n                 * @default   0\n                 * @product   highstock\n                 * @requires  modules/broken-axis\n                 * @apioption plotOptions.series.gapSize\n                 */\n                /**\n                 * Together with [gapSize](plotOptions.series.gapSize), this\n                 * option defines where to draw gaps in the graph.\n                 *\n                 * When the `gapUnit` is `\"relative\"` (default), a gap size of 5\n                 * means that if the distance between two points is greater than\n                 * 5 times that of the two closest points, the graph will be\n                 * broken.\n                 *\n                 * When the `gapUnit` is `\"value\"`, the gap is based on absolute\n                 * axis values, which on a datetime axis is milliseconds. This\n                 * also applies to the navigator series that inherits gap\n                 * options from the base series.\n                 *\n                 * @see [gapSize](plotOptions.series.gapSize)\n                 *\n                 * @type       {string}\n                 * @default    relative\n                 * @since      5.0.13\n                 * @product    highstock\n                 * @validvalue [\"relative\", \"value\"]\n                 * @requires   modules/broken-axis\n                 * @apioption  plotOptions.series.gapUnit\n                 */\n                if (gapSize && i > 0) { // #5008\n                    // Gap unit is relative\n                    if (this.options.gapUnit !== 'value') {\n                        gapSize *= this.basePointRange;\n                    }\n                    // Setting a new gapSize in case dataGrouping is enabled\n                    // (#7686)\n                    if (groupingSize &&\n                        groupingSize > gapSize &&\n                        // Except when DG is forced (e.g. from other series)\n                        // and has lower granularity than actual points (#11351)\n                        groupingSize >= this.basePointRange) {\n                        gapSize = groupingSize;\n                    }\n                    // Extension for ordinal breaks\n                    var current = void 0, next = void 0;\n                    while (i--) {\n                        // Reassign next if it is not visible\n                        if (!(next && next.visible !== false)) {\n                            next = points[i + 1];\n                        }\n                        current = points[i];\n                        // Skip iteration if one of the points is not visible\n                        if (next.visible === false || current.visible === false) {\n                            continue;\n                        }\n                        if (next.x - current.x > gapSize) {\n                            var xRange = (current.x + next.x) / 2;\n                            points.splice(// Insert after this one\n                            i + 1, 0, {\n                                isNull: true,\n                                x: xRange\n                            });\n                            // For stacked chart generate empty stack items, #6546\n                            if (yAxis.stacking && this.options.stacking) {\n                                stack = yAxis.stacking.stacks[this.stackKey][xRange] = new StackItem(yAxis, yAxis.options.stackLabels, false, xRange, this.stack);\n                                stack.total = 0;\n                            }\n                        }\n                        // Assign current to next for the upcoming iteration\n                        next = current;\n                    }\n                }\n                // Call base method\n                return this.getGraphPath(points);\n            }\n            /* *\n             *\n             *  Class\n             *\n             * */\n            /**\n             * Provides support for broken axes.\n             * @private\n             * @class\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                function Additions(axis) {\n                    this.hasBreaks = false;\n                    this.axis = axis;\n                }\n                /* *\n                 *\n                 *  Static Functions\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                Additions.isInBreak = function (brk, val) {\n                    var repeat = brk.repeat || Infinity, from = brk.from, length = brk.to - brk.from, test = (val >= from ?\n                        (val - from) % repeat :\n                        repeat - ((from - val) % repeat));\n                    var ret;\n                    if (!brk.inclusive) {\n                        ret = test < length && test !== 0;\n                    }\n                    else {\n                        ret = test <= length;\n                    }\n                    return ret;\n                };\n                /**\n                 * @private\n                 */\n                Additions.lin2Val = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.from >= nval) {\n                            break;\n                        }\n                        else if (brk.to < nval) {\n                            nval += brk.len;\n                        }\n                        else if (Additions.isInBreak(brk, nval)) {\n                            nval += brk.len;\n                        }\n                    }\n                    return nval;\n                };\n                /**\n                 * @private\n                 */\n                Additions.val2Lin = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.to <= val) {\n                            nval -= brk.len;\n                        }\n                        else if (brk.from >= val) {\n                            break;\n                        }\n                        else if (Additions.isInBreak(brk, val)) {\n                            nval -= (val - brk.from);\n                            break;\n                        }\n                    }\n                    return nval;\n                };\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                /**\n                 * Returns the first break found where the x is larger then break.from\n                 * and smaller then break.to.\n                 *\n                 * @param {number} x\n                 * The number which should be within a break.\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} breaks\n                 * The array of breaks to search within.\n                 *\n                 * @return {Highcharts.XAxisBreaksOptions|undefined}\n                 * Returns the first break found that matches, returns false if no break\n                 * is found.\n                 */\n                Additions.prototype.findBreakAt = function (x, breaks) {\n                    return find(breaks, function (b) {\n                        return b.from < x && x < b.to;\n                    });\n                };\n                /**\n                 * @private\n                 */\n                Additions.prototype.isInAnyBreak = function (val, testKeep) {\n                    var brokenAxis = this, axis = brokenAxis.axis, breaks = axis.options.breaks || [];\n                    var i = breaks.length, inbrk, keep, ret;\n                    if (i && isNumber(val)) {\n                        while (i--) {\n                            if (Additions.isInBreak(breaks[i], val)) {\n                                inbrk = true;\n                                if (!keep) {\n                                    keep = pick(breaks[i].showPoints, !axis.isXAxis);\n                                }\n                            }\n                        }\n                        if (inbrk && testKeep) {\n                            ret = inbrk && !keep;\n                        }\n                        else {\n                            ret = inbrk;\n                        }\n                    }\n                    return ret;\n                };\n                /**\n                 * Dynamically set or unset breaks in an axis. This function in lighter\n                 * than using Axis.update, and it also preserves animation.\n                 *\n                 * @private\n                 * @function Highcharts.Axis#setBreaks\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} [breaks]\n                 * The breaks to add. When `undefined` it removes existing breaks.\n                 *\n                 * @param {boolean} [redraw=true]\n                 * Whether to redraw the chart immediately.\n                 */\n                Additions.prototype.setBreaks = function (breaks, redraw) {\n                    var brokenAxis = this;\n                    var axis = brokenAxis.axis;\n                    var hasBreaks = isArray(breaks) &&\n                        !!breaks.length &&\n                        !!Object.keys(breaks[0]).length; // Check for [{}], #16368.\n                    axis.isDirty = brokenAxis.hasBreaks !== hasBreaks;\n                    brokenAxis.hasBreaks = hasBreaks;\n                    if (breaks !== axis.options.breaks) {\n                        axis.options.breaks = axis.userOptions.breaks = breaks;\n                    }\n                    axis.forceRedraw = true; // Force recalculation in setScale\n                    // Recalculate series related to the axis.\n                    axis.series.forEach(function (series) {\n                        series.isDirty = true;\n                    });\n                    if (!hasBreaks && axis.val2lin === Additions.val2Lin) {\n                        // Revert to prototype functions\n                        delete axis.val2lin;\n                        delete axis.lin2val;\n                    }\n                    if (hasBreaks) {\n                        axis.userOptions.ordinal = false;\n                        axis.lin2val = Additions.lin2Val;\n                        axis.val2lin = Additions.val2Lin;\n                        axis.setExtremes = function (newMin, newMax, redraw, animation, eventArguments) {\n                            // If trying to set extremes inside a break, extend min to\n                            // after, and max to before the break ( #3857 )\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_1 = (this.options.breaks || []);\n                                var axisBreak = void 0;\n                                while ((axisBreak = brokenAxis.findBreakAt(newMin, breaks_1))) {\n                                    newMin = axisBreak.to;\n                                }\n                                while ((axisBreak = brokenAxis.findBreakAt(newMax, breaks_1))) {\n                                    newMax = axisBreak.from;\n                                }\n                                // If both min and max is within the same break.\n                                if (newMax < newMin) {\n                                    newMax = newMin;\n                                }\n                            }\n                            axis.constructor.prototype.setExtremes.call(this, newMin, newMax, redraw, animation, eventArguments);\n                        };\n                        axis.setAxisTranslation = function () {\n                            axis.constructor.prototype.setAxisTranslation.call(this);\n                            brokenAxis.unitLength = void 0;\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_2 = axis.options.breaks || [], \n                                // Temporary one:\n                                breakArrayT_1 = [], breakArray_1 = [], pointRangePadding = pick(axis.pointRangePadding, 0);\n                                var length_1 = 0, inBrk_1, repeat_1, min_1 = axis.userMin || axis.min, max_1 = axis.userMax || axis.max, start_1, i_1;\n                                // Min & max check (#4247)\n                                breaks_2.forEach(function (brk) {\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        if (Additions.isInBreak(brk, min_1)) {\n                                            min_1 += ((brk.to % repeat_1) -\n                                                (min_1 % repeat_1));\n                                        }\n                                        if (Additions.isInBreak(brk, max_1)) {\n                                            max_1 -= ((max_1 % repeat_1) -\n                                                (brk.from % repeat_1));\n                                        }\n                                    }\n                                });\n                                // Construct an array holding all breaks in the axis\n                                breaks_2.forEach(function (brk) {\n                                    start_1 = brk.from;\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        while (start_1 - repeat_1 > min_1) {\n                                            start_1 -= repeat_1;\n                                        }\n                                        while (start_1 < min_1) {\n                                            start_1 += repeat_1;\n                                        }\n                                        for (i_1 = start_1; i_1 < max_1; i_1 += repeat_1) {\n                                            breakArrayT_1.push({\n                                                value: i_1,\n                                                move: 'in'\n                                            });\n                                            breakArrayT_1.push({\n                                                value: i_1 + brk.to - brk.from,\n                                                move: 'out',\n                                                size: brk.breakSize\n                                            });\n                                        }\n                                    }\n                                });\n                                breakArrayT_1.sort(function (a, b) {\n                                    return ((a.value === b.value) ?\n                                        ((a.move === 'in' ? 0 : 1) -\n                                            (b.move === 'in' ? 0 : 1)) :\n                                        a.value - b.value);\n                                });\n                                // Simplify the breaks\n                                inBrk_1 = 0;\n                                start_1 = min_1;\n                                breakArrayT_1.forEach(function (brk) {\n                                    inBrk_1 += (brk.move === 'in' ? 1 : -1);\n                                    if (inBrk_1 === 1 && brk.move === 'in') {\n                                        start_1 = brk.value;\n                                    }\n                                    if (inBrk_1 === 0 && isNumber(start_1)) {\n                                        breakArray_1.push({\n                                            from: start_1,\n                                            to: brk.value,\n                                            len: brk.value - start_1 - (brk.size || 0)\n                                        });\n                                        length_1 += (brk.value -\n                                            start_1 -\n                                            (brk.size || 0));\n                                    }\n                                });\n                                brokenAxis.breakArray = breakArray_1;\n                                // Used with staticScale, and below the actual axis\n                                // length, when breaks are subtracted.\n                                if (isNumber(min_1) &&\n                                    isNumber(max_1) &&\n                                    isNumber(axis.min)) {\n                                    brokenAxis.unitLength = max_1 - min_1 - length_1 +\n                                        pointRangePadding;\n                                    fireEvent(axis, 'afterBreaks');\n                                    if (axis.staticScale) {\n                                        axis.transA = axis.staticScale;\n                                    }\n                                    else if (brokenAxis.unitLength) {\n                                        axis.transA *=\n                                            (max_1 - axis.min + pointRangePadding) /\n                                                brokenAxis.unitLength;\n                                    }\n                                    if (pointRangePadding) {\n                                        axis.minPixelPadding =\n                                            axis.transA * (axis.minPointOffset || 0);\n                                    }\n                                    axis.min = min_1;\n                                    axis.max = max_1;\n                                }\n                            }\n                        };\n                    }\n                    if (pick(redraw, true)) {\n                        axis.chart.redraw();\n                    }\n                };\n                return Additions;\n            }());\n            BrokenAxis.Additions = Additions;\n        })(BrokenAxis || (BrokenAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return BrokenAxis;\n    });\n    _registerModule(_modules, 'Core/Axis/GridAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (Axis, H, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var dateFormats = H.dateFormats;\n        var addEvent = U.addEvent, defined = U.defined, erase = U.erase, find = U.find, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, timeUnits = U.timeUnits, wrap = U.wrap;\n        /* *\n         *\n         *  Enums\n         *\n         * */\n        /**\n         * Enum for which side the axis is on. Maps to axis.side.\n         * @private\n         */\n        var GridAxisSide;\n        (function (GridAxisSide) {\n            GridAxisSide[GridAxisSide[\"top\"] = 0] = \"top\";\n            GridAxisSide[GridAxisSide[\"right\"] = 1] = \"right\";\n            GridAxisSide[GridAxisSide[\"bottom\"] = 2] = \"bottom\";\n            GridAxisSide[GridAxisSide[\"left\"] = 3] = \"left\";\n        })(GridAxisSide || (GridAxisSide = {}));\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function argsToArray(args) {\n            return Array.prototype.slice.call(args, 1);\n        }\n        /**\n         * @private\n         */\n        function isObject(x) {\n            // Always use strict mode\n            return U.isObject(x, true);\n        }\n        /**\n         * @private\n         */\n        function applyGridOptions(axis) {\n            var options = axis.options;\n            // Center-align by default\n            /*\n            if (!options.labels) {\n                options.labels = {};\n            }\n            */\n            options.labels.align = pick(options.labels.align, 'center');\n            // @todo: Check against tickLabelPlacement between/on etc\n            /* Prevents adding the last tick label if the axis is not a category\n               axis.\n               Since numeric labels are normally placed at starts and ends of a\n               range of value, and this module makes the label point at the value,\n               an \"extra\" label would appear. */\n            if (!axis.categories) {\n                options.showLastLabel = false;\n            }\n            // Prevents rotation of labels when squished, as rotating them would not\n            // help.\n            axis.labelRotation = 0;\n            options.labels.rotation = 0;\n            // Allow putting ticks closer than their data points.\n            options.minTickInterval = 1;\n        }\n        /**\n         * Extends axis class with grid support.\n         * @private\n         */\n        function compose(AxisClass, ChartClass, TickClass) {\n            if (!AxisClass.keepProps.includes('grid')) {\n                AxisClass.keepProps.push('grid');\n                AxisClass.prototype.getMaxLabelDimensions = getMaxLabelDimensions;\n                wrap(AxisClass.prototype, 'unsquish', wrapUnsquish);\n                wrap(AxisClass.prototype, 'getOffset', wrapGetOffset);\n                // Add event handlers\n                addEvent(AxisClass, 'init', onInit);\n                addEvent(AxisClass, 'afterGetTitlePosition', onAfterGetTitlePosition);\n                addEvent(AxisClass, 'afterInit', onAfterInit);\n                addEvent(AxisClass, 'afterRender', onAfterRender);\n                addEvent(AxisClass, 'afterSetAxisTranslation', onAfterSetAxisTranslation);\n                addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions);\n                addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions2);\n                addEvent(AxisClass, 'afterSetScale', onAfterSetScale);\n                addEvent(AxisClass, 'afterTickSize', onAfterTickSize);\n                addEvent(AxisClass, 'trimTicks', onTrimTicks);\n                addEvent(AxisClass, 'destroy', onDestroy);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n                addEvent(TickClass, 'labelFormat', onTickLabelFormat);\n            }\n            return AxisClass;\n        }\n        /**\n         * Get the largest label width and height.\n         *\n         * @private\n         * @function Highcharts.Axis#getMaxLabelDimensions\n         *\n         * @param {Highcharts.Dictionary<Highcharts.Tick>} ticks\n         * All the ticks on one axis.\n         *\n         * @param {Array<number|string>} tickPositions\n         * All the tick positions on one axis.\n         *\n         * @return {Highcharts.SizeObject}\n         * Object containing the properties height and width.\n         *\n         * @todo Move this to the generic axis implementation, as it is used there.\n         */\n        function getMaxLabelDimensions(ticks, tickPositions) {\n            var dimensions = {\n                width: 0,\n                height: 0\n            };\n            tickPositions.forEach(function (pos) {\n                var tick = ticks[pos];\n                var labelHeight = 0, labelWidth = 0, label;\n                if (isObject(tick)) {\n                    label = isObject(tick.label) ? tick.label : {};\n                    // Find width and height of label\n                    labelHeight = label.getBBox ? label.getBBox().height : 0;\n                    if (label.textStr && !isNumber(label.textPxLength)) {\n                        label.textPxLength = label.getBBox().width;\n                    }\n                    labelWidth = isNumber(label.textPxLength) ?\n                        // Math.round ensures crisp lines\n                        Math.round(label.textPxLength) :\n                        0;\n                    if (label.textStr) {\n                        // Set the tickWidth same as the label width after ellipsis\n                        // applied #10281\n                        labelWidth = Math.round(label.getBBox().width);\n                    }\n                    // Update the result if width and/or height are larger\n                    dimensions.height = Math.max(labelHeight, dimensions.height);\n                    dimensions.width = Math.max(labelWidth, dimensions.width);\n                }\n            });\n            // For tree grid, add indentation\n            if (this.options.type === 'treegrid' &&\n                this.treeGrid &&\n                this.treeGrid.mapOfPosToGridNode) {\n                var treeDepth = this.treeGrid.mapOfPosToGridNode[-1].height || 0;\n                dimensions.width += (this.options.labels.indentation *\n                    (treeDepth - 1));\n            }\n            return dimensions;\n        }\n        /**\n         * Handle columns and getOffset.\n         * @private\n         */\n        function wrapGetOffset(proceed) {\n            var grid = this.grid, \n            // On the left side we handle the columns first because the offset is\n            // calculated from the plot area and out\n            columnsFirst = this.side === 3;\n            if (!columnsFirst) {\n                proceed.apply(this);\n            }\n            if (!(grid === null || grid === void 0 ? void 0 : grid.isColumn)) {\n                var columns = (grid === null || grid === void 0 ? void 0 : grid.columns) || [];\n                if (columnsFirst) {\n                    columns = columns.slice().reverse();\n                }\n                columns\n                    .forEach(function (column) {\n                    column.getOffset();\n                });\n            }\n            if (columnsFirst) {\n                proceed.apply(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterGetTitlePosition(e) {\n            var axis = this;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            if (gridOptions.enabled === true) {\n                // Compute anchor points for each of the title align options\n                var axisTitle = axis.axisTitle, axisHeight = axis.height, horiz = axis.horiz, axisLeft = axis.left, offset = axis.offset, opposite = axis.opposite, options_1 = axis.options, axisTop = axis.top, axisWidth = axis.width;\n                var tickSize = axis.tickSize();\n                var titleWidth = axisTitle && axisTitle.getBBox().width;\n                var xOption = options_1.title.x;\n                var yOption = options_1.title.y;\n                var titleMargin = pick(options_1.title.margin, horiz ? 5 : 10);\n                var titleFontSize = axisTitle ? axis.chart.renderer.fontMetrics(axisTitle).f : 0;\n                var crispCorr = tickSize ? tickSize[0] / 2 : 0;\n                // TODO account for alignment\n                // the position in the perpendicular direction of the axis\n                var offAxis = ((horiz ? axisTop + axisHeight : axisLeft) +\n                    (horiz ? 1 : -1) * // Horizontal axis reverses the margin\n                        (opposite ? -1 : 1) * // So does opposite axes\n                        crispCorr +\n                    (axis.side === GridAxisSide.bottom ? titleFontSize : 0));\n                e.titlePosition.x = horiz ?\n                    axisLeft - (titleWidth || 0) / 2 - titleMargin + xOption :\n                    offAxis + (opposite ? axisWidth : 0) + offset + xOption;\n                e.titlePosition.y = horiz ?\n                    (offAxis -\n                        (opposite ? axisHeight : 0) +\n                        (opposite ? titleFontSize : -titleFontSize) / 2 +\n                        offset +\n                        yOption) :\n                    axisTop - titleMargin + yOption;\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterInit() {\n            var axis = this;\n            var chart = axis.chart, _a = axis.options.grid, gridOptions = _a === void 0 ? {} : _a, userOptions = axis.userOptions;\n            if (gridOptions.enabled) {\n                applyGridOptions(axis);\n            }\n            if (gridOptions.columns) {\n                var columns = axis.grid.columns = [];\n                var columnIndex = axis.grid.columnIndex = 0;\n                // Handle columns, each column is a grid axis\n                while (++columnIndex < gridOptions.columns.length) {\n                    var columnOptions = merge(userOptions, gridOptions.columns[columnIndex], {\n                        isInternal: true,\n                        linkedTo: 0,\n                        // Disable by default the scrollbar on the grid axis\n                        scrollbar: {\n                            enabled: false\n                        }\n                    }, \n                    // Avoid recursion\n                    {\n                        grid: {\n                            columns: void 0\n                        }\n                    });\n                    var column = new Axis(axis.chart, columnOptions, 'yAxis');\n                    column.grid.isColumn = true;\n                    column.grid.columnIndex = columnIndex;\n                    // Remove column axis from chart axes array, and place it\n                    // in the columns array.\n                    erase(chart.axes, column);\n                    erase(chart[axis.coll] || [], column);\n                    columns.push(column);\n                }\n            }\n        }\n        /**\n         * Draw an extra line on the far side of the outermost axis,\n         * creating floor/roof/wall of a grid. And some padding.\n         * ```\n         * Make this:\n         *             (axis.min) __________________________ (axis.max)\n         *                           |    |    |    |    |\n         * Into this:\n         *             (axis.min) __________________________ (axis.max)\n         *                        ___|____|____|____|____|__\n         * ```\n         * @private\n         */\n        function onAfterRender() {\n            var axis = this, axisTitle = axis.axisTitle, grid = axis.grid, options = axis.options, gridOptions = options.grid || {};\n            if (gridOptions.enabled === true) {\n                var min = axis.min || 0, max = axis.max || 0, firstTick = axis.ticks[axis.tickPositions[0]];\n                // Adjust the title max width to the column width (#19657)\n                if (axisTitle &&\n                    !axis.chart.styledMode &&\n                    (firstTick === null || firstTick === void 0 ? void 0 : firstTick.slotWidth) &&\n                    !axis.options.title.style.width) {\n                    axisTitle.css({ width: \"\".concat(firstTick.slotWidth, \"px\") });\n                }\n                // @todo actual label padding (top, bottom, left, right)\n                axis.maxLabelDimensions = axis.getMaxLabelDimensions(axis.ticks, axis.tickPositions);\n                // Remove right wall before rendering if updating\n                if (axis.rightWall) {\n                    axis.rightWall.destroy();\n                }\n                /*\n                Draw an extra axis line on outer axes\n                            >\n                Make this:    |______|______|______|___\n\n                            > _________________________\n                Into this:    |______|______|______|__|\n                                                        */\n                if (axis.grid && axis.grid.isOuterAxis() && axis.axisLine) {\n                    var lineWidth = options.lineWidth;\n                    if (lineWidth) {\n                        var linePath = axis.getLinePath(lineWidth), startPoint = linePath[0], endPoint = linePath[1], \n                        // Negate distance if top or left axis\n                        // Subtract 1px to draw the line at the end of the tick\n                        tickLength = (axis.tickSize('tick') || [1])[0], distance = (tickLength - 1) * ((axis.side === GridAxisSide.top ||\n                            axis.side === GridAxisSide.left) ? -1 : 1);\n                        // If axis is horizontal, reposition line path vertically\n                        if (startPoint[0] === 'M' && endPoint[0] === 'L') {\n                            if (axis.horiz) {\n                                startPoint[2] += distance;\n                                endPoint[2] += distance;\n                            }\n                            else {\n                                startPoint[1] += distance;\n                                endPoint[1] += distance;\n                            }\n                        }\n                        // If it doesn't exist, add an upper and lower border\n                        // for the vertical grid axis.\n                        if (!axis.horiz && axis.chart.marginRight) {\n                            var upperBorderStartPoint = startPoint, upperBorderEndPoint = [\n                                'L',\n                                axis.left,\n                                startPoint[2] || 0\n                            ], upperBorderPath = [\n                                upperBorderStartPoint,\n                                upperBorderEndPoint\n                            ], lowerBorderEndPoint = [\n                                'L',\n                                axis.chart.chartWidth - axis.chart.marginRight,\n                                axis.toPixels(max + axis.tickmarkOffset)\n                            ], lowerBorderStartPoint = [\n                                'M',\n                                endPoint[1] || 0,\n                                axis.toPixels(max + axis.tickmarkOffset)\n                            ], lowerBorderPath = [\n                                lowerBorderStartPoint,\n                                lowerBorderEndPoint\n                            ];\n                            if (!axis.grid.upperBorder && min % 1 !== 0) {\n                                axis.grid.upperBorder = axis.grid.renderBorder(upperBorderPath);\n                            }\n                            if (axis.grid.upperBorder) {\n                                axis.grid.upperBorder.attr({\n                                    stroke: options.lineColor,\n                                    'stroke-width': options.lineWidth\n                                });\n                                axis.grid.upperBorder.animate({\n                                    d: upperBorderPath\n                                });\n                            }\n                            if (!axis.grid.lowerBorder && max % 1 !== 0) {\n                                axis.grid.lowerBorder = axis.grid.renderBorder(lowerBorderPath);\n                            }\n                            if (axis.grid.lowerBorder) {\n                                axis.grid.lowerBorder.attr({\n                                    stroke: options.lineColor,\n                                    'stroke-width': options.lineWidth\n                                });\n                                axis.grid.lowerBorder.animate({\n                                    d: lowerBorderPath\n                                });\n                            }\n                        }\n                        // Render an extra line parallel to the existing axes, to\n                        // close the grid.\n                        if (!axis.grid.axisLineExtra) {\n                            axis.grid.axisLineExtra = axis.grid.renderBorder(linePath);\n                        }\n                        else {\n                            axis.grid.axisLineExtra.attr({\n                                stroke: options.lineColor,\n                                'stroke-width': options.lineWidth\n                            });\n                            axis.grid.axisLineExtra.animate({\n                                d: linePath\n                            });\n                        }\n                        // Show or hide the line depending on options.showEmpty\n                        axis.axisLine[axis.showAxis ? 'show' : 'hide']();\n                    }\n                }\n                (grid && grid.columns || []).forEach(function (column) { return column.render(); });\n                // Manipulate the tick mark visibility\n                // based on the axis.max- allows smooth scrolling.\n                if (!axis.horiz &&\n                    axis.chart.hasRendered &&\n                    (axis.scrollbar ||\n                        (axis.linkedParent && axis.linkedParent.scrollbar)) &&\n                    axis.tickPositions.length) {\n                    var tickmarkOffset = axis.tickmarkOffset, lastTick = axis.tickPositions[axis.tickPositions.length - 1], firstTick_1 = axis.tickPositions[0];\n                    var label = void 0, tickMark = void 0;\n                    while ((label = axis.hiddenLabels.pop()) && label.element) {\n                        label.show(); // #15453\n                    }\n                    while ((tickMark = axis.hiddenMarks.pop()) &&\n                        tickMark.element) {\n                        tickMark.show(); // #16439\n                    }\n                    // Hide/show first tick label.\n                    label = axis.ticks[firstTick_1].label;\n                    if (label) {\n                        if (min - firstTick_1 > tickmarkOffset) {\n                            axis.hiddenLabels.push(label.hide());\n                        }\n                        else {\n                            label.show();\n                        }\n                    }\n                    // Hide/show last tick mark/label.\n                    label = axis.ticks[lastTick].label;\n                    if (label) {\n                        if (lastTick - max > tickmarkOffset) {\n                            axis.hiddenLabels.push(label.hide());\n                        }\n                        else {\n                            label.show();\n                        }\n                    }\n                    var mark = axis.ticks[lastTick].mark;\n                    if (mark &&\n                        lastTick - max < tickmarkOffset &&\n                        lastTick - max > 0 && axis.ticks[lastTick].isLast) {\n                        axis.hiddenMarks.push(mark.hide());\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterSetAxisTranslation() {\n            var axis = this;\n            var tickInfo = axis.tickPositions && axis.tickPositions.info;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            var userLabels = axis.userOptions.labels || {};\n            // Fire this only for the Gantt type chart, #14868.\n            if (gridOptions.enabled) {\n                if (axis.horiz) {\n                    axis.series.forEach(function (series) {\n                        series.options.pointRange = 0;\n                    });\n                    // Lower level time ticks, like hours or minutes, represent\n                    // points in time and not ranges. These should be aligned\n                    // left in the grid cell by default. The same applies to\n                    // years of higher order.\n                    if (tickInfo &&\n                        options.dateTimeLabelFormats &&\n                        options.labels &&\n                        !defined(userLabels.align) &&\n                        (options.dateTimeLabelFormats[tickInfo.unitName]\n                            .range === false ||\n                            tickInfo.count > 1 // Years\n                        )) {\n                        options.labels.align = 'left';\n                        if (!defined(userLabels.x)) {\n                            options.labels.x = 3;\n                        }\n                    }\n                }\n                else {\n                    // Don't trim ticks which not in min/max range but\n                    // they are still in the min/max plus tickInterval.\n                    if (this.options.type !== 'treegrid' &&\n                        axis.grid &&\n                        axis.grid.columns) {\n                        this.minPointOffset = this.tickInterval;\n                    }\n                }\n            }\n        }\n        /**\n         * Creates a left and right wall on horizontal axes:\n         * - Places leftmost tick at the start of the axis, to create a left\n         *   wall\n         * - Ensures that the rightmost tick is at the end of the axis, to\n         *   create a right wall.\n         * @private\n         */\n        function onAfterSetOptions(e) {\n            var options = this.options, userOptions = e.userOptions, gridOptions = ((options && isObject(options.grid)) ? options.grid : {});\n            var gridAxisOptions;\n            if (gridOptions.enabled === true) {\n                // Merge the user options into default grid axis options so\n                // that when a user option is set, it takes precedence.\n                gridAxisOptions = merge(true, {\n                    className: ('highcharts-grid-axis ' + (userOptions.className || '')),\n                    dateTimeLabelFormats: {\n                        hour: {\n                            list: ['%H:%M', '%H']\n                        },\n                        day: {\n                            list: ['%A, %e. %B', '%a, %e. %b', '%E']\n                        },\n                        week: {\n                            list: ['Week %W', 'W%W']\n                        },\n                        month: {\n                            list: ['%B', '%b', '%o']\n                        }\n                    },\n                    grid: {\n                        borderWidth: 1\n                    },\n                    labels: {\n                        padding: 2,\n                        style: {\n                            fontSize: '0.9em'\n                        }\n                    },\n                    margin: 0,\n                    title: {\n                        text: null,\n                        reserveSpace: false,\n                        rotation: 0,\n                        style: {\n                            textOverflow: 'ellipsis'\n                        }\n                    },\n                    // In a grid axis, only allow one unit of certain types,\n                    // for example we shouldn't have one grid cell spanning\n                    // two days.\n                    units: [[\n                            'millisecond',\n                            [1, 10, 100]\n                        ], [\n                            'second',\n                            [1, 10]\n                        ], [\n                            'minute',\n                            [1, 5, 15]\n                        ], [\n                            'hour',\n                            [1, 6]\n                        ], [\n                            'day',\n                            [1]\n                        ], [\n                            'week',\n                            [1]\n                        ], [\n                            'month',\n                            [1]\n                        ], [\n                            'year',\n                            null\n                        ]]\n                }, userOptions);\n                // X-axis specific options\n                if (this.coll === 'xAxis') {\n                    // For linked axes, tickPixelInterval is used only if\n                    // the tickPositioner below doesn't run or returns\n                    // undefined (like multiple years)\n                    if (defined(userOptions.linkedTo) &&\n                        !defined(userOptions.tickPixelInterval)) {\n                        gridAxisOptions.tickPixelInterval = 350;\n                    }\n                    // For the secondary grid axis, use the primary axis'\n                    // tick intervals and return ticks one level higher.\n                    if (\n                    // Check for tick pixel interval in options\n                    !defined(userOptions.tickPixelInterval) &&\n                        // Only for linked axes\n                        defined(userOptions.linkedTo) &&\n                        !defined(userOptions.tickPositioner) &&\n                        !defined(userOptions.tickInterval) &&\n                        !defined(userOptions.units)) {\n                        gridAxisOptions.tickPositioner = function (min, max) {\n                            var parentInfo = (this.linkedParent &&\n                                this.linkedParent.tickPositions &&\n                                this.linkedParent.tickPositions.info);\n                            if (parentInfo) {\n                                var units = (gridAxisOptions.units || []);\n                                var unitIdx = void 0, count = 1, unitName = 'year';\n                                for (var i = 0; i < units.length; i++) {\n                                    var unit_1 = units[i];\n                                    if (unit_1 && unit_1[0] === parentInfo.unitName) {\n                                        unitIdx = i;\n                                        break;\n                                    }\n                                }\n                                // Get the first allowed count on the next unit.\n                                var unit = (isNumber(unitIdx) && units[unitIdx + 1]);\n                                if (unit) {\n                                    unitName = unit[0] || 'year';\n                                    var counts = unit[1];\n                                    count = counts && counts[0] || 1;\n                                    // In case the base X axis shows years, make the\n                                    // secondary axis show ten times the years (#11427)\n                                }\n                                else if (parentInfo.unitName === 'year') {\n                                    // `unitName` is 'year'\n                                    count = parentInfo.count * 10;\n                                }\n                                var unitRange = timeUnits[unitName];\n                                this.tickInterval = unitRange * count;\n                                return this.chart.time.getTimeTicks({ unitRange: unitRange, count: count, unitName: unitName }, min, max, this.options.startOfWeek);\n                            }\n                        };\n                    }\n                }\n                // Now merge the combined options into the axis options\n                merge(true, this.options, gridAxisOptions);\n                if (this.horiz) {\n                    /*               _________________________\n                    Make this:    ___|_____|_____|_____|__|\n                                    ^                     ^\n                                    _________________________\n                    Into this:    |_____|_____|_____|_____|\n                                        ^                 ^    */\n                    options.minPadding = pick(userOptions.minPadding, 0);\n                    options.maxPadding = pick(userOptions.maxPadding, 0);\n                }\n                // If borderWidth is set, then use its value for tick and\n                // line width.\n                if (isNumber(options.grid.borderWidth)) {\n                    options.tickWidth = options.lineWidth =\n                        gridOptions.borderWidth;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterSetOptions2(e) {\n            var axis = this;\n            var userOptions = e.userOptions;\n            var gridOptions = userOptions && userOptions.grid || {};\n            var columns = gridOptions.columns;\n            // Add column options to the parent axis. Children has their column options\n            // set on init in onGridAxisAfterInit.\n            if (gridOptions.enabled && columns) {\n                merge(true, axis.options, columns[0]);\n            }\n        }\n        /**\n         * Handle columns and setScale.\n         * @private\n         */\n        function onAfterSetScale() {\n            var axis = this;\n            (axis.grid.columns || []).forEach(function (column) { return column.setScale(); });\n        }\n        /**\n         * Draw vertical axis ticks extra long to create cell floors and roofs.\n         * Overrides the tickLength for vertical axes.\n         * @private\n         */\n        function onAfterTickSize(e) {\n            var _a = this, horiz = _a.horiz, maxLabelDimensions = _a.maxLabelDimensions, _b = _a.options.grid, gridOptions = _b === void 0 ? {} : _b;\n            if (gridOptions.enabled && maxLabelDimensions) {\n                var labelPadding = this.options.labels.distance * 2;\n                var distance = horiz ?\n                    (gridOptions.cellHeight ||\n                        labelPadding + maxLabelDimensions.height) :\n                    labelPadding + maxLabelDimensions.width;\n                if (isArray(e.tickSize)) {\n                    e.tickSize[0] = distance;\n                }\n                else {\n                    e.tickSize = [distance, 0];\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            this.axes.forEach(function (axis) {\n                (axis.grid && axis.grid.columns || []).forEach(function (column) {\n                    column.setAxisSize();\n                    column.setAxisTranslation();\n                });\n            });\n        }\n        /**\n         * @private\n         */\n        function onDestroy(e) {\n            var grid = this.grid;\n            (grid.columns || []).forEach(function (column) { return column.destroy(e.keepEvents); });\n            grid.columns = void 0;\n        }\n        /**\n         * Wraps axis init to draw cell walls on vertical axes.\n         * @private\n         */\n        function onInit(e) {\n            var axis = this;\n            var userOptions = e.userOptions || {};\n            var gridOptions = userOptions.grid || {};\n            if (gridOptions.enabled && defined(gridOptions.borderColor)) {\n                userOptions.tickColor = userOptions.lineColor = (gridOptions.borderColor);\n            }\n            if (!axis.grid) {\n                axis.grid = new GridAxisAdditions(axis);\n            }\n            axis.hiddenLabels = [];\n            axis.hiddenMarks = [];\n        }\n        /**\n         * Center tick labels in cells.\n         * @private\n         */\n        function onTickAfterGetLabelPosition(e) {\n            var tick = this, label = tick.label, axis = tick.axis, reversed = axis.reversed, chart = axis.chart, options = axis.options, gridOptions = options.grid || {}, labelOpts = axis.options.labels, align = labelOpts.align, \n            // `verticalAlign` is currently not supported for axis.labels.\n            verticalAlign = 'middle', // LabelOpts.verticalAlign,\n            side = GridAxisSide[axis.side], tickmarkOffset = e.tickmarkOffset, tickPositions = axis.tickPositions, tickPos = tick.pos - tickmarkOffset, nextTickPos = (isNumber(tickPositions[e.index + 1]) ?\n                tickPositions[e.index + 1] - tickmarkOffset :\n                (axis.max || 0) + tickmarkOffset), tickSize = axis.tickSize('tick'), tickWidth = tickSize ? tickSize[0] : 0, crispCorr = tickSize ? tickSize[1] / 2 : 0;\n            // Only center tick labels in grid axes\n            if (gridOptions.enabled === true) {\n                var bottom = void 0, top_1, left = void 0, right = void 0;\n                // Calculate top and bottom positions of the cell.\n                if (side === 'top') {\n                    bottom = axis.top + axis.offset;\n                    top_1 = bottom - tickWidth;\n                }\n                else if (side === 'bottom') {\n                    top_1 = chart.chartHeight - axis.bottom + axis.offset;\n                    bottom = top_1 + tickWidth;\n                }\n                else {\n                    bottom = axis.top + axis.len - (axis.translate(reversed ? nextTickPos : tickPos) || 0);\n                    top_1 = axis.top + axis.len - (axis.translate(reversed ? tickPos : nextTickPos) || 0);\n                }\n                // Calculate left and right positions of the cell.\n                if (side === 'right') {\n                    left = chart.chartWidth - axis.right + axis.offset;\n                    right = left + tickWidth;\n                }\n                else if (side === 'left') {\n                    right = axis.left + axis.offset;\n                    left = right - tickWidth;\n                }\n                else {\n                    left = Math.round(axis.left + (axis.translate(reversed ? nextTickPos : tickPos) || 0)) - crispCorr;\n                    right = Math.min(// #15742\n                    Math.round(axis.left + (axis.translate(reversed ? tickPos : nextTickPos) || 0)) - crispCorr, axis.left + axis.len);\n                }\n                tick.slotWidth = right - left;\n                // Calculate the positioning of the label based on\n                // alignment.\n                e.pos.x = (align === 'left' ?\n                    left :\n                    align === 'right' ?\n                        right :\n                        left + ((right - left) / 2) // Default to center\n                );\n                e.pos.y = (verticalAlign === 'top' ?\n                    top_1 :\n                    verticalAlign === 'bottom' ?\n                        bottom :\n                        top_1 + ((bottom - top_1) / 2) // Default to middle\n                );\n                if (label) {\n                    var lblMetrics = chart.renderer.fontMetrics(label), labelHeight = label.getBBox().height;\n                    // Adjustment to y position to align the label correctly.\n                    // Would be better to have a setter or similar for this.\n                    if (!labelOpts.useHTML) {\n                        var lines = Math.round(labelHeight / lblMetrics.h);\n                        e.pos.y += (\n                        // Center the label\n                        // TODO: why does this actually center the label?\n                        ((lblMetrics.b - (lblMetrics.h - lblMetrics.f)) / 2) +\n                            // Adjust for height of additional lines.\n                            -(((lines - 1) * lblMetrics.h) / 2));\n                    }\n                    else {\n                        e.pos.y += (\n                        // Readjust yCorr in htmlUpdateTransform\n                        lblMetrics.b +\n                            // Adjust for height of html label\n                            -(labelHeight / 2));\n                    }\n                }\n                e.pos.x += (axis.horiz && labelOpts.x) || 0;\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickLabelFormat(ctx) {\n            var axis = ctx.axis, value = ctx.value;\n            if (axis.options.grid &&\n                axis.options.grid.enabled) {\n                var tickPos = axis.tickPositions;\n                var series = (axis.linkedParent || axis).series[0];\n                var isFirst = value === tickPos[0];\n                var isLast = value === tickPos[tickPos.length - 1];\n                var point = series && find(series.options.data, function (p) {\n                    return p[axis.isXAxis ? 'x' : 'y'] === value;\n                });\n                var pointCopy = void 0;\n                if (point && series.is('gantt')) {\n                    // For the Gantt set point aliases to the pointCopy\n                    // to do not change the original point\n                    pointCopy = merge(point);\n                    H.seriesTypes.gantt.prototype.pointClass\n                        .setGanttPointAliases(pointCopy);\n                }\n                // Make additional properties available for the\n                // formatter\n                ctx.isFirst = isFirst;\n                ctx.isLast = isLast;\n                ctx.point = pointCopy;\n            }\n        }\n        /**\n         * Makes tick labels which are usually ignored in a linked axis\n         * displayed if they are within range of linkedParent.min.\n         * ```\n         *                        _____________________________\n         *                        |   |       |       |       |\n         * Make this:             |   |   2   |   3   |   4   |\n         *                        |___|_______|_______|_______|\n         *                          ^\n         *                        _____________________________\n         *                        |   |       |       |       |\n         * Into this:             | 1 |   2   |   3   |   4   |\n         *                        |___|_______|_______|_______|\n         *                          ^\n         * ```\n         * @private\n         * @todo Does this function do what the drawing says? Seems to affect\n         *       ticks and not the labels directly?\n         */\n        function onTrimTicks() {\n            var axis = this, options = axis.options, gridOptions = options.grid || {}, categoryAxis = axis.categories, tickPositions = axis.tickPositions, firstPos = tickPositions[0], secondPos = tickPositions[1], lastPos = tickPositions[tickPositions.length - 1], beforeLastPos = tickPositions[tickPositions.length - 2], linkedMin = axis.linkedParent && axis.linkedParent.min, linkedMax = axis.linkedParent && axis.linkedParent.max, min = linkedMin || axis.min, max = linkedMax || axis.max, tickInterval = axis.tickInterval, startLessThanMin = ( // #19845\n            isNumber(min) &&\n                min >= firstPos + tickInterval &&\n                min < secondPos), endMoreThanMin = (isNumber(min) &&\n                firstPos < min &&\n                firstPos + tickInterval > min), startLessThanMax = (isNumber(max) &&\n                lastPos > max &&\n                lastPos - tickInterval < max), endMoreThanMax = (isNumber(max) &&\n                max <= lastPos - tickInterval &&\n                max > beforeLastPos);\n            if (gridOptions.enabled === true &&\n                !categoryAxis &&\n                (axis.isXAxis || axis.isLinked)) {\n                if ((endMoreThanMin || startLessThanMin) && !options.startOnTick) {\n                    tickPositions[0] = min;\n                }\n                if ((startLessThanMax || endMoreThanMax) && !options.endOnTick) {\n                    tickPositions[tickPositions.length - 1] = max;\n                }\n            }\n        }\n        /**\n         * Avoid altering tickInterval when reserving space.\n         * @private\n         */\n        function wrapUnsquish(proceed) {\n            var axis = this;\n            var _a = axis.options.grid, gridOptions = _a === void 0 ? {} : _a;\n            if (gridOptions.enabled === true && axis.categories) {\n                return axis.tickInterval;\n            }\n            return proceed.apply(axis, argsToArray(arguments));\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Additions for grid axes.\n         * @private\n         * @class\n         */\n        var GridAxisAdditions = /** @class */ (function () {\n            /* *\n            *\n            *  Constructors\n            *\n            * */\n            function GridAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n            *\n            *  Functions\n            *\n            * */\n            /**\n             * Checks if an axis is the outer axis in its dimension. Since\n             * axes are placed outwards in order, the axis with the highest\n             * index is the outermost axis.\n             *\n             * Example: If there are multiple x-axes at the top of the chart,\n             * this function returns true if the axis supplied is the last\n             * of the x-axes.\n             *\n             * @private\n             *\n             * @return {boolean}\n             * True if the axis is the outermost axis in its dimension; false if\n             * not.\n             */\n            GridAxisAdditions.prototype.isOuterAxis = function () {\n                var _a;\n                var axis = this.axis;\n                var chart = axis.chart;\n                var columnIndex = axis.grid.columnIndex;\n                var columns = (((_a = axis.linkedParent) === null || _a === void 0 ? void 0 : _a.grid.columns) ||\n                    axis.grid.columns ||\n                    []);\n                var parentAxis = columnIndex ? axis.linkedParent : axis;\n                var thisIndex = -1, lastIndex = 0;\n                // On the left side, when we have columns (not only multiple axes), the\n                // main axis is to the left\n                if (axis.side === 3 && !chart.inverted && columns.length) {\n                    return !axis.linkedParent;\n                }\n                (chart[axis.coll] || []).forEach(function (otherAxis, index) {\n                    if (otherAxis.side === axis.side &&\n                        !otherAxis.options.isInternal) {\n                        lastIndex = index;\n                        if (otherAxis === parentAxis) {\n                            // Get the index of the axis in question\n                            thisIndex = index;\n                        }\n                    }\n                });\n                return (lastIndex === thisIndex &&\n                    (isNumber(columnIndex) ?\n                        columns.length === columnIndex :\n                        true));\n            };\n            /**\n             * Add extra border based on the provided path.\n             * @private\n             * @param {SVGPath} path\n             * The path of the border.\n             * @return {Highcharts.SVGElement}\n             * Border\n             */\n            GridAxisAdditions.prototype.renderBorder = function (path) {\n                var axis = this.axis, renderer = axis.chart.renderer, options = axis.options, extraBorderLine = renderer.path(path)\n                    .addClass('highcharts-axis-line')\n                    .add(axis.axisGroup);\n                if (!renderer.styledMode) {\n                    extraBorderLine.attr({\n                        stroke: options.lineColor,\n                        'stroke-width': options.lineWidth,\n                        zIndex: 7\n                    });\n                }\n                return extraBorderLine;\n            };\n            return GridAxisAdditions;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        // First letter of the day of the week, e.g. 'M' for 'Monday'.\n        dateFormats.E = function (timestamp) {\n            return this.dateFormat('%a', timestamp, true).charAt(0);\n        };\n        // Adds week date format\n        dateFormats.W = function (timestamp) {\n            var time = this, d = new this.Date(timestamp), unitsToOmit = ['Hours', 'Milliseconds', 'Minutes', 'Seconds'];\n            unitsToOmit.forEach(function (format) {\n                time.set(format, d, 0);\n            });\n            var firstDay = (this.get('Day', d) + 6) % 7;\n            var thursday = new this.Date(d.valueOf());\n            this.set('Date', thursday, this.get('Date', d) - firstDay + 3);\n            var firstThursday = new this.Date(this.get('FullYear', thursday), 0, 1);\n            if (this.get('Day', firstThursday) !== 4) {\n                this.set('Month', d, 0);\n                this.set('Date', d, 1 + (11 - this.get('Day', firstThursday)) % 7);\n            }\n            return (1 +\n                Math.floor((thursday.valueOf() - firstThursday.valueOf()) / 604800000)).toString();\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var GridAxis = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * @productdesc {gantt}\n         * For grid axes (like in Gantt charts),\n         * it is possible to declare as a list to provide different\n         * formats depending on available space.\n         *\n         * Defaults to:\n         * ```js\n         * {\n         *     hour: { list: ['%H:%M', '%H'] },\n         *     day: { list: ['%A, %e. %B', '%a, %e. %b', '%E'] },\n         *     week: { list: ['Week %W', 'W%W'] },\n         *     month: { list: ['%B', '%b', '%o'] }\n         * }\n         * ```\n         *\n         * @sample {gantt} gantt/grid-axis/date-time-label-formats\n         *         Gantt chart with custom axis date format.\n         *\n         * @apioption xAxis.dateTimeLabelFormats\n         */\n        /**\n         * Set grid options for the axis labels. Requires Highcharts Gantt.\n         *\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption xAxis.grid\n         */\n        /**\n         * Enable grid on the axis labels. Defaults to true for Gantt charts.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption xAxis.grid.enabled\n         */\n        /**\n         * Set specific options for each column (or row for horizontal axes) in the\n         * grid. Each extra column/row is its own axis, and the axis options can be set\n         * here.\n         *\n         * @sample gantt/demo/left-axis-table\n         *         Left axis as a table\n         * @sample gantt/demo/treegrid-columns\n         *         Collapsible tree grid with columns\n         *\n         * @type      {Array<Highcharts.XAxisOptions>}\n         * @apioption xAxis.grid.columns\n         */\n        /**\n         * Set border color for the label grid lines.\n         *\n         * @type      {Highcharts.ColorString}\n         * @default   #e6e6e6\n         * @apioption xAxis.grid.borderColor\n         */\n        /**\n         * Set border width of the label grid lines.\n         *\n         * @type      {number}\n         * @default   1\n         * @apioption xAxis.grid.borderWidth\n         */\n        /**\n         * Set cell height for grid axis labels. By default this is calculated from font\n         * size. This option only applies to horizontal axes. For vertical axes, check\n         * the [#yAxis.staticScale](yAxis.staticScale) option.\n         *\n         * @sample gantt/grid-axis/cellheight\n         *         Gant chart with custom cell height\n         * @type      {number}\n         * @apioption xAxis.grid.cellHeight\n         */\n        ''; // Keeps doclets above in JS file\n\n        return GridAxis;\n    });\n    _registerModule(_modules, 'Gantt/Tree.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Authors: Jon Arild Nygard\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __rest = (this && this.__rest) || function (s, e) {\n            var t = {};\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                t[p] = s[p];\n            if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n                for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                        t[p[i]] = s[p[i]];\n                }\n            return t;\n        };\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        var extend = U.extend, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Creates an object map from parent id to children's index.\n         *\n         * @private\n         * @function Highcharts.Tree#getListOfParents\n         *\n         * @param {Array<*>} data\n         *        List of points set in options. `Array.parent` is parent id of point.\n         *\n         * @return {Highcharts.Dictionary<Array<*>>}\n         * Map from parent id to children index in data\n         */\n        function getListOfParents(data) {\n            var root = '', ids = [], listOfParents = data.reduce(function (prev, curr) {\n                var _a = curr.parent, parent = _a === void 0 ? '' : _a, id = curr.id;\n                if (typeof prev[parent] === 'undefined') {\n                    prev[parent] = [];\n                }\n                prev[parent].push(curr);\n                if (id) {\n                    ids.push(id);\n                }\n                return prev;\n            }, {});\n            Object.keys(listOfParents).forEach(function (node) {\n                var _a;\n                if ((node !== root) && (ids.indexOf(node) === -1)) {\n                    var adoptedByRoot = listOfParents[node].map(function (orphan) {\n                        var parentExcluded = __rest(orphan, []); // #15196\n                        return parentExcluded;\n                    });\n                    (_a = listOfParents[root]).push.apply(_a, adoptedByRoot);\n                    delete listOfParents[node];\n                }\n            });\n            return listOfParents;\n        }\n        /** @private */\n        function getNode(id, parent, level, data, mapOfIdToChildren, options) {\n            var after = options && options.after, before = options && options.before, node = {\n                data: data,\n                depth: level - 1,\n                id: id,\n                level: level,\n                parent: (parent || '')\n            };\n            var descendants = 0, height = 0, start, end;\n            // Allow custom logic before the children has been created.\n            if (typeof before === 'function') {\n                before(node, options);\n            }\n            // Call getNode recursively on the children. Calculate the height of the\n            // node, and the number of descendants.\n            var children = ((mapOfIdToChildren[id] || [])).map(function (child) {\n                var node = getNode(child.id, id, (level + 1), child, mapOfIdToChildren, options), childStart = child.start || NaN, childEnd = (child.milestone === true ?\n                    childStart :\n                    child.end ||\n                        NaN);\n                // Start should be the lowest child.start.\n                start = ((!isNumber(start) || childStart < start) ?\n                    childStart :\n                    start);\n                // End should be the largest child.end.\n                // If child is milestone, then use start as end.\n                end = ((!isNumber(end) || childEnd > end) ?\n                    childEnd :\n                    end);\n                descendants = descendants + 1 + node.descendants;\n                height = Math.max(node.height + 1, height);\n                return node;\n            });\n            // Calculate start and end for point if it is not already explicitly set.\n            if (data) {\n                data.start = pick(data.start, start);\n                data.end = pick(data.end, end);\n            }\n            extend(node, {\n                children: children,\n                descendants: descendants,\n                height: height\n            });\n            // Allow custom logic after the children has been created.\n            if (typeof after === 'function') {\n                after(node, options);\n            }\n            return node;\n        }\n        /** @private */\n        function getTree(data, options) {\n            return getNode('', null, 1, null, getListOfParents(data), options);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var Tree = {\n            getNode: getNode,\n            getTree: getTree\n        };\n\n        return Tree;\n    });\n    _registerModule(_modules, 'Core/Axis/TreeGrid/TreeGridTick.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Jon Arild Nygard\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, removeEvent = U.removeEvent, isObject = U.isObject, isNumber = U.isNumber, pick = U.pick, wrap = U.wrap;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onTickInit() {\n            var tick = this;\n            if (!tick.treeGrid) {\n                tick.treeGrid = new TreeGridTickAdditions(tick);\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickHover(label) {\n            label.addClass('highcharts-treegrid-node-active');\n            if (!label.renderer.styledMode) {\n                label.css({\n                    textDecoration: 'underline'\n                });\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickHoverExit(label, options) {\n            var css = isObject(options.style) ? options.style : {};\n            label.removeClass('highcharts-treegrid-node-active');\n            if (!label.renderer.styledMode) {\n                label.css({ textDecoration: (css.textDecoration || 'none') });\n            }\n        }\n        /**\n         * @private\n         */\n        function renderLabelIcon(tick, params) {\n            var _a;\n            var treeGrid = tick.treeGrid, isNew = !treeGrid.labelIcon, renderer = params.renderer, labelBox = params.xy, options = params.options, width = options.width || 0, height = options.height || 0, padding = ((_a = options.padding) !== null && _a !== void 0 ? _a : tick.axis.linkedParent) ? 0 : 5, iconCenter = {\n                x: labelBox.x - (width / 2) - padding,\n                y: labelBox.y - (height / 2)\n            }, rotation = params.collapsed ? 90 : 180, shouldRender = params.show && isNumber(iconCenter.y);\n            var icon = treeGrid.labelIcon;\n            if (!icon) {\n                treeGrid.labelIcon = icon = renderer\n                    .path(renderer.symbols[options.type](options.x || 0, options.y || 0, width, height))\n                    .addClass('highcharts-label-icon')\n                    .add(params.group);\n            }\n            // Set the new position, and show or hide\n            icon[shouldRender ? 'show' : 'hide'](); // #14904, #1338\n            // Presentational attributes\n            if (!renderer.styledMode) {\n                icon\n                    .attr({\n                    cursor: 'pointer',\n                    'fill': pick(params.color, \"#666666\" /* Palette.neutralColor60 */),\n                    'stroke-width': 1,\n                    stroke: options.lineColor,\n                    strokeWidth: options.lineWidth || 0\n                });\n            }\n            // Update the icon positions\n            icon[isNew ? 'attr' : 'animate']({\n                translateX: iconCenter.x,\n                translateY: iconCenter.y,\n                rotation: rotation\n            });\n        }\n        /**\n         * @private\n         */\n        function wrapGetLabelPosition(proceed, x, y, label, horiz, labelOptions, tickmarkOffset, index, step) {\n            var tick = this, lbOptions = pick(tick.options && tick.options.labels, labelOptions), pos = tick.pos, axis = tick.axis, options = axis.options, isTreeGrid = options.type === 'treegrid', result = proceed.apply(tick, [x, y, label, horiz, lbOptions, tickmarkOffset, index, step]);\n            var mapOfPosToGridNode, node, level;\n            if (isTreeGrid) {\n                var _a = (lbOptions && isObject(lbOptions.symbol, true) ?\n                    lbOptions.symbol :\n                    {}), _b = _a.width, width = _b === void 0 ? 0 : _b, _c = _a.padding, padding = _c === void 0 ? axis.linkedParent ? 0 : 5 : _c, indentation = (lbOptions && isNumber(lbOptions.indentation) ?\n                    lbOptions.indentation :\n                    0);\n                mapOfPosToGridNode = axis.treeGrid.mapOfPosToGridNode;\n                node = mapOfPosToGridNode && mapOfPosToGridNode[pos];\n                level = (node && node.depth) || 1;\n                result.x += (\n                // Add space for symbols\n                (width + (padding * 2)) +\n                    // Apply indentation\n                    ((level - 1) * indentation));\n            }\n            return result;\n        }\n        /**\n         * @private\n         */\n        function wrapRenderLabel(proceed) {\n            var tick = this, pos = tick.pos, axis = tick.axis, label = tick.label, tickGrid = tick.treeGrid, tickOptions = tick.options, icon = tickGrid === null || tickGrid === void 0 ? void 0 : tickGrid.labelIcon, labelElement = label === null || label === void 0 ? void 0 : label.element, axisGrid = axis.treeGrid, axisOptions = axis.options, chart = axis.chart, tickPositions = axis.tickPositions, mapOfPosToGridNode = axisGrid.mapOfPosToGridNode, labelOptions = pick(tickOptions === null || tickOptions === void 0 ? void 0 : tickOptions.labels, axisOptions === null || axisOptions === void 0 ? void 0 : axisOptions.labels), symbolOptions = (labelOptions && isObject(labelOptions.symbol, true) ?\n                labelOptions.symbol :\n                {}), node = mapOfPosToGridNode && mapOfPosToGridNode[pos], _a = node || {}, descendants = _a.descendants, depth = _a.depth, hasDescendants = node && descendants && descendants > 0, level = depth, isTreeGridElement = (axisOptions.type === 'treegrid') && labelElement, shouldRender = tickPositions.indexOf(pos) > -1, prefixClassName = 'highcharts-treegrid-node-', prefixLevelClass = prefixClassName + 'level-', styledMode = chart.styledMode;\n            var collapsed, addClassName, removeClassName;\n            if (isTreeGridElement && node) {\n                // Add class name for hierarchical styling.\n                label\n                    .removeClass(new RegExp(prefixLevelClass + '.*'))\n                    .addClass(prefixLevelClass + level);\n            }\n            proceed.apply(tick, Array.prototype.slice.call(arguments, 1));\n            if (isTreeGridElement && hasDescendants) {\n                collapsed = axisGrid.isCollapsed(node);\n                renderLabelIcon(tick, {\n                    color: (!styledMode &&\n                        label.styles.color ||\n                        ''),\n                    collapsed: collapsed,\n                    group: label.parentGroup,\n                    options: symbolOptions,\n                    renderer: label.renderer,\n                    show: shouldRender,\n                    xy: label.xy\n                });\n                // Add class name for the node.\n                addClassName = prefixClassName +\n                    (collapsed ? 'collapsed' : 'expanded');\n                removeClassName = prefixClassName +\n                    (collapsed ? 'expanded' : 'collapsed');\n                label\n                    .addClass(addClassName)\n                    .removeClass(removeClassName);\n                if (!styledMode) {\n                    label.css({\n                        cursor: 'pointer'\n                    });\n                }\n                // Add events to both label text and icon\n                [label, icon].forEach(function (object) {\n                    if (object && !object.attachedTreeGridEvents) {\n                        // On hover\n                        addEvent(object.element, 'mouseover', function () {\n                            onTickHover(label);\n                        });\n                        // On hover out\n                        addEvent(object.element, 'mouseout', function () {\n                            onTickHoverExit(label, labelOptions);\n                        });\n                        addEvent(object.element, 'click', function () {\n                            tickGrid.toggleCollapse();\n                        });\n                        object.attachedTreeGridEvents = true;\n                    }\n                });\n            }\n            else if (icon) {\n                removeEvent(labelElement);\n                label === null || label === void 0 ? void 0 : label.css({ cursor: 'default' });\n                icon.destroy();\n            }\n        }\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var TreeGridTickAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            /**\n             * @private\n             */\n            function TreeGridTickAdditions(tick) {\n                this.tick = tick;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            TreeGridTickAdditions.compose = function (TickClass) {\n                var tickProto = TickClass.prototype;\n                if (!tickProto.toggleCollapse) {\n                    addEvent(TickClass, 'init', onTickInit);\n                    wrap(tickProto, 'getLabelPosition', wrapGetLabelPosition);\n                    wrap(tickProto, 'renderLabel', wrapRenderLabel);\n                    // Backwards compatibility\n                    tickProto.collapse = function (redraw) {\n                        this.treeGrid.collapse(redraw);\n                    };\n                    tickProto.expand = function (redraw) {\n                        this.treeGrid.expand(redraw);\n                    };\n                    tickProto.toggleCollapse = function (redraw) {\n                        this.treeGrid.toggleCollapse(redraw);\n                    };\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Collapse the grid cell. Used when axis is of type treegrid.\n             *\n             * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n             *\n             * @private\n             * @function Highcharts.Tick#collapse\n             *\n             * @param {boolean} [redraw=true]\n             * Whether to redraw the chart or wait for an explicit call to\n             * {@link Highcharts.Chart#redraw}\n             */\n            TreeGridTickAdditions.prototype.collapse = function (redraw) {\n                var tick = this.tick, axis = tick.axis, brokenAxis = axis.brokenAxis;\n                if (brokenAxis &&\n                    axis.treeGrid.mapOfPosToGridNode) {\n                    var pos = tick.pos, node = axis.treeGrid.mapOfPosToGridNode[pos], breaks = axis.treeGrid.collapse(node);\n                    brokenAxis.setBreaks(breaks, pick(redraw, true));\n                }\n            };\n            /**\n             * Destroy remaining labelIcon if exist.\n             *\n             * @private\n             * @function Highcharts.Tick#destroy\n             */\n            TreeGridTickAdditions.prototype.destroy = function () {\n                if (this.labelIcon) {\n                    this.labelIcon.destroy();\n                }\n            };\n            /**\n             * Expand the grid cell. Used when axis is of type treegrid.\n             *\n             * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n             *\n             * @private\n             * @function Highcharts.Tick#expand\n             *\n             * @param {boolean} [redraw=true]\n             * Whether to redraw the chart or wait for an explicit call to\n             * {@link Highcharts.Chart#redraw}\n             */\n            TreeGridTickAdditions.prototype.expand = function (redraw) {\n                var _a = this.tick, pos = _a.pos, axis = _a.axis, treeGrid = axis.treeGrid, brokenAxis = axis.brokenAxis, posMappedNodes = treeGrid.mapOfPosToGridNode;\n                if (brokenAxis && posMappedNodes) {\n                    var node = posMappedNodes[pos], breaks = treeGrid.expand(node);\n                    brokenAxis.setBreaks(breaks, pick(redraw, true));\n                }\n            };\n            /**\n             * Toggle the collapse/expand state of the grid cell. Used when axis is\n             * of type treegrid.\n             *\n             * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n             *\n             * @private\n             * @function Highcharts.Tick#toggleCollapse\n             *\n             * @param {boolean} [redraw=true]\n             * Whether to redraw the chart or wait for an explicit call to\n             * {@link Highcharts.Chart#redraw}\n             */\n            TreeGridTickAdditions.prototype.toggleCollapse = function (redraw) {\n                var tick = this.tick, axis = tick.axis, brokenAxis = axis.brokenAxis;\n                if (brokenAxis &&\n                    axis.treeGrid.mapOfPosToGridNode) {\n                    var pos = tick.pos, node = axis.treeGrid.mapOfPosToGridNode[pos], breaks = axis.treeGrid.toggleCollapse(node);\n                    brokenAxis.setBreaks(breaks, pick(redraw, true));\n                }\n            };\n            return TreeGridTickAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TreeGridTickAdditions;\n    });\n    _registerModule(_modules, 'Series/TreeUtilities.js', [_modules['Core/Color/Color.js'], _modules['Core/Utilities.js']], function (Color, U) {\n        /* *\n         *\n         *  (c) 2014-2024 Highsoft AS\n         *\n         *  Authors: Jon Arild Nygard / Oystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var extend = U.extend, isArray = U.isArray, isNumber = U.isNumber, isObject = U.isObject, merge = U.merge, pick = U.pick, relativeLength = U.relativeLength;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function getColor(node, options) {\n            var index = options.index, mapOptionsToLevel = options.mapOptionsToLevel, parentColor = options.parentColor, parentColorIndex = options.parentColorIndex, series = options.series, colors = options.colors, siblings = options.siblings, points = series.points, chartOptionsChart = series.chart.options.chart;\n            var getColorByPoint, point, level, colorByPoint, colorIndexByPoint, color, colorIndex;\n            /**\n             * @private\n             */\n            var variateColor = function (color) {\n                var colorVariation = level && level.colorVariation;\n                if (colorVariation &&\n                    colorVariation.key === 'brightness' &&\n                    index &&\n                    siblings) {\n                    return Color.parse(color).brighten(colorVariation.to * (index / siblings)).get();\n                }\n                return color;\n            };\n            if (node) {\n                point = points[node.i];\n                level = mapOptionsToLevel[node.level] || {};\n                getColorByPoint = point && level.colorByPoint;\n                if (getColorByPoint) {\n                    colorIndexByPoint = point.index % (colors ?\n                        colors.length :\n                        chartOptionsChart.colorCount);\n                    colorByPoint = colors && colors[colorIndexByPoint];\n                }\n                // Select either point color, level color or inherited color.\n                if (!series.chart.styledMode) {\n                    color = pick(point && point.options.color, level && level.color, colorByPoint, parentColor && variateColor(parentColor), series.color);\n                }\n                colorIndex = pick(point && point.options.colorIndex, level && level.colorIndex, colorIndexByPoint, parentColorIndex, options.colorIndex);\n            }\n            return {\n                color: color,\n                colorIndex: colorIndex\n            };\n        }\n        /**\n         * Creates a map from level number to its given options.\n         *\n         * @private\n         *\n         * @param {Object} params\n         * Object containing parameters.\n         * - `defaults` Object containing default options. The default options are\n         *   merged with the userOptions to get the final options for a specific\n         *   level.\n         * - `from` The lowest level number.\n         * - `levels` User options from series.levels.\n         * - `to` The highest level number.\n         *\n         * @return {Highcharts.Dictionary<object>|null}\n         * Returns a map from level number to its given options.\n         */\n        function getLevelOptions(params) {\n            var result = {};\n            var defaults, converted, i, from, to, levels;\n            if (isObject(params)) {\n                from = isNumber(params.from) ? params.from : 1;\n                levels = params.levels;\n                converted = {};\n                defaults = isObject(params.defaults) ? params.defaults : {};\n                if (isArray(levels)) {\n                    converted = levels.reduce(function (obj, item) {\n                        var level, levelIsConstant, options;\n                        if (isObject(item) && isNumber(item.level)) {\n                            options = merge({}, item);\n                            levelIsConstant = pick(options.levelIsConstant, defaults.levelIsConstant);\n                            // Delete redundant properties.\n                            delete options.levelIsConstant;\n                            delete options.level;\n                            // Calculate which level these options apply to.\n                            level = item.level + (levelIsConstant ? 0 : from - 1);\n                            if (isObject(obj[level])) {\n                                merge(true, obj[level], options); // #16329\n                            }\n                            else {\n                                obj[level] = options;\n                            }\n                        }\n                        return obj;\n                    }, {});\n                }\n                to = isNumber(params.to) ? params.to : 1;\n                for (i = 0; i <= to; i++) {\n                    result[i] = merge({}, defaults, isObject(converted[i]) ? converted[i] : {});\n                }\n            }\n            return result;\n        }\n        /**\n         * @private\n         * @todo Combine buildTree and buildNode with setTreeValues\n         * @todo Remove logic from Treemap and make it utilize this mixin.\n         */\n        function setTreeValues(tree, options) {\n            var before = options.before, idRoot = options.idRoot, mapIdToNode = options.mapIdToNode, nodeRoot = mapIdToNode[idRoot], levelIsConstant = (options.levelIsConstant !== false), points = options.points, point = points[tree.i], optionsPoint = point && point.options || {}, children = [];\n            var childrenTotal = 0;\n            tree.levelDynamic = tree.level - (levelIsConstant ? 0 : nodeRoot.level);\n            tree.name = pick(point && point.name, '');\n            tree.visible = (idRoot === tree.id ||\n                options.visible === true);\n            if (typeof before === 'function') {\n                tree = before(tree, options);\n            }\n            // First give the children some values\n            tree.children.forEach(function (child, i) {\n                var newOptions = extend({}, options);\n                extend(newOptions, {\n                    index: i,\n                    siblings: tree.children.length,\n                    visible: tree.visible\n                });\n                child = setTreeValues(child, newOptions);\n                children.push(child);\n                if (child.visible) {\n                    childrenTotal += child.val;\n                }\n            });\n            // Set the values\n            var value = pick(optionsPoint.value, childrenTotal);\n            tree.visible = value >= 0 && (childrenTotal > 0 || tree.visible);\n            tree.children = children;\n            tree.childrenTotal = childrenTotal;\n            tree.isLeaf = tree.visible && !childrenTotal;\n            tree.val = value;\n            return tree;\n        }\n        /**\n         * Update the rootId property on the series. Also makes sure that it is\n         * accessible to exporting.\n         *\n         * @private\n         *\n         * @param {Object} series\n         * The series to operate on.\n         *\n         * @return {string}\n         * Returns the resulting rootId after update.\n         */\n        function updateRootId(series) {\n            var rootId, options;\n            if (isObject(series)) {\n                // Get the series options.\n                options = isObject(series.options) ? series.options : {};\n                // Calculate the rootId.\n                rootId = pick(series.rootNode, options.rootId, '');\n                // Set rootId on series.userOptions to pick it up in exporting.\n                if (isObject(series.userOptions)) {\n                    series.userOptions.rootId = rootId;\n                }\n                // Set rootId on series to pick it up on next update.\n                series.rootNode = rootId;\n            }\n            return rootId;\n        }\n        /**\n         * Get the node width, which relies on the plot width and the nodeDistance\n         * option.\n         *\n         * @private\n         */\n        function getNodeWidth(series, columnCount) {\n            var chart = series.chart, options = series.options, _a = options.nodeDistance, nodeDistance = _a === void 0 ? 0 : _a, _b = options.nodeWidth, nodeWidth = _b === void 0 ? 0 : _b, _c = chart.plotSizeX, plotSizeX = _c === void 0 ? 1 : _c;\n            // Node width auto means they are evenly distributed along the width of\n            // the plot area\n            if (nodeWidth === 'auto') {\n                if (typeof nodeDistance === 'string' && /%$/.test(nodeDistance)) {\n                    var fraction = parseFloat(nodeDistance) / 100, total = columnCount + fraction * (columnCount - 1);\n                    return plotSizeX / total;\n                }\n                var nDistance = Number(nodeDistance);\n                return ((plotSizeX + nDistance) /\n                    (columnCount || 1)) - nDistance;\n            }\n            return relativeLength(nodeWidth, plotSizeX);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var TreeUtilities = {\n            getColor: getColor,\n            getLevelOptions: getLevelOptions,\n            getNodeWidth: getNodeWidth,\n            setTreeValues: setTreeValues,\n            updateRootId: updateRootId\n        };\n\n        return TreeUtilities;\n    });\n    _registerModule(_modules, 'Core/Axis/TreeGrid/TreeGridAxis.js', [_modules['Core/Axis/BrokenAxis.js'], _modules['Core/Axis/GridAxis.js'], _modules['Gantt/Tree.js'], _modules['Core/Axis/TreeGrid/TreeGridTick.js'], _modules['Series/TreeUtilities.js'], _modules['Core/Utilities.js']], function (BrokenAxis, GridAxis, Tree, TreeGridTick, TU, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Jon Arild Nygard\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var getLevelOptions = TU.getLevelOptions;\n        var addEvent = U.addEvent, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isObject = U.isObject, isString = U.isString, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent, wrap = U.wrap;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var TickConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function getBreakFromNode(node, max) {\n            var to = node.collapseEnd || 0;\n            var from = node.collapseStart || 0;\n            // In broken-axis, the axis.max is minimized until it is not within a\n            // break. Therefore, if break.to is larger than axis.max, the axis.to\n            // should not add the 0.5 axis.tickMarkOffset, to avoid adding a break\n            // larger than axis.max.\n            // TODO consider simplifying broken-axis and this might solve itself\n            if (to >= max) {\n                from -= 0.5;\n            }\n            return {\n                from: from,\n                to: to,\n                showPoints: false\n            };\n        }\n        /**\n         * Creates a tree structure of the data, and the treegrid. Calculates\n         * categories, and y-values of points based on the tree.\n         *\n         * @private\n         * @function getTreeGridFromData\n         *\n         * @param {Array<Highcharts.GanttPointOptions>} data\n         * All the data points to display in the axis.\n         *\n         * @param {boolean} uniqueNames\n         * Whether or not the data node with the same name should share grid cell. If\n         * true they do share cell. False by default.\n         *\n         * @param {number} numberOfSeries\n         *\n         * @return {Object}\n         * Returns an object containing categories, mapOfIdToNode,\n         * mapOfPosToGridNode, and tree.\n         *\n         * @todo There should be only one point per line.\n         * @todo It should be optional to have one category per point, or merge\n         *       cells\n         * @todo Add unit-tests.\n         */\n        function getTreeGridFromData(data, uniqueNames, numberOfSeries) {\n            var categories = [], collapsedNodes = [], mapOfIdToNode = {}, uniqueNamesEnabled = typeof uniqueNames === 'boolean' ?\n                uniqueNames : false;\n            var mapOfPosToGridNode = {}, posIterator = -1;\n            // Build the tree from the series data.\n            var treeParams = {\n                // After the children has been created.\n                after: function (node) {\n                    var gridNode = mapOfPosToGridNode[node.pos];\n                    var height = 0, descendants = 0;\n                    gridNode.children.forEach(function (child) {\n                        descendants += (child.descendants || 0) + 1;\n                        height = Math.max((child.height || 0) + 1, height);\n                    });\n                    gridNode.descendants = descendants;\n                    gridNode.height = height;\n                    if (gridNode.collapsed) {\n                        collapsedNodes.push(gridNode);\n                    }\n                },\n                // Before the children has been created.\n                before: function (node) {\n                    var data = isObject(node.data, true) ?\n                        node.data :\n                        {}, name = isString(data.name) ? data.name : '', parentNode = mapOfIdToNode[node.parent], parentGridNode = (isObject(parentNode, true) ?\n                        mapOfPosToGridNode[parentNode.pos] :\n                        null), hasSameName = function (x) {\n                        return x.name === name;\n                    };\n                    var gridNode, pos;\n                    // If not unique names, look for sibling node with the same name\n                    if (uniqueNamesEnabled &&\n                        isObject(parentGridNode, true) &&\n                        !!(gridNode = find(parentGridNode.children, hasSameName))) {\n                        // If there is a gridNode with the same name, reuse position\n                        pos = gridNode.pos;\n                        // Add data node to list of nodes in the grid node.\n                        gridNode.nodes.push(node);\n                    }\n                    else {\n                        // If it is a new grid node, increment position.\n                        pos = posIterator++;\n                    }\n                    // Add new grid node to map.\n                    if (!mapOfPosToGridNode[pos]) {\n                        mapOfPosToGridNode[pos] = gridNode = {\n                            depth: parentGridNode ? parentGridNode.depth + 1 : 0,\n                            name: name,\n                            id: data.id,\n                            nodes: [node],\n                            children: [],\n                            pos: pos\n                        };\n                        // If not root, then add name to categories.\n                        if (pos !== -1) {\n                            categories.push(name);\n                        }\n                        // Add name to list of children.\n                        if (isObject(parentGridNode, true)) {\n                            parentGridNode.children.push(gridNode);\n                        }\n                    }\n                    // Add data node to map\n                    if (isString(node.id)) {\n                        mapOfIdToNode[node.id] = node;\n                    }\n                    // If one of the points are collapsed, then start the grid node\n                    // in collapsed state.\n                    if (gridNode &&\n                        data.collapsed === true) {\n                        gridNode.collapsed = true;\n                    }\n                    // Assign pos to data node\n                    node.pos = pos;\n                }\n            };\n            var updateYValuesAndTickPos = function (map, numberOfSeries) {\n                var setValues = function (gridNode, start, result) {\n                    var nodes = gridNode.nodes, padding = 0.5;\n                    var end = start + (start === -1 ? 0 : numberOfSeries - 1);\n                    var diff = (end - start) / 2, pos = start + diff;\n                    nodes.forEach(function (node) {\n                        var data = node.data;\n                        if (isObject(data, true)) {\n                            // Update point\n                            data.y = start + (data.seriesIndex || 0);\n                            // Remove the property once used\n                            delete data.seriesIndex;\n                        }\n                        node.pos = pos;\n                    });\n                    result[pos] = gridNode;\n                    gridNode.pos = pos;\n                    gridNode.tickmarkOffset = diff + padding;\n                    gridNode.collapseStart = end + padding;\n                    gridNode.children.forEach(function (child) {\n                        setValues(child, end + 1, result);\n                        end = (child.collapseEnd || 0) - padding;\n                    });\n                    // Set collapseEnd to the end of the last child node.\n                    gridNode.collapseEnd = end + padding;\n                    return result;\n                };\n                return setValues(map['-1'], -1, {});\n            };\n            // Create tree from data\n            var tree = Tree.getTree(data, treeParams);\n            // Update y values of data, and set calculate tick positions.\n            mapOfPosToGridNode = updateYValuesAndTickPos(mapOfPosToGridNode, numberOfSeries);\n            // Return the resulting data.\n            return {\n                categories: categories,\n                mapOfIdToNode: mapOfIdToNode,\n                mapOfPosToGridNode: mapOfPosToGridNode,\n                collapsedNodes: collapsedNodes,\n                tree: tree\n            };\n        }\n        /**\n         * Builds the tree of categories and calculates its positions.\n         * @private\n         * @param {Object} e Event object\n         * @param {Object} e.target The chart instance which the event was fired on.\n         * @param {object[]} e.target.axes The axes of the chart.\n         */\n        function onBeforeRender(e) {\n            var chart = e.target, axes = chart.axes;\n            axes.filter(function (axis) {\n                return axis.options.type === 'treegrid';\n            }).forEach(function (axis) {\n                var options = axis.options || {}, labelOptions = options.labels, uniqueNames = options.uniqueNames, max = options.max, \n                // Check whether any of series is rendering for the first\n                // time, visibility has changed, or its data is dirty, and\n                // only then update. #10570, #10580. Also check if\n                // mapOfPosToGridNode exists. #10887\n                isDirty = (!axis.treeGrid.mapOfPosToGridNode ||\n                    axis.series.some(function (series) {\n                        return !series.hasRendered ||\n                            series.isDirtyData ||\n                            series.isDirty;\n                    }));\n                var numberOfSeries = 0, data, treeGrid;\n                if (isDirty) {\n                    // Concatenate data from all series assigned to this axis.\n                    data = axis.series.reduce(function (arr, s) {\n                        if (s.visible) {\n                            // Push all data to array\n                            (s.options.data || []).forEach(function (data) {\n                                // For using keys - rebuild the data structure\n                                if (s.options.keys && s.options.keys.length) {\n                                    data = s.pointClass.prototype\n                                        .optionsToObject\n                                        .call({ series: s }, data);\n                                    s.pointClass.setGanttPointAliases(data);\n                                }\n                                if (isObject(data, true)) {\n                                    // Set series index on data. Removed again\n                                    // after use.\n                                    data.seriesIndex = (numberOfSeries);\n                                    arr.push(data);\n                                }\n                            });\n                            // Increment series index\n                            if (uniqueNames === true) {\n                                numberOfSeries++;\n                            }\n                        }\n                        return arr;\n                    }, []);\n                    // If max is higher than set data - add a\n                    // dummy data to render categories #10779\n                    if (max && data.length < max) {\n                        for (var i = data.length; i <= max; i++) {\n                            data.push({\n                                // Use the zero-width character\n                                // to avoid conflict with uniqueNames\n                                name: i + '\\u200B'\n                            });\n                        }\n                    }\n                    // `setScale` is fired after all the series is initialized,\n                    // which is an ideal time to update the axis.categories.\n                    treeGrid = getTreeGridFromData(data, uniqueNames || false, (uniqueNames === true) ? numberOfSeries : 1);\n                    // Assign values to the axis.\n                    axis.categories = treeGrid.categories;\n                    axis.treeGrid.mapOfPosToGridNode = (treeGrid.mapOfPosToGridNode);\n                    axis.hasNames = true;\n                    axis.treeGrid.tree = treeGrid.tree;\n                    // Update yData now that we have calculated the y values\n                    axis.series.forEach(function (series) {\n                        var axisData = (series.options.data || []).map(function (d) {\n                            if (isArray(d) &&\n                                series.options.keys &&\n                                series.options.keys.length) {\n                                // Get the axisData from the data array used to\n                                // build the treeGrid where has been modified\n                                data.forEach(function (point) {\n                                    if (d.indexOf(point.x) >= 0 &&\n                                        d.indexOf(point.x2) >= 0) {\n                                        d = point;\n                                    }\n                                });\n                            }\n                            return isObject(d, true) ? merge(d) : d;\n                        });\n                        // Avoid destroying points when series is not visible\n                        if (series.visible) {\n                            series.setData(axisData, false);\n                        }\n                    });\n                    // Calculate the label options for each level in the tree.\n                    axis.treeGrid.mapOptionsToLevel =\n                        getLevelOptions({\n                            defaults: labelOptions,\n                            from: 1,\n                            levels: labelOptions && labelOptions.levels,\n                            to: axis.treeGrid.tree && axis.treeGrid.tree.height\n                        });\n                    // Setting initial collapsed nodes\n                    if (e.type === 'beforeRender') {\n                        axis.treeGrid.collapsedNodes = treeGrid.collapsedNodes;\n                    }\n                }\n            });\n        }\n        /**\n         * Generates a tick for initial positioning.\n         *\n         * @private\n         * @function Highcharts.GridAxis#generateTick\n         *\n         * @param {Function} proceed\n         * The original generateTick function.\n         *\n         * @param {number} pos\n         * The tick position in axis values.\n         */\n        function wrapGenerateTick(proceed, pos) {\n            var axis = this, mapOptionsToLevel = axis.treeGrid.mapOptionsToLevel || {}, isTreeGrid = axis.options.type === 'treegrid', ticks = axis.ticks;\n            var tick = ticks[pos], levelOptions, options, gridNode;\n            if (isTreeGrid &&\n                axis.treeGrid.mapOfPosToGridNode) {\n                gridNode = axis.treeGrid.mapOfPosToGridNode[pos];\n                levelOptions = mapOptionsToLevel[gridNode.depth];\n                if (levelOptions) {\n                    options = {\n                        labels: levelOptions\n                    };\n                }\n                if (!tick &&\n                    TickConstructor) {\n                    ticks[pos] = tick =\n                        new TickConstructor(axis, pos, void 0, void 0, {\n                            category: gridNode.name,\n                            tickmarkOffset: gridNode.tickmarkOffset,\n                            options: options\n                        });\n                }\n                else {\n                    // Update labels depending on tick interval\n                    tick.parameters.category = gridNode.name;\n                    tick.options = options;\n                    tick.addLabel();\n                }\n            }\n            else {\n                proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapInit(proceed, chart, userOptions, coll) {\n            var axis = this, isTreeGrid = userOptions.type === 'treegrid';\n            if (!axis.treeGrid) {\n                axis.treeGrid = new TreeGridAxisAdditions(axis);\n            }\n            // Set default and forced options for TreeGrid\n            if (isTreeGrid) {\n                // Add event for updating the categories of a treegrid.\n                // NOTE Preferably these events should be set on the axis.\n                addEvent(chart, 'beforeRender', onBeforeRender);\n                addEvent(chart, 'beforeRedraw', onBeforeRender);\n                // Add new collapsed nodes on addseries\n                addEvent(chart, 'addSeries', function (e) {\n                    if (e.options.data) {\n                        var treeGrid = getTreeGridFromData(e.options.data, userOptions.uniqueNames || false, 1);\n                        axis.treeGrid.collapsedNodes = (axis.treeGrid.collapsedNodes || []).concat(treeGrid.collapsedNodes);\n                    }\n                });\n                // Collapse all nodes in axis.treegrid.collapsednodes\n                // where collapsed equals true.\n                addEvent(axis, 'foundExtremes', function () {\n                    if (axis.treeGrid.collapsedNodes) {\n                        axis.treeGrid.collapsedNodes.forEach(function (node) {\n                            var breaks = axis.treeGrid.collapse(node);\n                            if (axis.brokenAxis) {\n                                axis.brokenAxis.setBreaks(breaks, false);\n                                // Remove the node from the axis collapsedNodes\n                                if (axis.treeGrid.collapsedNodes) {\n                                    axis.treeGrid.collapsedNodes = axis.treeGrid\n                                        .collapsedNodes\n                                        .filter(function (n) { return ((node.collapseStart !==\n                                        n.collapseStart) ||\n                                        node.collapseEnd !== n.collapseEnd); });\n                                }\n                            }\n                        });\n                    }\n                });\n                // If staticScale is not defined on the yAxis\n                // and chart height is set, set axis.isDirty\n                // to ensure collapsing works (#12012)\n                addEvent(axis, 'afterBreaks', function () {\n                    if (axis.coll === 'yAxis' &&\n                        !axis.staticScale &&\n                        axis.chart.options.chart.height) {\n                        axis.isDirty = true;\n                    }\n                });\n                userOptions = merge({\n                    // Default options\n                    grid: {\n                        enabled: true\n                    },\n                    // TODO: add support for align in treegrid.\n                    labels: {\n                        align: 'left',\n                        /**\n                        * Set options on specific levels in a tree grid axis. Takes\n                        * precedence over labels options.\n                        *\n                        * @sample {gantt} gantt/treegrid-axis/labels-levels\n                        *         Levels on TreeGrid Labels\n                        *\n                        * @type      {Array<*>}\n                        * @product   gantt\n                        * @apioption yAxis.labels.levels\n                        *\n                        * @private\n                        */\n                        levels: [{\n                                /**\n                                * Specify the level which the options within this object\n                                * applies to.\n                                *\n                                * @type      {number}\n                                * @product   gantt\n                                * @apioption yAxis.labels.levels.level\n                                *\n                                * @private\n                                */\n                                level: void 0\n                            }, {\n                                level: 1,\n                                /**\n                                 * @type      {Highcharts.CSSObject}\n                                 * @product   gantt\n                                 * @apioption yAxis.labels.levels.style\n                                 *\n                                 * @private\n                                 */\n                                style: {\n                                    /** @ignore-option */\n                                    fontWeight: 'bold'\n                                }\n                            }],\n                        /**\n                         * The symbol for the collapse and expand icon in a\n                         * treegrid.\n                         *\n                         * @product      gantt\n                         * @optionparent yAxis.labels.symbol\n                         *\n                         * @private\n                         */\n                        symbol: {\n                            /**\n                             * The symbol type. Points to a definition function in\n                             * the `Highcharts.Renderer.symbols` collection.\n                             *\n                             * @type {Highcharts.SymbolKeyValue}\n                             *\n                             * @private\n                             */\n                            type: 'triangle',\n                            x: -5,\n                            y: -5,\n                            height: 10,\n                            width: 10\n                        }\n                    },\n                    uniqueNames: false\n                }, userOptions, {\n                    // Forced options\n                    reversed: true\n                });\n            }\n            // Now apply the original function with the original arguments, which are\n            // sliced off this function's arguments\n            proceed.apply(axis, [chart, userOptions, coll]);\n            if (isTreeGrid) {\n                axis.hasNames = true;\n                axis.options.showLastLabel = true;\n            }\n        }\n        /**\n         * Set the tick positions, tickInterval, axis min and max.\n         *\n         * @private\n         * @function Highcharts.GridAxis#setTickInterval\n         *\n         * @param {Function} proceed\n         * The original setTickInterval function.\n         */\n        function wrapSetTickInterval(proceed) {\n            var _a;\n            var axis = this, options = axis.options, linkedParent = typeof options.linkedTo === 'number' ?\n                (_a = this.chart[axis.coll]) === null || _a === void 0 ? void 0 : _a[options.linkedTo] :\n                void 0, isTreeGrid = options.type === 'treegrid';\n            if (isTreeGrid) {\n                axis.min = pick(axis.userMin, options.min, axis.dataMin);\n                axis.max = pick(axis.userMax, options.max, axis.dataMax);\n                fireEvent(axis, 'foundExtremes');\n                // `setAxisTranslation` modifies the min and max according to axis\n                // breaks.\n                axis.setAxisTranslation();\n                axis.tickInterval = 1;\n                axis.tickmarkOffset = 0.5;\n                axis.tickPositions = axis.treeGrid.mapOfPosToGridNode ?\n                    axis.treeGrid.getTickPositions() :\n                    [];\n                if (linkedParent) {\n                    var linkedParentExtremes = linkedParent.getExtremes();\n                    axis.min = pick(linkedParentExtremes.min, linkedParentExtremes.dataMin);\n                    axis.max = pick(linkedParentExtremes.max, linkedParentExtremes.dataMax);\n                    axis.tickPositions = linkedParent.tickPositions;\n                }\n                axis.linkedParent = linkedParent;\n            }\n            else {\n                proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n        /**\n         * Wrap axis redraw to remove TreeGrid events from ticks\n         *\n         * @private\n         * @function Highcharts.GridAxis#redraw\n         *\n         * @param {Function} proceed\n         * The original setTickInterval function.\n         */\n        function wrapRedraw(proceed) {\n            var axis = this, options = axis.options, isTreeGrid = options.type === 'treegrid';\n            if (isTreeGrid && axis.visible) {\n                axis.tickPositions.forEach(function (pos) {\n                    var tick = axis.ticks[pos];\n                    if (tick.label && tick.label.attachedTreeGridEvents) {\n                        removeEvent(tick.label.element);\n                        tick.label.attachedTreeGridEvents = false;\n                    }\n                });\n            }\n            proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n        }\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var TreeGridAxisAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            /**\n             * @private\n             */\n            function TreeGridAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            TreeGridAxisAdditions.compose = function (AxisClass, ChartClass, SeriesClass, TickClass) {\n                if (!AxisClass.keepProps.includes('treeGrid')) {\n                    var axisProps = AxisClass.prototype;\n                    AxisClass.keepProps.push('treeGrid');\n                    wrap(axisProps, 'generateTick', wrapGenerateTick);\n                    wrap(axisProps, 'init', wrapInit);\n                    wrap(axisProps, 'setTickInterval', wrapSetTickInterval);\n                    wrap(axisProps, 'redraw', wrapRedraw);\n                    // Make utility functions available for testing.\n                    axisProps.utils = {\n                        getNode: Tree.getNode\n                    };\n                    if (!TickConstructor) {\n                        TickConstructor = TickClass;\n                    }\n                }\n                GridAxis.compose(AxisClass, ChartClass, TickClass);\n                BrokenAxis.compose(AxisClass, SeriesClass);\n                TreeGridTick.compose(TickClass);\n                return AxisClass;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set the collapse status.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to collapse.\n             */\n            TreeGridAxisAdditions.prototype.setCollapsedStatus = function (node) {\n                var axis = this.axis, chart = axis.chart;\n                axis.series.forEach(function (series) {\n                    var data = series.options.data;\n                    if (node.id && data) {\n                        var point = chart.get(node.id), dataPoint = data[series.data.indexOf(point)];\n                        if (point && dataPoint) {\n                            point.collapsed = node.collapsed;\n                            dataPoint.collapsed = node.collapsed;\n                        }\n                    }\n                });\n            };\n            /**\n             * Calculates the new axis breaks to collapse a node.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to collapse.\n             *\n             * @param {number} pos\n             * The tick position to collapse.\n             *\n             * @return {Array<object>}\n             * Returns an array of the new breaks for the axis.\n             */\n            TreeGridAxisAdditions.prototype.collapse = function (node) {\n                var axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node, axis.max);\n                breaks.push(obj);\n                // Change the collapsed flag #13838\n                node.collapsed = true;\n                axis.treeGrid.setCollapsedStatus(node);\n                return breaks;\n            };\n            /**\n             * Calculates the new axis breaks to expand a node.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to expand.\n             *\n             * @param {number} pos\n             * The tick position to expand.\n             *\n             * @return {Array<object>}\n             * Returns an array of the new breaks for the axis.\n             */\n            TreeGridAxisAdditions.prototype.expand = function (node) {\n                var axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node, axis.max);\n                // Change the collapsed flag #13838\n                node.collapsed = false;\n                axis.treeGrid.setCollapsedStatus(node);\n                // Remove the break from the axis breaks array.\n                return breaks.reduce(function (arr, b) {\n                    if (b.to !== obj.to || b.from !== obj.from) {\n                        arr.push(b);\n                    }\n                    return arr;\n                }, []);\n            };\n            /**\n             * Creates a list of positions for the ticks on the axis. Filters out\n             * positions that are outside min and max, or is inside an axis break.\n             *\n             * @private\n             *\n             * @return {Array<number>}\n             * List of positions.\n             */\n            TreeGridAxisAdditions.prototype.getTickPositions = function () {\n                var axis = this.axis, roundedMin = Math.floor(axis.min / axis.tickInterval) * axis.tickInterval, roundedMax = Math.ceil(axis.max / axis.tickInterval) * axis.tickInterval;\n                return Object.keys(axis.treeGrid.mapOfPosToGridNode || {}).reduce(function (arr, key) {\n                    var pos = +key;\n                    if (pos >= roundedMin &&\n                        pos <= roundedMax &&\n                        !(axis.brokenAxis && axis.brokenAxis.isInAnyBreak(pos))) {\n                        arr.push(pos);\n                    }\n                    return arr;\n                }, []);\n            };\n            /**\n             * Check if a node is collapsed.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Object} node\n             * The node to check if is collapsed.\n             *\n             * @param {number} pos\n             * The tick position to collapse.\n             *\n             * @return {boolean}\n             * Returns true if collapsed, false if expanded.\n             */\n            TreeGridAxisAdditions.prototype.isCollapsed = function (node) {\n                var axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node, axis.max);\n                return breaks.some(function (b) {\n                    return b.from === obj.from && b.to === obj.to;\n                });\n            };\n            /**\n             * Calculates the new axis breaks after toggling the collapse/expand\n             * state of a node. If it is collapsed it will be expanded, and if it is\n             * expanded it will be collapsed.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to toggle.\n             *\n             * @return {Array<object>}\n             * Returns an array of the new breaks for the axis.\n             */\n            TreeGridAxisAdditions.prototype.toggleCollapse = function (node) {\n                return (this.isCollapsed(node) ?\n                    this.expand(node) :\n                    this.collapse(node));\n            };\n            return TreeGridAxisAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TreeGridAxisAdditions;\n    });\n    _registerModule(_modules, 'Series/Gantt/GanttSeries.js', [_modules['Series/Gantt/GanttPoint.js'], _modules['Series/Gantt/GanttSeriesDefaults.js'], _modules['Gantt/Pathfinder.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Extensions/StaticScale.js'], _modules['Core/Axis/TreeGrid/TreeGridAxis.js'], _modules['Core/Utilities.js']], function (GanttPoint, GanttSeriesDefaults, Pathfinder, SeriesRegistry, StaticScale, TreeGridAxis, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var Series = SeriesRegistry.series, XRangeSeries = SeriesRegistry.seriesTypes.xrange;\n        var extend = U.extend, isNumber = U.isNumber, merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.gantt\n         *\n         * @augments Highcharts.Series\n         */\n        var GanttSeries = /** @class */ (function (_super) {\n            __extends(GanttSeries, _super);\n            function GanttSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            GanttSeries.compose = function (AxisClass, ChartClass, SeriesClass, TickClass) {\n                XRangeSeries.compose(AxisClass);\n                if (!ChartClass) {\n                    return;\n                }\n                StaticScale.compose(AxisClass, ChartClass);\n                if (!SeriesClass) {\n                    return;\n                }\n                Pathfinder.compose(ChartClass, SeriesClass.prototype.pointClass);\n                if (!TickClass) {\n                    return;\n                }\n                TreeGridAxis.compose(AxisClass, ChartClass, SeriesClass, TickClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draws a single point in the series.\n             *\n             * This override draws the point as a diamond if point.options.milestone\n             * is true, and uses the original drawPoint() if it is false or not set.\n             *\n             * @requires highcharts-gantt\n             *\n             * @private\n             * @function Highcharts.seriesTypes.gantt#drawPoint\n             *\n             * @param {Highcharts.Point} point\n             *        An instance of Point in the series\n             *\n             * @param {\"animate\"|\"attr\"} verb\n             *        'animate' (animates changes) or 'attr' (sets options)\n             */\n            GanttSeries.prototype.drawPoint = function (point, verb) {\n                var series = this, seriesOpts = series.options, renderer = series.chart.renderer, shapeArgs = point.shapeArgs, plotY = point.plotY, state = point.selected && 'select', cutOff = seriesOpts.stacking && !seriesOpts.borderRadius;\n                var graphic = point.graphic, diamondShape;\n                if (point.options.milestone) {\n                    if (isNumber(plotY) &&\n                        point.y !== null &&\n                        point.visible !== false) {\n                        diamondShape = renderer.symbols.diamond(shapeArgs.x || 0, shapeArgs.y || 0, shapeArgs.width || 0, shapeArgs.height || 0);\n                        if (graphic) {\n                            graphic[verb]({\n                                d: diamondShape\n                            });\n                        }\n                        else {\n                            point.graphic = graphic = renderer.path(diamondShape)\n                                .addClass(point.getClassName(), true)\n                                .add(point.group || series.group);\n                        }\n                        // Presentational\n                        if (!series.chart.styledMode) {\n                            point.graphic\n                                .attr(series.pointAttribs(point, state))\n                                .shadow(seriesOpts.shadow, null, cutOff);\n                        }\n                    }\n                    else if (graphic) {\n                        point.graphic = graphic.destroy(); // #1269\n                    }\n                }\n                else {\n                    _super.prototype.drawPoint.call(this, point, verb);\n                }\n            };\n            /**\n             * Handle milestones, as they have no x2.\n             * @private\n             */\n            GanttSeries.prototype.translatePoint = function (point) {\n                var shapeArgs, size;\n                _super.prototype.translatePoint.call(this, point);\n                if (point.options.milestone) {\n                    shapeArgs = point.shapeArgs;\n                    size = shapeArgs.height || 0;\n                    point.shapeArgs = {\n                        x: (shapeArgs.x || 0) - (size / 2),\n                        y: shapeArgs.y,\n                        width: size,\n                        height: size\n                    };\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            GanttSeries.defaultOptions = merge(XRangeSeries.defaultOptions, GanttSeriesDefaults);\n            return GanttSeries;\n        }(XRangeSeries));\n        extend(GanttSeries.prototype, {\n            pointArrayMap: ['start', 'end', 'y'],\n            pointClass: GanttPoint,\n            setData: Series.prototype.setData\n        });\n        SeriesRegistry.registerSeriesType('gantt', GanttSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttSeries;\n    });\n    _registerModule(_modules, 'masters/modules/gantt.src.js', [_modules['Core/Globals.js'], _modules['Extensions/ArrowSymbols.js'], _modules['Gantt/Connection.js'], _modules['Extensions/CurrentDateIndication.js'], _modules['Core/Chart/GanttChart.js'], _modules['Stock/Navigator/Navigator.js'], _modules['Stock/RangeSelector/RangeSelector.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Series/Gantt/GanttSeries.js']], function (Highcharts, ArrowSymbols, Connection, CurrentDateIndication, GanttChart, Navigator, RangeSelector, Scrollbar, GanttSeries) {\n\n        // Series\n        var G = Highcharts;\n        // Classes\n        G.Connection = G.Connection || Connection;\n        G.GanttChart = G.GanttChart || GanttChart;\n        G.Navigator = G.Navigator || Navigator;\n        G.RangeSelector = G.RangeSelector || RangeSelector;\n        G.Scrollbar = G.Scrollbar || Scrollbar;\n        // Functions\n        G.ganttChart = G.GanttChart.ganttChart;\n        // Compositions\n        ArrowSymbols.compose(G.SVGRenderer);\n        CurrentDateIndication.compose(G.Axis, G.PlotLineOrBand);\n        GanttSeries.compose(G.Axis, G.Chart, G.Series, G.Tick);\n        G.Navigator.compose(G.Chart, G.Axis, G.Series);\n        G.RangeSelector.compose(G.Axis, G.Chart);\n        G.Scrollbar.compose(G.Axis);\n\n        return Highcharts;\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","arrow","x","y","w","h","arrowHalf","triangleLeft","triangleLeftHalf","compose","SVGRendererClass","symbols","prototype","H","U","defined","error","merge","objectEach","deg2rad","max","Math","min","Connection","from","to","options","init","fromPoint","toPoint","chart","series","pathfinder","renderPath","attribs","styledMode","anim","pathGraphic","connection","graphics","group","renderer","g","addClass","attr","zIndex","add","seriesGroup","translate","plotLeft","plotTop","opacity","d","animate","addMarker","type","markerVector","radians","rotation","box","width","height","pathVector","segment","point","anchor","getPathfinderAnchorPoint","enabled","length","getRadiansToVector","getMarkerVector","radius","rotationOriginX","rotationOriginY","symbol","colorIndex","fill","color","stroke","lineColor","lineWidth","animation","getPath","algorithm","algorithms","chartObstacles","obstacles","requiresObstacles","getChartObstacles","connectors","algorithmMargin","chartObstacleMetrics","getObstacleMetrics","startMarker","endMarker","lineObstacles","obstacleMetrics","hardBounds","xMin","xMax","plotWidth","yMin","yMax","plotHeight","obstacleOptions","margin","startDirectionX","getAlgorithmStartDirection","render","dashStyle","dashstyle","marker","ceil","pathResult","concat","destroy","val","composed","addEvent","pushUnique","wrap","defaultOptions","label","format","formatter","value","axis","time","dateFormat","style","fontSize","onAxisAfterSetOptions","cdiOptions","currentDateIndicator","plotLineOptions","Date","now","className","plotLines","push","onPlotLineOrBandRender","text","getLabelText","wrapPlotLineOrBandGetLabelText","defaultMethod","defaultLabelOptions","indexOf","call","AxisClass","PlotLineOrBandClass","Chart","D","extendStatics","GanttChart","__extends","b","Object","setPrototypeOf","__proto__","Array","p","TypeError","String","__","constructor","create","isArray","splat","_super","arguments","userOptions","callback","defaultLinkedTo","xAxisOptions","xAxis","yAxisOptions","yAxis","title","legend","navigator","isGantt","map","i","_a","_b","_c","grid","borderColor","opposite","linkedTo","staticScale","reversed","categories","ganttChart","a","c","NavigatorConstructor","isTouchDevice","pick","composedMembers","onChartAfterAddSeries","setBaseSeries","onChartAfterSetChartSize","legendOptions","scrollbarHeight","scrollButtonSize","inverted","left","chartWidth","spacing","top","navigatorOptions","chartHeight","scrollbar","rangeSelector","extraBottomMargin","getHeight","verticalAlign","layout","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","event","scroller","redraw","onChartBeforeRender","onChartBeforeShowResetZoom","chartOptions","zooming","pinchType","onChartCallback","extremes","getExtremes","onChartUpdate","e","scrollbarOptions","ChartClass","NavigatorClass","chartProto","callbacks","correctFloat","isNumber","onAxisInit","navigatorAxis","NavigatorAxisAdditions","onAxisSetExtremes","zoomed","zoomType","isXAxis","trigger","range","previousZoom","preventDefault","keepProps","includes","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","halfPointRange","pointRange","newMin","horiz","newMax","Color","SeriesRegistry","parse","seriesTypes","maskInside","handles","backgroundColor","maskFill","setOpacity","get","outlineColor","outlineWidth","areaspline","fillOpacity","compare","sonification","dataGrouping","approximation","groupPixelWidth","firstAnchor","lastAnchor","units","dataLabels","id","threshold","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","labels","align","textOutline","crosshair","startOnTick","endOnTick","minPadding","maxPadding","tickWidth","_x","_y","halfWidth","markerPosition","round","setFixedRange","dataMax","dataMin","fixedRange","NavigatorDefaults","NavigatorSymbols","RendererRegistry","StockUtilities","setOptions","getRendererType","extend","onSeriesAfterUpdate","isInternal","SeriesClass","ScrollbarAxis","Scrollbar","axisMin","axisMax","scrollMin","Infinity","scrollMax","onAxisAfterGetOffset","index","scrollbarsOffsets","axisOffset","size","onAxisAfterInit","vertical","unitedMin","unitedMax","shouldUpdateExtremes","DOMType","setExtremes","setRange","onAxisAfterRender","offsetsIndex","offset","axisTitleMargin","axisMargin","position","xPosition","isNaN","ScrollbarClass","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","ScrollbarDefaults","destroyObjectProperties","fireEvent","removeEvent","_events","chartX","chartY","scrollbarButtons","scrollbarLeft","scrollbarStrokeWidth","scrollbarTop","swapXY","forEach","seg","temp","len","addEvents","buttonsOrder","buttons","bar","scrollbarGroup","element","track","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","updatePosition","DOMEvent","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","prop","drawScrollbarButton","rect","crisp","r","strokeWidth","pointer","normalize","mousePosition","initPositions","grabbedCenter","change","direction","touches","chartPosition","hasDragged","method","rendered","show","translateX","translateY","hide","scrollbarRifles","fromPX","newSize","fullWidth","toPX","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","update","Axis","ChartNavigatorComposition","NavigatorComposition","clamp","erase","find","numExt","extreme","_i","numbers","filter","Navigator","drawHandle","verb","parseInt","drawOutline","zoomedMin","zoomedMax","verticalMin","outline","halfOutline","outlineCorrection","navigatorSize","navigatorTop","lineTop","lineBtm","drawMasks","navigatorHeight","shades","shade","renderElements","mouseCursor","cursor","navigatorGroup","visibility","hasMask","css","handlesOptions_1","height_1","width_1","baseSeries","navigatorSeries","navigatorWidth","scrollbarXAxis","fake","navigatorEnabled","minRange","maxRange","toPixels","abs","toValue","currentRange","grabbedLeft","grabbedRight","fixedWidth","addMouseEvents","container","eventsToUnbind","onMouseMove","onMouseUp","getPartsEvents","renderTo","modifyNavigatorAxisExtremes","eventName","events","name","navigatorItem","shadesMousedown","ext","navigatorPosition","dragOffset","reversedExtremes","getUnionExtremes","eventArguments","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","setTimeout","unionExtremes","triggerOp","keys","unbind","removeBaseSeriesEvents","adaptToUpdatedData","updatedDataHandler","modifyBaseAxisExtremes","scrollbarEnabled","Boolean","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","breaks","ordinal","overscroll","keepOrdinalPadding","zoomEnabled","offsets","alignTicks","data","updateNavigatorSeries","unbindRedraw","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","returnFalseOnNoBaseSeries","ret","baseAxis","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","s","showInNavigator","baseOptions","mergedNavSeriesOptions","baseNavigatorOptions","navSeriesMixin","enableMouseTracking","padXAxis","showInLegend","stacking","states","inactive","navSeries","base","chartNavigatorSeriesOptions","linkedNavSeries","userNavOptions","visible","plotOptions","navigatorSeriesData","hasNavigatorData","slice","initSeries","setSortedData","userSeriesOptions","colors","_this","setVisible","remove","getBaseSeriesMin","currentSeriesMin","reduce","xData","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","convertOverscroll","hasSetExtremes","eventArgs","Number","MAX_VALUE","userMin","userMax","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","axes","coll","lang","rangeSelectorZoom","rangeSelectorFrom","rangeSelectorTo","allButtonsEnabled","buttonSpacing","dropdown","buttonTheme","padding","inputBoxBorderColor","inputBoxHeight","inputBoxWidth","inputDateFormat","inputDateParser","inputEditDateFormat","inputEnabled","inputPosition","inputSpacing","selected","buttonPosition","inputStyle","labelStyle","RangeSelectorDefaults","RangeSelectorConstructor","chartDestroyEvents","axisMinFromRange","rangeOptions","getTrueRange","count","timeName","date","basePeriod","set","getTime","MIN_VALUE","_offsetMin","onChartAfterGetContainer","deferredYTDClick","clickButton","updateNames","setScale","getAxisMargins","extraTopMargin","alignTo","display","spacingBox","placed","onChartDestroy","iEnd","splice","onChartGetMargins","rangeSelectorHeight","marginBottom","onChartRender","optionsRangeSelector","extraBottomMarginWas","extraTopMarginWas","RangeSelectorClass","minFromRange","RangeSelectorComposition","SVGElement","createElement","discardElement","pad","pInt","RangeSelector","buttonOptions","defaultButtons","initialButtonGroupWidth","baseXAxisOptions","rangeMin","minSetting","rangeSetting","ctx","ytdExtremes","_range","addOffsetMin","setSelected","forcedDataGrouping","setDataGrouping","frozenStates","preserveDataGrouping","getYTDExtremes","useUTC","_offsetMax","selectedIndex","rangeSelectorButton","selectedOption","blurInputs","minInput","maxInput","blur","computeButtonRange","updateButtonStates","actualRange","hasNoData","hasVisibleSeries","day","ytdMin","ytdMax","selectedExists","isSelectedTooGreat","button","offsetRange","isSelected","isTooGreatRange","isTooSmallRange","state","isYTDButNotSelected","isAllButAlreadyShowingAll","isSameRange","isOrdinal","positions","month","year","disable","select","setState","disabled","fixedTimes","millisecond","second","minute","hour","week","offsetMin","offsetMax","getInputValue","input","defaultInputDateParser","setInputValue","inputTime","dateBox","minDateBox","maxDateBox","hcTimeAttr","getAttribute","updatedTime","previousTime","setAttribute","inputTypeFormats","setInputExtremes","showInput","inputGroup","isTextInput","_d","_e","_f","border","offsetWidth","offsetHeight","hideInput","inputDate","str","split","join","isSafari","lastIndexOf","getTimezoneOffset","parts","UTC","drawInput","div","chartStyle","isMin","updateExtremes","chartAxis","on","focus","preferredInputType","some","char","boxShadow","textAlign","fontFamily","onfocus","onblur","doc","activeElement","keyDown","onchange","onkeypress","keyCode","onkeydown","onkeyup","getPosition","buttonTop","inputTop","startOfYear","ts","inputsZIndex","renderButtons","parentNode","insertBefore","minElems","minLabel","maxElems","maxLabel","x_1","getBBox","alignElements","buttonGroup","isMS","currentButtonIndex","zoomText","paddingLeft","paddingRight","textContent","textStr","callDefaultEvent","buttonEvents","click","isActive","hover","navButtonOptions","exporting","navigation","getXOffsetForExportButton","titleCollision","positionButtons","xOffsetForExportButton_1","alignButtonGroup","hasLoaded","xOffsetForExportButton","handleCollision","alignTranslateY","alignAttr","groupHeight","marginTop","buttonLeft","maxButtonWidth","buttonWidth","bBox","groupsOverlap","buttonGroupWidth","inputGroupX","alignOptions","inputGroupWidth","buttonGroupX","moveInputsDown","collapseButtons","expandButtons","isCollapsed","userButtonTheme","getAttribs","hasActiveButton","showDropdown","hideDropdown","hasVisibleDropdown","rangeSelectorGroup","yPosition","buttonPositionY","inputPositionY","subtitle","rSelector","key","HTMLElement","applyRadius","prevSeg","nextSeg","x1","y1","x2","y2","directionX","directionY","getLinkPath","pathParams","parentVisible","straight","curved","PathUtilities","findLastObstacleBefore","startIx","cmp","right","findObstacleFromPoint","obstacle","pathFromSegments","segments","start","end","limitObstacleToBounds","bounds","simpleConnect","endSegment","startObstacle","waypoint","useMax","endPoint","startObstacleIx","endObstacleIx","dir","copyFromPoint","fromKey","toKey","getMeOut","prevWaypoint","waypoint2","fastAvoid","dirIsX","extractedEndPoint","endSegments","metrics","softMinX","maxWidth","softMaxX","softMinY","maxHeight","softMaxY","forceObstacleBreak","pivotPoint","directionIsX","firstPoint","lastPoint","highestPoint","lowestPoint","searchDirection","getDodgeDirection","softBounds","soft","hard","toPointMax","toPointMin","maxOutOfSoftBounds","minOutOfSoftBounds","maxOutOfHardBounds","minOutOfHardBounds","minDistance","maxDistance","minPivot","maxPivot","clearPathTo","pivot","waypointUseMax","envelopingObstacle","secondEnvelopingObstacle","envelopWaypoint","obstacleMargin","inside","ConnectorsDefaults","ConnectionComposition","getPointBB","shapeArgs","bb","graphic","plotX","plotY","pointGetPathfinderAnchorPoint","markerOptions","pointGetRadiansToVector","v1","v2","atan2","pointGetMarkerVector","markerRadius","twoPI","PI","rectWidth","rectHeight","rAtan","rectHalfWidth","rectHalfHeight","rectHorizontalCenter","rectVerticalCenter","edgePoint","theta","tanTheta","leftOrRightRegion","xFactor","yFactor","tan","cos","sin","PathfinderClass","PointClass","pointProto","acc","PathfinderAlgorithms","PathfinderComposition","Point","Pathfinder","connections","deferRender","oldConnections","points","ganttPointOptions","dependency","connect","connects","isInside","j","k","found","lenOld","lenNew","oldCon","newCon","renderConnections","conns","pathfinderRemoveRenderEvent","calculatedMargin","sLen","pLen","sort","calculateObstacleMargin","onstacleDistance","distances","calculateObstacleDistance","bbMargin","yOverlap","xOverlap","xDistance","yDistance","xCenter","yCenter","ArrowSymbols","G","SVGRenderer","scrollablePlotArea","minHeight","chartAdjustHeight","redrawTrigger","_loop_1","chart_1","initiatedScale","brokenAxis","unitLength","tickInterval","diff","scrollablePixelsY","setSize","clipRect","sharedClipKey","sharedClips","adjustHeight","StaticScale","isObject","colorByPoint","amount","partialFill","whiteSpace","tooltip","headerFormat","pointFormat","borderRadius","ColumnPoint","column","pointClass","XRangePoint","getColorByCategory","colorCount","resolveColor","drawPoint","getAnimationVerb","getLabelConfig","cfg","yCats","yCategory","category","isValid","ttBelow","tooltipDateKeys","XRangeSeriesDefaults","noop","ColumnSeries","relativeLength","onAxisAfterGetSeriesExtremes","modMax","x2Data","XRangeSeries","getColumnMetrics","swapAxes","cropData","yData","crop","findPointIndex","pointIndex","cropStart","touched","cropped","alignDataLabel","oldPlotX","dlBox","centerX","dataLabel","translatePoint","widthDifference","dlLeft","dlRight","dlWidth","clipRectWidth","columnMetrics","minPointLength","oldColWidth","seriesXOffset","pointXOffset","posX","plotX2","crisper","borderWidth","pointHeight","pointWidth","pointPlacement","tooltipPos","xIndex","yIndex","tooltipYOffset","partShapeArgs","clipRectArgs","seriesOpts","shapeType","pointState","stateOpts","pointStateVerb","pointAttr","pointAttribs","pfOptions","isNull","getClassName","partRect","partialClipRect","clip","shadow","brighten","drawPoints","pointCount","animationLimit","isPointInside","pointArrayMap","getExtremesFromAll","parallelArrays","requireSorting","autoIncrement","buildKDTree","registerSeriesType","xrange","GanttPoint","setGanttPointAliases","addIfExists","completed","applyOptions","ganttPoint","milestone","grouping","pointFormatter","formats","tooltipOptions","dateTimeLabelFormats","startOfWeek","ttOptions","xDateFormat","retVal","tooltipFormatter","getDateFormat","closestPointRange","StackItem","BrokenAxis","setBreaks","hasBreaks","onAxisAfterSetTickPositions","tickPositions","info","newPositions","isInAnyBreak","Additions","onSeriesAfterGeneratePoints","isDirty","connectNulls","isPointInBreak","onSeriesAfterRender","drawBreaks","seriesDrawBreaks","brokenAxis_1","breakArray","breaksOutOfRange","brk","isOut","otherBreak","toUpperCase","seriesGappedPath","currentDataGrouping","groupingSize","gapSize","gapUnit","basePointRange","current","next","xRange","stack","stacks","stackKey","stackLabels","total","getGraphPath","seriesProto","gappedPath","isInBreak","repeat","test","inclusive","lin2Val","nval","val2Lin","findBreakAt","testKeep","inbrk","keep","showPoints","forceRedraw","val2lin","lin2val","breaks_1","axisBreak","setAxisTranslation","inBrk_1","repeat_1","start_1","i_1","breaks_2","breakArrayT_1","breakArray_1","pointRangePadding","length_1","min_1","max_1","move","breakSize","transA","minPixelPadding","minPointOffset","GridAxisSide","dateFormats","timeUnits","getMaxLabelDimensions","ticks","dimensions","pos","tick","labelHeight","labelWidth","textPxLength","treeGrid","mapOfPosToGridNode","treeDepth","indentation","wrapGetOffset","proceed","columnsFirst","side","isColumn","columns","getOffset","onAfterGetTitlePosition","gridOptions","axisTitle","axisHeight","axisLeft","options_1","axisTop","axisWidth","tickSize","titleWidth","xOption","yOption","titleMargin","titleFontSize","fontMetrics","f","offAxis","bottom","titlePosition","onAfterInit","showLastLabel","labelRotation","minTickInterval","columnIndex","columnOptions","onAfterRender","firstTick","slotWidth","maxLabelDimensions","rightWall","isOuterAxis","axisLine","linePath","getLinePath","startPoint","distance","marginRight","upperBorderEndPoint","upperBorderPath","lowerBorderEndPoint","tickmarkOffset","lowerBorderPath","upperBorder","renderBorder","lowerBorder","axisLineExtra","showAxis","hasRendered","linkedParent","lastTick","firstTick_1","tickMark","hiddenLabels","pop","hiddenMarks","mark","isLast","onAfterSetAxisTranslation","tickInfo","userLabels","unitName","onAfterSetOptions","gridAxisOptions","list","reserveSpace","textOverflow","tickPositioner","parentInfo","unitIdx","unit_1","unit","counts","unitRange","getTimeTicks","onAfterSetOptions2","onAfterSetScale","onAfterTickSize","labelPadding","cellHeight","onDestroy","keepEvents","onInit","tickColor","GridAxisAdditions","onTickAfterGetLabelPosition","labelOpts","tickPos","nextTickPos","crispCorr","top_1","lblMetrics","useHTML","lines","onTickLabelFormat","isFirst","pointCopy","is","gantt","onTrimTicks","categoryAxis","firstPos","secondPos","lastPos","beforeLastPos","linkedMin","linkedMax","startLessThanMin","endMoreThanMin","startLessThanMax","endMoreThanMax","isLinked","wrapUnsquish","parentAxis","thisIndex","lastIndex","otherAxis","extraBorderLine","axisGroup","E","timestamp","charAt","W","unitsToOmit","firstDay","thursday","valueOf","firstThursday","toString","TickClass","__rest","t","getOwnPropertySymbols","propertyIsEnumerable","getNode","parent","level","mapOfIdToChildren","after","before","node","depth","descendants","children","child","childStart","NaN","childEnd","getTree","ids","listOfParents","prev","curr","adoptedByRoot","orphan","onTickInit","TreeGridTickAdditions","wrapGetLabelPosition","labelOptions","lbOptions","isTreeGrid","result","wrapRenderLabel","params","isNew","labelBox","iconCenter","shouldRender","icon","collapsed","addClassName","removeClassName","tickGrid","tickOptions","labelIcon","labelElement","axisGrid","axisOptions","symbolOptions","hasDescendants","isTreeGridElement","prefixClassName","prefixLevelClass","removeClass","RegExp","styles","parentGroup","xy","object","attachedTreeGridEvents","textDecoration","toggleCollapse","tickProto","collapse","expand","posMappedNodes","getColor","colorVariation","colorIndexByPoint","mapOptionsToLevel","parentColor","parentColorIndex","siblings","chartOptionsChart","getLevelOptions","defaults","converted","levels","item","levelIsConstant","getNodeWidth","columnCount","nodeDistance","nodeWidth","plotSizeX","fraction","parseFloat","nDistance","setTreeValues","tree","idRoot","nodeRoot","mapIdToNode","optionsPoint","childrenTotal","levelDynamic","newOptions","isLeaf","updateRootId","rootId","rootNode","GridAxis","Tree","TreeGridTick","TU","TickConstructor","isString","getBreakFromNode","collapseEnd","collapseStart","getTreeGridFromData","uniqueNames","numberOfSeries","setValues","collapsedNodes","mapOfIdToNode","uniqueNamesEnabled","posIterator","gridNode","parentGridNode","nodes","seriesIndex","onBeforeRender","target","isDirtyData","arr","optionsToObject","hasNames","axisData","wrapGenerateTick","levelOptions","parameters","addLabel","wrapInit","TreeGridAxisAdditions","n","fontWeight","wrapSetTickInterval","getTickPositions","linkedParentExtremes","wrapRedraw","axisProps","utils","setCollapsedStatus","dataPoint","roundedMin","roundedMax","GanttSeriesDefaults","TreeGridAxis","Series","GanttSeries","diamondShape","cutOff","diamond","CurrentDateIndication","PlotLineOrBand","Tick"],"mappings":"CAAA;;;;;;;;CAQC,EACA,SAAUA,CAAO,EACV,AAAkB,UAAlB,OAAOC,QAAuBA,OAAOC,OAAO,EAC5CF,EAAQ,OAAU,CAAGA,EACrBC,OAAOC,OAAO,CAAGF,GACV,AAAkB,YAAlB,OAAOG,QAAyBA,OAAOC,GAAG,CACjDD,OAAO,2BAA4B,CAAC,aAAa,CAAE,SAAUE,CAAU,EAGnE,OAFAL,EAAQK,GACRL,EAAQK,UAAU,CAAGA,EACdL,CACX,GAEAA,EAAQ,AAAsB,aAAtB,OAAOK,WAA6BA,WAAaC,KAAAA,EAEjE,EAAE,SAAUD,CAAU,EAClB,aACA,IAAIE,EAAWF,EAAaA,EAAWE,QAAQ,CAAG,CAAC,EACnD,SAASC,EAAgBC,CAAG,CAAEC,CAAI,CAAEC,CAAI,CAAEC,CAAE,EACnCH,EAAII,cAAc,CAACH,KACpBD,CAAG,CAACC,EAAK,CAAGE,EAAGE,KAAK,CAAC,KAAMH,GAEA,YAAvB,OAAOI,aACPC,OAAOC,aAAa,CAAC,IAAIF,YACrB,yBACA,CAAEG,OAAQ,CAAER,KAAMA,EAAMT,OAAQQ,CAAG,CAACC,EAAK,AAAC,CAAE,IAI5D,CACAF,EAAgBD,EAAU,6BAA8B,EAAE,CAAE,WA8CxD,SAASY,EAAMC,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAEC,CAAC,EACrB,MAAO,CACH,CAAC,IAAKH,EAAGC,EAAIE,EAAI,EAAE,CACnB,CAAC,IAAKH,EAAIE,EAAGD,EAAE,CACf,CAAC,IAAKD,EAAGC,EAAIE,EAAI,EAAE,CACnB,CAAC,IAAKH,EAAIE,EAAGD,EAAIE,EAAE,CACtB,AACL,CA6BA,SAASC,EAAUJ,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAEC,CAAC,EACzB,OAAOJ,EAAMC,EAAGC,EAAGC,EAAI,EAAGC,EAC9B,CAyCA,SAASE,EAAaL,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAEC,CAAC,EAC5B,MAAO,CACH,CAAC,IAAKH,EAAIE,EAAGD,EAAE,CACf,CAAC,IAAKD,EAAGC,EAAIE,EAAI,EAAE,CACnB,CAAC,IAAKH,EAAIE,EAAGD,EAAIE,EAAE,CACnB,CAAC,IAAI,CACR,AACL,CA6BA,SAASG,EAAiBN,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAEC,CAAC,EAChC,OAAOE,EAAaL,EAAGC,EAAGC,EAAI,EAAGC,EACrC,CAUA,MAJmB,CACfI,QAlFJ,SAAiBC,CAAgB,EAC7B,IAAIC,EAAUD,EAAiBE,SAAS,CAACD,OAAO,AAChDA,CAAAA,EAAQV,KAAK,CAAGA,EAChBU,CAAO,CAAC,eAAe,CAAGJ,EAC1BI,CAAO,CAAC,oBAAoB,CAAGH,EAC/BG,CAAO,CAAC,aAAa,CAAGL,EACxBK,CAAO,CAAC,gBAAgB,CAAGJ,EAC3BI,CAAO,CAAC,qBAAqB,CAAGH,CACpC,CA2EA,CAGJ,GACAlB,EAAgBD,EAAU,sBAAuB,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUwB,CAAC,CAAEC,CAAC,EAWzH,IAAIC,EAAUD,EAAEC,OAAO,CAAEC,EAAQF,EAAEE,KAAK,CAAEC,EAAQH,EAAEG,KAAK,CAAEC,EAAaJ,EAAEI,UAAU,CAMhFC,EAAUN,EAAEM,OAAO,CAAEC,EAAMC,KAAKD,GAAG,CAAEE,EAAMD,KAAKC,GAAG,CA8UvD,OAvTgC,WAC5B,SAASC,EAAWC,CAAI,CAAEC,CAAE,CAAEC,CAAO,EACjC,IAAI,CAACC,IAAI,CAACH,EAAMC,EAAIC,EACxB,CAgRA,OAjQAH,EAAWX,SAAS,CAACe,IAAI,CAAG,SAAUH,CAAI,CAAEC,CAAE,CAAEC,CAAO,EACnD,IAAI,CAACE,SAAS,CAAGJ,EACjB,IAAI,CAACK,OAAO,CAAGJ,EACf,IAAI,CAACC,OAAO,CAAGA,EACf,IAAI,CAACI,KAAK,CAAGN,EAAKO,MAAM,CAACD,KAAK,CAC9B,IAAI,CAACE,UAAU,CAAG,IAAI,CAACF,KAAK,CAACE,UAAU,AAC3C,EAgBAT,EAAWX,SAAS,CAACqB,UAAU,CAAG,SAAUzC,CAAI,CAAE0C,CAAO,EACrD,IAAuBJ,EAAQ,IAAI,CAACA,KAAK,CAAEK,EAAaL,EAAMK,UAAU,CAAEH,EAAa,IAAI,CAACA,UAAU,CAAEI,EAAO,CAAC,EAC5GC,EAAcC,AADD,IAAI,CACQC,QAAQ,EAAID,AADxB,IAAI,CAC+BC,QAAQ,CAAC/C,IAAI,AAE5DwC,CAAAA,EAAWQ,KAAK,EACjBR,CAAAA,EAAWQ,KAAK,CAAGV,EAAMW,QAAQ,CAACC,CAAC,GAC9BC,QAAQ,CAAC,+BACTC,IAAI,CAAC,CAAEC,OAAQ,EAAG,GAClBC,GAAG,CAAChB,EAAMiB,WAAW,CAAA,EAK9Bf,EAAWQ,KAAK,CAACQ,SAAS,CAAClB,EAAMmB,QAAQ,CAAEnB,EAAMoB,OAAO,EAElDb,GAAeA,EAAYI,QAAQ,GACrCJ,EAAcP,EAAMW,QAAQ,CAACjD,IAAI,GAC5BsD,GAAG,CAACd,EAAWQ,KAAK,EACpBL,GACDE,EAAYO,IAAI,CAAC,CACbO,QAAS,CACb,IAIRd,EAAYO,IAAI,CAACV,GACjBE,EAAKgB,CAAC,CAAG5D,EACJ2C,GACDC,CAAAA,EAAKe,OAAO,CAAG,CAAA,EAEnBd,EAAYgB,OAAO,CAACjB,GAEpB,IAAI,CAACG,QAAQ,CAAG,IAAI,CAACA,QAAQ,EAAI,CAAC,EAClC,IAAI,CAACA,QAAQ,CAAC/C,IAAI,CAAG6C,CACzB,EAmBAd,EAAWX,SAAS,CAAC0C,SAAS,CAAG,SAAUC,CAAI,CAAE7B,CAAO,CAAElC,CAAI,EAC1D,IAGIgE,EAAcC,EAASC,EAAUC,EAAKC,EAAOC,EAAQC,EAAYC,EAH9CjC,EAAQQ,AAAd,IAAI,CAAqBV,SAAS,CAACG,MAAM,CAACD,KAAK,CAAEE,EAAaF,EAAME,UAAU,CAAES,EAAWX,EAAMW,QAAQ,CAAEuB,EAAST,AAAS,UAATA,EACjIjB,AADa,IAAI,CACNV,SAAS,CACpBU,AAFa,IAAI,CAENT,OAAO,CAAGoC,EAASD,EAAME,wBAAwB,CAACxC,EAE5DA,CAAAA,EAAQyC,OAAO,EAUhBJ,CAAAA,CALAA,EADAR,AAAS,UAATA,EACU/D,CAAI,CAAC,EAAE,CAGPA,CAAI,CAACA,EAAK4E,MAAM,CAAG,EAAE,GAEpBL,AAAe,MAAfA,CAAO,CAAC,EAAE,EAAYA,AAAe,MAAfA,CAAO,CAAC,EAAE,AAAO,IAClDD,EAAa,CACT5D,EAAG6D,CAAO,CAAC,EAAE,CACb5D,EAAG4D,CAAO,CAAC,EAAE,AACjB,EAGAN,EAAUO,EAAMK,kBAAkB,CAACP,EAAYG,GAC/CT,EAAeQ,EAAMM,eAAe,CAACb,EAAS/B,EAAQ6C,MAAM,CAAEN,GAM9DP,EAAW,CAACD,EAAUtC,EAClBO,EAAQkC,KAAK,EAAIlC,EAAQmC,MAAM,EAC/BD,EAAQlC,EAAQkC,KAAK,CACrBC,EAASnC,EAAQmC,MAAM,EAGvBD,EAAQC,EAASnC,AAAiB,EAAjBA,EAAQ6C,MAAM,CAGnCjC,AArCa,IAAI,CAqCNC,QAAQ,CAAGD,AArCT,IAAI,CAqCgBC,QAAQ,EAAI,CAAC,EAC9CoB,EAAM,CACFzD,EAAGsD,EAAatD,CAAC,CAAI0D,EAAQ,EAC7BzD,EAAGqD,EAAarD,CAAC,CAAI0D,EAAS,EAC9BD,MAAOA,EACPC,OAAQA,EACRH,SAAUA,EACVc,gBAAiBhB,EAAatD,CAAC,CAC/BuE,gBAAiBjB,EAAarD,CAAC,AACnC,EACKmC,AA/CQ,IAAI,CA+CDC,QAAQ,CAACgB,EAAK,CAqB1BjB,AApES,IAAI,CAoEFC,QAAQ,CAACgB,EAAK,CAACF,OAAO,CAACM,IAnBlCrB,AAjDS,IAAI,CAiDFC,QAAQ,CAACgB,EAAK,CAAGd,EACvBiC,MAAM,CAAChD,EAAQgD,MAAM,EACrB/B,QAAQ,CAAC,oCAAsCY,EAAtC,4BACa,IAAI,CAAC3B,SAAS,CAAC+C,UAAU,EAC/C/B,IAAI,CAACe,GACLb,GAAG,CAACd,EAAWQ,KAAK,EACpBC,EAASN,UAAU,EACpBG,AAxDK,IAAI,CAwDEC,QAAQ,CAACgB,EAAK,CAACX,IAAI,CAAC,CAC3BgC,KAAMlD,EAAQmD,KAAK,EAAIvC,AAzDtB,IAAI,CAyD6BV,SAAS,CAACiD,KAAK,CACjDC,OAAQpD,EAAQqD,SAAS,CACzB,eAAgBrD,EAAQsD,SAAS,CACjC7B,QAAS,CACb,GACKE,OAAO,CAAC,CACTF,QAAS,CACb,EAAGa,EAAMjC,MAAM,CAACL,OAAO,CAACuD,SAAS,GAOjD,EAaA1D,EAAWX,SAAS,CAACsE,OAAO,CAAG,SAAUxD,CAAO,EAC5C,IAAIM,EAAa,IAAI,CAACA,UAAU,CAAEF,EAAQ,IAAI,CAACA,KAAK,CAAEqD,EAAYnD,EAAWoD,UAAU,CAAC1D,EAAQ6B,IAAI,CAAC,CACjG8B,EAAiBrD,EAAWqD,cAAc,OAC9C,AAAI,AAAqB,YAArB,OAAOF,GACPnE,EAAM,IAAMU,EAAQ6B,IAAI,CAAG,oCACpB,CACH/D,KAAM,EAAE,CACR8F,UAAW,EAAE,AACjB,IAGAH,EAAUI,iBAAiB,EAAI,CAACF,IAChCA,EACIrD,EAAWqD,cAAc,CACrBrD,EAAWwD,iBAAiB,CAAC9D,GAGrCI,EAAMJ,OAAO,CAAC+D,UAAU,CAACC,eAAe,CACpChE,EAAQgE,eAAe,CAE3B1D,EAAW2D,oBAAoB,CAC3B3D,EAAW4D,kBAAkB,CAACP,IAG/BF,EAEP,IAAI,CAACvD,SAAS,CAACsC,wBAAwB,CAACxC,EAAQmE,WAAW,EAE3D,IAAI,CAAChE,OAAO,CAACqC,wBAAwB,CAACxC,EAAQoE,SAAS,EAAG7E,EAAM,CAC5DoE,eAAgBA,EAChBU,cAAe/D,EAAW+D,aAAa,EAAI,EAAE,CAC7CC,gBAAiBhE,EAAW2D,oBAAoB,CAChDM,WAAY,CACRC,KAAM,EACNC,KAAMrE,EAAMsE,SAAS,CACrBC,KAAM,EACNC,KAAMxE,EAAMyE,UAAU,AAC1B,EACAC,gBAAiB,CACbC,OAAQ/E,EAAQgE,eAAe,AACnC,EACAgB,gBAAiB1E,EAAW2E,0BAA0B,CAACjF,EAAQmE,WAAW,CAC9E,EAAGnE,IACP,EAMAH,EAAWX,SAAS,CAACgG,MAAM,CAAG,WAC1B,IAAuBhF,EAAYU,AAAlB,IAAI,CAAyBV,SAAS,CAAEG,EAASH,EAAUG,MAAM,CAAED,EAAQC,EAAOD,KAAK,CAAEE,EAAaF,EAAME,UAAU,CAAEE,EAAU,CAAC,EAChJR,EAAUT,EAAMa,EAAMJ,OAAO,CAAC+D,UAAU,CAAE1D,EAAOL,OAAO,CAAC+D,UAAU,CAAE7D,EAAUF,OAAO,CAAC+D,UAAU,CAAEnD,AADtF,IAAI,CAC6FZ,OAAO,CAErH,EAACI,EAAMK,UAAU,GACjBD,EAAQ4C,MAAM,CAAGpD,EAAQqD,SAAS,EAAInD,EAAUiD,KAAK,CACrD3C,CAAO,CAAC,eAAe,CAAGR,EAAQsD,SAAS,CACvCtD,EAAQmF,SAAS,EACjB3E,CAAAA,EAAQ4E,SAAS,CAAGpF,EAAQmF,SAAS,AAAD,GAG5C3E,EAAQ,KAAQ,CACZ,qDAC0BN,EAAU+C,UAAU,CAG7C5D,EAAQW,AAFbA,CAAAA,EAAUT,EAAMiB,EAASR,EAAO,EAEXqF,MAAM,CAACxC,MAAM,GAC9B7C,CAAAA,EAAQqF,MAAM,CAACxC,MAAM,CAAGjD,EAAIF,EAAIC,KAAK2F,IAAI,CAAC,AAACtF,CAAAA,EAAQgE,eAAe,EAAI,CAAA,EAAK,GAAK,EAAG,GAAI,EAAC,EAG5F,IAAIuB,EAAa3E,AAnBA,IAAI,CAmBO4C,OAAO,CAACxD,GAAUlC,EAAOyH,EAAWzH,IAAI,AAGhEyH,CAAAA,EAAW3B,SAAS,GACpBtD,EAAW+D,aAAa,CACpB/D,EAAW+D,aAAa,EAAI,EAAE,CAClC/D,EAAW+D,aAAa,CACpB/D,EAAW+D,aAAa,CAACmB,MAAM,CAACD,EAAW3B,SAAS,GAG5DhD,AA7BiB,IAAI,CA6BVL,UAAU,CAACzC,EAAM0C,GAE5BI,AA/BiB,IAAI,CA+BVgB,SAAS,CAAC,QAASrC,EAAMS,EAAQqF,MAAM,CAAErF,EAAQmE,WAAW,EAAGrG,GAC1E8C,AAhCiB,IAAI,CAgCVgB,SAAS,CAAC,MAAOrC,EAAMS,EAAQqF,MAAM,CAAErF,EAAQoE,SAAS,EAAGtG,EAC1E,EAMA+B,EAAWX,SAAS,CAACuG,OAAO,CAAG,WACvB,IAAI,CAAC5E,QAAQ,GACbrB,EAAW,IAAI,CAACqB,QAAQ,CAAE,SAAU6E,CAAG,EACnCA,EAAID,OAAO,EACf,GACA,OAAO,IAAI,CAAC5E,QAAQ,CAE5B,EACOhB,CACX,GAoCJ,GACAjC,EAAgBD,EAAU,sCAAuC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUwB,CAAC,CAAEC,CAAC,EAYzI,IAAIuG,EAAWxG,EAAEwG,QAAQ,CACrBC,EAAWxG,EAAEwG,QAAQ,CAAErG,EAAQH,EAAEG,KAAK,CAAEsG,EAAazG,EAAEyG,UAAU,CAAEC,EAAO1G,EAAE0G,IAAI,CAwBhFC,EAAiB,CACjB5C,MAAO,UACPjB,MAAO,EAIP8D,MAAO,CAUHC,OAAQ,sBACRC,UAAW,SAAUC,CAAK,CAAEF,CAAM,EAC9B,OAAO,IAAI,CAACG,IAAI,CAAChG,KAAK,CAACiG,IAAI,CAACC,UAAU,CAACL,GAAU,GAAIE,EACzD,EACAnE,SAAU,EAIVuE,MAAO,CAEHC,SAAU,OACd,CACJ,CACJ,EAmBA,SAASC,IACL,IAAIzG,EAAU,IAAI,CAACA,OAAO,CAAE0G,EAAa1G,EAAQ2G,oBAAoB,CACrE,GAAID,EAAY,CACZ,IAAIE,EAAkB,AAAsB,UAAtB,OAAOF,EACzBnH,EAAMwG,EAAgBW,GACtBnH,EAAMwG,EACVa,CAAAA,EAAgBT,KAAK,CAAGU,KAAKC,GAAG,GAChCF,EAAgBG,SAAS,CAAG,oCACvB/G,EAAQgH,SAAS,EAClBhH,CAAAA,EAAQgH,SAAS,CAAG,EAAE,AAAD,EAEzBhH,EAAQgH,SAAS,CAACC,IAAI,CAACL,EAC3B,CACJ,CAIA,SAASM,IAED,IAAI,CAAClB,KAAK,EACV,IAAI,CAACA,KAAK,CAAC9E,IAAI,CAAC,CACZiG,KAAM,IAAI,CAACC,YAAY,CAAC,IAAI,CAACpH,OAAO,CAACgG,KAAK,CAC9C,EAER,CAIA,SAASqB,EAA+BC,CAAa,CAAEC,CAAmB,EACtE,IAAIvH,EAAU,IAAI,CAACA,OAAO,QAC1B,AAAIA,GACAA,EAAQ+G,SAAS,EACjB/G,AAAmE,KAAnEA,EAAQ+G,SAAS,CAACS,OAAO,CAAC,sCAC1BxH,EAAQgG,KAAK,EACb,AAAmC,YAAnC,OAAOhG,EAAQgG,KAAK,CAACE,SAAS,EAC9BlG,EAAQmG,KAAK,CAAGU,KAAKC,GAAG,GACjB9G,EAAQgG,KAAK,CAACE,SAAS,CACzBuB,IAAI,CAAC,IAAI,CAAEzH,EAAQmG,KAAK,CAAEnG,EAAQgG,KAAK,CAACC,MAAM,GAEhDqB,EAAcG,IAAI,CAAC,IAAI,CAAEF,EACpC,CAUA,MAJ4B,CACxBxI,QAzDJ,SAAiB2I,CAAS,CAAEC,CAAmB,EACvC9B,EAAWF,EAAU,2BACrBC,EAAS8B,EAAW,kBAAmBjB,GACvCb,EAAS+B,EAAqB,SAAUT,GACxCpB,EAAK6B,EAAoBzI,SAAS,CAAE,eAAgBmI,GAE5D,CAoDA,CAGJ,GACAzJ,EAAgBD,EAAU,2BAA4B,CAACA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUiK,CAAK,CAAEC,CAAC,CAAEzI,CAAC,EAYvK,IACQ0I,EA0IGC,EA3IPC,EAAY,AAAC,IAAI,EAAI,IAAI,CAACA,SAAS,GAC/BF,EAAgB,SAAUpG,CAAC,CAAEuG,CAAC,EAI9B,MAAOH,AAHPA,CAAAA,EAAgBI,OAAOC,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAU3G,CAAC,CAAEuG,CAAC,EAAIvG,EAAE0G,SAAS,CAAGH,CAAG,GAC1E,SAAUvG,CAAC,CAAEuG,CAAC,EAAI,IAAK,IAAIK,KAAKL,EAAOC,OAAOhJ,SAAS,CAACjB,cAAc,CAACwJ,IAAI,CAACQ,EAAGK,IAAI5G,CAAAA,CAAC,CAAC4G,EAAE,CAAGL,CAAC,CAACK,EAAE,AAAD,CAAG,CAAA,EAC/E5G,EAAGuG,EAC5B,EACO,SAAUvG,CAAC,CAAEuG,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIM,UAAU,uBAAyBC,OAAOP,GAAK,iCAE7D,SAASQ,IAAO,IAAI,CAACC,WAAW,CAAGhH,CAAG,CADtCoG,EAAcpG,EAAGuG,GAEjBvG,EAAExC,SAAS,CAAG+I,AAAM,OAANA,EAAaC,OAAOS,MAAM,CAACV,GAAMQ,CAAAA,EAAGvJ,SAAS,CAAG+I,EAAE/I,SAAS,CAAE,IAAIuJ,CAAG,CACtF,GAEA1C,EAAiB8B,EAAE9B,cAAc,CACjC6C,EAAUxJ,EAAEwJ,OAAO,CAAErJ,EAAQH,EAAEG,KAAK,CAAEsJ,EAAQzJ,EAAEyJ,KAAK,CAerDd,EAA4B,SAAUe,CAAM,EAE5C,SAASf,IACL,OAAOe,AAAW,OAAXA,GAAmBA,EAAO5K,KAAK,CAAC,IAAI,CAAE6K,YAAc,IAAI,AACnE,CAiGA,OApGAf,EAAUD,EAAYe,GA0BtBf,EAAW7I,SAAS,CAACe,IAAI,CAAG,SAAU+I,CAAW,CAAEC,CAAQ,EACvD,IACIC,EADAC,EAAeH,EAAYI,KAAK,CAAEC,EAAeL,EAAYM,KAAK,AAGtEN,CAAAA,EAAYI,KAAK,CAAGJ,EAAYM,KAAK,CAAG,KAAK,EAC7C,IAAItJ,EAAUT,EAAM,CAAA,EAAM,CACtBa,MAAO,CACHyB,KAAM,OACV,EACA0H,MAAO,CACHpC,KAAM,EACV,EACAqC,OAAQ,CACJ/G,QAAS,CAAA,CACb,EACAgH,UAAW,CACPpJ,OAAQ,CAAEwB,KAAM,OAAQ,EAExByH,MAAO,CACHzH,KAAM,UACV,CACJ,CACJ,EAAGmH,EAEH,CACIU,QAAS,CAAA,CACb,EACAV,CAAAA,EAAYI,KAAK,CAAGD,EACpBH,EAAYM,KAAK,CAAGD,EAIpBrJ,EAAQoJ,KAAK,CAAG,AAAC,CAAA,AAACR,EAAQI,EAAYI,KAAK,EAEvCJ,EAAYI,KAAK,CADjB,CAACJ,EAAYI,KAAK,EAAI,CAAC,EAAG,CAAC,EAAE,AACb,EAAGO,GAAG,CAAC,SAAUR,CAAY,CAAES,CAAC,EAChD,IAAIC,EAAIC,EAAIC,EAIZ,OAHU,IAANH,GACAV,CAAAA,EAAkB,CAAA,EAEf3J,EAEP,CACIyK,KAAM,CACFC,YAAa,UACbxH,QAAS,CAAA,CACb,EACAyH,SAAU,AAAsJ,OAArJH,CAAAA,EAAK,AAAwF,OAAvFD,CAAAA,EAAK,AAAgC,OAA/BD,CAAAA,EAAK9D,EAAeqD,KAAK,AAAD,GAAeS,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGK,QAAQ,AAAD,GAAeJ,AAAO,KAAK,IAAZA,EAAgBA,EAAKX,EAAae,QAAQ,AAAD,GAAeH,AAAO,KAAK,IAAZA,GAAgBA,EACxLI,SAAUjB,CACd,EAEAC,EAEA,CACItH,KAAM,UACV,EACJ,GAEA7B,EAAQsJ,KAAK,CAAG,AAACT,EAAMG,EAAYM,KAAK,EAAI,CAAC,GAAIK,GAAG,CAAC,SAAUN,CAAY,EAAI,OAAO9J,EAEtF,CACIyK,KAAM,CACFC,YAAa,UACbxH,QAAS,CAAA,CACb,EACA2H,YAAa,GACbC,SAAU,CAAA,EAGVxI,KAAMwH,EAAaiB,UAAU,CAAGjB,EAAaxH,IAAI,CAAG,UACxD,EAEAwH,EAAe,GACfP,EAAO5J,SAAS,CAACe,IAAI,CAACwH,IAAI,CAAC,IAAI,CAAEzH,EAASiJ,EAC9C,EACOlB,CACX,EAAEH,GA0DF,MATIG,CA3COA,EA6CRA,GAAeA,CAAAA,EAAa,CAAC,CAAA,GAFjBwC,UAAU,CAHrB,SAAoBC,CAAC,CAAEvC,CAAC,CAAEwC,CAAC,EACvB,OAAO,IAAI1C,EAAWyC,EAAGvC,EAAGwC,EAChC,EAUG1C,CACX,GACAnK,EAAgBD,EAAU,+CAAgD,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUwB,CAAC,CAAEC,CAAC,EAUlJ,IAaIsL,EAbAC,EAAgBxL,EAAEwL,aAAa,CAC/B/E,EAAWxG,EAAEwG,QAAQ,CAAErG,EAAQH,EAAEG,KAAK,CAAEqL,EAAOxL,EAAEwL,IAAI,CAMrDC,EAAkB,EAAE,CAgCxB,SAASC,IACD,IAAI,CAACrB,SAAS,EAEd,IAAI,CAACA,SAAS,CAACsB,aAAa,CAAC,KAAM,CAAA,EAE3C,CAQA,SAASC,IAEL,IADInB,EAEAoB,EAAe7B,EAAOE,EADtBE,EAAS,IAAI,CAACA,MAAM,CAAEC,EAAY,IAAI,CAACA,SAAS,CAEpD,GAAIA,EAAW,CACXwB,EAAgBzB,GAAUA,EAAOxJ,OAAO,CACxCoJ,EAAQK,EAAUL,KAAK,CACvBE,EAAQG,EAAUH,KAAK,CACvB,IAAI4B,EAAkBzB,EAAUyB,eAAe,CAAEC,EAAmB1B,EAAU0B,gBAAgB,AAE1F,CAAA,IAAI,CAACC,QAAQ,EACb3B,EAAU4B,IAAI,CAAG5B,EAAUS,QAAQ,CAC/B,IAAI,CAACoB,UAAU,CAAGJ,EACdzB,EAAUtH,MAAM,CACpB,IAAI,CAACoJ,OAAO,CAAC,EAAE,CAAGL,EACtBzB,EAAU+B,GAAG,CAAG,IAAI,CAAChK,OAAO,CAAG2J,IAG/B1B,EAAU4B,IAAI,CAAGT,EAAKxB,EAAMiC,IAAI,CAAE,IAAI,CAAC9J,QAAQ,CAAG4J,GAClD1B,EAAU+B,GAAG,CAAG/B,EAAUgC,gBAAgB,CAACD,GAAG,EAC1C,IAAI,CAACE,WAAW,CACZjC,EAAUtH,MAAM,CAChB+I,EACC,CAAA,AAAC,CAAA,AAA0B,OAAzBrB,CAAAA,EAAK,IAAI,CAAC8B,SAAS,AAAD,GAAe9B,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG7J,OAAO,CAAC+E,MAAM,AAAD,GAAM,CAAA,EACnF,IAAI,CAACwG,OAAO,CAAC,EAAE,CACd,CAAA,IAAI,CAACK,aAAa,EAAI,IAAI,CAACC,iBAAiB,CACzC,IAAI,CAACD,aAAa,CAACE,SAAS,GAC5B,CAAA,EACH,CAAA,AAACb,GACEA,AAAgC,WAAhCA,EAAcc,aAAa,EAC3Bd,AAAyB,cAAzBA,EAAce,MAAM,EACpBf,EAAcxI,OAAO,EACrB,CAACwI,EAAcgB,QAAQ,CACvBzC,EAAO0C,YAAY,CACftB,EAAKK,EAAclG,MAAM,CAAE,IAC/B,CAAA,EACH,CAAA,IAAI,CAACoH,WAAW,CAAG,IAAI,CAACA,WAAW,CAAC,EAAE,CAAG,CAAA,GAElD/C,GAASE,IACL,IAAI,CAAC8B,QAAQ,CACbhC,EAAMpJ,OAAO,CAACqL,IAAI,CAAG/B,EAAMtJ,OAAO,CAACqL,IAAI,CAAG5B,EAAU4B,IAAI,CAGxDjC,EAAMpJ,OAAO,CAACwL,GAAG,CAAGlC,EAAMtJ,OAAO,CAACwL,GAAG,CAAG/B,EAAU+B,GAAG,CAEzDpC,EAAMgD,WAAW,GACjB9C,EAAM8C,WAAW,GAEzB,CACJ,CAKA,SAASC,EAAmBC,CAAK,EACzB,CAAC,IAAI,CAAC7C,SAAS,EAAI,CAAC,IAAI,CAAC8C,QAAQ,EAChC,CAAA,IAAI,CAACvM,OAAO,CAACyJ,SAAS,CAAChH,OAAO,EAC3B,IAAI,CAACzC,OAAO,CAAC2L,SAAS,CAAClJ,OAAO,AAAD,IACjC,IAAI,CAAC8J,QAAQ,CAAG,IAAI,CAAC9C,SAAS,CAAG,IAAIiB,EAAqB,IAAI,EAC1DE,EAAK0B,EAAME,MAAM,CAAE,CAAA,IACnB,IAAI,CAACA,MAAM,CAACF,EAAM/I,SAAS,EAGvC,CAKA,SAASkJ,IACL,IAAIzM,EAAU,IAAI,CAACA,OAAO,CACtBA,CAAAA,EAAQyJ,SAAS,CAAChH,OAAO,EACzBzC,EAAQ2L,SAAS,CAAClJ,OAAO,AAAD,GACxB,CAAA,IAAI,CAAC8J,QAAQ,CAAG,IAAI,CAAC9C,SAAS,CAAG,IAAIiB,EAAqB,IAAI,CAAA,CAEtE,CAOA,SAASgC,IACL,IAAIC,EAAe,IAAI,CAAC3M,OAAO,CAAEyJ,EAAYkD,EAAalD,SAAS,CAAEmC,EAAgBe,EAAaf,aAAa,CAC/G,GAAI,AAAC,CAAA,AAACnC,GAAaA,EAAUhH,OAAO,EAC/BmJ,GAAiBA,EAAcnJ,OAAO,GACtC,CAAA,AAAC,CAACkI,GACC,AAAsB,MAAtB,IAAI,CAACiC,OAAO,CAAC/K,IAAI,EAChB8I,GAAiB,AAA2B,MAA3B,IAAI,CAACiC,OAAO,CAACC,SAAS,AAAQ,EACpD,MAAO,CAAA,CAEf,CAIA,SAASC,EAAgB1M,CAAK,EAC1B,IAAIqJ,EAAYrJ,EAAMqJ,SAAS,CAE/B,GAAIA,GAAarJ,EAAMgJ,KAAK,CAAC,EAAE,CAAE,CAC7B,IAAI2D,EAAW3M,EAAMgJ,KAAK,CAAC,EAAE,CAAC4D,WAAW,GACzCvD,EAAUvE,MAAM,CAAC6H,EAASnN,GAAG,CAAEmN,EAASrN,GAAG,CAC/C,CACJ,CAKA,SAASuN,EAAcC,CAAC,EACpB,IAAIzB,EAAoByB,EAAElN,OAAO,CAACyJ,SAAS,EAAI,CAAC,EAAI0D,EAAoBD,EAAElN,OAAO,CAAC2L,SAAS,EAAI,CAAC,CAC5F,EAAC,IAAI,CAAClC,SAAS,EAAI,CAAC,IAAI,CAAC8C,QAAQ,EAChCd,CAAAA,EAAiBhJ,OAAO,EAAI0K,EAAiB1K,OAAO,AAAD,IACpDlD,EAAM,CAAA,EAAM,IAAI,CAACS,OAAO,CAACyJ,SAAS,CAAEgC,GACpClM,EAAM,CAAA,EAAM,IAAI,CAACS,OAAO,CAAC2L,SAAS,CAAEwB,GACpC,OAAOD,EAAElN,OAAO,CAACyJ,SAAS,CAC1B,OAAOyD,EAAElN,OAAO,CAAC2L,SAAS,CAElC,CAUA,MAJgC,CAC5B5M,QAxJJ,SAAiBqO,CAAU,CAAEC,CAAc,EACvC,GAAIjO,EAAEyG,UAAU,CAACgF,EAAiBuC,GAAa,CAC3C,IAAIE,EAAaF,EAAWlO,SAAS,CACrCwL,EAAuB2C,EACvBC,EAAWC,SAAS,CAACtG,IAAI,CAAC6F,GAC1BlH,EAASwH,EAAY,iBAAkBtC,GACvClF,EAASwH,EAAY,oBAAqBpC,GAC1CpF,EAASwH,EAAY,cAAef,GACpCzG,EAASwH,EAAY,eAAgBX,GACrC7G,EAASwH,EAAY,sBAAuBV,GAC5C9G,EAASwH,EAAY,SAAUH,EACnC,CACJ,CA6IA,CAGJ,GACArP,EAAgBD,EAAU,wCAAyC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUwB,CAAC,CAAEC,CAAC,EAU3I,IAAIuL,EAAgBxL,EAAEwL,aAAa,CAC/B/E,EAAWxG,EAAEwG,QAAQ,CAAE4H,EAAepO,EAAEoO,YAAY,CAAEnO,EAAUD,EAAEC,OAAO,CAAEoO,EAAWrO,EAAEqO,QAAQ,CAAE7C,EAAOxL,EAAEwL,IAAI,CASnH,SAAS8C,IAEAtH,AADM,IAAI,CACLuH,aAAa,EACnBvH,CAAAA,AAFO,IAAI,CAENuH,aAAa,CAAG,IAAIC,EAFlB,IAAI,CAEyC,CAE5D,CAOA,SAASC,EAAkBX,CAAC,EACxB,IACIY,EADa1N,EAAQgG,AAAd,IAAI,CAAehG,KAAK,CAAEuM,EAAevM,EAAMJ,OAAO,CAAEyJ,EAAYkD,EAAalD,SAAS,CAAEkE,EAAgBvH,AAA5G,IAAI,CAA6GuH,aAAa,CAAEd,EAAYzM,EAAMwM,OAAO,CAACC,SAAS,CAAEjB,EAAgBe,EAAaf,aAAa,CAAEmC,EAAW3N,EAAMwM,OAAO,CAAC/K,IAAI,CAEzP,GAAIuE,AAFO,IAAI,CAEN4H,OAAO,EACX,CAAA,AAACvE,CAAAA,MAAAA,EAA6C,KAAK,EAAIA,EAAUhH,OAAO,AAAD,GAAOmJ,CAAAA,MAAAA,EAAqD,KAAK,EAAIA,EAAcnJ,OAAO,AAAD,CAAC,GAElK,GAAIsL,AAAa,MAAbA,GAAoBb,AAAc,SAAdA,EAAEe,OAAO,CAC7BH,EAAS,CAAA,OAMR,GAAI,AAAC,CAAA,AAAe,SAAdZ,EAAEe,OAAO,EAAeF,AAAa,OAAbA,GAC9BpD,GAAiBkC,AAAc,OAAdA,CAAkB,GACpCzG,AAdG,IAAI,CAcFpG,OAAO,CAACkO,KAAK,CAAE,CACpB,IAAIC,EAAeR,EAAcQ,YAAY,CAEzC9O,EAAQ6N,EAAEtN,GAAG,EACb+N,EAAcQ,YAAY,CAAG,CAAC/H,AAlB/B,IAAI,CAkBgCxG,GAAG,CAAEwG,AAlBzC,IAAI,CAkB0C1G,GAAG,CAAC,CAG5CyO,IACLjB,EAAEtN,GAAG,CAAGuO,CAAY,CAAC,EAAE,CACvBjB,EAAExN,GAAG,CAAGyO,CAAY,CAAC,EAAE,CACvBR,EAAcQ,YAAY,CAAG,KAAK,EAE1C,EAEkB,KAAA,IAAXL,GACPZ,EAAEkB,cAAc,EAExB,CAUA,IAAIR,EAAwC,WAMxC,SAASA,EAAuBxH,CAAI,EAChC,IAAI,CAACA,IAAI,CAAGA,CAChB,CAoDA,OA3CAwH,EAAuB7O,OAAO,CAAG,SAAU2I,CAAS,EAC3CA,EAAU2G,SAAS,CAACC,QAAQ,CAAC,mBAC9B5G,EAAU2G,SAAS,CAACpH,IAAI,CAAC,iBACzBrB,EAAS8B,EAAW,OAAQgG,GAC5B9H,EAAS8B,EAAW,cAAemG,GAE3C,EASAD,EAAuB1O,SAAS,CAACuG,OAAO,CAAG,WACvC,IAAI,CAACW,IAAI,CAAG,KAAK,CACrB,EAQAwH,EAAuB1O,SAAS,CAACqP,YAAY,CAAG,SAAUC,CAAK,CAAEC,CAAK,CAAEC,CAAQ,CAAEC,CAAQ,EACtF,IAAIvI,EAAO,IAAI,CAACA,IAAI,CAAEwI,EAAiB,AAACxI,CAAAA,EAAKyI,UAAU,EAAI,CAAA,EAAK,EAC5DC,EAASlE,EAAK8D,EAAUtI,EAAK9E,SAAS,CAACkN,EAAO,CAAA,EAAM,CAACpI,EAAK2I,KAAK,GAAIC,EAASpE,EAAK+D,EAAUvI,EAAK9E,SAAS,CAACmN,EAAO,CAAA,EAAM,CAACrI,EAAK2I,KAAK,GAWtI,OATK1P,EAAQqP,IACTI,CAAAA,EAAStB,EAAasB,EAASF,EAAc,EAE5CvP,EAAQsP,IACTK,CAAAA,EAASxB,EAAawB,EAASJ,EAAc,EAE5CnB,EAASqB,IAAYrB,EAASuB,IAC/BF,CAAAA,EAASE,EAAS,KAAK,CAAA,EAEpB,CACHpP,IAAKkP,EACLpP,IAAKsP,CACT,CACJ,EACOpB,CACX,IAOA,OAAOA,CACX,GACAhQ,EAAgBD,EAAU,uCAAwC,CAACA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,gCAAgC,CAAC,CAAE,SAAUsR,CAAK,CAAEC,CAAc,EAU3K,IAAI/L,EAAQ8L,EAAME,KAAK,CACnBC,EAAcF,EAAeE,WAAW,CAuf5C,MAzewB,CAuDpBjN,OAAQ,GAOR4C,OAAQ,GAURsK,WAAY,CAAA,EAOZC,QAAS,CASLpN,MAAO,EASPC,OAAQ,GAqBRlD,QAAS,CAAC,mBAAoB,mBAAmB,CAMjDwD,QAAS,CAAA,EAUTa,UAAW,EAMXiM,gBAAiB,UAMjBtF,YAAa,SACjB,EAgBAuF,SAAUrM,EAAM,WAA0CsM,UAAU,CAAC,IAAKC,GAAG,GAW7EC,aAAc,UAadC,aAAc,EAkCdvP,OAAQ,CAeJwB,KAAO,AAAkC,KAAA,IAA3BuN,EAAYS,UAAU,CAChC,OACA,aAIJC,YAAa,IAIbxM,UAAW,EAIXyM,QAAS,KAITC,aAAc,CACVvN,QAAS,CAAA,CACb,EAcAwN,aAAc,CACVC,cAAe,UACfzN,QAAS,CAAA,EACT0N,gBAAiB,EAEjBC,YAAa,aACb7N,OAAQ,SACR8N,WAAY,YAEZC,MAAO,CACH,CAAC,cAAe,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAI,CAAC,CACzD,CAAC,SAAU,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAG,CAAC,CACjC,CAAC,SAAU,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAG,CAAC,CACjC,CAAC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,CAAC,CAChC,CAAC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAE,CAAC,CACrB,CAAC,OAAQ,CAAC,EAAG,EAAG,EAAE,CAAC,CACnB,CAAC,QAAS,CAAC,EAAG,EAAG,EAAE,CAAC,CACpB,CAAC,OAAQ,KAAK,CACjB,AACL,EAOAC,WAAY,CACR9N,QAAS,CAAA,EACTtB,OAAQ,CACZ,EACAqP,GAAI,8BACJzJ,UAAW,8BAaX1D,UAAW,KACXgC,OAAQ,CACJ5C,QAAS,CAAA,CACb,EAkBAgO,UAAW,IACf,EAqCArH,MAAO,CAuBHrC,UAAW,6BACX2J,WAAY,EACZpN,UAAW,EACXqN,cAAe,UACfC,cAAe,EACfC,kBAAmB,IACnBC,OAAQ,CACJC,MAAO,OAIPxK,MAAO,CAEHpD,MAAO,UAEPqD,SAAU,QAEV/E,QAAS,GAETuP,YAAa,cACjB,EACAxS,EAAG,EACHC,EAAG,EACP,EACAwS,UAAW,CAAA,CACf,EA0BA3H,MAAO,CACHvC,UAAW,6BACX6J,cAAe,EACfM,YAAa,CAAA,EACbC,UAAW,CAAA,EACXC,WAAY,GACZC,WAAY,GACZP,OAAQ,CACJrO,QAAS,CAAA,CACb,EACAwO,UAAW,CAAA,EACX1H,MAAO,CACHpC,KAAM,IACV,EACAuJ,WAAY,EACZY,UAAW,CACf,CACJ,CA0BJ,GACA1T,EAAgBD,EAAU,sCAAuC,EAAE,CAAE,WA4CjE,MAJuB,CACnB,mBAtBJ,SAAyB4T,CAAE,CAAEC,CAAE,CAAEtP,CAAK,CAAEC,CAAM,CAAEnC,CAAO,EACnC,KAAK,IAAjBA,GAAsBA,CAAAA,EAAU,CAAC,CAAA,EACrC,IAAIyR,EAAYzR,EAAQkC,KAAK,CAAGlC,EAAQkC,KAAK,CAAG,EAAIA,EAAOwP,EAAiB/R,KAAKgS,KAAK,CAACF,EAAY,GAAK,GAExG,MAAO,CACH,CAAC,IAAK,CAACA,EAAY,EAAG,GAAI,CAC1B,CAAC,IAAKA,EAAW,GAAI,CACrB,CAAC,IAAKA,EAAWtP,AAJrBA,CAAAA,EAASnC,EAAQmC,MAAM,EAAIA,CAAK,EAIF,GAAI,CAC9B,CAAC,IAAK,CAACsP,EAAY,EAAGtP,EAAS,GAAI,CACnC,CAAC,IAAK,CAACsP,EAAY,EAAG,GAAI,CAC1B,CAAC,IAAK,CAACC,EAAgB,EAAE,CACzB,CAAC,IAAK,CAACA,EAAgBvP,EAAS,EAAE,CAClC,CAAC,IAAKuP,EAAiB,EAAG,EAAE,CAC5B,CAAC,IAAKA,EAAiB,EAAGvP,EAAS,EAAE,CACxC,AACL,CAQA,CAGJ,GACAvE,EAAgBD,EAAU,oCAAqC,CAACA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUyB,CAAC,EAUvG,IAAIC,EAAUD,EAAEC,OAAO,CA8BvB,MAJqB,CACjBuS,cAZJ,SAAuB1D,CAAK,EACxB,IAAI9E,EAAQ,IAAI,CAACA,KAAK,CAAC,EAAE,AACrB/J,CAAAA,EAAQ+J,EAAMyI,OAAO,GACrBxS,EAAQ+J,EAAM0I,OAAO,GACrB5D,EACA,IAAI,CAAC6D,UAAU,CAAGpS,KAAKC,GAAG,CAACsO,EAAO9E,EAAMyI,OAAO,CAAGzI,EAAM0I,OAAO,EAG/D,IAAI,CAACC,UAAU,CAAG7D,CAE1B,CAGA,CAGJ,GACAtQ,EAAgBD,EAAU,0CAA2C,CAACA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,sCAAsC,CAAEA,CAAQ,CAAC,oCAAoC,CAAEA,CAAQ,CAAC,oCAAoC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUkK,CAAC,CAAE1I,CAAC,CAAEyO,CAAsB,CAAEoE,CAAiB,CAAEC,CAAgB,CAAEC,CAAgB,CAAEC,CAAc,CAAE/S,CAAC,EAUjgB,IAAIgT,EAAavK,EAAEuK,UAAU,CACzBzM,EAAWxG,EAAEwG,QAAQ,CACrB0M,EAAkBH,EAAiBG,eAAe,CAClDT,EAAgBO,EAAeP,aAAa,CAC5ChM,EAAWxG,EAAEwG,QAAQ,CAAE0M,EAASlT,EAAEkT,MAAM,CAAEzM,EAAazG,EAAEyG,UAAU,CA2BvE,SAAS0M,IACD,IAAI,CAACnS,KAAK,CAACqJ,SAAS,EAAI,CAAC,IAAI,CAACzJ,OAAO,CAACwS,UAAU,EAChD,IAAI,CAACpS,KAAK,CAACqJ,SAAS,CAACsB,aAAa,CAAC,KAAM,CAAA,EAEjD,CAUA,MAJ2B,CACvBhM,QAxBJ,SAAiBqO,CAAU,CAAE1F,CAAS,CAAE+K,CAAW,EAC/C7E,EAAuB7O,OAAO,CAAC2I,GAC3B7B,EAAWF,EAAU,eACrByH,EAAWlO,SAAS,CAAC0S,aAAa,CAAGA,EACrCU,EAAOD,IAAkBnT,SAAS,CAACD,OAAO,CAAEgT,GAC5CrM,EAAS6M,EAAa,cAAeF,GACrCH,EAAW,CAAE3I,UAAWuI,CAAkB,GAElD,CAiBA,CAGJ,GACApU,EAAgBD,EAAU,6BAA8B,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUwB,CAAC,CAAEC,CAAC,EAUhI,IAOIsT,EAPA/M,EAAWxG,EAAEwG,QAAQ,CACrBC,EAAWxG,EAAEwG,QAAQ,CAAEvG,EAAUD,EAAEC,OAAO,CAAEuL,EAAOxL,EAAEwL,IAAI,CAAE/E,EAAazG,EAAEyG,UAAU,CAiMxF,OA1LA,AAAC,SAAU6M,CAAa,EAMpB,IAAIC,EA2BJ,SAAS3F,EAAY5G,CAAI,EACrB,IAAIwM,EAAUhI,EAAKxE,EAAKpG,OAAO,EAAIoG,EAAKpG,OAAO,CAACJ,GAAG,CAAEwG,EAAKxG,GAAG,EACzDiT,EAAUjI,EAAKxE,EAAKpG,OAAO,EAAIoG,EAAKpG,OAAO,CAACN,GAAG,CAAE0G,EAAK1G,GAAG,EAC7D,MAAO,CACHkT,QAASA,EACTC,QAASA,EACTC,UAAWzT,EAAQ+G,EAAK0L,OAAO,EAC3BnS,KAAKC,GAAG,CAACgT,EAASxM,EAAKxG,GAAG,CAAEwG,EAAK0L,OAAO,CAAElH,EAAKxE,EAAKqK,SAAS,CAAEsC,MAAaH,EAChFI,UAAW3T,EAAQ+G,EAAKyL,OAAO,EAC3BlS,KAAKD,GAAG,CAACmT,EAASzM,EAAK1G,GAAG,CAAE0G,EAAKyL,OAAO,CAAEjH,EAAKxE,EAAKqK,SAAS,CAAE,CAACsC,MAAaF,CACrF,CACJ,CAKA,SAASI,IACL,IAAiBtH,EAAYvF,AAAlB,IAAI,CAAmBuF,SAAS,CAAEzB,EAAWyB,GAAa,CAACA,EAAU3L,OAAO,CAACkK,QAAQ,CAAEgJ,EAAQ9M,AAA/F,IAAI,CAAgG2I,KAAK,CAAG,EAAI7E,EAAW,EAAI,EACtIyB,IAEAvF,AAHO,IAAI,CAGNhG,KAAK,CAAC+S,iBAAiB,CAAG,CAAC,EAAG,EAAE,CACrC/M,AAJO,IAAI,CAINhG,KAAK,CAACgT,UAAU,CAACF,EAAM,EACxBvH,EAAU0H,IAAI,CAAI1H,CAAAA,EAAU3L,OAAO,CAAC+E,MAAM,EAAI,CAAA,EAE1D,CAKA,SAASuO,IACL,IAAIlN,EAAO,IAAI,AACXA,CAAAA,EAAKpG,OAAO,EACZoG,EAAKpG,OAAO,CAAC2L,SAAS,EACtBvF,EAAKpG,OAAO,CAAC2L,SAAS,CAAClJ,OAAO,GAE9B2D,EAAKpG,OAAO,CAAC2L,SAAS,CAAC4H,QAAQ,CAAG,CAACnN,EAAK2I,KAAK,CAC7C3I,EAAKpG,OAAO,CAACkR,WAAW,CAAG9K,EAAKpG,OAAO,CAACmR,SAAS,CAAG,CAAA,EACpD/K,EAAKuF,SAAS,CAAG,IAAIgH,EAAUvM,EAAKhG,KAAK,CAACW,QAAQ,CAAEqF,EAAKpG,OAAO,CAAC2L,SAAS,CAAEvF,EAAKhG,KAAK,EACtFwF,EAASQ,EAAKuF,SAAS,CAAE,UAAW,SAAUuB,CAAC,EAC3C,IACInN,EAAID,EADJ+J,EAAKmD,EAAY5G,GAAOwM,EAAU/I,EAAG+I,OAAO,CAAEC,EAAUhJ,EAAGgJ,OAAO,CAAEW,EAAY3J,EAAGiJ,SAAS,CAA4B5E,EAAQuF,AAAtB5J,EAAGmJ,SAAS,CAAsBQ,EAGhJ,GAAI,AAACnU,EAAQuT,IAAavT,EAAQwT,IAclC,GAXI,AAACzM,EAAK2I,KAAK,EAAI,CAAC3I,EAAKiE,QAAQ,EAC5B,CAACjE,EAAK2I,KAAK,EAAI3I,EAAKiE,QAAQ,EAC7BtK,EAAKyT,EAAYtF,EAAQ,IAAI,CAACnO,EAAE,CAChCD,EAAO0T,EAAYtF,EAAQ,IAAI,CAACpO,IAAI,GAKpCC,EAAKyT,EAAYtF,EAAS,CAAA,EAAI,IAAI,CAACpO,IAAI,AAAD,EACtCA,EAAO0T,EAAYtF,EAAS,CAAA,EAAI,IAAI,CAACnO,EAAE,AAAD,GAEtC,IAAI,CAAC2T,oBAAoB,CAACxG,EAAEyG,OAAO,EAAG,CAEtC,IAAIhS,EAAUuL,AAAc,cAAdA,EAAEyG,OAAO,EACnBzG,AAAc,cAAdA,EAAEyG,OAAO,EAA2B,KAAK,EAC7CvN,EAAKwN,WAAW,CAAC9T,EAAMC,EAAI,CAAA,EAAM4B,EAASuL,EAC9C,MAII,IAAI,CAAC2G,QAAQ,CAAC,IAAI,CAAC/T,IAAI,CAAE,IAAI,CAACC,EAAE,EAExC,GAER,CAKA,SAAS+T,IACL,IACIC,EAAcjU,EAAMC,EADP8J,EAAKmD,EAAX,IAAI,EAA0B8F,EAAYjJ,EAAGiJ,SAAS,CAAEE,EAAYnJ,EAAGmJ,SAAS,CAAErH,EAAYvF,AAA9F,IAAI,CAA+FuF,SAAS,CAAEqI,EAAU5N,AAAxH,IAAI,CAAyH6N,eAAe,CAAI7N,CAAAA,AAAhJ,IAAI,CAAiJ+F,WAAW,EAAI,CAAA,EAAKgH,EAAoB/M,AAA7L,IAAI,CAA8LhG,KAAK,CAAC+S,iBAAiB,CAAEe,EAAa9N,AAAxO,IAAI,CAAyOpG,OAAO,CAAC+E,MAAM,EAAI,EAE1Q,GAAI4G,GAAawH,EAAmB,CAChC,GAAI/M,AAHG,IAAI,CAGF2I,KAAK,CAEL3I,AALF,IAAI,CAKG8D,QAAQ,EACdiJ,CAAAA,CAAiB,CAAC,EAAE,EAAIa,CAAK,EAEjCrI,EAAUwI,QAAQ,CAAC/N,AARhB,IAAI,CAQiBiF,IAAI,CAAGjF,AAR5B,IAAI,CAQ6BoF,GAAG,CACnCpF,AATD,IAAI,CASEjE,MAAM,CACX,EACAgR,CAAiB,CAAC,EAAE,CACnB/M,CAAAA,AAZF,IAAI,CAYG8D,QAAQ,CAAGgK,EAAa,CAAA,EAAK9N,AAZpC,IAAI,CAYqClE,KAAK,CAAEkE,AAZhD,IAAI,CAYiDjE,MAAM,EAEzDiE,AAdF,IAAI,CAcG8D,QAAQ,EACdiJ,CAAAA,CAAiB,CAAC,EAAE,EAAIe,CAAS,EAErCH,EAAe,MAEd,CAEG3N,AArBD,IAAI,CAqBE8D,QAAQ,EACbiJ,CAAAA,CAAiB,CAAC,EAAE,EAAIa,CAAK,EAEjC,IAAII,EAAY,KAAK,EAKjBA,EAJCzI,EAAU3L,OAAO,CAACkK,QAAQ,CAIf9D,AA7Bb,IAAI,CA6BciF,IAAI,CACjBjF,AA9BL,IAAI,CA8BMlE,KAAK,CACV,EACAiR,CAAiB,CAAC,EAAE,CACnB/M,CAAAA,AAjCN,IAAI,CAiCO8D,QAAQ,CAAG,EAAIgK,CAAS,EAPtB9N,AA1Bb,IAAI,CA0Bc8D,QAAQ,CAAG,EAAIgK,EASpCvI,EAAUwI,QAAQ,CAACC,EAAWhO,AAnC3B,IAAI,CAmC4BoF,GAAG,CAAEpF,AAnCrC,IAAI,CAmCsClE,KAAK,CAAEkE,AAnCjD,IAAI,CAmCkDjE,MAAM,EAE3DiE,AArCD,IAAI,CAqCE8D,QAAQ,EACbiJ,CAAAA,CAAiB,CAAC,EAAE,EAAIe,CAAS,EAErCH,EAAe,CACnB,CACAZ,CAAiB,CAACY,EAAa,EAAIpI,EAAU0H,IAAI,CAC5C1H,CAAAA,EAAU3L,OAAO,CAAC+E,MAAM,EAAI,CAAA,EAC7BsP,MAAMvB,IACNuB,MAAMrB,IACN,CAAC3T,EAAQ+G,AA9CN,IAAI,CA8COxG,GAAG,GACjB,CAACP,EAAQ+G,AA/CN,IAAI,CA+CO1G,GAAG,GACjB0G,AAhDG,IAAI,CAgDFxG,GAAG,GAAKwG,AAhDV,IAAI,CAgDW1G,GAAG,CAKrBiM,EAAUkI,QAAQ,CAAC,EAAG,IAGtB/T,EAAQ,AAACsG,CAAAA,AAxDN,IAAI,CAwDOxG,GAAG,CAAGkT,CAAQ,EACvBE,CAAAA,EAAYF,CAAQ,EACzB/S,EAAM,AAACqG,CAAAA,AA1DJ,IAAI,CA0DK1G,GAAG,CAAGoT,CAAQ,EACrBE,CAAAA,EAAYF,CAAQ,EACrB,AAAC1M,AA5DF,IAAI,CA4DG2I,KAAK,EAAI,CAAC3I,AA5DjB,IAAI,CA4DkBiE,QAAQ,EAC5B,CAACjE,AA7DH,IAAI,CA6DI2I,KAAK,EAAI3I,AA7DjB,IAAI,CA6DkBiE,QAAQ,CAC7BsB,EAAUkI,QAAQ,CAAC/T,EAAMC,GAIzB4L,EAAUkI,QAAQ,CAAC,EAAI9T,EAAI,EAAID,GAG3C,CACJ,CAnJA4S,EAAc3T,OAAO,CARrB,SAAiB2I,CAAS,CAAE4M,CAAc,EAClCzO,EAAWF,EAAU,oBACrBgN,EAAY2B,EACZ1O,EAAS8B,EAAW,iBAAkBuL,GACtCrN,EAAS8B,EAAW,YAAa4L,GACjC1N,EAAS8B,EAAW,cAAeoM,GAE3C,CAqJJ,EAAGpB,GAAkBA,CAAAA,EAAgB,CAAC,CAAA,GAO/BA,CACX,GACA9U,EAAgBD,EAAU,uCAAwC,EAAE,CAAE,WA6NlE,MAxLwB,CAWpBwE,OAAQ,GAORoS,gBAAiB,EAOjBC,mBAAoB,EAMpBC,eAAgB,CAAA,EAsBhBC,WAAY,KAAK,EAQjB3P,OAAQ,KAAK,EAMb4P,SAAU,EAEVzK,SAAU,CAAA,EASV0K,KAAM,GAINzT,OAAQ,EASR0T,mBAAoB,UAOpBC,eAAgB,EAMhBC,eAAgB,UAShBC,iBAAkB,UASlBC,sBAAuB,UASvBC,kBAAmB,UAOnBC,kBAAmB,EAMnBC,WAAY,OASZC,qBAAsB,6BAStBC,iBAAkB,UAOlBC,kBAAmB,EAOnBC,iBAAkB,CACtB,CAQJ,GACA5X,EAAgBD,EAAU,+BAAgC,CAACA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,6BAA6B,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUkK,CAAC,CAAE1I,CAAC,CAAEuT,CAAa,CAAE+C,CAAiB,CAAErW,CAAC,EAU/R,IAAI2G,EAAiB8B,EAAE9B,cAAc,CACjCH,EAAWxG,EAAEwG,QAAQ,CAAE4H,EAAepO,EAAEoO,YAAY,CAAEnO,EAAUD,EAAEC,OAAO,CAAEqW,EAA0BtW,EAAEsW,uBAAuB,CAAEC,EAAYvW,EAAEuW,SAAS,CAAEpW,EAAQH,EAAEG,KAAK,CAAEqL,EAAOxL,EAAEwL,IAAI,CAAEgL,EAAcxW,EAAEwW,WAAW,CAkBpNjD,EAA2B,WAM3B,SAASA,EAAU5R,CAAQ,CAAEf,CAAO,CAAEI,CAAK,EAMvC,IAAI,CAACyV,OAAO,CAAG,EAAE,CACjB,IAAI,CAACC,MAAM,CAAG,EACd,IAAI,CAACC,MAAM,CAAG,EACd,IAAI,CAACjW,IAAI,CAAG,EACZ,IAAI,CAACkW,gBAAgB,CAAG,EAAE,CAC1B,IAAI,CAACC,aAAa,CAAG,EACrB,IAAI,CAACC,oBAAoB,CAAG,EAC5B,IAAI,CAACC,YAAY,CAAG,EACpB,IAAI,CAAC9C,IAAI,CAAG,EACZ,IAAI,CAACtT,EAAE,CAAG,EACV,IAAI,CAACyV,gBAAgB,CAAG,EACxB,IAAI,CAAChX,CAAC,CAAG,EACT,IAAI,CAACC,CAAC,CAAG,EACT,IAAI,CAACwB,IAAI,CAACc,EAAUf,EAASI,EACjC,CA+kBA,OAzkBAuS,EAAU5T,OAAO,CAAG,SAAU2I,CAAS,EACnCgL,EAAc3T,OAAO,CAAC2I,EAAWiL,EACrC,EAkBAA,EAAUyD,MAAM,CAAG,SAAUtY,CAAI,CAAEyV,CAAQ,EAcvC,OAbIA,GACAzV,EAAKuY,OAAO,CAAC,SAAUC,CAAG,EAGtB,IAAK,IADDC,EADAC,EAAMF,EAAI5T,MAAM,CAEXkH,EAAI,EAAGA,EAAI4M,EAAK5M,GAAK,EAEN,UAAhB,MADJ2M,CAAAA,EAAOD,CAAG,CAAC1M,EAAI,EAAE,AAAD,IAEZ0M,CAAG,CAAC1M,EAAI,EAAE,CAAG0M,CAAG,CAAC1M,EAAI,EAAE,CACvB0M,CAAG,CAAC1M,EAAI,EAAE,CAAG2M,EAGzB,GAEGzY,CACX,EAYA6U,EAAUzT,SAAS,CAACuX,SAAS,CAAG,WAC5B,IAAIC,EAAe,IAAI,CAAC1W,OAAO,CAACoL,QAAQ,CAAG,CAAC,EAAG,EAAE,CAAG,CAAC,EAAG,EAAE,CAAEuL,EAAU,IAAI,CAACX,gBAAgB,CAAEY,EAAM,IAAI,CAACC,cAAc,CAACC,OAAO,CAAEC,EAAQ,IAAI,CAACA,KAAK,CAACD,OAAO,CAAEE,EAAmB,IAAI,CAACA,gBAAgB,CAACC,IAAI,CAAC,IAAI,EAAGC,EAAmB,IAAI,CAACA,gBAAgB,CAACD,IAAI,CAAC,IAAI,EAAGE,EAAiB,IAAI,CAACA,cAAc,CAACF,IAAI,CAAC,IAAI,EAChTpB,EAAU,CAEV,CACIc,CAAO,CAACD,CAAY,CAAC,EAAE,CAAC,CAACI,OAAO,CAChC,QACA,IAAI,CAACM,gBAAgB,CAACH,IAAI,CAAC,IAAI,EAClC,CACD,CACIN,CAAO,CAACD,CAAY,CAAC,EAAE,CAAC,CAACI,OAAO,CAChC,QACA,IAAI,CAACO,gBAAgB,CAACJ,IAAI,CAAC,IAAI,EAClC,CACD,CAACF,EAAO,QAAS,IAAI,CAACO,UAAU,CAACL,IAAI,CAAC,IAAI,EAAE,CAC5C,CAACL,EAAK,YAAaI,EAAiB,CACpC,CAACJ,EAAIW,aAAa,CAAE,YAAaL,EAAiB,CAClD,CAACN,EAAIW,aAAa,CAAE,UAAWJ,EAAe,CAE9C,CAACP,EAAK,aAAcI,EAAiB,CACrC,CAACJ,EAAIW,aAAa,CAAE,YAAaL,EAAiB,CAClD,CAACN,EAAIW,aAAa,CAAE,WAAYJ,EAAe,CAClD,CAEDtB,EAAQQ,OAAO,CAAC,SAAUtY,CAAI,EAC1B6H,EAAS1H,KAAK,CAAC,KAAMH,EACzB,GACA,IAAI,CAAC8X,OAAO,CAAGA,CACnB,EACAlD,EAAUzT,SAAS,CAACmY,gBAAgB,CAAG,SAAUnK,CAAC,EAE9C,IAAIgB,EAAS,AAAC3B,CAAAA,AADC,IAAI,CACIxM,EAAE,CAAGwM,AADb,IAAI,CACkBzM,IAAI,AAAD,EACpC8K,EAAK2B,AAFM,IAAI,CAEDvM,OAAO,CAAC4U,IAAI,CAAE,IAChCrI,AAHe,IAAI,CAGViL,cAAc,CAACjL,AAHT,IAAI,CAGczM,IAAI,CAAGoO,EAAO3B,AAHhC,IAAI,CAGqCxM,EAAE,CAAGmO,GAC7DyH,EAJe,IAAI,CAIC,UAAW,CAC3B7V,KAAMyM,AALK,IAAI,CAKAzM,IAAI,CACnBC,GAAIwM,AANO,IAAI,CAMFxM,EAAE,CACfkO,QAAS,YACTwJ,SAAUvK,CACd,EACJ,EACAyF,EAAUzT,SAAS,CAACkY,gBAAgB,CAAG,SAAUlK,CAAC,EAE9C,IAAIgB,EAAQV,EAAajB,AADV,IAAI,CACexM,EAAE,CAAGwM,AADxB,IAAI,CAC6BzM,IAAI,EAChD8K,EAAK2B,AAFM,IAAI,CAEDvM,OAAO,CAAC4U,IAAI,CAAE,IAChCrI,AAHe,IAAI,CAGViL,cAAc,CAAChK,EAAajB,AAHtB,IAAI,CAG2BzM,IAAI,CAAGoO,GAAQV,EAAajB,AAH3D,IAAI,CAGgExM,EAAE,CAAGmO,IACxFyH,EAJe,IAAI,CAIC,UAAW,CAC3B7V,KAAMyM,AALK,IAAI,CAKAzM,IAAI,CACnBC,GAAIwM,AANO,IAAI,CAMFxM,EAAE,CACfkO,QAAS,YACTwJ,SAAUvK,CACd,EACJ,EAaAyF,EAAUzT,SAAS,CAACwY,yBAAyB,CAAG,SAAUC,CAAe,EACrE,IAAqB3X,EAAUuM,AAAhB,IAAI,CAAqBvM,OAAO,CAAE4X,EAAqB5X,EAAQ2U,QAAQ,CAAGpI,AAA1E,IAAI,CAA+EsL,eAAe,CAC7G7X,EAAQ2U,QAAQ,CAChB,EACJ,MAAO,CACHmB,OAAQ,AAAC6B,CAAAA,EAAgB7B,MAAM,CAAGvJ,AAJvB,IAAI,CAI4B/N,CAAC,CACxC+N,AALO,IAAI,CAKFuL,OAAO,AAAD,EACdvL,CAAAA,AANM,IAAI,CAMDwL,QAAQ,CAAGH,CAAiB,EAC1C7B,OAAQ,AAAC4B,CAAAA,EAAgB5B,MAAM,CAAGxJ,AAPvB,IAAI,CAO4B9N,CAAC,CACxC8N,AARO,IAAI,CAQFyL,OAAO,AAAD,EACdzL,CAAAA,AATM,IAAI,CASDwL,QAAQ,CAAGH,CAAiB,CAC9C,CACJ,EAOAjF,EAAUzT,SAAS,CAACuG,OAAO,CAAG,WAC1B,IAAI8G,EAAW,IAAI,CAAE9C,EAAY8C,EAASnM,KAAK,CAACmM,QAAQ,CAExDA,EAAS0L,YAAY,GAErB,CACI,QACA,kBACA,YACA,iBACA,QACH,CAAC5B,OAAO,CAAC,SAAU6B,CAAI,EAChB3L,CAAQ,CAAC2L,EAAK,EAAI3L,CAAQ,CAAC2L,EAAK,CAACzS,OAAO,EACxC8G,CAAAA,CAAQ,CAAC2L,EAAK,CAAG3L,CAAQ,CAAC2L,EAAK,CAACzS,OAAO,EAAC,CAEhD,GAEIgE,GAAa8C,IAAa9C,EAAUkC,SAAS,GAC7ClC,EAAUkC,SAAS,CAAG,KAEtB+J,EAAwBjM,EAAUuM,gBAAgB,EAE1D,EASArD,EAAUzT,SAAS,CAACiZ,mBAAmB,CAAG,SAAUjF,CAAK,EACrD,IAAqBnS,EAAWwL,AAAjB,IAAI,CAAsBxL,QAAQ,CAAEiV,EAAmBzJ,AAAvD,IAAI,CAA4DyJ,gBAAgB,CAAEhW,EAAUuM,AAA5F,IAAI,CAAiGvM,OAAO,CAAEqT,EAAO9G,AAArH,IAAI,CAA0H8G,IAAI,CAAEvS,EAAQC,EAASC,CAAC,GAAGI,GAAG,CAACmL,AAA7J,IAAI,CAAkKzL,KAAK,EAE1L,GADAkV,EAAiB/O,IAAI,CAACnG,GAClBd,EAAQyU,cAAc,CAAE,CAExB,IAAI2D,EAAOrX,EAASqX,IAAI,GACnBnX,QAAQ,CAAC,+BACTG,GAAG,CAACN,EAEJyL,CARM,IAAI,CAQDnM,KAAK,CAACK,UAAU,EAC1B2X,EAAKlX,IAAI,CAAC,CACNkC,OAAQpD,EAAQkV,iBAAiB,CACjC,eAAgBlV,EAAQmV,iBAAiB,CACzCjS,KAAMlD,EAAQiV,qBAAqB,AACvC,GAGJmD,EAAKlX,IAAI,CAACkX,EAAKC,KAAK,CAAC,CACjB7Z,EAAG,IACHC,EAAG,IAEHyD,MAAOmR,EAAO,EACdlR,OAAQkR,EAAO,EACfiF,EAAGtY,EAAQwU,kBAAkB,AACjC,EAAG4D,EAAKG,WAAW,KAEnB,IAAIha,EAAQwC,EACPjD,IAAI,CAAC6U,EAAUyD,MAAM,CAAC,CAAC,CACpB,IACA/C,EAAO,EAAKH,CAAAA,EAAQ,GAAK,CAAA,EACzBG,EAAO,EAAI,EACd,CAAE,CACC,IACAA,EAAO,EAAKH,CAAAA,EAAQ,GAAK,CAAA,EACzBG,EAAO,EAAI,EACd,CAAE,CACC,IACAA,EAAO,EAAKH,CAAAA,EAAQ,EAAI,EAAC,EACzBG,EAAO,EACV,CAAC,CAAErT,EAAQuT,QAAQ,GACnBtS,QAAQ,CAAC,8BACTG,GAAG,CAAC4U,CAAgB,CAAC9C,EAAM,CAC3B3G,CAzCM,IAAI,CAyCDnM,KAAK,CAACK,UAAU,EAC1BlC,EAAM2C,IAAI,CAAC,CACPgC,KAAMlD,EAAQgV,gBAAgB,AAClC,EAER,CACJ,EAQArC,EAAUzT,SAAS,CAACe,IAAI,CAAG,SAAUc,CAAQ,CAAEf,CAAO,CAAEI,CAAK,EAEzDmM,AADe,IAAI,CACVyJ,gBAAgB,CAAG,EAAE,CAC9BzJ,AAFe,IAAI,CAEVxL,QAAQ,CAAGA,EACpBwL,AAHe,IAAI,CAGVvD,WAAW,CAAGhJ,EACvBuM,AAJe,IAAI,CAIVvM,OAAO,CAAGT,EAAMkW,EAAmB1P,EAAe4F,SAAS,CAAE3L,GACtEuM,AALe,IAAI,CAKVvM,OAAO,CAAC+E,MAAM,CAAG6F,EAAK2B,AALhB,IAAI,CAKqBvM,OAAO,CAAC+E,MAAM,CAAE,IACxDwH,AANe,IAAI,CAMVnM,KAAK,CAAGA,EAEjBmM,AARe,IAAI,CAQV8G,IAAI,CAAGzI,EAAK2B,AARN,IAAI,CAQWvM,OAAO,CAACqT,IAAI,CAAE9G,AAR7B,IAAI,CAQkCvM,OAAO,CAACmC,MAAM,EAE/DnC,EAAQyC,OAAO,GACf8J,AAXW,IAAI,CAWNrH,MAAM,GACfqH,AAZW,IAAI,CAYNkK,SAAS,GAE1B,EACA9D,EAAUzT,SAAS,CAAC8X,gBAAgB,CAAG,SAAU9J,CAAC,EAE9C,IADIrD,EACiB8N,EAAkB,AAAC,CAAA,AAAkC,OAAjC9N,CAAAA,EAAK0C,AAA/B,IAAI,CAAoCnM,KAAK,CAACoY,OAAO,AAAD,GAAe3O,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG4O,SAAS,CAACvL,EAAC,GAAMA,EAAGwL,EAAgBnM,AAAnI,IAAI,CAAwImL,yBAAyB,CAACC,EACrLpL,CADe,IAAI,CACVuJ,MAAM,CAAG4C,EAAc5C,MAAM,CACtCvJ,AAFe,IAAI,CAEVwJ,MAAM,CAAG2C,EAAc3C,MAAM,CACtCxJ,AAHe,IAAI,CAGVoM,aAAa,CAAG,CAACpM,AAHX,IAAI,CAGgBzM,IAAI,CAAEyM,AAH1B,IAAI,CAG+BxM,EAAE,CAAC,CACrDwM,AAJe,IAAI,CAIVqM,aAAa,CAAG,CAAA,CAC7B,EAKAjG,EAAUzT,SAAS,CAACgY,gBAAgB,CAAG,SAAUhK,CAAC,EAE9C,IADIrD,EAG+BgP,EAFdlB,EAAkB,AAAC,CAAA,AAAkC,OAAjC9N,CAAAA,EAAK0C,AAA/B,IAAI,CAAoCnM,KAAK,CAACoY,OAAO,AAAD,GAAe3O,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG4O,SAAS,CAACvL,EAAC,GAAMA,EAA+B4L,EAAY9Y,AAA9BuM,AAA7H,IAAI,CAAkIvM,OAAO,CAAsBuT,QAAQ,CACtL,SAAW,SAAUoF,EAAgBpM,AAD1B,IAAI,CAC+BoM,aAAa,EAAI,EAAE,AAKjEpM,CANW,IAAI,CAMNqM,aAAa,EAErB,CAAA,CAAC1L,EAAE6L,OAAO,EAAI7L,AAA4B,IAA5BA,EAAE6L,OAAO,CAAC,EAAE,CAACD,EAAU,AAAK,IAG3CD,EAASG,AAFOzM,AATL,IAAI,CASUmL,yBAAyB,CAACC,EAAgB,CAACmB,EAAU,CAC7DvM,AAVN,IAAI,AAUU,CAACuM,EAAU,CAEpCvM,AAZW,IAAI,CAYN0M,UAAU,CAAG,CAAA,EACtB1M,AAbW,IAAI,CAaNiL,cAAc,CAACmB,CAAa,CAAC,EAAE,CAAGE,EAAQF,CAAa,CAAC,EAAE,CAAGE,GAClEtM,AAdO,IAAI,CAcF0M,UAAU,EACnBtD,EAfO,IAAI,CAeS,UAAW,CAC3B7V,KAAMyM,AAhBH,IAAI,CAgBQzM,IAAI,CACnBC,GAAIwM,AAjBD,IAAI,CAiBMxM,EAAE,CACfkO,QAAS,YACT0F,QAASzG,EAAErL,IAAI,CACf4V,SAAUvK,CACd,GAGZ,EAKAyF,EAAUzT,SAAS,CAACiY,cAAc,CAAG,SAAUjK,CAAC,EAExCX,AADW,IAAI,CACN0M,UAAU,EACnBtD,EAFW,IAAI,CAEK,UAAW,CAC3B7V,KAAMyM,AAHC,IAAI,CAGIzM,IAAI,CACnBC,GAAIwM,AAJG,IAAI,CAIExM,EAAE,CACfkO,QAAS,YACT0F,QAASzG,EAAErL,IAAI,CACf4V,SAAUvK,CACd,GAEJX,AAVe,IAAI,CAUVqM,aAAa,CAClBrM,AAXW,IAAI,CAWN0M,UAAU,CACf1M,AAZO,IAAI,CAYFuJ,MAAM,CACXvJ,AAbG,IAAI,CAaEwJ,MAAM,CAAG,IAClC,EAgBApD,EAAUzT,SAAS,CAACiV,QAAQ,CAAG,SAAU3V,CAAC,CAAEC,CAAC,CAAEyD,CAAK,CAAEC,CAAM,EACxD,IAAqBnC,EAAUuM,AAAhB,IAAI,CAAqBvM,OAAO,CAAEyU,EAAiBzU,EAAQyU,cAAc,CAAE5K,EAAK7J,EAAQ+E,MAAM,CAAEA,EAAS8E,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAI0J,EAAWvT,EAAQuT,QAAQ,CAAE2F,EAAS3M,AAAvK,IAAI,CAA4K4M,QAAQ,CAAG,UAAY,OAClNrB,EAAU3V,EAAQ6V,EAAU,EAEhCzL,AAHe,IAAI,CAGVzL,KAAK,CAACsY,IAAI,GACnB7M,AAJe,IAAI,CAIV/N,CAAC,CAAGA,EACb+N,AALe,IAAI,CAKV9N,CAAC,CAAGA,EAAI,IAAI,CAAC+W,gBAAgB,CACtCjJ,AANe,IAAI,CAMVrK,KAAK,CAAGA,EACjBqK,AAPe,IAAI,CAOVpK,MAAM,CAAGA,EAClBoK,AARe,IAAI,CAQVuL,OAAO,CAAGA,EACnBvL,AATe,IAAI,CASVyL,OAAO,CAAGA,EAEfzE,GACAhH,AAZW,IAAI,CAYNrK,KAAK,CAAGqK,AAZN,IAAI,CAYWyL,OAAO,CAAG9V,EAAQ8V,EAAUzL,AAZ3C,IAAI,CAYgD8G,IAAI,CACnE9G,AAbW,IAAI,CAaNuL,OAAO,CAAGA,EAAU,EAC7BvL,AAdW,IAAI,CAcNyL,OAAO,CAAGA,EAAUvD,EAAiBlI,AAdnC,IAAI,CAcwC8G,IAAI,CAAG,EAE9D9G,AAhBW,IAAI,CAgBNwL,QAAQ,CAAG5V,EAAUsS,CAAAA,EAAiBvS,AAAQ,EAARA,EAAY,CAAA,EAC3DqK,AAjBW,IAAI,CAiBN/N,CAAC,CAAGA,GAAQuG,IAGrBwH,AApBW,IAAI,CAoBNpK,MAAM,CAAGA,EAASoK,AApBhB,IAAI,CAoBqB8G,IAAI,CACxC9G,AArBW,IAAI,CAqBNuL,OAAO,CAAGA,EAAUrD,EAAiBlI,AArBnC,IAAI,CAqBwC8G,IAAI,CAAG,EAE9D9G,AAvBW,IAAI,CAuBNwL,QAAQ,CAAG7V,EAASuS,CAAAA,EAAiBtS,AAAS,EAATA,EAAa,CAAA,EAC3DoK,AAxBW,IAAI,CAwBN9N,CAAC,CAAG8N,AAxBF,IAAI,CAwBO9N,CAAC,CAAGsG,GAG9BwH,AA3Be,IAAI,CA2BVzL,KAAK,CAACoY,EAAO,CAAC,CACnBG,WAAY7a,EACZ8a,WAAY/M,AA7BD,IAAI,CA6BM9N,CAAC,AAC1B,GAEA8N,AAhCe,IAAI,CAgCVwK,KAAK,CAACmC,EAAO,CAAC,CACnBhX,MAAOA,EACPC,OAAQA,CACZ,GAEAoK,AArCe,IAAI,CAqCVyJ,gBAAgB,CAAC,EAAE,CAACkD,EAAO,CAAC,CACjCG,WAAY9F,EAAW,EAAIrR,EAAQ4V,EACnCwB,WAAY/F,EAAWpR,EAAS6V,EAAU,CAC9C,EACJ,EAOArF,EAAUzT,SAAS,CAAC+Y,YAAY,CAAG,WAC/B,IAAI,CAACpC,OAAO,CAACQ,OAAO,CAAC,SAAUtY,CAAI,EAC/B6X,EAAY1X,KAAK,CAAC,KAAMH,EAC5B,GACA,IAAI,CAAC8X,OAAO,CAACnT,MAAM,CAAG,CAC1B,EAOAiQ,EAAUzT,SAAS,CAACgG,MAAM,CAAG,WACzB,IAAqBnE,EAAWwL,AAAjB,IAAI,CAAsBxL,QAAQ,CAAEf,EAAUuM,AAA9C,IAAI,CAAmDvM,OAAO,CAAEqT,EAAO9G,AAAvE,IAAI,CAA4E8G,IAAI,CAAE5S,EAAa8L,AAAnG,IAAI,CAAwGnM,KAAK,CAACK,UAAU,CAAEK,EAAQC,EAASC,CAAC,CAAC,aAC3JE,IAAI,CAAC,CACNC,OAAQnB,EAAQmB,MAAM,AAC1B,GACKoY,IAAI,GACJnY,GAAG,EAERmL,CAPe,IAAI,CAOVzL,KAAK,CAAGA,EAEjByL,AATe,IAAI,CASVwK,KAAK,CAAGhW,EAASqX,IAAI,GACzBnX,QAAQ,CAAC,8BACTC,IAAI,CAAC,CACNoX,EAAGtY,EAAQuV,iBAAiB,EAAI,EAChCpT,OAAQkR,EACRnR,MAAOmR,CACX,GAAGjS,GAAG,CAACN,GACFL,GACD8L,AAjBW,IAAI,CAiBNwK,KAAK,CAAC7V,IAAI,CAAC,CAChBgC,KAAMlD,EAAQqV,oBAAoB,CAClCjS,OAAQpD,EAAQsV,gBAAgB,CAChC,eAAgBtV,EAAQwV,gBAAgB,AAC5C,GAEJ,IAAIA,EAAmBjJ,AAvBR,IAAI,CAuBaiJ,gBAAgB,CAC5CjJ,AAxBW,IAAI,CAwBNwK,KAAK,CAACwB,WAAW,GAC9BhM,AAzBe,IAAI,CAyBVwK,KAAK,CAAC7V,IAAI,CAAC,CAChB1C,EAAG,CAACgX,EAAmB,EAAI,EAC3B/W,EAAG,CAAC+W,EAAmB,EAAI,CAC/B,GAEAjJ,AA9Be,IAAI,CA8BVsK,cAAc,CAAG9V,EAASC,CAAC,GAAGI,GAAG,CAACN,GAC3CyL,AA/Be,IAAI,CA+BVZ,SAAS,CAAG5K,EAASqX,IAAI,GAC7BnX,QAAQ,CAAC,8BACTC,IAAI,CAAC,CACNiB,OAAQkR,EAAOmC,EACftT,MAAOmR,EAAOmC,EACd8C,EAAGtY,EAAQuU,eAAe,EAAI,CAClC,GAAGnT,GAAG,CAACmL,AArCQ,IAAI,CAqCHsK,cAAc,EAC9BtK,AAtCe,IAAI,CAsCViN,eAAe,CAAGzY,EACtBjD,IAAI,CAAC6U,EAAUyD,MAAM,CAAC,CACvB,CAAC,IAAK,GAAI/C,EAAO,EAAE,CACnB,CAAC,IAAK,GAAI,EAAIA,EAAO,EAAE,CACvB,CAAC,IAAK,EAAGA,EAAO,EAAE,CAClB,CAAC,IAAK,EAAG,EAAIA,EAAO,EAAE,CACtB,CAAC,IAAK,EAAGA,EAAO,EAAE,CAClB,CAAC,IAAK,EAAG,EAAIA,EAAO,EAAE,CACzB,CAAErT,EAAQuT,QAAQ,GACdtS,QAAQ,CAAC,+BACTG,GAAG,CAACmL,AAhDM,IAAI,CAgDDsK,cAAc,EAC3BpW,IACD8L,AAlDW,IAAI,CAkDNZ,SAAS,CAACzK,IAAI,CAAC,CACpBgC,KAAMlD,EAAQ6U,kBAAkB,CAChCzR,OAAQpD,EAAQ+U,cAAc,CAC9B,eAAgB/U,EAAQ8U,cAAc,AAC1C,GACAvI,AAvDW,IAAI,CAuDNiN,eAAe,CAACtY,IAAI,CAAC,CAC1BkC,OAAQpD,EAAQoV,UAAU,CAC1B,eAAgB,CACpB,IAEJ7I,AA5De,IAAI,CA4DV2J,oBAAoB,CAAG3J,AA5DjB,IAAI,CA4DsBZ,SAAS,CAAC4M,WAAW,GAC9DhM,AA7De,IAAI,CA6DVsK,cAAc,CAACvV,SAAS,CAAC,CAACiL,AA7DpB,IAAI,CA6DyB2J,oBAAoB,CAAG,EAAI,EAAG,CAAC3J,AA7D5D,IAAI,CA6DiE2J,oBAAoB,CAAG,EAAI,GAE/G3J,AA/De,IAAI,CA+DV4L,mBAAmB,CAAC,GAC7B5L,AAhEe,IAAI,CAgEV4L,mBAAmB,CAAC,EACjC,EAWAxF,EAAUzT,SAAS,CAAC2U,QAAQ,CAAG,SAAU/T,CAAI,CAAEC,CAAE,EAC7C,IAOI0Z,EAAQC,EAPS1Z,EAAUuM,AAAhB,IAAI,CAAqBvM,OAAO,CAAEuT,EAAWvT,EAAQuT,QAAQ,CAAEoB,EAAW3U,EAAQ2U,QAAQ,CAAEgF,EAAYpN,AAAxG,IAAI,CAA6GwL,QAAQ,CAAEmB,EAAS,AAAC,CAAA,IAAI,CAACC,QAAQ,EAC5J,IAAI,CAACF,UAAU,EACd,IAAI,CAAC7Y,KAAK,CAACqJ,SAAS,EAAI,IAAI,CAACrJ,KAAK,CAACqJ,SAAS,CAACwP,UAAU,CAAiB,OAAZ,UAClE,GAAK5Z,EAAQsa,IAGb,IAAIC,EAAOD,EAAYha,KAAKC,GAAG,CAACG,EAAI,GAGpC0Z,EAAS9Z,KAAK2F,IAAI,CAACqU,EADnB7Z,CAAAA,EAAOH,KAAKD,GAAG,CAACI,EAAM,EAAC,GAEvByM,AAVe,IAAI,CAUVsL,eAAe,CAAG6B,EAAUlM,EAAaoM,EAAOH,GAErDC,EAAU/E,IACV8E,EAAS,AAACE,CAAAA,EAAYhF,EAAW+E,CAAM,EAAK5Z,EAC5C4Z,EAAU/E,GAEd,IAAIkF,EAASla,KAAKma,KAAK,CAACL,EAASlN,AAhBlB,IAAI,CAgBuBuL,OAAO,CAAGvL,AAhBrC,IAAI,CAgB0CyL,OAAO,EAChE+B,EAAeL,EAAU,EAAI,EAEjCnN,CAnBe,IAAI,CAmBVzM,IAAI,CAAGA,EAChByM,AApBe,IAAI,CAoBVxM,EAAE,CAAGA,EACTwT,GAcDhH,AAnCW,IAAI,CAmCNsK,cAAc,CAACqC,EAAO,CAAC,CAC5BI,WAAYO,CAChB,GACAtN,AAtCW,IAAI,CAsCNZ,SAAS,CAACuN,EAAO,CAAC,CACvB/W,OAAQuX,CACZ,GACAnN,AAzCW,IAAI,CAyCNiN,eAAe,CAACN,EAAO,CAAC,CAC7BI,WAAYS,CAChB,GACAxN,AA5CW,IAAI,CA4CN4J,YAAY,CAAG0D,EACxBtN,AA7CW,IAAI,CA6CN0J,aAAa,CAAG,IAvBzB1J,AAtBW,IAAI,CAsBNsK,cAAc,CAACqC,EAAO,CAAC,CAC5BG,WAAYQ,CAChB,GACAtN,AAzBW,IAAI,CAyBNZ,SAAS,CAACuN,EAAO,CAAC,CACvBhX,MAAOwX,CACX,GACAnN,AA5BW,IAAI,CA4BNiN,eAAe,CAACN,EAAO,CAAC,CAC7BG,WAAYU,CAChB,GACAxN,AA/BW,IAAI,CA+BN0J,aAAa,CAAG4D,EACzBtN,AAhCW,IAAI,CAgCN4J,YAAY,CAAG,GAexBuD,GAAW,GACXnN,AAhDW,IAAI,CAgDNiN,eAAe,CAACD,IAAI,GAG7BhN,AAnDW,IAAI,CAmDNiN,eAAe,CAACJ,IAAI,GAGR,CAAA,IAArBpZ,EAAQga,QAAQ,GACZla,GAAQ,GAAKC,GAAM,EACnBwM,AAxDO,IAAI,CAwDFzL,KAAK,CAACyY,IAAI,GAGnBhN,AA3DO,IAAI,CA2DFzL,KAAK,CAACsY,IAAI,IAG3B7M,AA9De,IAAI,CA8DV4M,QAAQ,CAAG,CAAA,EACxB,EAQAxG,EAAUzT,SAAS,CAACwU,oBAAoB,CAAG,SAAUuG,CAAS,EAC1D,OAAQrP,EAAK,IAAI,CAAC5K,OAAO,CAAC0U,UAAU,CAAEvV,EAAE+a,GAAG,EACvC,CAAC/a,EAAEwL,aAAa,EAChB,CAAC,IAAI,CAACvK,KAAK,CAAC+Z,OAAO,GAEnBF,AAAc,YAAdA,GACAA,AAAc,aAAdA,GAEA,CAAC5a,EAAQ4a,EACjB,EACAtH,EAAUzT,SAAS,CAACoY,UAAU,CAAG,SAAUpK,CAAC,EAGxC,IAFIrD,EAEA8N,EAAkB,AAAC,CAAA,AAAkC,OAAjC9N,CAAAA,EAAK0C,AADd,IAAI,CACmBnM,KAAK,CAACoY,OAAO,AAAD,GAAe3O,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG4O,SAAS,CAACvL,EAAC,GAAMA,EAAGgB,EAAQ3B,AAD1G,IAAI,CAC+GxM,EAAE,CAAGwM,AADxH,IAAI,CAC6HzM,IAAI,CAAE0L,EAAMe,AAD7I,IAAI,CACkJ9N,CAAC,CAAG8N,AAD1J,IAAI,CAC+J4J,YAAY,CAAE9K,EAAOkB,AADxL,IAAI,CAC6L/N,CAAC,CAAG+N,AADrM,IAAI,CAC0M0J,aAAa,AACtO,AAAC1J,CAFU,IAAI,CAELvM,OAAO,CAACuT,QAAQ,EAAIoE,EAAgB5B,MAAM,CAAGvK,GACtD,CAACe,AAHS,IAAI,CAGJvM,OAAO,CAACuT,QAAQ,EAAIoE,EAAgB7B,MAAM,CAAGzK,EAExDkB,AALW,IAAI,CAKNiL,cAAc,CAACjL,AALb,IAAI,CAKkBzM,IAAI,CAAGoO,EAAO3B,AALpC,IAAI,CAKyCxM,EAAE,CAAGmO,GAI7D3B,AATW,IAAI,CASNiL,cAAc,CAACjL,AATb,IAAI,CASkBzM,IAAI,CAAGoO,EAAO3B,AATpC,IAAI,CASyCxM,EAAE,CAAGmO,GAEjEyH,EAXe,IAAI,CAWC,UAAW,CAC3B7V,KAAMyM,AAZK,IAAI,CAYAzM,IAAI,CACnBC,GAAIwM,AAbO,IAAI,CAaFxM,EAAE,CACfkO,QAAS,YACTwJ,SAAUvK,CACd,EACJ,EAQAyF,EAAUzT,SAAS,CAACkb,MAAM,CAAG,SAAUpa,CAAO,EAC1C,IAAI,CAACyF,OAAO,GACZ,IAAI,CAACxF,IAAI,CAAC,IAAI,CAACG,KAAK,CAACW,QAAQ,CAAExB,EAAM,CAAA,EAAM,IAAI,CAACS,OAAO,CAAEA,GAAU,IAAI,CAACI,KAAK,CACjF,EASAuS,EAAUzT,SAAS,CAACsY,cAAc,CAAG,SAAU1X,CAAI,CAAEC,CAAE,EAC/CA,EAAK,IACLD,EAAO0N,EAAa,EAAIA,EAAazN,EAAKD,IAC1CC,EAAK,GAELD,EAAO,IACPC,EAAKyN,EAAazN,EAAKD,GACvBA,EAAO,GAEX,IAAI,CAACA,IAAI,CAAGA,EACZ,IAAI,CAACC,EAAE,CAAGA,CACd,EAMA4S,EAAU5M,cAAc,CAAG0P,EACpB9C,CACX,IAaA,OAPA5M,EAAe4F,SAAS,CAAGpM,EAAM,CAAA,EAAMoT,EAAU5M,cAAc,CAAEA,EAAe4F,SAAS,EAOlFgH,CACX,GACA/U,EAAgBD,EAAU,+BAAgC,CAACA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,+CAA+C,CAAEA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,0CAA0C,CAAEA,CAAQ,CAAC,+BAA+B,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAU0c,CAAI,CAAEC,CAAyB,CAAEzS,CAAC,CAAE1I,CAAC,CAAEyO,CAAsB,CAAE2M,CAAoB,CAAE5H,CAAS,CAAEvT,CAAC,EAUxe,IAAI2G,EAAiB8B,EAAE9B,cAAc,CACjC4E,EAAgBxL,EAAEwL,aAAa,CAC/B/E,EAAWxG,EAAEwG,QAAQ,CAAE4U,EAAQpb,EAAEob,KAAK,CAAEhN,EAAepO,EAAEoO,YAAY,CAAEnO,EAAUD,EAAEC,OAAO,CAAEqW,EAA0BtW,EAAEsW,uBAAuB,CAAE+E,EAAQrb,EAAEqb,KAAK,CAAEnI,EAASlT,EAAEkT,MAAM,CAAEoI,EAAOtb,EAAEsb,IAAI,CAAE/E,EAAYvW,EAAEuW,SAAS,CAAE/M,EAAUxJ,EAAEwJ,OAAO,CAAE6E,EAAWrO,EAAEqO,QAAQ,CAAElO,EAAQH,EAAEG,KAAK,CAAEqL,EAAOxL,EAAEwL,IAAI,CAAEgL,EAAcxW,EAAEwW,WAAW,CAAE/M,EAAQzJ,EAAEyJ,KAAK,CAYzV,SAAS8R,EAAOC,CAAO,EAEnB,IAAK,IADD7c,EAAO,EAAE,CACJ8c,EAAK,EAAGA,EAAK9R,UAAUrG,MAAM,CAAEmY,IACpC9c,CAAI,CAAC8c,EAAK,EAAE,CAAG9R,SAAS,CAAC8R,EAAG,CAFhC,IAIIC,EAAU,EAAE,CAACC,MAAM,CAACtT,IAAI,CAAC1J,EAAM0P,GACnC,GAAIqN,EAAQpY,MAAM,CACd,OAAO/C,IAAI,CAACib,EAAQ,CAAC1c,KAAK,CAAC,EAAG4c,EAEtC,CAs1CA,OAt0C+B,WAM3B,SAASE,EAAU5a,CAAK,EACpB,IAAI,CAAC8K,eAAe,CAAG,EACvB,IAAI,CAACjL,IAAI,CAACG,EACd,CAqzCA,OA/yCA4a,EAAUjc,OAAO,CAAG,SAAUqO,CAAU,CAAE1F,CAAS,CAAE+K,CAAW,EAC5D6H,EAA0Bvb,OAAO,CAACqO,EAAY4N,GAC9CT,EAAqBxb,OAAO,CAACqO,EAAY1F,EAAW+K,EACxD,EAwBAuI,EAAU9b,SAAS,CAAC+b,UAAU,CAAG,SAAUzc,CAAC,CAAE0U,CAAK,CAAE9H,CAAQ,CAAE8P,CAAI,EAC/D,IAAsB/Y,EAASsH,AAAf,IAAI,CAAqBgC,gBAAgB,CAAC6D,OAAO,CAACnN,MAAM,CAExEsH,AAFgB,IAAI,CAEV6F,OAAO,CAAC4D,EAAM,CAACgI,EAAK,CAAC9P,EAAW,CACtCiO,WAAY1Z,KAAKgS,KAAK,CAAClI,AAHX,IAAI,CAGiB4B,IAAI,CAAG5B,AAH5B,IAAI,CAGkCtH,MAAM,CAAG,GAC3DmX,WAAY3Z,KAAKgS,KAAK,CAAClI,AAJX,IAAI,CAIiB+B,GAAG,CAAG2P,SAAS3c,EAAG,IAAM,GAAM2D,EACnE,EAAI,CACAkX,WAAY1Z,KAAKgS,KAAK,CAAClI,AANX,IAAI,CAMiB4B,IAAI,CAAG8P,SAAS3c,EAAG,KACpD8a,WAAY3Z,KAAKgS,KAAK,CAAClI,AAPX,IAAI,CAOiB+B,GAAG,CAAG/B,AAP3B,IAAI,CAOiCtH,MAAM,CAAG,EAAIA,EAAS,EAAI,EAC/E,EACJ,EAmBA6Y,EAAU9b,SAAS,CAACkc,WAAW,CAAG,SAAUC,CAAS,CAAEC,CAAS,CAAElQ,CAAQ,CAAE8P,CAAI,EAC5E,IAE2BK,EAAazd,EAFlBuR,EAAa5F,AAAnB,IAAI,CAAyBgC,gBAAgB,CAAC4D,UAAU,CAAEO,EAAenG,AAAzE,IAAI,CAA+E+R,OAAO,CAACjD,WAAW,GAAIkD,EAAc7L,EAAe,EAAG8L,EAAoB,AAAC9L,EAAe,EAAK,EACnMzE,EAAmB1B,AADH,IAAI,CACS0B,gBAAgB,CAAEwQ,EAAgBlS,AAD/C,IAAI,CACqD4J,IAAI,CAAEuI,EAAenS,AAD9E,IAAI,CACoF+B,GAAG,CAAErJ,EAASsH,AADtG,IAAI,CAC4GtH,MAAM,CAAE0Z,EAAUD,EAAeH,EAAaK,EAAUF,EAAezZ,EACnMkJ,EAAO5B,AAFK,IAAI,CAEC4B,IAAI,CACrBD,GACAmQ,EAAcK,EAAeN,EAAYI,EACzCJ,EAAYM,EAAeP,EAAYK,EACvC5d,EAAO,CACH,CACI,IACAuN,EAAOlJ,EACPyZ,EAAezQ,EAAmBuQ,EACrC,CAED,CAAC,IAAKrQ,EAAOlJ,EAAQoZ,EAAY,CACjC,CAAC,IAAKlQ,EAAMkQ,EAAY,CACxB,CAAC,IAAKlQ,EAAMiQ,EAAU,CACtB,CAAC,IAAKjQ,EAAOlJ,EAAQmZ,EAAU,CAC/B,CACI,IACAjQ,EAAOlJ,EACPyZ,EAAeD,EAAgBxQ,EAClC,CACJ,CACGkE,GACAvR,EAAKmJ,IAAI,CAET,CAAC,IAAKoE,EAAOlJ,EAAQoZ,EAAcE,EAAY,CAE/C,CACI,IACApQ,EAAOlJ,EACPmZ,EAAYG,EACf,IAILpQ,GAAQF,EACRkQ,GAAahQ,EAAOF,EAAmBuQ,EACvCJ,GAAajQ,EAAOF,EAAmBuQ,EACvC5d,EAAO,CAEH,CAAC,IAAKuN,EAAMwQ,EAAQ,CAEpB,CAAC,IAAKR,EAAWQ,EAAQ,CAEzB,CAAC,IAAKR,EAAWS,EAAQ,CAEzB,CAAC,IAAKR,EAAWQ,EAAQ,CAEzB,CAAC,IAAKR,EAAWO,EAAQ,CAEzB,CACI,IACAxQ,EAAOsQ,EAAgBxQ,AAAmB,EAAnBA,EACvByQ,EAAeH,EAClB,CACJ,CACGpM,GACAvR,EAAKmJ,IAAI,CAET,CAAC,IAAKoU,EAAYI,EAAaI,EAAQ,CAEvC,CAAC,IAAKP,EAAYG,EAAaI,EAAQ,GAG/CpS,AAjEgB,IAAI,CAiEV+R,OAAO,CAACN,EAAK,CAAC,CACpBxZ,EAAG5D,CACP,EACJ,EAmBAkd,EAAU9b,SAAS,CAAC6c,SAAS,CAAG,SAAUV,CAAS,CAAEC,CAAS,CAAElQ,CAAQ,CAAE8P,CAAI,EAC1E,IACI/Y,EAAQD,EAAO1D,EAAGC,EADA4M,EAAO5B,AAAb,IAAI,CAAmB4B,IAAI,CAAEG,EAAM/B,AAAnC,IAAI,CAAyC+B,GAAG,CAAEwQ,EAAkBvS,AAApE,IAAI,CAA0EtH,MAAM,CAIhGiJ,GACA5M,EAAI,CAAC6M,EAAMA,EAAMA,EAAK,CACtB5M,EAAI,CAAC+M,EAAKA,EAAM6P,EAAW7P,EAAM8P,EAAU,CAC3CpZ,EAAQ,CAAC8Z,EAAiBA,EAAiBA,EAAgB,CAC3D7Z,EAAS,CACLkZ,EACAC,EAAYD,EACZ5R,AAXQ,IAAI,CAWF4J,IAAI,CAAGiI,EACpB,GAGD9c,EAAI,CAAC6M,EAAMA,EAAOgQ,EAAWhQ,EAAOiQ,EAAU,CAC9C7c,EAAI,CAAC+M,EAAKA,EAAKA,EAAI,CACnBtJ,EAAQ,CACJmZ,EACAC,EAAYD,EACZ5R,AApBQ,IAAI,CAoBF4J,IAAI,CAAGiI,EACpB,CACDnZ,EAAS,CAAC6Z,EAAiBA,EAAiBA,EAAgB,EAEhEvS,AAxBgB,IAAI,CAwBVwS,MAAM,CAAC5F,OAAO,CAAC,SAAU6F,CAAK,CAAEtS,CAAC,EACvCsS,CAAK,CAAChB,EAAK,CAAC,CACR1c,EAAGA,CAAC,CAACoL,EAAE,CACPnL,EAAGA,CAAC,CAACmL,EAAE,CACP1H,MAAOA,CAAK,CAAC0H,EAAE,CACfzH,OAAQA,CAAM,CAACyH,EAAE,AACrB,EACJ,EACJ,EAeAoR,EAAU9b,SAAS,CAACid,cAAc,CAAG,WACjC,IAAI1S,EAAY,IAAI,CAAEgC,EAAmBhC,EAAUgC,gBAAgB,CAAE4D,EAAa5D,EAAiB4D,UAAU,CAAEjP,EAAQqJ,EAAUrJ,KAAK,CAAEgL,EAAWhL,EAAMgL,QAAQ,CAAErK,EAAWX,EAAMW,QAAQ,CAAEqb,EAAc,CACxMC,OAAQjR,EAAW,YAAc,WACrC,EAEAkR,EAAiB7S,EAAU6S,cAAc,CAAGvb,EACvCC,CAAC,CAAC,aACFE,IAAI,CAAC,CACNC,OAAQ,EACRob,WAAY,QAChB,GACKnb,GAAG,GAkCR,GAhCA,CACI,CAACiO,EACDA,EACA,CAACA,EACJ,CAACgH,OAAO,CAAC,SAAUmG,CAAO,CAAEtJ,CAAK,EAC9B,IAAIgJ,EAAQnb,EAASqX,IAAI,GACpBnX,QAAQ,CAAC,4BACTiS,CAAAA,AAAU,IAAVA,EAAc,UAAY,UAAS,GACnC9R,GAAG,CAACkb,EACJlc,CAAAA,EAAMK,UAAU,GACjByb,EAAMhb,IAAI,CAAC,CACPgC,KAAMsZ,EACF/Q,EAAiB+D,QAAQ,CACzB,eACR,GACc,IAAV0D,GACAgJ,EAAMO,GAAG,CAACL,IAGlB3S,EAAUwS,MAAM,CAAC/I,EAAM,CAAGgJ,CAC9B,GAEAzS,EAAU+R,OAAO,CAAGza,EAASjD,IAAI,GAC5BmD,QAAQ,CAAC,gCACTG,GAAG,CAACkb,GACJlc,EAAMK,UAAU,EACjBgJ,EAAU+R,OAAO,CAACta,IAAI,CAAC,CACnB,eAAgBuK,EAAiBmE,YAAY,CAC7CxM,OAAQqI,EAAiBkE,YAAY,AACzC,GAGAlE,EAAiB6D,OAAO,EAAI7D,EAAiB6D,OAAO,CAAC7M,OAAO,CAAE,CAC9D,IAAIia,EAAmBjR,EAAiB6D,OAAO,CAAEqN,EAAWD,EAAiBva,MAAM,CAAEya,EAAUF,EAAiBxa,KAAK,CACrH,CAAC,EAAG,EAAE,CAACmU,OAAO,CAAC,SAAUnD,CAAK,EAC1BzJ,EAAU6F,OAAO,CAAC4D,EAAM,CAAGnS,EAASiC,MAAM,CAAC0Z,EAAiBzd,OAAO,CAACiU,EAAM,CAAE,CAAC0J,EAAU,EAAI,EAAG,EAAGA,EAASD,EAAUD,GAChHtc,EAAMgL,QAAQ,EACd3B,EAAU6F,OAAO,CAAC4D,EAAM,CAAChS,IAAI,CAAC,CAC1Bc,SAAU,GACVc,gBAAiBnD,KAAKma,KAAK,CAAC,CAAC8C,EAAU,GACvC7Z,gBAAiB,AAAC4Z,CAAAA,EAAWC,CAAM,EAAK,CAC5C,GAIJnT,EAAU6F,OAAO,CAAC4D,EAAM,CAAChS,IAAI,CAAC,CAAEC,OAAQ,EAAI+R,CAAM,GAC7CjS,QAAQ,CAAC,2DAEV,CAAC,OAAQ,QAAQ,CAACiS,EAAM,EAAE9R,GAAG,CAACkb,GAC7Blc,EAAMK,UAAU,EACjBgJ,EAAU6F,OAAO,CAAC4D,EAAM,CACnBhS,IAAI,CAAC,CACNgC,KAAMwZ,EAAiBnN,eAAe,CACtCnM,OAAQsZ,EAAiBzS,WAAW,CACpC,eAAgByS,EAAiBpZ,SAAS,AAC9C,GACKmZ,GAAG,CAACL,EAEjB,EACJ,CACJ,EAUApB,EAAU9b,SAAS,CAACkb,MAAM,CAAG,SAAUpa,CAAO,EAE1C,AAAC,CAAA,IAAI,CAACK,MAAM,EAAI,EAAE,AAAD,EAAGgW,OAAO,CAAC,SAAUhW,CAAM,EACpCA,EAAOwc,UAAU,EACjB,OAAOxc,EAAOwc,UAAU,CAACC,eAAe,AAEhD,GAEA,IAAI,CAACrX,OAAO,GAEZlG,EAAM,CAAA,EAAMoN,AADO,IAAI,CAACvM,KAAK,CAACJ,OAAO,CACZyJ,SAAS,CAAEzJ,GACpC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACG,KAAK,CACxB,EAeA4a,EAAU9b,SAAS,CAACgG,MAAM,CAAG,SAAUtF,CAAG,CAAEF,CAAG,CAAE8O,CAAK,CAAEC,CAAK,EACzD,IACIsO,EAAgB9G,EAAeE,EAA2DwF,EAAeT,EADvF9a,EAAQqJ,AAAd,IAAI,CAAoBrJ,KAAK,CAAEgJ,EAAQK,AAAvC,IAAI,CAA6CL,KAAK,CAAEyF,EAAazF,EAAMyF,UAAU,EAAI,EAAGmO,EAAiB5T,EAAMuE,aAAa,CAACsP,IAAI,CAAG7c,EAAMgJ,KAAK,CAAC,EAAE,CAAGA,EAAO8T,EAAmBzT,AAAnL,IAAI,CAAyLyT,gBAAgB,CAAE/D,EAAW1P,AAA1N,IAAI,CAAgO0P,QAAQ,CAAE/N,EAAWhL,EAAMgL,QAAQ,CAAE+R,EAAW/c,EAAMgJ,KAAK,CAAC,EAAE,CAAC+T,QAAQ,CAAEC,EAAWhd,EAAMgJ,KAAK,CAAC,EAAE,CAACpJ,OAAO,CAACod,QAAQ,CAAEjS,EAAmB1B,AAA5W,IAAI,CAAkX0B,gBAAgB,CACrWD,EAAkBzB,AADnD,IAAI,CACyDyB,eAAe,CAE5F,GAAI,CAAA,IAAI,CAAC+N,UAAU,EAAK5Z,EAAQmP,IAMhC,GAHA5O,EAAM4N,EAAa5N,EAAMiP,EAAa,GACtCnP,EAAM8N,EAAa9N,EAAMmP,EAAa,GAElC,CAACpB,EAAS7N,IAAQ,CAAC6N,EAAS/N,GAAM,CAGlC,IAAIyZ,EAKA,OAJA3K,EAAQ,EACRC,EAAQ7D,EAAKxB,EAAMlH,KAAK,CAAE8a,EAAe9a,KAAK,CAKtD,CACAuH,AApBgB,IAAI,CAoBV4B,IAAI,CAAGT,EAAKxB,EAAMiC,IAAI,CAEhCjL,EAAMmB,QAAQ,CAAG4J,EACZC,CAAAA,EAAWhL,EAAMsE,SAAS,CAAG,CAAA,GAClC,IAAI4W,EAAY7R,AAxBA,IAAI,CAwBM4J,IAAI,CAAGsI,EAAgB/Q,EAAKxB,EAAMoN,GAAG,CAAE,AAACpL,CAAAA,EAAWhL,EAAMyE,UAAU,CAAGzE,EAAMsE,SAAS,AAAD,EAC1G,EAAIyG,GAEJ4R,EADA3R,EACiBF,EAGAyQ,EAAgB,EAAIxQ,EAGzCqD,EAAQ5D,EAAK4D,EAAOpF,EAAMiU,QAAQ,CAACzd,EAAK,CAAA,IACxC6O,EAAQ7D,EAAK6D,EAAOrF,EAAMiU,QAAQ,CAAC3d,EAAK,CAAA,IAEnC+N,EAASe,IAAU7O,KAAK2d,GAAG,CAAC9O,KAAWuE,MACxCvE,EAAQ,EACRC,EAAQsO,GAGZ,IAAIjO,EAAS1F,EAAMmU,OAAO,CAAC/O,EAAO,CAAA,GAAOQ,EAAS5F,EAAMmU,OAAO,CAAC9O,EAAO,CAAA,GAAO+O,EAAe7d,KAAK2d,GAAG,CAAC9P,EAAawB,EAASF,GACxH0O,CAAAA,EAAeL,EACX,IAAI,CAACM,WAAW,CAChBjP,EAAQpF,EAAMiU,QAAQ,CAACrO,EAASmO,EAAWtO,EAAY,CAAA,GAElD,IAAI,CAAC6O,YAAY,EACtBjP,CAAAA,EAAQrF,EAAMiU,QAAQ,CAACvO,EAASqO,EAAWtO,EAAY,CAAA,EAAI,EAG1DxP,EAAQ+d,IACb5P,EAAagQ,EAAe3O,GAAcuO,IACtC,IAAI,CAACK,WAAW,CAChBjP,EAAQpF,EAAMiU,QAAQ,CAACrO,EAASoO,EAAWvO,EAAY,CAAA,GAElD,IAAI,CAAC6O,YAAY,EACtBjP,CAAAA,EAAQrF,EAAMiU,QAAQ,CAACvO,EAASsO,EAAWvO,EAAY,CAAA,EAAI,GAInEpF,AA5DgB,IAAI,CA4DV6R,SAAS,CAAGd,EAAM7a,KAAKD,GAAG,CAAC8O,EAAOC,GAAQ,EAAG6M,GACvD7R,AA7DgB,IAAI,CA6DV4R,SAAS,CAAGb,EAAM/Q,AA7DZ,IAAI,CA6DkBkU,UAAU,CAC5ClU,AA9DY,IAAI,CA8DN6R,SAAS,CAAG7R,AA9DV,IAAI,CA8DgBkU,UAAU,CAC1Che,KAAKC,GAAG,CAAC4O,EAAOC,GAAQ,EAAG6M,GAC/B7R,AAhEgB,IAAI,CAgEVyE,KAAK,CAAGzE,AAhEF,IAAI,CAgEQ6R,SAAS,CAAG7R,AAhExB,IAAI,CAgE8B4R,SAAS,CAC3DC,EAAY3b,KAAKgS,KAAK,CAAClI,AAjEP,IAAI,CAiEa6R,SAAS,EAC1C,IAAID,EAAY1b,KAAKgS,KAAK,CAAClI,AAlEX,IAAI,CAkEiB4R,SAAS,EAC1C6B,IACAzT,AApEY,IAAI,CAoEN6S,cAAc,CAACpb,IAAI,CAAC,CAC1Bqb,WAAY,SAChB,GAEArB,EAAO/B,GAAY,CAAC1P,AAxER,IAAI,CAwEcwP,UAAU,CAAG,UAAY,OACvDxP,AAzEY,IAAI,CAyENsS,SAAS,CAACV,EAAWC,EAAWlQ,EAAU8P,GACpDzR,AA1EY,IAAI,CA0EN2R,WAAW,CAACC,EAAWC,EAAWlQ,EAAU8P,GAClDzR,AA3EQ,IAAI,CA2EFgC,gBAAgB,CAAC6D,OAAO,CAAC7M,OAAO,GAC1CgH,AA5EQ,IAAI,CA4EFwR,UAAU,CAACI,EAAW,EAAGjQ,EAAU8P,GAC7CzR,AA7EQ,IAAI,CA6EFwR,UAAU,CAACK,EAAW,EAAGlQ,EAAU8P,KAGjDzR,AAhFY,IAAI,CAgFNkC,SAAS,GACfP,GACA+K,EAAe1M,AAlFP,IAAI,CAkFa+B,GAAG,CAAGL,EAC/B8K,EAAgBxM,AAnFR,IAAI,CAmFc4B,IAAI,CAAGH,EAC5BgS,CAAAA,GAAoB,CAACF,EAAe9S,QAAQ,CAAG,EAE5C,AAAC8S,CAAAA,EAAe7Q,WAAW,EAAI,CAAA,EAE3B6Q,EAAe/I,eAAe,AAAD,EACzC/I,EAAkByQ,EAAgB,EAAIxQ,IAGtCgL,EAAe1M,AA5FP,IAAI,CA4Fa+B,GAAG,CAAI0R,CAAAA,EAC5BzT,AA7FI,IAAI,CA6FEtH,MAAM,CAChB,CAAC+I,CAAc,EACnB+K,EAAgBxM,AA/FR,IAAI,CA+Fc4B,IAAI,CAAGF,GAGrC1B,AAlGY,IAAI,CAkGNkC,SAAS,CAACwI,QAAQ,CAAC8B,EAAeE,EAAc4G,EAAgB7R,GAE1EzB,AApGY,IAAI,CAoGNkC,SAAS,CAACkI,QAAQ,CAG5BpK,AAvGY,IAAI,CAuGN4R,SAAS,CAAIM,CAAAA,GAAiB,CAAA,EAAIlS,AAvGhC,IAAI,CAuGsC6R,SAAS,CAAIK,CAAAA,GAAiB,CAAA,IAExFlS,AAzGgB,IAAI,CAyGV0P,QAAQ,CAAG,CAAA,EACrBxD,EAAU,IAAI,CAAE,eACpB,EAOAqF,EAAU9b,SAAS,CAAC0e,cAAc,CAAG,WACjC,IACyB1G,EAAkBC,EADvC1N,EAAY,IAAI,CAAErJ,EAAQqJ,EAAUrJ,KAAK,CAAEyd,EAAYzd,EAAMyd,SAAS,CACtEC,EAAiB,EAAE,AAKvBrU,CAAAA,EAAUyN,gBAAgB,CAAGA,EAAmB,SAAUhK,CAAC,EACvDzD,EAAUsU,WAAW,CAAC7Q,EAC1B,EACAzD,EAAU0N,cAAc,CAAGA,EAAiB,SAAUjK,CAAC,EACnDzD,EAAUuU,SAAS,CAAC9Q,EACxB,EAGA4Q,AADAA,CAAAA,EAAiBrU,EAAUwU,cAAc,CAAC,YAAW,EACtChX,IAAI,CAInBrB,EAASxF,EAAM8d,QAAQ,CAAE,YAAahH,GAAmBtR,EAASiY,EAAUtG,aAAa,CAAE,UAAWJ,GAEtGvR,EAASxF,EAAM8d,QAAQ,CAAE,YAAahH,GAAmBtR,EAASiY,EAAUtG,aAAa,CAAE,WAAYJ,IACvG2G,EAAetY,MAAM,CAACiE,EAAUwU,cAAc,CAAC,eAC/CxU,EAAUqU,cAAc,CAAGA,EAEvBrU,EAAUpJ,MAAM,EAAIoJ,EAAUpJ,MAAM,CAAC,EAAE,EACvCyd,EAAe7W,IAAI,CAACrB,EAAS6D,EAAUpJ,MAAM,CAAC,EAAE,CAAC+I,KAAK,CAAE,gBAAiB,WACrEhJ,EAAMqJ,SAAS,CAAC0U,2BAA2B,EAC/C,GAER,EAcAnD,EAAU9b,SAAS,CAAC+e,cAAc,CAAG,SAAUG,CAAS,EACpD,IAAI3U,EAAY,IAAI,CAAE4U,EAAS,EAAE,CAQjC,MAPA,CAAC,SAAU,UAAU,CAAChI,OAAO,CAAC,SAAUiI,CAAI,EACxC7U,CAAS,CAAC6U,EAAK,CAACjI,OAAO,CAAC,SAAUkI,CAAa,CAAErL,CAAK,EAClDmL,EAAOpX,IAAI,CAACrB,EAAS2Y,EAAczH,OAAO,CAAEsH,EAAW,SAAUlR,CAAC,EAC9DzD,CAAS,CAAC6U,EAAO,YAAY,CAACpR,EAAGgG,EACrC,GACJ,EACJ,GACOmL,CACX,EAiBArD,EAAU9b,SAAS,CAACsf,eAAe,CAAG,SAAUtR,CAAC,CAAEgG,CAAK,EAEpDhG,EAAI,AAAC,CAAA,AAA8B,OAA7BrD,CAAAA,EAAK,IAAI,CAACzJ,KAAK,CAACoY,OAAO,AAAD,GAAe3O,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG4O,SAAS,CAACvL,EAAC,GAAMA,EACxF,IAFIrD,EAGuD8E,EAAUD,EAAU+P,EAAKpT,EAD9DjL,EAAQqJ,AAAd,IAAI,CAAoBrJ,KAAK,CAAEgJ,EAAQK,AAAvC,IAAI,CAA6CL,KAAK,CAAEiS,EAAY5R,AAApE,IAAI,CAA0E4R,SAAS,CAAEM,EAAgBlS,AAAzG,IAAI,CAA+G4J,IAAI,CAAEnF,EAAQzE,AAAjI,IAAI,CAAuIyE,KAAK,CAC5JwQ,EAAoBjV,AADR,IAAI,CACc4B,IAAI,CAAEyK,EAAS5I,EAAE4I,MAAM,AAErD1V,CAAAA,EAAMgL,QAAQ,GACd0K,EAAS5I,EAAE6I,MAAM,CACjB2I,EAAoBjV,AALR,IAAI,CAKc+B,GAAG,EAEjC0H,AAAU,IAAVA,GAEAzJ,AATY,IAAI,CASNmP,aAAa,CAAG9C,EAC1BrM,AAVY,IAAI,CAUNkU,UAAU,CAAGzP,EACvBzE,AAXY,IAAI,CAWNkV,UAAU,CAAG7I,EAASuF,IAIhChQ,EAAOyK,EAAS4I,EAAoBxQ,EAAQ,EACxCgF,AAAU,IAAVA,EACA7H,EAAO1L,KAAKD,GAAG,CAAC,EAAG2L,GAEJ,IAAV6H,GAAe7H,EAAO6C,GAASyN,IACpCtQ,EAAOsQ,EAAgBzN,EACnBzE,AArBI,IAAI,CAqBEmV,gBAAgB,EAE1BvT,GAAQ6C,EACRQ,EAAWjF,AAxBP,IAAI,CAwBaoV,gBAAgB,GAAG/M,OAAO,EAI/CnD,EAAWlF,AA5BP,IAAI,CA4BaoV,gBAAgB,GAAGhN,OAAO,EAGnDxG,IAASgQ,IACT5R,AAhCQ,IAAI,CAgCFkU,UAAU,CAAGzP,EAEnB7O,EAAQof,AADZA,CAAAA,EAAMrV,EAAMuE,aAAa,CAACY,YAAY,CAAClD,EAAMA,EAAO6C,EAAOQ,EAAUC,EAAQ,EAC7D/O,GAAG,GACf+V,EAAU,IAAI,CAAE,WAAY,CACxB/V,IAAKD,KAAKC,GAAG,CAAC6e,EAAI7e,GAAG,CAAE6e,EAAI/e,GAAG,EAC9BA,IAAKC,KAAKD,GAAG,CAAC+e,EAAI7e,GAAG,CAAE6e,EAAI/e,GAAG,EAC9B8M,OAAQ,CAAA,EACRsS,eAAgB,CACZ7Q,QAAS,WACb,CACJ,IAIhB,EAYA+M,EAAU9b,SAAS,CAAC6f,gBAAgB,CAAG,SAAU7R,CAAC,CAAEgG,CAAK,EAErDhG,EAAI,AAAC,CAAA,AAA8B,OAA7BrD,CAAAA,EAAK,IAAI,CAACzJ,KAAK,CAACoY,OAAO,AAAD,GAAe3O,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG4O,SAAS,CAACvL,EAAC,GAAMA,EACxF,IAFIrD,EAEkBzJ,EAAQqJ,AAAd,IAAI,CAAoBrJ,KAAK,CAAE4e,EAAY5e,EAAMgJ,KAAK,CAAC,EAAE,CAGzE6V,EAAUxV,AAHM,IAAI,CAGAmV,gBAAgB,AAChC1L,AAAU,CAAA,IAAVA,GAEAzJ,AANY,IAAI,CAMNgU,WAAW,CAAG,CAAA,EACxBhU,AAPY,IAAI,CAONyV,cAAc,CAAGzV,AAPf,IAAI,CAOqB6R,SAAS,CAC9C7R,AARY,IAAI,CAQN0V,YAAY,CAAGF,EAAUD,EAAUpf,GAAG,CAAGof,EAAUtf,GAAG,GAIhE+J,AAZY,IAAI,CAYNiU,YAAY,CAAG,CAAA,EACzBjU,AAbY,IAAI,CAaNyV,cAAc,CAAGzV,AAbf,IAAI,CAaqB4R,SAAS,CAC9C5R,AAdY,IAAI,CAcN0V,YAAY,CAAGF,EAAUD,EAAUtf,GAAG,CAAGsf,EAAUpf,GAAG,EAEpEQ,EAAMwR,aAAa,CAAC,KAAK,EAC7B,EAUAoJ,EAAU9b,SAAS,CAAC6e,WAAW,CAAG,SAAU7Q,CAAC,EAEzC,IADIrD,EAEuBiM,EADvBrM,EAAY,IAAI,CAAErJ,EAAQqJ,EAAUrJ,KAAK,CAAEub,EAAgBlS,EAAUkS,aAAa,CAAEzN,EAAQzE,EAAUyE,KAAK,CAAEyQ,EAAalV,EAAUkV,UAAU,CAAEvT,EAAWhL,EAAMgL,QAAQ,CACzKC,EAAO5B,EAAU4B,IAAI,CAIrB,CAAA,CAAC6B,EAAE6L,OAAO,EAAI7L,AAAuB,IAAvBA,EAAE6L,OAAO,CAAC,EAAE,CAACqG,KAAK,AAAK,IAErCtJ,EAAS5I,AADTA,CAAAA,EAAI,AAAC,CAAA,AAAyB,OAAxBrD,CAAAA,EAAKzJ,EAAMoY,OAAO,AAAD,GAAe3O,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG4O,SAAS,CAACvL,EAAC,GAAMA,CAAAA,EACxE4I,MAAM,CAEb1K,IACAC,EAAO5B,EAAU+B,GAAG,CACpBsK,EAAS5I,EAAE6I,MAAM,EAGjBtM,EAAUgU,WAAW,EACrBhU,EAAUwP,UAAU,CAAG,CAAA,EACvBxP,EAAUvE,MAAM,CAAC,EAAG,EAAG4Q,EAASzK,EAAM5B,EAAUyV,cAAc,GAGzDzV,EAAUiU,YAAY,EAC3BjU,EAAUwP,UAAU,CAAG,CAAA,EACvBxP,EAAUvE,MAAM,CAAC,EAAG,EAAGuE,EAAUyV,cAAc,CAAEpJ,EAASzK,IAGrD5B,EAAUmP,aAAa,GAC5BnP,EAAUwP,UAAU,CAAG,CAAA,EACnBnD,EAAS6I,EACT7I,EAAS6I,EAGJ7I,EACL6F,EAAgBgD,EAAazQ,GAC7B4H,CAAAA,EAAS6F,EAAgBgD,EAAazQ,CAAI,EAE9CzE,EAAUvE,MAAM,CAAC,EAAG,EAAG4Q,EAAS6I,EAAY7I,EAAS6I,EAAazQ,IAElEzE,EAAUwP,UAAU,EACpBxP,EAAUkC,SAAS,EACnBf,EAAKnB,EAAUkC,SAAS,CAAC3L,OAAO,CAAC0U,UAAU,CAG3C,CAAC/J,GACG,CAAC,IAAI,CAACvK,KAAK,CAAC+Z,OAAO,IACvBjN,EAAEyG,OAAO,CAAGzG,EAAErL,IAAI,CAClBwd,WAAW,WACP5V,EAAUuU,SAAS,CAAC9Q,EACxB,EAAG,IAGf,EASA8N,EAAU9b,SAAS,CAAC8e,SAAS,CAAG,SAAU9Q,CAAC,EACvC,IAEIoO,EAAWD,EAAWiE,EAAe5Q,EAAUC,EAAU8P,EAFvCre,EAAQqJ,AAAd,IAAI,CAAoBrJ,KAAK,CAAEgJ,EAAQK,AAAvC,IAAI,CAA6CL,KAAK,CAAEuC,EAAYlC,AAApE,IAAI,CAA0EkC,SAAS,CAAE8L,EAAWvK,EAAEuK,QAAQ,EAAIvK,EAAG9B,EAAWhL,EAAMgL,QAAQ,CAAE8P,EAAOzR,AAAvJ,IAAI,CAA6J0P,QAAQ,EAAI,CAAC1P,AAA9K,IAAI,CAAoLwP,UAAU,CAC9M,UAAY,OAMhB,CAAA,AAACxP,AAPe,IAAI,CAOTwP,UAAU,EAAK,CAAA,CAACtN,GAAa,CAACA,EAAUsN,UAAU,AAAD,GACxD/L,AAAc,cAAdA,EAAEe,OAAO,AAAe,IACxBqR,EAAgB7V,AATJ,IAAI,CASUoV,gBAAgB,GAEtCpV,AAXQ,IAAI,CAWF4R,SAAS,GAAK5R,AAXhB,IAAI,CAWsByV,cAAc,CAChDxQ,EAAWjF,AAZH,IAAI,CAYS0V,YAAY,CAE5B1V,AAdG,IAAI,CAcG6R,SAAS,GAAK7R,AAdrB,IAAI,CAc2ByV,cAAc,EACrDvQ,CAAAA,EAAWlF,AAfH,IAAI,CAeS0V,YAAY,AAAD,EAGhC1V,AAlBQ,IAAI,CAkBF6R,SAAS,GAAK7R,AAlBhB,IAAI,CAkBsB4J,IAAI,EACtC1E,CAAAA,EAAWlF,AAnBH,IAAI,CAmBSmV,gBAAgB,CACjCU,EAAcxN,OAAO,CACrBwN,EAAczN,OAAO,AAAD,EAGA,IAAxBpI,AAxBQ,IAAI,CAwBF4R,SAAS,EACnB3M,CAAAA,EAAWjF,AAzBH,IAAI,CAyBSmV,gBAAgB,CACjCU,EAAczN,OAAO,CACrByN,EAAcxN,OAAO,AAAD,EAGxBzS,EAAQof,AADZA,CAAAA,EAAMrV,EAAMuE,aAAa,CAACY,YAAY,CAAC9E,AA7B3B,IAAI,CA6BiC4R,SAAS,CAAE5R,AA7BhD,IAAI,CA6BsD6R,SAAS,CAAE5M,EAAUC,EAAQ,EACnF/O,GAAG,GACf+V,EAAU,IAAI,CAAE,WAAY,CACxB/V,IAAKD,KAAKC,GAAG,CAAC6e,EAAI7e,GAAG,CAAE6e,EAAI/e,GAAG,EAC9BA,IAAKC,KAAKD,GAAG,CAAC+e,EAAI7e,GAAG,CAAE6e,EAAI/e,GAAG,EAC9B8M,OAAQ,CAAA,EACRjJ,UAAWkG,CAAAA,AAnCP,IAAI,CAmCawP,UAAU,EAAW,KAC1C6F,eAAgB,CACZ7Q,QAAS,YACTsR,UAAW,iBACX9H,SAAUA,CACd,CACJ,IAGU,cAAdvK,EAAEyG,OAAO,EACTzG,AAAc,cAAdA,EAAEyG,OAAO,EACTlK,CAAAA,AA9CY,IAAI,CA8CNgU,WAAW,CAAGhU,AA9CZ,IAAI,CA8CkBiU,YAAY,CAC1CjU,AA/CQ,IAAI,CA+CFmP,aAAa,CAAGnP,AA/ClB,IAAI,CA+CwBkU,UAAU,CAC1ClU,AAhDI,IAAI,CAgDE0V,YAAY,CAAG1V,AAhDrB,IAAI,CAgD2ByV,cAAc,CAC7CzV,AAjDA,IAAI,CAiDMwP,UAAU,CAAGxP,AAjDvB,IAAI,CAiD6BkV,UAAU,CAAG,IAAG,EAG7DlV,AApDY,IAAI,CAoDNyT,gBAAgB,EAC1BzP,EAAShE,AArDG,IAAI,CAqDG4R,SAAS,GAC5B5N,EAAShE,AAtDG,IAAI,CAsDG6R,SAAS,IAC5BD,EAAY1b,KAAKgS,KAAK,CAAClI,AAvDX,IAAI,CAuDiB4R,SAAS,EAC1CC,EAAY3b,KAAKgS,KAAK,CAAClI,AAxDX,IAAI,CAwDiB6R,SAAS,EACtC7R,AAzDQ,IAAI,CAyDFwS,MAAM,EAChBxS,AA1DQ,IAAI,CA0DFsS,SAAS,CAACV,EAAWC,EAAWlQ,EAAU8P,GAEpDzR,AA5DQ,IAAI,CA4DF+R,OAAO,EACjB/R,AA7DQ,IAAI,CA6DF2R,WAAW,CAACC,EAAWC,EAAWlQ,EAAU8P,GAEtDzR,AA/DQ,IAAI,CA+DFgC,gBAAgB,CAAC6D,OAAO,CAAC7M,OAAO,EAC1CyF,OAAOsX,IAAI,CAAC/V,AAhEJ,IAAI,CAgEU6F,OAAO,EAAE5M,MAAM,GACjC+G,AAjEI,IAAI,CAiEE6F,OAAO,CAAC5M,MAAM,GAC5B+G,AAlEQ,IAAI,CAkEFwR,UAAU,CAACI,EAAW,EAAGjQ,EAAU8P,GAC7CzR,AAnEQ,IAAI,CAmEFwR,UAAU,CAACK,EAAW,EAAGlQ,EAAU8P,IAGzD,EAOAF,EAAU9b,SAAS,CAAC+Y,YAAY,CAAG,WAC3B,IAAI,CAAC6F,cAAc,GACnB,IAAI,CAACA,cAAc,CAACzH,OAAO,CAAC,SAAUoJ,CAAM,EACxCA,GACJ,GACA,IAAI,CAAC3B,cAAc,CAAG,KAAK,GAE/B,IAAI,CAAC4B,sBAAsB,EAC/B,EAOA1E,EAAU9b,SAAS,CAACwgB,sBAAsB,CAAG,WACzC,IAAI7C,EAAa,IAAI,CAACA,UAAU,EAAI,EAAE,AAClC,CAAA,IAAI,CAACK,gBAAgB,EAAIL,CAAU,CAAC,EAAE,GACW,CAAA,IAA7C,IAAI,CAACpR,gBAAgB,CAACkU,kBAAkB,EACxC9C,EAAWxG,OAAO,CAAC,SAAUhW,CAAM,EAC/BuV,EAAYvV,EAAQ,cAAe,IAAI,CAACuf,kBAAkB,CAC9D,EAAG,IAAI,EAGP/C,CAAU,CAAC,EAAE,CAACzT,KAAK,EACnBwM,EAAYiH,CAAU,CAAC,EAAE,CAACzT,KAAK,CAAE,gBAAiB,IAAI,CAACyW,sBAAsB,EAGzF,EAOA7E,EAAU9b,SAAS,CAACe,IAAI,CAAG,SAAUG,CAAK,EACtC,IAAIuM,EAAevM,EAAMJ,OAAO,CAAEyL,EAAmBkB,EAAalD,SAAS,EAAI,CAAC,EAAGyT,EAAmBzR,EAAiBhJ,OAAO,CAAE0K,EAAmBR,EAAahB,SAAS,EAAI,CAAC,EAAGmU,EAAmB3S,EAAiB1K,OAAO,CAAEN,EAAS+a,GAAoBzR,EAAiBtJ,MAAM,EAAI,EAAG+I,EAAkB4U,GAAoB3S,EAAiBhL,MAAM,EAAI,EAAGgJ,EAAmBgC,EAAiBsH,cAAc,EAAIvJ,GAAmB,CACta,CAAA,IAAI,CAACoE,OAAO,CAAG,EAAE,CACjB,IAAI,CAAC2M,MAAM,CAAG,EAAE,CAChB,IAAI,CAAC7b,KAAK,CAAGA,EACb,IAAI,CAAC2K,aAAa,GAClB,IAAI,CAAC5I,MAAM,CAAGA,EACd,IAAI,CAAC+I,eAAe,CAAGA,EACvB,IAAI,CAACC,gBAAgB,CAAGA,EACxB,IAAI,CAAC2U,gBAAgB,CAAGA,EACxB,IAAI,CAAC5C,gBAAgB,CAAGA,EACxB,IAAI,CAACzR,gBAAgB,CAAGA,EACxB,IAAI,CAAC0B,gBAAgB,CAAGA,EACxB,IAAI,CAACjD,QAAQ,CAAGU,EAAKa,EAAiBvB,QAAQ,CAAE6V,CAAAA,CAAQ,CAAA,CAAC7C,GAAoB9c,EAAMgL,QAAQ,AAAD,GAC1F,IAAI3B,EAAY,IAAI,CAAEoT,EAAapT,EAAUoT,UAAU,CAAEmD,EAAa5f,EAAMgJ,KAAK,CAAC1G,MAAM,CAAEud,EAAa7f,EAAMkJ,KAAK,CAAC5G,MAAM,CAAEwd,EAAYrD,GAAcA,CAAU,CAAC,EAAE,EAAIA,CAAU,CAAC,EAAE,CAACzT,KAAK,EACrLhJ,EAAMgJ,KAAK,CAAC,EAAE,EAAI,CAAEpJ,QAAS,CAAC,CAAE,EAyFpC,GAxFAI,EAAM+f,UAAU,CAAG,CAAA,EACf1W,EAAUyT,gBAAgB,EAE1BzT,EAAUL,KAAK,CAAG,IAAIiR,EAAKja,EAAOb,EAAM,CAEpC6gB,OAAQF,EAAUlgB,OAAO,CAACogB,MAAM,CAChCC,QAASH,EAAUlgB,OAAO,CAACqgB,OAAO,CAClCC,WAAYJ,EAAUlgB,OAAO,CAACsgB,UAAU,AAC5C,EAAG7U,EAAiBrC,KAAK,CAAE,CACvBoH,GAAI,mBACJlH,MAAO,mBACPzH,KAAM,WACNqR,MAAO8M,EACPxN,WAAY,CAAA,EACZwB,OAAQ,EACRuM,mBAAoB,CAAA,EACpBrP,YAAa,CAAA,EACbC,UAAW,CAAA,EACXC,WAAY,EACZC,WAAY,EACZmP,YAAa,CAAA,CACjB,EAAGpgB,EAAMgL,QAAQ,CAAG,CAChBqV,QAAS,CAACtV,EAAkB,EAAG,CAACA,EAAkB,EAAE,CACpDjJ,MAAOC,CACX,EAAI,CACAse,QAAS,CAAC,EAAG,CAACtV,EAAkB,EAAGA,EAAiB,CACpDhJ,OAAQA,CACZ,GAAI,SACJsH,EAAUH,KAAK,CAAG,IAAI+Q,EAAKja,EAAOb,EAAMkM,EAAiBnC,KAAK,CAAE,CAC5DkH,GAAI,mBACJkQ,WAAY,CAAA,EACZ1M,OAAQ,EACRd,MAAO+M,EACPzN,WAAY,CAAA,EACZnI,SAAUO,EAAMa,EAAiBnC,KAAK,EAClCmC,EAAiBnC,KAAK,CAACe,QAAQ,CAAIjK,EAAMkJ,KAAK,CAAC,EAAE,EAAIlJ,EAAMkJ,KAAK,CAAC,EAAE,CAACe,QAAQ,CAAG,CAAA,GACnFmW,YAAa,CAAA,CACjB,EAAGpgB,EAAMgL,QAAQ,CAAG,CAChBlJ,MAAOC,CACX,EAAI,CACAA,OAAQA,CACZ,GAAI,SAEA0a,GAAcpR,EAAiBpL,MAAM,CAACsgB,IAAI,CAC1ClX,EAAUmX,qBAAqB,CAAC,CAAA,GAGH,IAAxBxgB,EAAMC,MAAM,CAACqC,MAAM,EACxB+G,CAAAA,EAAUoX,YAAY,CAAGjb,EAASxF,EAAO,eAAgB,WAEjDA,EAAMC,MAAM,CAACqC,MAAM,CAAG,GAAK,CAAC+G,EAAUpJ,MAAM,GAC5CoJ,EAAUsB,aAAa,GACvBtB,EAAUoX,YAAY,GAE9B,EAAC,EAELpX,EAAUmV,gBAAgB,CAAG,AAACxe,EAAMgL,QAAQ,EAAI,CAAC3B,EAAUL,KAAK,CAACiB,QAAQ,EAAM,CAACjK,EAAMgL,QAAQ,EAAI3B,EAAUL,KAAK,CAACiB,QAAQ,CAE1HZ,EAAU0S,cAAc,GAExB1S,EAAUmU,cAAc,KAIxBnU,EAAUL,KAAK,CAAG,CACdhJ,MAAOA,EACPuN,cAAe,CACXsP,KAAM,CAAA,CACV,EACA3b,UAAW,SAAU6E,CAAK,CAAE8Y,CAAO,EAC/B,IAAI7Y,EAAOhG,EAAMgJ,KAAK,CAAC,EAAE,CAAEqV,EAAMrY,EAAK4G,WAAW,GAAI8T,EAAmB1a,EAAKoQ,GAAG,CAAG,EAAIrL,EAAkBvL,EAAM+a,EAAO,MAAOvU,EAAKpG,OAAO,CAACJ,GAAG,CAAE6e,EAAI3M,OAAO,EAAGiP,EAAapG,EAAO,MAAOvU,EAAKpG,OAAO,CAACN,GAAG,CAAE+e,EAAI5M,OAAO,EAAIjS,EACzN,OAAOqf,EAEH,AAAC9Y,EAAQ4a,EAAaD,EAAoBlhB,EAE1CkhB,EAAoB3a,CAAAA,EAAQvG,CAAE,EAAKmhB,CAC3C,EACA1D,SAAU,SAAUlX,CAAK,EACrB,OAAO,IAAI,CAAC7E,SAAS,CAAC6E,EAC1B,EACAoX,QAAS,SAAUpX,CAAK,EACpB,OAAO,IAAI,CAAC7E,SAAS,CAAC6E,EAAO,CAAA,EACjC,CACJ,EACAsD,EAAUL,KAAK,CAACuE,aAAa,CAACvH,IAAI,CAAGqD,EAAUL,KAAK,CACpDK,EAAUL,KAAK,CAACuE,aAAa,CAACY,YAAY,CAAIX,EAAuB1O,SAAS,CAACqP,YAAY,CAAC0I,IAAI,CAACxN,EAAUL,KAAK,CAACuE,aAAa,GAG9HvN,EAAMJ,OAAO,CAAC2L,SAAS,CAAClJ,OAAO,CAAE,CACjC,IAAIzC,EAAUT,EAAMa,EAAMJ,OAAO,CAAC2L,SAAS,CAAE,CAAE4H,SAAUnT,EAAMgL,QAAQ,AAAC,EACpE,EAACqC,EAASzN,EAAQ+E,MAAM,GAAK0E,EAAUyT,gBAAgB,EACvDld,CAAAA,EAAQ+E,MAAM,CAAG3E,EAAMgL,QAAQ,CAAG,GAAK,CAAA,EAE3ChL,EAAMuL,SAAS,CAAGlC,EAAUkC,SAAS,CAAG,IAAIgH,EAAUvS,EAAMW,QAAQ,CAAEf,EAASI,GAC/EwF,EAAS6D,EAAUkC,SAAS,CAAE,UAAW,SAAUuB,CAAC,EAChD,IAAIgB,EAAQzE,EAAU4J,IAAI,CAAEtT,EAAKmO,EAAQ,IAAI,CAACnO,EAAE,CAAED,EAAOoO,EAAQ,IAAI,CAACpO,IAAI,AAC1E2J,CAAAA,EAAUwP,UAAU,CAAGxP,EAAUkC,SAAS,CAACsN,UAAU,CACrDxP,EAAUvE,MAAM,CAAC,EAAG,EAAGpF,EAAMC,GACzB,IAAI,CAAC2T,oBAAoB,CAACxG,EAAEyG,OAAO,GACnC0L,WAAW,WACP5V,EAAUuU,SAAS,CAAC9Q,EACxB,EAER,EACJ,CAEAzD,EAAUuX,mBAAmB,GAE7BvX,EAAUwX,cAAc,EAC5B,EAQAjG,EAAU9b,SAAS,CAAC2f,gBAAgB,CAAG,SAAUqC,CAAyB,EACtE,IACIC,EADAC,EAAW,IAAI,CAAChhB,KAAK,CAACgJ,KAAK,CAAC,EAAE,CAAEiY,EAAU,IAAI,CAACjY,KAAK,CAAEkY,EAAiBD,EAAQrhB,OAAO,CAAEuhB,EAAkBH,EAASphB,OAAO,CAS9H,OAPKkhB,GAA6BE,AAAqB,OAArBA,EAAStP,OAAO,EAC9CqP,CAAAA,EAAM,CACFrP,QAASlH,EACT0W,GAAkBA,EAAe1hB,GAAG,CAAE+a,EAAO,MAAO4G,EAAgB3hB,GAAG,CAAEwhB,EAAStP,OAAO,CAAEuP,EAAQvP,OAAO,CAAEuP,EAAQzhB,GAAG,GACvHiS,QAASjH,EAAK0W,GAAkBA,EAAe5hB,GAAG,CAAEib,EAAO,MAAO4G,EAAgB7hB,GAAG,CAAE0hB,EAASvP,OAAO,CAAEwP,EAAQxP,OAAO,CAAEwP,EAAQ3hB,GAAG,EACzI,CAAA,EAEGyhB,CACX,EAaAnG,EAAU9b,SAAS,CAAC6L,aAAa,CAAG,SAAUyW,CAAiB,CAAEhV,CAAM,EACnE,IAAIpM,EAAQ,IAAI,CAACA,KAAK,CAAEyc,EAAa,IAAI,CAACA,UAAU,CAAG,EAAE,CACzD2E,EAAqBA,GACjBphB,EAAMJ,OAAO,EAAII,EAAMJ,OAAO,CAACyJ,SAAS,CAACoT,UAAU,EAClDzc,CAAAA,EAAMC,MAAM,CAACqC,MAAM,CAEhBgY,EAAKta,EAAMC,MAAM,CAAE,SAAUohB,CAAC,EAAI,MAAQ,CAACA,EAAEzhB,OAAO,CAACwS,UAAU,AAAG,GAAGU,KAAK,CAC1E,CAAA,EAGR,AAAC9S,CAAAA,EAAMC,MAAM,EAAI,EAAE,AAAD,EAAGgW,OAAO,CAAC,SAAUhW,CAAM,CAAEuJ,CAAC,EAG5C,CAACvJ,EAAOL,OAAO,CAACwS,UAAU,EACrBnS,CAAAA,EAAOL,OAAO,CAAC0hB,eAAe,EAC3B,AAAC9X,CAAAA,IAAM4X,GACHnhB,EAAOL,OAAO,CAACwQ,EAAE,GAAKgR,CAAgB,GACtCnhB,AAAmC,CAAA,IAAnCA,EAAOL,OAAO,CAAC0hB,eAAe,AAAS,GAC/C7E,EAAW5V,IAAI,CAAC5G,EAExB,GAEI,IAAI,CAAC+I,KAAK,EAAI,CAAC,IAAI,CAACA,KAAK,CAACuE,aAAa,CAACsP,IAAI,EAC5C,IAAI,CAAC2D,qBAAqB,CAAC,CAAA,EAAMpU,EAEzC,EAQAwO,EAAU9b,SAAS,CAAC0hB,qBAAqB,CAAG,SAAUnK,CAAS,CAAEjK,CAAM,EACnE,IAqCImV,EAAaC,EAAyFC,EArCtGpY,EAAY,IAAI,CAAErJ,EAAQqJ,EAAUrJ,KAAK,CAAEyc,EAAapT,EAAUoT,UAAU,CAAEiF,EAAiB,CAC/FC,oBAAqB,CAAA,EACrB7O,MAAO,KACP/I,SAAU,KACVrJ,MAAO,MACPkhB,SAAU,CAAA,EACV5Y,MAAO,mBACPE,MAAO,mBACP2Y,aAAc,CAAA,EACdC,SAAU,KAAK,EACf1P,WAAY,CAAA,EACZ2P,OAAQ,CACJC,SAAU,CACN3gB,QAAS,CACb,CACJ,CACJ,EAEAqb,EAAkBrT,EAAUpJ,MAAM,CAC9B,AAACoJ,CAAAA,EAAUpJ,MAAM,EAAI,EAAE,AAAD,EAAG0a,MAAM,CAAC,SAAUsH,CAAS,EAC/C,IAAIC,EAAOD,EAAUxF,UAAU,OAC/B,CAAIA,CAAAA,AAA2B,EAA3BA,EAAWrV,OAAO,CAAC8a,EAAQ,IAGvBA,IACA1M,EAAY0M,EAAM,cAAe7Y,EAAUmW,kBAAkB,EAC7D,OAAO0C,EAAKxF,eAAe,EAI3BuF,EAAUjiB,KAAK,EACfiiB,EAAU5c,OAAO,GAEd,CAAA,EAGf,GACqC8c,EAA8B9Y,EAAUgC,gBAAgB,CAACpL,MAAM,CAGpGwc,GAAcA,EAAWna,MAAM,EAC/Bma,EAAWxG,OAAO,CAAC,SAAUiM,CAAI,EAC7B,IAAIE,EAAkBF,EAAKxF,eAAe,CAAE2F,EAAiBnQ,EAE7D,CACInP,MAAOmf,EAAKnf,KAAK,CACjBuf,QAASJ,EAAKI,OAAO,AACzB,EAAG,AAAC9Z,EAAQ2Z,GAERxc,EAAe0D,SAAS,CAACpJ,MAAM,CAD/BkiB,GAIJ,GAAIC,CAAAA,GACA/Y,AAAkD,CAAA,IAAlDA,EAAUgC,gBAAgB,CAACkU,kBAAkB,EAGjDmC,EAAexD,IAAI,CAAG,aAAezB,EAAWna,MAAM,CAEtDmf,EAAuBF,AADvBA,CAAAA,EAAcW,EAAKtiB,OAAO,EAAI,CAAC,CAAA,EACIyL,gBAAgB,EAAI,CAAC,EAGxDgX,EAAelS,UAAU,CAAG1H,EAAM4Z,EAAelS,UAAU,EAG3DqR,AAFAA,CAAAA,EAAyBriB,EAAMoiB,EAAaG,EAAgBW,EAAgBZ,EAAoB,EAEzEhT,UAAU,CAAGjE,EAEpC6X,EAAe5T,UAAU,CAAEgT,EAAqBhT,UAAU,CAE1D9I,EAAe4c,WAAW,CAACf,EAAuB/f,IAAI,EAAI,OAAO,CAACgN,UAAU,EAG5E,IAAI+T,EAAsBf,EAAqBlB,IAAI,EAAI8B,EAAe9B,IAAI,AAC1ElX,CAAAA,EAAUoZ,gBAAgB,CACtBpZ,EAAUoZ,gBAAgB,EAAI,CAAC,CAACD,EACpChB,EAAuBjB,IAAI,CACvBiC,GACIjB,EAAYhB,IAAI,EAAIgB,EAAYhB,IAAI,CAACmC,KAAK,CAAC,GAE/CN,GAAmBA,EAAgBxiB,OAAO,CAC1CwiB,EAAgBpI,MAAM,CAACwH,EAAwBpV,IAG/C8V,EAAKxF,eAAe,CAAG1c,EAAM2iB,UAAU,CAACnB,GAExCxhB,EAAM4iB,aAAa,GACnBV,EAAKxF,eAAe,CAACD,UAAU,CAAGyF,EAClCxF,EAAgB7V,IAAI,CAACqb,EAAKxF,eAAe,GAEjD,GAKAyF,CAAAA,EAA4B5B,IAAI,EAChC,CAAE9D,CAAAA,GAAcA,EAAWna,MAAM,AAAD,GAChCkG,EAAQ2Z,EAA2B,IACnC9Y,EAAUoZ,gBAAgB,CAAG,CAAA,EAI7BN,AAFAA,CAAAA,EACI1Z,EAAM0Z,EAA2B,EACTlM,OAAO,CAAC,SAAU4M,CAAiB,CAAErZ,CAAC,EAC9DkY,EAAexD,IAAI,CACf,aAAgBxB,CAAAA,EAAgBpa,MAAM,CAAG,CAAA,EAc7Ckf,AAbAA,CAAAA,EAAyBriB,EAAMwG,EAAe0D,SAAS,CAACpJ,MAAM,CAAE,CAO5D8C,MAAO/C,EAAMC,MAAM,CAACuJ,EAAE,EAClB,CAACxJ,EAAMC,MAAM,CAACuJ,EAAE,CAAC5J,OAAO,CAACwS,UAAU,EACnCpS,EAAMC,MAAM,CAACuJ,EAAE,CAACzG,KAAK,EACrB/C,EAAMJ,OAAO,CAACkjB,MAAM,CAACtZ,EAAE,EACvBxJ,EAAMJ,OAAO,CAACkjB,MAAM,CAAC,EAAE,AAC/B,EAAGpB,EAAgBmB,EAAiB,EACbtC,IAAI,CAAGsC,EAAkBtC,IAAI,CAChDiB,EAAuBjB,IAAI,GAC3BlX,EAAUoZ,gBAAgB,CAAG,CAAA,EAC7B/F,EAAgB7V,IAAI,CAAC7G,EAAM2iB,UAAU,CAACnB,IAE9C,IAEAnL,GACA,IAAI,CAACuK,mBAAmB,EAEhC,EAQAhG,EAAU9b,SAAS,CAAC8hB,mBAAmB,CAAG,WACtC,IAAImC,EAAQ,IAAI,CACZ1Z,EAAY,IAAI,CAAEoT,EAAapT,EAAUoT,UAAU,EAAI,EAAE,AAKzDA,CAAAA,CAAU,CAAC,EAAE,EAAIA,CAAU,CAAC,EAAE,CAACzT,KAAK,EACpCyT,CAAU,CAAC,EAAE,CAACiB,cAAc,CAAC7W,IAAI,CAACrB,EAASiX,CAAU,CAAC,EAAE,CAACzT,KAAK,CAAE,gBAAiB,IAAI,CAACyW,sBAAsB,GAEhHhD,EAAWxG,OAAO,CAAC,SAAUiM,CAAI,EAE7BA,EAAKxE,cAAc,CAAC7W,IAAI,CAACrB,EAAS0c,EAAM,OAAQ,WACxC,IAAI,CAACxF,eAAe,EACpB,IAAI,CAACA,eAAe,CAACsG,UAAU,CAAC,CAAA,EAAM,CAAA,EAE9C,IACAd,EAAKxE,cAAc,CAAC7W,IAAI,CAACrB,EAAS0c,EAAM,OAAQ,WACxC,IAAI,CAACxF,eAAe,EACpB,IAAI,CAACA,eAAe,CAACsG,UAAU,CAAC,CAAA,EAAO,CAAA,EAE/C,IAGkD,CAAA,IAA9CD,EAAM1X,gBAAgB,CAACkU,kBAAkB,EACrC2C,EAAKlZ,KAAK,EACVkZ,EAAKxE,cAAc,CAAC7W,IAAI,CAACrB,EAAS0c,EAAM,cAAea,EAAMvD,kBAAkB,GAIvF0C,EAAKxE,cAAc,CAAC7W,IAAI,CAACrB,EAAS0c,EAAM,SAAU,WAC1C,IAAI,CAACxF,eAAe,GACpBrC,EAAMhR,EAAUpJ,MAAM,CAAE,IAAI,CAACyc,eAAe,EACxCzd,EAAQ,IAAI,CAACyd,eAAe,CAAC9c,OAAO,GACpC,IAAI,CAAC8c,eAAe,CAACuG,MAAM,CAAC,CAAA,GAEhC,OAAO,IAAI,CAACvG,eAAe,CAEnC,GACJ,EACJ,EASA9B,EAAU9b,SAAS,CAACokB,gBAAgB,CAAG,SAAUC,CAAgB,EAC7D,OAAO,IAAI,CAAC1G,UAAU,CAAC2G,MAAM,CAAC,SAAU5jB,CAAG,CAAES,CAAM,EAE/C,OAAOV,KAAKC,GAAG,CAACA,EAAKS,EAAOojB,KAAK,EAAIpjB,EAAOojB,KAAK,CAAC/gB,MAAM,CACpDrC,EAAOojB,KAAK,CAAC,EAAE,CAAG7jB,EAC1B,EAAG2jB,EACP,EASAvI,EAAU9b,SAAS,CAACif,2BAA2B,CAAG,WAC9C,IAAI/U,EAAQ,IAAI,CAACA,KAAK,CACtB,GAAI,AAA6B,KAAA,IAAtBA,EAAM4D,WAAW,CAAkB,CAC1C,IAAIsS,EAAgB,IAAI,CAACT,gBAAgB,CAAC,CAAA,GACtCS,GACCA,CAAAA,EAAcxN,OAAO,GAAK1I,EAAMxJ,GAAG,EAChC0f,EAAczN,OAAO,GAAKzI,EAAM1J,GAAG,AAAD,IACtC0J,EAAMxJ,GAAG,CAAG0f,EAAcxN,OAAO,CACjC1I,EAAM1J,GAAG,CAAG4f,EAAczN,OAAO,CAEzC,CACJ,EAOAmJ,EAAU9b,SAAS,CAAC2gB,sBAAsB,CAAG,WAEzC,IADIhW,EAOAmF,EAAQF,EANUrF,EAAYuV,AAAlB,IAAI,CAAwB5e,KAAK,CAACqJ,SAAS,CAAEia,EAAe1E,AAA5D,IAAI,CAAkEhS,WAAW,GAAI2W,EAAUD,EAAa9jB,GAAG,CAAEgkB,EAAUF,EAAahkB,GAAG,CAAEmkB,EAAcH,EAAa5R,OAAO,CAAEgS,EAAcJ,EAAa7R,OAAO,CAAE3D,EAAQ0V,EAAUD,EAASI,EAAata,EAAUsa,UAAU,CAAEC,EAAava,EAAUua,UAAU,CAAE1D,EAAa1V,EAAK,AAA6B,OAA5Bf,CAAAA,EAAKmV,AAA9U,IAAI,CAAoVqB,OAAO,AAAD,GAAexW,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGoa,iBAAiB,CAACjF,AAA3Z,IAAI,CAAiahf,OAAO,CAACsgB,UAAU,EAAG,GAAIxD,EAAkBrT,EAAUpJ,MAAM,EAAIoJ,EAAUpJ,MAAM,CAAC,EAAE,CAAE6jB,EAAiB,CAAC,CAAClF,AAA5gB,IAAI,CAAkhBpL,WAAW,AAO7iB,EAHQoL,CAAAA,AAJI,IAAI,CAIEmF,SAAS,EAC3BnF,AAAgC,wBAAhCA,AALY,IAAI,CAKNmF,SAAS,CAAClW,OAAO,AAAyB,IAKhD8V,GAEA/U,CAAAA,EAASF,AADTA,CAAAA,EAAS+U,CAAU,EACD3V,CAAI,EAItB8V,IACAhV,EAAS8U,EAAcxD,EAElByD,GACDjV,CAAAA,EAASnP,KAAKD,GAAG,CAACmkB,EAClB7U,EAASd,EAAOzE,EAAU6Z,gBAAgB,CAACxG,GAAmBA,EAAgB2G,KAAK,CAC/E3G,EAAgB2G,KAAK,CAAC,EAAE,CACxB,CAACW,OAAOC,SAAS,EAAC,GAI1BH,GAAmBH,CAAAA,GAAcC,CAAS,GACtCvW,EAASqB,KACTkQ,AA7BI,IAAI,CA6BEpf,GAAG,CAAGof,AA7BZ,IAAI,CA6BkBsF,OAAO,CAAGxV,EACpCkQ,AA9BI,IAAI,CA8BEtf,GAAG,CAAGsf,AA9BZ,IAAI,CA8BkBuF,OAAO,CAAGvV,IAKhDvF,EAAUsa,UAAU,CAChBta,EAAUua,UAAU,CAAG,IAC/B,EASAhJ,EAAU9b,SAAS,CAAC0gB,kBAAkB,CAAG,WACrC,IAAInW,EAAY,IAAI,CAACrJ,KAAK,CAACqJ,SAAS,CAAqBqT,EAAkB,IAAI,CAACA,eAAe,CAAE0H,EAAmB/a,EAAUmV,gBAAgB,CAC1Ijf,AAAoC,IAApCA,KAAKgS,KAAK,CAAClI,EAAU4R,SAAS,EAC9B1b,KAAKgS,KAAK,CAAClI,EAAU6R,SAAS,GAAK3b,KAAKgS,KAAK,CAAClI,EAAU4J,IAAI,CAGhE5J,CAAAA,EAAUua,UAAU,CAAGpZ,EAAK,IAAI,CAACxK,KAAK,CAACJ,OAAO,CAACyJ,SAAS,EACpD,IAAI,CAACrJ,KAAK,CAACJ,OAAO,CAACyJ,SAAS,CAACua,UAAU,CAAEQ,GAC7C/a,EAAUsa,UAAU,CAAGta,EAAUgb,gBAAgB,CAPE,IAAI,CAOOhb,GAE1DqT,GAAmB,CAACrT,EAAUoZ,gBAAgB,GAC9C/F,EAAgB9c,OAAO,CAAC0kB,UAAU,CAAG7H,AAVU,IAAI,CAUH4G,KAAK,CAAC,EAAE,CACxD3G,EAAgB6H,OAAO,CAAC9H,AAXuB,IAAI,CAWhB7c,OAAO,CAAC2gB,IAAI,CAAE,CAAA,EAAO,KAAM,CAAA,GAEtE,EAOA3F,EAAU9b,SAAS,CAACulB,gBAAgB,CAAG,SAAU5H,CAAU,CAAEpT,CAAS,EAClE,IAAImb,EAAWnb,EAAU6Z,gBAAgB,CAACzG,EAAW4G,KAAK,CAAC,EAAE,EAAGra,EAAQyT,EAAWzT,KAAK,CAAE1J,EAAM0J,EAAM1J,GAAG,CAAEE,EAAMwJ,EAAMxJ,GAAG,CAAEsO,EAAQ9E,EAAMpJ,OAAO,CAACkO,KAAK,CAiBvJ,QAfIT,CAAAA,EAAS/N,IAAQ+N,EAAS7N,EAAG,IAGzBsO,GAASxO,EAAMklB,EAAW,EACbllB,EAAMklB,EAAW1W,EAKjBtO,GAAOglB,EAOhC,EAOA5J,EAAU9b,SAAS,CAAC+hB,cAAc,CAAG,WAC5B,IAAI,CAACnD,cAAc,EACpB,CAAA,IAAI,CAACA,cAAc,CAAG,EAAE,AAAD,EAE3B,IAAI,CAACA,cAAc,CAAC7W,IAAI,CAGxBrB,EAAS,IAAI,CAACxF,KAAK,CAAE,SAAU,WAC3B,IAAIqJ,EAAY,IAAI,CAACA,SAAS,CAAEL,EAAQK,GAAcA,CAAAA,EAAUoT,UAAU,EACtEpT,EAAUoT,UAAU,CAAC,EAAE,EACvBpT,EAAUoT,UAAU,CAAC,EAAE,CAACzT,KAAK,EAC7B,IAAI,CAACA,KAAK,CAAC,EAAE,AAAD,EACZA,GACAK,EAAUvE,MAAM,CAACkE,EAAMxJ,GAAG,CAAEwJ,EAAM1J,GAAG,CAE7C,GAEAkG,EAAS,IAAI,CAACxF,KAAK,CAAE,aAAc,WAC/B,IAAkBqJ,EAAYrJ,AAAlB,IAAI,CAAoBqJ,SAAS,CACzCob,EAAapb,EAAUS,QAAQ,CAC/B,UAAY,cACZ9J,CAHQ,IAAI,CAGNgL,QAAQ,EACdyZ,CAAAA,EAAapb,EAAUS,QAAQ,CAC3B,cAAgB,UAAS,EAEjC9J,AAPY,IAAI,AAOX,CAACykB,EAAW,CACb,AAACzkB,CAAAA,AARO,IAAI,AAQN,CAACykB,EAAW,EAAI,CAAA,EAAMpb,CAAAA,EAAUyT,gBAAgB,EAAI,CAAC9c,AARnD,IAAI,CAQqDgL,QAAQ,CACrE3B,EAAUtH,MAAM,CAAGsH,EAAUyB,eAAe,CAC5C,CAAA,EAAKzB,EAAUgC,gBAAgB,CAAC1G,MAAM,AAClD,GAAIa,EAASoV,EAAW,WAAY,SAAU9N,CAAC,EAC3C,IAAI,CAAC9M,KAAK,CAACgJ,KAAK,CAAC,EAAE,CAACwK,WAAW,CAAC1G,EAAEtN,GAAG,CAAEsN,EAAExN,GAAG,CAAEwN,EAAEV,MAAM,CAAEU,EAAE3J,SAAS,CAAE2J,EAAE4R,cAAc,CACzF,GACJ,EAOA9D,EAAU9b,SAAS,CAACuG,OAAO,CAAG,WAC1B,IAAI0d,EAAQ,IAAI,CAEhB,IAAI,CAAClL,YAAY,GACb,IAAI,CAAC7O,KAAK,GACVqR,EAAM,IAAI,CAACra,KAAK,CAACgJ,KAAK,CAAE,IAAI,CAACA,KAAK,EAClCqR,EAAM,IAAI,CAACra,KAAK,CAAC0kB,IAAI,CAAE,IAAI,CAAC1b,KAAK,GAEjC,IAAI,CAACE,KAAK,GACVmR,EAAM,IAAI,CAACra,KAAK,CAACkJ,KAAK,CAAE,IAAI,CAACA,KAAK,EAClCmR,EAAM,IAAI,CAACra,KAAK,CAAC0kB,IAAI,CAAE,IAAI,CAACxb,KAAK,GAGrC,AAAC,CAAA,IAAI,CAACjJ,MAAM,EAAI,EAAE,AAAD,EAAGgW,OAAO,CAAC,SAAUoL,CAAC,EAC/BA,EAAEhc,OAAO,EACTgc,EAAEhc,OAAO,EAEjB,GAEA,CACI,SAAU,QAAS,QAAS,SAAU,UAAW,iBACjD,kBAAmB,iBAAkB,YAAa,iBAClD,WACH,CAAC4Q,OAAO,CAAC,SAAU6B,CAAI,EAChBiL,CAAK,CAACjL,EAAK,EAAIiL,CAAK,CAACjL,EAAK,CAACzS,OAAO,EAClC0d,CAAK,CAACjL,EAAK,CAACzS,OAAO,GAEvB0d,CAAK,CAACjL,EAAK,CAAG,IAClB,GAEA,CAAC,IAAI,CAAC5I,OAAO,CAAC,CAAC+G,OAAO,CAAC,SAAU0O,CAAI,EACjCrP,EAAwBqP,EAC5B,EACJ,EACO/J,CACX,GAQJ,GACApd,EAAgBD,EAAU,+CAAgD,EAAE,CAAE,WA+gB1E,MAL4B,CACxBqnB,KAreO,CAMPC,kBAAmB,OAQnBC,kBAAmB,GAMnBC,gBAAiB,GACrB,EAidIvZ,cAvcgB,CAYhBwZ,kBAAmB,CAAA,EA0CnBzO,QAAS,KAAK,EAqGd0O,cAAe,EAgBfC,SAAU,aAWV7iB,QAAS,KAAK,EAadsJ,cAAe,MAqBfwZ,YAAa,CAETrjB,MAAO,GAEPC,OAAQ,GAERqjB,QAAS,EAETrkB,OAAQ,CACZ,EAWA8K,SAAU,CAAA,EAOVzN,EAAG,EAOHC,EAAG,EASH0D,OAAQ,KAAK,EAUbsjB,oBAAqB,OASrBC,eAAgB,GAWhBC,cAAe,KAAK,EAgBpBC,gBAAiB,WAiBjBC,gBAAiB,KAAK,EActBC,oBAAqB,WAIrBC,aAAc,CAAA,EAOdC,cAAe,CAWXjV,MAAO,QAIPvS,EAAG,EAIHC,EAAG,CACP,EAOAwnB,aAAc,EAQdC,SAAU,KAAK,EAMfC,eAAgB,CAWZpV,MAAO,OAIPvS,EAAG,EAIHC,EAAG,CACP,EAcA2nB,WAAY,CAERjjB,MAAO,UAEPkZ,OAAQ,UAER7V,SAAU,OACd,EAYA6f,WAAY,CAERljB,MAAO,UAEPqD,SAAU,OACd,CACJ,CASA,CAGJ,GACA5I,EAAgBD,EAAU,kDAAmD,CAACA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,+CAA+C,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUkK,CAAC,CAAE1I,CAAC,CAAEmnB,CAAqB,CAAElnB,CAAC,EAUvQ,IAcImnB,EAdAxgB,EAAiB8B,EAAE9B,cAAc,CACjCJ,EAAWxG,EAAEwG,QAAQ,CACrBC,EAAWxG,EAAEwG,QAAQ,CAAEvG,EAAUD,EAAEC,OAAO,CAAEiT,EAASlT,EAAEkT,MAAM,CAAEoI,EAAOtb,EAAEsb,IAAI,CAAEjN,EAAWrO,EAAEqO,QAAQ,CAAElO,EAAQH,EAAEG,KAAK,CAAEqL,EAAOxL,EAAEwL,IAAI,CAAE/E,EAAazG,EAAEyG,UAAU,CAM9J2gB,EAAqB,EAAE,CAuB3B,SAASC,IACL,IAaI7mB,EAAKsO,EAbLwY,EAAe,IAAI,CAACxY,KAAK,CAAErM,EAAO6kB,EAAa7kB,IAAI,CAAEnC,EAAM,IAAI,CAACA,GAAG,CAAE2G,EAAO,IAAI,CAACjG,KAAK,CAACiG,IAAI,CAE/FsgB,EAAe,SAAUrE,CAAI,CAAEsE,CAAK,EAChC,IAAIC,EAAWhlB,AAAS,SAATA,EACX,WAAa,QACbilB,EAAO,IAAIzgB,EAAKQ,IAAI,CAACyb,GACrByE,EAAa1gB,EAAKqJ,GAAG,CAACmX,EAAUC,GAKpC,OAJAzgB,EAAK2gB,GAAG,CAACH,EAAUC,EAAMC,EAAaH,GAClCG,IAAe1gB,EAAKqJ,GAAG,CAACmX,EAAUC,IAClCzgB,EAAK2gB,GAAG,CAAC,OAAQF,EAAM,GAEpBA,EAAKG,OAAO,GAAK3E,CAC5B,EAEI7U,EAASiZ,IACT9mB,EAAMF,EAAMgnB,EACZxY,EAAQwY,GAEHA,IACL9mB,EAAMF,EAAMinB,EAAajnB,EAAK,CAAEgnB,CAAAA,EAAaE,KAAK,EAAI,CAAA,GAElD,IAAI,CAACxmB,KAAK,EACV,IAAI,CAACA,KAAK,CAACwR,aAAa,CAAClS,EAAME,IAGvC,IAAIkS,EAAUlH,EAAK,IAAI,CAACkH,OAAO,CAAEsS,OAAO8C,SAAS,EAmBjD,OAlBKzZ,EAAS7N,IACVA,CAAAA,EAAMkS,CAAM,EAEZlS,GAAOkS,IACPlS,EAAMkS,EACe,KAAA,IAAV5D,GACPA,CAAAA,EAAQyY,EAAa/mB,EAAK8mB,EAAaE,KAAK,CAAA,EAEhD,IAAI,CAAC5X,MAAM,CAAGrP,KAAKC,GAAG,CAACA,EAAMsO,EAAOtD,EAAK,IAAI,CAACiH,OAAO,CAAEuS,OAAOC,SAAS,IAEtE5W,EAAS/N,GAGL,CAAC+N,EAASiZ,IACfA,GACAA,EAAaS,UAAU,EACvBvnB,CAAAA,GAAO8mB,EAAaS,UAAU,AAAD,EAL7BvnB,EAAM,KAAK,EAORA,CACX,CAwBA,SAASwnB,IACD,IAAI,CAACpnB,OAAO,CAAC4L,aAAa,EAC1B,IAAI,CAAC5L,OAAO,CAAC4L,aAAa,CAACnJ,OAAO,EAClC,CAAA,IAAI,CAACmJ,aAAa,CAAG,IAAI2a,EAAyB,IAAI,CAAA,CAE9D,CAIA,SAAS9Z,IACL,IAAkBqY,EAAO1kB,AAAb,IAAI,CAAe0kB,IAAI,CAAElZ,EAAgBxL,AAAzC,IAAI,CAA2CwL,aAAa,CACxE,GAAIA,EAAe,CACX6B,EAAS7B,EAAcyb,gBAAgB,IACvCzb,EAAc0b,WAAW,CAAC1b,EAAcyb,gBAAgB,EACxD,OAAOzb,EAAcyb,gBAAgB,EAEzCvC,EAAKzO,OAAO,CAAC,SAAUjQ,CAAI,EACvBA,EAAKmhB,WAAW,GAChBnhB,EAAKohB,QAAQ,EACjB,GACApnB,AAVQ,IAAI,CAUNqnB,cAAc,GACpB7b,EAAc1G,MAAM,GACpB,IAAI6G,EAAgBH,EAAc5L,OAAO,CAAC+L,aAAa,AAClDH,CAAAA,EAAc5L,OAAO,CAACiM,QAAQ,GAC3BF,AAAkB,WAAlBA,EACA,IAAI,CAACF,iBAAiB,CAAG,CAAA,EAEF,WAAlBE,GACL,CAAA,IAAI,CAAC2b,cAAc,CAAG,CAAA,CAAG,EAGrC,CACJ,CAIA,SAAS5a,EAAgB1M,CAAK,EAE1B,IADI2M,EAAUvD,EAAQme,EAAS5b,EAC3BH,EAAgBxL,EAAMwL,aAAa,CAAEY,EAAS,WAC1CZ,IACAmB,EAAW3M,EAAMgJ,KAAK,CAAC,EAAE,CAAC4D,WAAW,GACrCxD,EAASpJ,EAAMoJ,MAAM,CACrBuC,EAAiBH,GACbA,EAAc5L,OAAO,CAAC+L,aAAa,CACnC0B,EAASV,EAASnN,GAAG,GACrBgM,EAAc1G,MAAM,CAAC6H,EAASnN,GAAG,CAAEmN,EAASrN,GAAG,EAG/C8J,EAAOoe,OAAO,EACd7b,AAAkB,QAAlBA,GACAA,IAAkBvC,EAAOxJ,OAAO,CAAC+L,aAAa,GAE9C4b,EAAUpoB,EAAMa,EAAMynB,UAAU,EAC5Bre,AAA0B,aAA1BA,EAAOxJ,OAAO,CAACgM,MAAM,CACrB2b,EAAQlpB,CAAC,CAAG2B,EAAMoB,OAAO,CAGzBmmB,EAAQlpB,CAAC,EAAImN,EAAcE,SAAS,GAExCtC,EAAO1I,KAAK,CAACgnB,MAAM,CAAG,CAAA,EACtBte,EAAOuH,KAAK,CAAC4W,IAGzB,EACI/b,IACa8O,EAAK8L,EAAoB,SAAUtZ,CAAC,EAAI,OAAOA,CAAC,CAAC,EAAE,GAAK9M,CAAO,IAExEomB,EAAmBvf,IAAI,CAAC,CAAC7G,EAAO,CAExBwF,EAASxF,EAAMgJ,KAAK,CAAC,EAAE,CAAE,mBAAoB,SAAU8D,CAAC,EAChDtB,GACAA,EAAc1G,MAAM,CAACgI,EAAEtN,GAAG,CAAEsN,EAAExN,GAAG,CAEzC,GAEAkG,EAASxF,EAAO,SAAUoM,GAC7B,CAAC,EAGVA,IAER,CAKA,SAASub,IACL,IAAK,IAAIne,EAAI,EAAGoe,EAAOxB,EAAmB9jB,MAAM,CAAEkH,EAAIoe,EAAM,EAAEpe,EAAG,CAC7D,IAAIyU,EAASmI,CAAkB,CAAC5c,EAAE,CAClC,GAAIyU,CAAM,CAAC,EAAE,GAAK,IAAI,CAAE,CACpBA,CAAM,CAAC,EAAE,CAAChI,OAAO,CAAC,SAAUoJ,CAAM,EAAI,OAAOA,GAAU,GACvD+G,EAAmByB,MAAM,CAACre,EAAG,GAC7B,MACJ,CACJ,CACJ,CAIA,SAASse,IACL,IAAItc,EAAgB,IAAI,CAACA,aAAa,CACtC,GAAIA,EAAe,CACf,IAAIuc,EAAsBvc,EAAcE,SAAS,EAC7C,CAAA,IAAI,CAAC4b,cAAc,EACnB,CAAA,IAAI,CAAClmB,OAAO,EAAI2mB,CAAkB,EAElC,IAAI,CAACtc,iBAAiB,EACtB,CAAA,IAAI,CAACuc,YAAY,EAAID,CAAkB,CAE/C,CACJ,CAIA,SAASE,IACL,IAAkBzc,EAAgBxL,AAAtB,IAAI,CAAwBwL,aAAa,CACrD,GAAIA,GAAiB,CAACA,EAAc5L,OAAO,CAACiM,QAAQ,CAAE,CAClDL,EAAc1G,MAAM,GACpB,IAAI6G,EAAgBH,EAAc5L,OAAO,CAAC+L,aAAa,AACnDA,AAAkB,CAAA,WAAlBA,EACA,IAAI,CAACF,iBAAiB,CAAG,CAAA,EAEF,WAAlBE,GACL,CAAA,IAAI,CAAC2b,cAAc,CAAG,CAAA,CAAG,CAEjC,CACJ,CAIA,SAASza,EAAcC,CAAC,EACpB,IAAuCob,EAAuBtoB,AAAlCkN,EAAElN,OAAO,CAAiC4L,aAAa,CAAE2c,EAAuB,IAAI,CAAC1c,iBAAiB,CAAE2c,EAAoB,IAAI,CAACd,cAAc,CACvK9b,EAAgBxL,AADR,IAAI,CACUwL,aAAa,CAUvC,GATI0c,GACAA,EAAqB7lB,OAAO,EAC5B,CAACpD,EAAQuM,IACT,IAAI,CAAC5L,OAAO,CAAC4L,aAAa,GAC1B,IAAI,CAAC5L,OAAO,CAAC4L,aAAa,CAACnJ,OAAO,CAAG,CAAA,EACrC,IAAI,CAACmJ,aAAa,CAAGA,EAAgB,IAAI2a,EAAyB,IAAI,GAE1E,IAAI,CAAC1a,iBAAiB,CAAG,CAAA,EACzB,IAAI,CAAC6b,cAAc,CAAG,CAAA,EAClB9b,EAAe,CACfkB,EAAgB,IAAI,EACpB,IAAIf,EAAgB,AAACuc,GACjBA,EAAqBvc,aAAa,EAAMH,EAAc5L,OAAO,EAAI4L,EAAc5L,OAAO,CAAC+L,aAAa,AACnGH,CAAAA,EAAc5L,OAAO,CAACiM,QAAQ,GAC3BF,AAAkB,WAAlBA,EACA,IAAI,CAACF,iBAAiB,CAAG,CAAA,EAEF,WAAlBE,GACL,CAAA,IAAI,CAAC2b,cAAc,CAAG,CAAA,CAAG,GAG7B,CAAA,IAAI,CAAC7b,iBAAiB,GAAK0c,GAC3B,IAAI,CAACb,cAAc,GAAKc,CAAgB,GACxC,CAAA,IAAI,CAACrI,UAAU,CAAG,CAAA,CAAG,CAE7B,CACJ,CAUA,MAJ+B,CAC3BphB,QA1LJ,SAAiB2I,CAAS,CAAE0F,CAAU,CAAEqb,CAAkB,EAEtD,GADAlC,EAA2BkC,EACvB5iB,EAAWF,EAAU,iBAAkB,CACvC,IAAI2H,EAAaF,EAAWlO,SAAS,AACrCwI,CAAAA,EAAUxI,SAAS,CAACwpB,YAAY,CAAGjC,EACnC7gB,EAASwH,EAAY,oBAAqBga,GAC1CxhB,EAASwH,EAAY,eAAgBX,GACrC7G,EAASwH,EAAY,UAAW2a,GAChCniB,EAASwH,EAAY,aAAc8a,GACnCtiB,EAASwH,EAAY,SAAUib,GAC/BziB,EAASwH,EAAY,SAAUH,GAC/BK,EAAWC,SAAS,CAACtG,IAAI,CAAC6F,GAC1BwF,EAAOvM,EAAgB,CAAE6F,cAAe0a,EAAsB1a,aAAa,AAAC,GAC5E0G,EAAOvM,EAAeif,IAAI,CAAEsB,EAAsBtB,IAAI,CAC1D,CACJ,CA4KA,CAGJ,GACApnB,EAAgBD,EAAU,uCAAwC,CAACA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,kDAAkD,CAAEA,CAAQ,CAAC,kCAAkC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAU0c,CAAI,CAAExS,CAAC,CAAE1I,CAAC,CAAEwpB,CAAwB,CAAEC,CAAU,CAAExpB,CAAC,EAUhW,IAAI2G,EAAiB8B,EAAE9B,cAAc,CACjCH,EAAWxG,EAAEwG,QAAQ,CAAEijB,EAAgBzpB,EAAEypB,aAAa,CAAEpM,EAAMrd,EAAEqd,GAAG,CAAEpd,EAAUD,EAAEC,OAAO,CAAEqW,EAA0BtW,EAAEsW,uBAAuB,CAAEoT,EAAiB1pB,EAAE0pB,cAAc,CAAExW,EAASlT,EAAEkT,MAAM,CAAEqD,EAAYvW,EAAEuW,SAAS,CAAElI,EAAWrO,EAAEqO,QAAQ,CAAElO,EAAQH,EAAEG,KAAK,CAAEC,EAAaJ,EAAEI,UAAU,CAAEupB,EAAM3pB,EAAE2pB,GAAG,CAAEne,EAAOxL,EAAEwL,IAAI,CAAEoe,EAAO5pB,EAAE4pB,IAAI,CAAEngB,EAAQzJ,EAAEyJ,KAAK,CA6C3VogB,EAA+B,WAM/B,SAASA,EAAc7oB,CAAK,EACxB,IAAI,CAAC8oB,aAAa,CAAGD,EAAc/pB,SAAS,CAACiqB,cAAc,CAC3D,IAAI,CAACC,uBAAuB,CAAG,EAC/B,IAAI,CAAChpB,KAAK,CAAGA,EACb,IAAI,CAACH,IAAI,CAACG,EACd,CAs2CA,OA71CA6oB,EAAclqB,OAAO,CAAG,SAAU2I,CAAS,CAAE0F,CAAU,EACnDub,EAAyB5pB,OAAO,CAAC2I,EAAW0F,EAAY6b,EAC5D,EAgBAA,EAAc/pB,SAAS,CAACooB,WAAW,CAAG,SAAU1d,CAAC,CAAE4C,CAAM,EACrD,IACsEsC,EACtEua,EAA+CC,EAAUC,EAAYC,EAAcC,EAAKC,EAF9DtpB,EAAQwL,AAAd,IAAI,CAAwBxL,KAAK,CAAEsmB,EAAe9a,AAAlD,IAAI,CAA4Dsd,aAAa,CAACtf,EAAE,CAAEwX,EAAWhhB,EAAMgJ,KAAK,CAAC,EAAE,CAAEkW,EAAgB,AAAClf,EAAMmM,QAAQ,EAAInM,EAAMmM,QAAQ,CAACsS,gBAAgB,IAAOuC,GAAY,CAAC,EAAGvf,EAAO6kB,EAAa7kB,IAAI,CAAEoO,EAAeyW,EAAazW,YAAY,CACxR6B,EAAUwN,EAAcxN,OAAO,CAAED,EAAUyN,EAAczN,OAAO,CAAU7C,EAASoS,GAAYzhB,KAAKgS,KAAK,CAAChS,KAAKC,GAAG,CAACwhB,EAAS1hB,GAAG,CAAEkL,EAAKiH,EAASuP,EAAS1hB,GAAG,IAC7IwO,EAAQwY,EAAaiD,MAAM,CAAwDC,EAAe,CAAA,EAEpH,GAAI9X,AAAY,OAAZA,GAAoBD,AAAY,OAAZA,GAWxB,GARAjG,AAPoB,IAAI,CAOVie,WAAW,CAACjgB,GAEtBqG,IACA,IAAI,CAAC6Z,kBAAkB,CAAG,CAAA,EAC1BzP,EAAKnb,SAAS,CAAC6qB,eAAe,CAACtiB,IAAI,CAAC2Z,GAAY,CAAEhhB,MAAO,IAAI,CAACA,KAAK,AAAC,EAAG6P,EAAc,CAAA,GACrF,IAAI,CAAC+Z,YAAY,CAAGtD,EAAauD,oBAAoB,EAGrDpoB,AAAS,UAATA,GAAoBA,AAAS,SAATA,EACfuf,GAMDqI,EAAM,CACFvb,MAAOwY,EACPhnB,IAAKsP,EACL5O,MAAOA,EACP0R,QAASA,EACTD,QAASA,CACb,EACA/C,EAASsS,EAASsH,YAAY,CAACjhB,IAAI,CAACgiB,GAChChc,EAASgc,EAAIza,MAAM,GACnBA,CAAAA,EAASya,EAAIza,MAAM,AAAD,EAItB4a,EAAe,CAAA,GAhBf1b,EAAQwY,OAoBX,GAAIxY,EAELc,EAASrP,KAAKC,GAAG,CAACkP,AADlBA,CAAAA,EAASnP,KAAKD,GAAG,CAACsP,EAASd,EAAO4D,EAAO,EACd5D,EAAO2D,GAClC+X,EAAe,CAAA,OAEd,GAAI/nB,AAAS,QAATA,GAGL,GAAIuf,EAMI,CAAA,AAAmB,KAAA,IAAZvP,GACP,AAAmB,KAAA,IAAZC,CAAsB,IAC7BA,EAAUsS,OAAOC,SAAS,CAC1BxS,EAAUuS,OAAO8C,SAAS,CAC1B9mB,EAAMC,MAAM,CAACgW,OAAO,CAAC,SAAUhW,CAAM,EAEjC,IAAIojB,EAAQpjB,EAAOojB,KAAK,CACpBA,IACA3R,EAAUnS,KAAKC,GAAG,CAAC6jB,CAAK,CAAC,EAAE,CAAE3R,GAC7BD,EAAUlS,KAAKD,GAAG,CAAC+jB,CAAK,CAACA,EAAM/gB,MAAM,CAAG,EAAE,CAAEmP,GAEpD,GACArF,EAAS,CAAA,GAGbsC,EAASwa,EAAWI,AADpBA,CAAAA,EAAc9d,AAnEF,IAAI,CAmEYse,cAAc,CAACrY,EAASC,EAAS1R,EAAMiG,IAAI,CAAC8jB,MAAM,CAAA,EAC9CvqB,GAAG,CACnCoP,EAAS0a,EAAYhqB,GAAG,KAKvB,CACDkM,AA3EY,IAAI,CA2EFyb,gBAAgB,CAAGzd,EACjC,MACJ,MAEc,QAAT/H,GAAkBuf,IAGnBhhB,EAAMqJ,SAAS,EAAIrJ,EAAMqJ,SAAS,CAACoT,UAAU,CAAC,EAAE,EAChDzc,CAAAA,EAAMqJ,SAAS,CAACoT,UAAU,CAAC,EAAE,CAACzT,KAAK,CAACpJ,OAAO,CAACkO,KAAK,CAAG,KAAK,CAAA,EAE7DY,EAASgD,EACT9C,EAAS6C,GAET+X,GAAgBlD,EAAaS,UAAU,EAAI9nB,EAAQyP,IACnDA,CAAAA,GAAU4X,EAAaS,UAAU,AAAD,EAEhCT,EAAa0D,UAAU,EAAI/qB,EAAQ2P,IACnCA,CAAAA,GAAU0X,EAAa0D,UAAU,AAAD,EAEhC,IAAI,CAAC9E,QAAQ,EACb,CAAA,IAAI,CAACA,QAAQ,CAAC+E,aAAa,CAAGzgB,EAAI,CAAA,EAGjCwX,GAgBDA,EAASxN,WAAW,CAAC9E,EAAQE,EAAQpE,EAAK4B,EAAQ,CAAA,GAAO,KAAK,EAC9D,CACIyB,QAAS,sBACTqc,oBAAqB5D,CACzB,GACAtmB,EAAMwR,aAAa,CAAC8U,EAAaiD,MAAM,IAjBvCH,EAAeH,AADfA,CAAAA,EAAmBxgB,EAAMzI,EAAMJ,OAAO,CAACoJ,KAAK,CAAC,CAAC,EAAE,AAAD,EACf8E,KAAK,CACrCmb,EAAiBnb,KAAK,CAAGA,EACzBqb,EAAaF,EAAiBzpB,GAAG,CACjCypB,EAAiBzpB,GAAG,CAAG0pB,EACvB1jB,EAASxF,EAAO,OAAQ,WACpBA,EAAMwR,aAAa,CAAC8U,EAAaiD,MAAM,EACvCN,EAAiBnb,KAAK,CAAGsb,EACzBH,EAAiBzpB,GAAG,CAAG2pB,CAC3B,IAWJ5T,EAAU,IAAI,CAAE,iBACpB,EASAsT,EAAc/pB,SAAS,CAAC2qB,WAAW,CAAG,SAAU3D,CAAQ,EACpD,IAAI,CAACA,QAAQ,CAAG,IAAI,CAAClmB,OAAO,CAACkmB,QAAQ,CAAGA,CAC5C,EAQA+C,EAAc/pB,SAAS,CAACe,IAAI,CAAG,SAAUG,CAAK,EAC1C,IAAIwL,EAAgB,IAAI,CAAE5L,EAAUI,EAAMJ,OAAO,CAAC4L,aAAa,CAAEsd,EAAiBlpB,EAAQ2W,OAAO,EAAI/K,EAAcud,cAAc,CAACrG,KAAK,GAAKyH,EAAiBvqB,EAAQkmB,QAAQ,CAAEsE,EAAa,WACxL,IAAIC,EAAW7e,EAAc6e,QAAQ,CAAEC,EAAW9e,EAAc8e,QAAQ,CAEpED,GAAcA,EAASE,IAAI,EAC3BhV,EAAU8U,EAAU,QAEpBC,GAAcA,EAASC,IAAI,EAC3BhV,EAAU+U,EAAU,OAE5B,CACA9e,CAAAA,EAAcxL,KAAK,CAAGA,EACtBwL,EAAc5L,OAAO,CAAGA,EACxB4L,EAAc+K,OAAO,CAAG,EAAE,CAC1B/K,EAAcsd,aAAa,CAAGA,EAC9B,IAAI,CAACpL,cAAc,CAAG,EAAE,CACxB,IAAI,CAACA,cAAc,CAAC7W,IAAI,CAACrB,EAASxF,EAAMyd,SAAS,CAAE,YAAa2M,IAChE,IAAI,CAAC1M,cAAc,CAAC7W,IAAI,CAACrB,EAASxF,EAAO,SAAUoqB,IAEnDtB,EAAc7S,OAAO,CAACzK,EAAcgf,kBAAkB,EAExB,KAAA,IAAnBL,GACPrB,CAAa,CAACqB,EAAe,EAC7B,IAAI,CAACjD,WAAW,CAACiD,EAAgB,CAAA,GAErC,IAAI,CAACzM,cAAc,CAAC7W,IAAI,CAACrB,EAASxF,EAAO,OAAQ,WAGzCA,EAAMgJ,KAAK,EAAIhJ,EAAMgJ,KAAK,CAAC,EAAE,EAC7BxD,EAASxF,EAAMgJ,KAAK,CAAC,EAAE,CAAE,cAAe,SAAU8D,CAAC,EAC3CO,EAAS,IAAI,CAAC/N,GAAG,GACjB+N,EAAS,IAAI,CAAC7N,GAAG,GACjB,IAAI,CAACF,GAAG,CAAG,IAAI,CAACE,GAAG,GAAKQ,EAAM2R,UAAU,EACxC7E,AAAc,wBAAdA,EAAEe,OAAO,EACTf,AAAc,gBAAdA,EAAEe,OAAO,EACTrC,EAAcke,kBAAkB,EAChC,CAACle,EAAcoe,YAAY,EAC3B,IAAI,CAACD,eAAe,CAAC,CAAA,EAAO,CAAA,EAEpC,EAER,GACJ,EAQAd,EAAc/pB,SAAS,CAAC2rB,kBAAkB,CAAG,WACzC,IAAIjf,EAAgB,IAAI,CAAExL,EAAQ,IAAI,CAACA,KAAK,CAAEklB,EAAW,IAAI,CAACA,QAAQ,CAAElE,EAAWhhB,EAAMgJ,KAAK,CAAC,EAAE,CAAE0hB,EAAcnrB,KAAKgS,KAAK,CAACyP,EAAS1hB,GAAG,CAAG0hB,EAASxhB,GAAG,EAAGmrB,EAAY,CAAC3J,EAAS4J,gBAAgB,CAAEC,EAAM,GAAK,KAC7M3L,EAAgB,AAAClf,EAAMmM,QAAQ,EAC3BnM,EAAMmM,QAAQ,CAACsS,gBAAgB,IAAOuC,EAAUtP,EAAUwN,EAAcxN,OAAO,CAAED,EAAUyN,EAAczN,OAAO,CAAE6X,EAAc9d,EAAcse,cAAc,CAACrY,EAASC,EAAS1R,EAAMiG,IAAI,CAAC8jB,MAAM,EAAGe,EAASxB,EAAY9pB,GAAG,CAAEurB,EAASzB,EAAYhqB,GAAG,CAAEwmB,EAAWta,EAAcsa,QAAQ,CAAEd,EAAoBxZ,EAAc5L,OAAO,CAAColB,iBAAiB,CAAEzO,EAAU/K,EAAc+K,OAAO,CACtXyU,EAAiB3d,EAASyY,GAAWmF,EAAqB,CAAA,EAC9Dzf,EAAcsd,aAAa,CAAC7S,OAAO,CAAC,SAAUqQ,CAAY,CAAE9c,CAAC,EAEzD,IADIC,EACAqE,EAAQwY,EAAaiD,MAAM,CAAE9nB,EAAO6kB,EAAa7kB,IAAI,CAAE+kB,EAAQF,EAAaE,KAAK,EAAI,EAAG0E,EAAS3U,CAAO,CAAC/M,EAAE,CAAE2hB,EAAc7E,EAAa0D,UAAU,CAClJ1D,EAAaS,UAAU,CAAEqE,EAAa5hB,IAAMsc,EAGhDuF,EAAkBvd,EACd2D,EAAUC,EAGd4Z,EAAkBxd,EAAQkT,EAASjE,QAAQ,CACvCwO,EAAQ,EAEZC,EAAsB,CAAA,EAEtBC,EAA4B,CAAA,EAAOC,EAAc5d,IAAU4c,EAI3D,GAHIU,GAAcC,GACdJ,CAAAA,EAAqB,CAAA,CAAG,EAExBjK,EAAS2K,SAAS,EACjB,CAAA,AAA4B,OAA3BliB,CAAAA,EAAKuX,EAASf,OAAO,AAAD,GAAexW,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGmiB,SAAS,AAAD,GACzE9d,GACA4c,EAAc5c,EAAO,CAErB,IAAI8d,EAAY5K,EAASf,OAAO,CAAC2L,SAAS,AACtCA,CAAAA,CAAS,CAACA,EAAUtpB,MAAM,CAAG,EAAE,CAAGspB,CAAS,CAAC,EAAE,CAAG9d,GACjD4d,CAAAA,EAAc,CAAA,CAAG,CAEzB,KAGA,AAACjqB,CAAAA,AAAS,UAATA,GAAoBA,AAAS,SAATA,CAAc,GAC9BipB,EAAc,MACX,CAAA,CAAEmB,MAAO,GAAIC,KAAM,GAAI,CAAA,CAAC,CAACrqB,EAAK,CAAGopB,EAAMrE,EAAQ2E,GAClDT,EAAc,MACX,CAAA,CAAEmB,MAAO,GAAIC,KAAM,GAAI,CAAA,CAAC,CAACrqB,EAAK,CAAGopB,EAAMrE,EAAQ2E,EACnDO,EAAc,CAAA,EAETjqB,AAAS,QAATA,GACLiqB,EAAc,AAACX,EAASD,EAASK,IAAiBT,EAClDc,EAAsB,CAACJ,GAET,QAAT3pB,IACLiqB,EAAe1K,EAAS1hB,GAAG,CAAG0hB,EAASxhB,GAAG,EACtCiS,EAAUC,EACd+Z,EAA6B,CAACL,GAC1BJ,GACAU,GAMR,IAAIK,EAAW,CAAC/G,GACZ,CAAEiG,CAAAA,GAAsBxpB,AAAS,QAATA,CAAa,GACpC4pB,CAAAA,GACGC,GACAG,GACAd,CAAQ,EACZqB,EAAU,AAACf,GAAsBxpB,AAAS,QAATA,GAChC2pB,GAAcM,GACdA,GAAe,CAACV,GAAkB,CAACQ,GACnCJ,GAAc5f,EAAcoe,YAAY,CACzCmC,EACAR,EAAQ,EAEHS,IACLhB,EAAiB,CAAA,EACjBO,EAAQ,GAGRL,EAAOK,KAAK,GAAKA,IACjBL,EAAOe,QAAQ,CAACV,GACZrG,IACAA,EAAStlB,OAAO,CAAC4J,EAAI,EAAE,CAAC0iB,QAAQ,CAAGH,EACrB,IAAVR,GACArG,CAAAA,EAAS+E,aAAa,CAAGzgB,EAAI,CAAA,GAIjC+hB,AAAU,IAAVA,GAAezF,IAAatc,EAC5BgC,EAAcie,WAAW,GAEpB,CAAA,AAAW,IAAV8B,GAAe,CAACtsB,EAAQ6mB,IAC9BmF,CAAiB,GACjBzf,EAAcie,WAAW,CAACjgB,GAGtC,EACJ,EAQAqf,EAAc/pB,SAAS,CAAC0rB,kBAAkB,CAAG,SAAUlE,CAAY,EAC/D,IAAI7kB,EAAO6kB,EAAa7kB,IAAI,CAAE+kB,EAAQF,EAAaE,KAAK,EAAI,EAG5D2F,EAAa,CACTC,YAAa,EACbC,OAAQ,IACRC,OAAQ,IACRC,KAAM,KACN1B,IAAK,MACL2B,KAAM,MACV,CAEIL,CAAAA,CAAU,CAAC1qB,EAAK,CAChB6kB,EAAaiD,MAAM,CAAG4C,CAAU,CAAC1qB,EAAK,CAAG+kB,EAEpC/kB,CAAAA,AAAS,UAATA,GAAoBA,AAAS,SAATA,CAAc,GACvC6kB,CAAAA,EAAaiD,MAAM,CAAG,AAGZ,GAHY,CAAA,CAClBsC,MAAO,GACPC,KAAM,GACV,CAAA,CAAC,CAACrqB,EAAK,CAAQ,KAAO+kB,CAAI,EAE9BF,EAAaS,UAAU,CAAGvc,EAAK8b,EAAamG,SAAS,CAAE,GACvDnG,EAAa0D,UAAU,CAAGxf,EAAK8b,EAAaoG,SAAS,CAAE,GACvDpG,EAAaiD,MAAM,EACfjD,EAAa0D,UAAU,CAAG1D,EAAaS,UAAU,AACzD,EAOA8B,EAAc/pB,SAAS,CAAC6tB,aAAa,CAAG,SAAUzO,CAAI,EAClD,IAAI0O,EAAQ1O,AAAS,QAATA,EAAiB,IAAI,CAACmM,QAAQ,CAAG,IAAI,CAACC,QAAQ,CACtD1qB,EAAU,IAAI,CAACI,KAAK,CAACJ,OAAO,CAC3B4L,aAAa,CACdvF,EAAO,IAAI,CAACjG,KAAK,CAACiG,IAAI,QAC1B,AAAI2mB,EACO,AAAC,CAAA,AAAgB,SAAfA,EAAMnrB,IAAI,EAAe7B,EAAQ6lB,eAAe,EACrD,IAAI,CAACoH,sBAAsB,AAAD,EAAGD,EAAM7mB,KAAK,CAAEE,EAAK8jB,MAAM,CAAE9jB,GAExD,CACX,EAOA4iB,EAAc/pB,SAAS,CAACguB,aAAa,CAAG,SAAU5O,CAAI,CAAE6O,CAAS,EAC7D,IAAIntB,EAAU,IAAI,CAACA,OAAO,CAAEqG,EAAO,IAAI,CAACjG,KAAK,CAACiG,IAAI,CAAE2mB,EAAQ1O,AAAS,QAATA,EAAiB,IAAI,CAACmM,QAAQ,CAAG,IAAI,CAACC,QAAQ,CAAE0C,EAAU9O,AAAS,QAATA,EAAiB,IAAI,CAAC+O,UAAU,CAAG,IAAI,CAACC,UAAU,CACxK,GAAIN,EAAO,CACP,IAAIO,EAAaP,EAAMQ,YAAY,CAAC,gBAChCC,EAAcpuB,EAAQkuB,GAAcnJ,OAAOmJ,GAAc,KAAK,EAClE,GAAIluB,EAAQ8tB,GAAY,CACpB,IAAIO,EAAeD,EACfpuB,EAAQquB,IACRV,EAAMW,YAAY,CAAC,wBAAyBD,GAEhDV,EAAMW,YAAY,CAAC,eAAgBR,GACnCM,EAAcN,CAClB,CACAH,EAAM7mB,KAAK,CAAGE,EAAKC,UAAU,CAAE,IAAI,CAACsnB,gBAAgB,CAACZ,EAAMnrB,IAAI,CAAC,EAC5D7B,EAAQ8lB,mBAAmB,CAAG2H,GAC9BL,GACAA,EAAQlsB,IAAI,CAAC,CACTiG,KAAMd,EAAKC,UAAU,CAACtG,EAAQ4lB,eAAe,CAAE6H,EACnD,EAER,CACJ,EAOAxE,EAAc/pB,SAAS,CAAC2uB,gBAAgB,CAAG,SAAUvP,CAAI,CAAE1e,CAAG,CAAEF,CAAG,EAC/D,IAAIstB,EAAQ1O,AAAS,QAATA,EAAiB,IAAI,CAACmM,QAAQ,CAAG,IAAI,CAACC,QAAQ,CAC1D,GAAIsC,EAAO,CACP,IAAI/mB,EAAS,IAAI,CAAC2nB,gBAAgB,CAACZ,EAAMnrB,IAAI,CAAC,CAC1CwE,EAAO,IAAI,CAACjG,KAAK,CAACiG,IAAI,CAC1B,GAAIJ,EAAQ,CACR,IAAI6I,EAASzI,EAAKC,UAAU,CAACL,EAAQrG,EACjCotB,CAAAA,EAAMptB,GAAG,GAAKkP,GACdke,CAAAA,EAAMptB,GAAG,CAAGkP,CAAK,EAErB,IAAIE,EAAS3I,EAAKC,UAAU,CAACL,EAAQvG,EACjCstB,CAAAA,EAAMttB,GAAG,GAAKsP,GACdge,CAAAA,EAAMttB,GAAG,CAAGsP,CAAK,CAEzB,CACJ,CACJ,EAMAia,EAAc/pB,SAAS,CAAC4uB,SAAS,CAAG,SAAUxP,CAAI,EAC9C,IAAI8O,EAAU9O,AAAS,QAATA,EAAiB,IAAI,CAAC+O,UAAU,CAAG,IAAI,CAACC,UAAU,CAAEN,EAAQ1O,AAAS,QAATA,EAAiB,IAAI,CAACmM,QAAQ,CAAG,IAAI,CAACC,QAAQ,CACxH,GAAIsC,GAASI,GAAW,IAAI,CAACW,UAAU,CAAE,CACrC,IAAIC,EAAchB,AAAe,SAAfA,EAAMnrB,IAAI,CAAagI,EAAK,IAAI,CAACkkB,UAAU,CAAEjkB,EAAKD,EAAGwP,UAAU,CAAEA,EAAavP,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAKF,EAAGyP,UAAU,CAAEA,EAAavP,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIkkB,EAAKb,EAAQ5uB,CAAC,CAAEA,EAAIyvB,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAKd,EAAQlrB,KAAK,CAAEA,EAAQgsB,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAKf,EAAQjrB,MAAM,CAAEA,EAASgsB,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIxI,EAAgB,IAAI,CAAC3lB,OAAO,CAAC2lB,aAAa,CACjXlJ,EAAIuQ,EAAO,CACP9qB,MAAO8rB,EACF,AAAC9rB,EAASyjB,CAAAA,EAAgB,GAAK,EAAC,EAAM,KACvC,OACJxjB,OAAQ,AAACA,EAAS,EAAK,KACvBisB,OAAQ,kBACZ,GACIJ,GAAerI,EACflJ,EAAIuQ,EAAO,CACP3hB,KAAM,AAACgO,EAAa7a,EAAK,KACzBgN,IAAK8N,EAAa,IACtB,GAKAmD,EAAIuQ,EAAO,CACP3hB,KAAM1L,KAAKC,GAAG,CAACD,KAAKgS,KAAK,CAACnT,EACtB6a,EACA,AAAC2T,CAAAA,EAAMqB,WAAW,CAAGnsB,CAAI,EAAK,GAAI,IAAI,CAAC9B,KAAK,CAACkL,UAAU,CAAG0hB,EAAMqB,WAAW,EAAI,KACnF7iB,IAAK,AAAC8N,EAAa,AAAC0T,CAAAA,EAAMsB,YAAY,CAAGnsB,CAAK,EAAK,EAAK,IAC5D,EAER,CACJ,EAMA8mB,EAAc/pB,SAAS,CAACqvB,SAAS,CAAG,SAAUjQ,CAAI,EAC9C,IAAI0O,EAAQ1O,AAAS,QAATA,EAAiB,IAAI,CAACmM,QAAQ,CAAG,IAAI,CAACC,QAAQ,CACtDsC,GACAvQ,EAAIuQ,EAAO,CACPxhB,IAAK,UACL4iB,OAAQ,EACRlsB,MAAO,MACPC,OAAQ,KACZ,EAER,EAKA8mB,EAAc/pB,SAAS,CAAC+tB,sBAAsB,CAAG,SAAUuB,CAAS,CAAErE,CAAM,CAAE9jB,CAAI,EAM9E,IAL4BooB,EAKxBzB,EAAQwB,EAAUE,KAAK,CAAC,KAAKC,IAAI,CAAC,KAAKD,KAAK,CAAC,KAAKC,IAAI,CAAC,KAI3D,GAH2B,KAAvB3B,EAAMxlB,OAAO,CAAC,MACdwlB,CAAAA,GAAS,QAAO,EAEhB7C,EACA6C,GAAS,SAER,GAAI7tB,EAAEyvB,QAAQ,EAAI,CAXZH,CAAAA,CADiBA,EAYQzB,GAXrBtqB,MAAM,CAAG,GACf+rB,CAAAA,EAAII,WAAW,CAAC,OAASJ,EAAI/rB,MAAM,CAAG,GACnC+rB,EAAII,WAAW,CAAC,OAASJ,EAAI/rB,MAAM,CAAG,CAAA,CAAC,EASP,CACxC,IAAIsR,EAAS,IAAInN,KAAKmmB,GAAO8B,iBAAiB,GAAK,GACnD9B,GAAShZ,GAAU,EAAI,IAAIxO,MAAM,CAACujB,EAAI,CAAC/U,GAAS,OAAS,IAAIxO,MAAM,CAACujB,EAAI/U,GAAS,MACrF,CACA,IAAI8S,EAAOjgB,KAAKsI,KAAK,CAAC6d,GAItB,GAAI,CAACvf,EAASqZ,GAAO,CACjB,IAAIiI,EAAQP,EAAUE,KAAK,CAAC,KAC5B5H,EAAOjgB,KAAKmoB,GAAG,CAAChG,EAAK+F,CAAK,CAAC,EAAE,EAAG/F,EAAK+F,CAAK,CAAC,EAAE,EAAI,EAAG/F,EAAK+F,CAAK,CAAC,EAAE,EACrE,CAIA,OAHI1oB,GAAQ8jB,GAAU1c,EAASqZ,IAC3BA,CAAAA,GAAQzgB,EAAKyoB,iBAAiB,CAAChI,EAAI,EAEhCA,CACX,EAOAmC,EAAc/pB,SAAS,CAAC+vB,SAAS,CAAG,SAAU3Q,CAAI,EAC9C,IAAele,EAAQyJ,AAAd,IAAI,CAAazJ,KAAK,CAAE8uB,EAAMrlB,AAA9B,IAAI,CAA6BqlB,GAAG,CAAEnB,EAAalkB,AAAnD,IAAI,CAAkDkkB,UAAU,CACrEniB,EAAgB,IAAI,CAAEujB,EAAa/uB,EAAMW,QAAQ,CAACwF,KAAK,EAAI,CAAC,EAAGxF,EAAWX,EAAMW,QAAQ,CAAEf,EAAUI,EAAMJ,OAAO,CAAC4L,aAAa,CAAEoZ,EAAOjf,EAAeif,IAAI,CAAEoK,EAAQ9Q,AAAS,QAATA,EAIzK,SAAS+Q,IACL,IAAI3E,EAAW9e,EAAc8e,QAAQ,CAAED,EAAW7e,EAAc6e,QAAQ,CAAE6E,EAAYlvB,EAAMgJ,KAAK,CAAC,EAAE,CAAEkW,EAAgB,AAAClf,EAAMmM,QAAQ,EAAInM,EAAMmM,QAAQ,CAACsS,gBAAgB,IAAOyQ,EAAWxd,EAAUwN,EAAcxN,OAAO,CAAED,EAAUyN,EAAczN,OAAO,CACtP1L,EAAQyF,EAAcmhB,aAAa,CAACzO,GACpCnY,IAAUie,OAAO4I,EAAMQ,YAAY,CAAC,2BACpC/f,EAAStH,KACT6mB,EAAMW,YAAY,CAAC,wBAAyBxnB,GAGxCipB,GAAS1E,GAAYjd,EAASqE,GAC1B3L,EAAQie,OAAOsG,EAAS8C,YAAY,CAAC,iBACrCrnB,EAAQ,KAAK,EAERA,EAAQ2L,GACb3L,CAAAA,EAAQ2L,CAAM,EAGb2Y,GAAYhd,EAASoE,KACtB1L,EAAQie,OAAOqG,EAAS+C,YAAY,CAAC,iBACrCrnB,EAAQ,KAAK,EAERA,EAAQ0L,GACb1L,CAAAA,EAAQ0L,CAAM,GAID,KAAA,IAAV1L,GACPmpB,EAAU1b,WAAW,CAACwb,EAAQjpB,EAAQmpB,EAAU1vB,GAAG,CAAEwvB,EAAQE,EAAU5vB,GAAG,CAAGyG,EAAO,KAAK,EAAG,KAAK,EAAG,CAAE8H,QAAS,oBAAqB,GAGhJ,CAEA,IAAI9G,EAAO6d,CAAI,CAACoK,EAAQ,oBAAsB,kBAAkB,EAAI,GAChEppB,EAAQjF,EACPiF,KAAK,CAACmB,EAAM,GACZlG,QAAQ,CAAC,0BACTC,IAAI,CAAC,CACNskB,QAASre,EAAO,EAAI,EACpBhF,OAAQgF,EAAOnH,EAAQ0lB,cAAc,CAAG,CAC5C,GACKtkB,GAAG,CAAC2sB,GAGLX,EAAUrsB,EACTiF,KAAK,CAAC,GAAI,GACV/E,QAAQ,CAAC,0BACTC,IAAI,CAAC,CACNskB,QAAS,EACTtjB,MAAOlC,EAAQ2lB,aAAa,CAC5BxjB,OAAQnC,EAAQ0lB,cAAc,CAC9B,aAAc,QAClB,GACK6J,EAAE,CAAC,QAAS,WAGb3jB,EAAckiB,SAAS,CAACxP,GACxB1S,CAAa,CAAC0S,EAAO,QAAQ,CAACkR,KAAK,EACvC,EACKpvB,CAAAA,EAAMK,UAAU,EACjB2sB,EAAQlsB,IAAI,CAAC,CACTkC,OAAQpD,EAAQylB,mBAAmB,CACnC,eAAgB,CACpB,GAEJ2H,EAAQhsB,GAAG,CAAC2sB,GAGZ,IAAIf,EAAQnE,EAAc,QAAS,CAC/BvK,KAAMA,EACNvX,UAAW,2BACf,EAAG,KAAK,EAAGmoB,GAGXlC,EAAMW,YAAY,CAAC,OAAQ8B,AApnBnC,SAA4BxpB,CAAM,EAE9B,GADSA,AAAyB,KAAzBA,EAAOuB,OAAO,CAAC,MAEpB,MAAO,OAEX,IAAIsf,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,CAC7D4I,IAAI,CAAC,SAAUC,CAAI,EAAI,OAAO1pB,AAA+B,KAA/BA,EAAOuB,OAAO,CAAC,IAAMmoB,EAAc,GAClEtpB,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,CACpCqpB,IAAI,CAAC,SAAUC,CAAI,EAAI,OAAO1pB,AAA+B,KAA/BA,EAAOuB,OAAO,CAAC,IAAMmoB,EAAc,UACtE,AAAI7I,GAAQzgB,EACD,iBAEPygB,EACO,OAEPzgB,EACO,OAEJ,MACX,EAimBsDrG,EAAQ4lB,eAAe,EAAI,aACpExlB,EAAMK,UAAU,GAEjBuF,EAAMyW,GAAG,CAACld,EAAM4vB,EAAYnvB,EAAQqmB,UAAU,GAC9C+G,EAAQ3Q,GAAG,CAACld,EAAM,CACd4D,MAAO,SACX,EAAGgsB,EAAYnvB,EAAQomB,UAAU,GACjC3J,EAAIuQ,EAAO1a,EAAO,CACd6B,SAAU,WACVia,OAAQ,EACRwB,UAAW,2BACX1tB,MAAO,MACPC,OAAQ,MACRqjB,QAAS,EACTqK,UAAW,SACXrpB,SAAU2oB,EAAW3oB,QAAQ,CAC7BspB,WAAYX,EAAWW,UAAU,CACjCtkB,IAAK,SACT,EAAGxL,EAAQomB,UAAU,IAGzB4G,EAAM+C,OAAO,CAAG,WACZnkB,EAAckiB,SAAS,CAACxP,EAC5B,EAEA0O,EAAMgD,MAAM,CAAG,WAEPhD,IAAU7tB,EAAE8wB,GAAG,CAACC,aAAa,EAG7Bb,IAGJzjB,EAAc2iB,SAAS,CAACjQ,GACxB1S,EAAcshB,aAAa,CAAC5O,GAC5B0O,EAAMrC,IAAI,EACd,EACA,IAAIwF,EAAU,CAAA,EA0Bd,OAxBAnD,EAAMoD,QAAQ,CAAG,WAERD,IACDd,IACAzjB,EAAc2iB,SAAS,CAACjQ,GACxB0O,EAAMrC,IAAI,GAElB,EACAqC,EAAMqD,UAAU,CAAG,SAAU/jB,CAAK,EAER,KAAlBA,EAAMgkB,OAAO,EACbjB,GAER,EACArC,EAAMuD,SAAS,CAAG,SAAUjkB,CAAK,EAC7B6jB,EAAU,CAAA,EAEN7jB,CAAAA,AAAkB,KAAlBA,EAAMgkB,OAAO,EAAWhkB,AAAkB,KAAlBA,EAAMgkB,OAAO,AAAM,GAC3CjB,GAER,EACArC,EAAMwD,OAAO,CAAG,WACZL,EAAU,CAAA,CACd,EACO,CAAE/C,QAASA,EAASJ,MAAOA,EAAOhnB,MAAOA,CAAM,CAC1D,EAQAijB,EAAc/pB,SAAS,CAACuxB,WAAW,CAAG,WAClC,IAAIrwB,EAAQ,IAAI,CAACA,KAAK,CAAEJ,EAAUI,EAAMJ,OAAO,CAAC4L,aAAa,CAAEJ,EAAMxL,AAA0B,QAA1BA,EAAQ+L,aAAa,CACtF3L,EAAMoB,OAAO,CAAGpB,EAAMgT,UAAU,CAAC,EAAE,CACnC,EACJ,MAAO,CACHsd,UAAWllB,EAAMxL,EAAQmmB,cAAc,CAAC1nB,CAAC,CACzCkyB,SAAUnlB,EAAMxL,EAAQgmB,aAAa,CAACvnB,CAAC,CAAG,EAC9C,CACJ,EAWAwqB,EAAc/pB,SAAS,CAACgrB,cAAc,CAAG,SAAUrY,CAAO,CAAEC,CAAO,CAAEqY,CAAM,EACvE,IAAI9jB,EAAO,IAAI,CAACjG,KAAK,CAACiG,IAAI,CAAES,EAAM,IAAIT,EAAKQ,IAAI,CAACgL,GAAUqa,EAAO7lB,EAAKqJ,GAAG,CAAC,WAAY5I,GAAM8pB,EAAczG,EACtG9jB,EAAKQ,IAAI,CAACmoB,GAAG,CAAC9C,EAAM,EAAG,GACvB,CAAC,IAAI7lB,EAAKQ,IAAI,CAACqlB,EAAM,EAAG,GAA0C2E,EAAK/pB,EAAImgB,OAAO,GACtF,MAAO,CACHvnB,IAAKC,KAAKC,GAAG,CAACiS,GAAWgf,EAAIA,GAC7BjxB,IAHkCD,KAAKD,GAAG,CAACoS,EAAS8e,EAIxD,CACJ,EAaA3H,EAAc/pB,SAAS,CAACgG,MAAM,CAAG,SAAUtF,CAAG,CAAEF,CAAG,EAC/C,IAAIU,EAAQ,IAAI,CAACA,KAAK,CAAEW,EAAWX,EAAMW,QAAQ,CAAE8c,EAAYzd,EAAMyd,SAAS,CAAElR,EAAevM,EAAMJ,OAAO,CAAEA,EAAU2M,EAAaf,aAAa,CAElJklB,EAAelmB,EAAK+B,EAAavM,KAAK,CAACmG,KAAK,EACxCoG,EAAavM,KAAK,CAACmG,KAAK,CAACpF,MAAM,CAAE,GAAK,EAAG4kB,EAAe/lB,EAAQ+lB,YAAY,CAAE5M,EAAW,IAAI,CAACA,QAAQ,CAC1G,GAAInZ,AAAoB,CAAA,IAApBA,EAAQyC,OAAO,EAInB,GAAI,CAAC0W,IACD,IAAI,CAACrY,KAAK,CAAGC,EAASC,CAAC,CAAC,wBACnBE,IAAI,CAAC,CACNC,OAAQ,CACZ,GACKC,GAAG,GACR,IAAI,CAAC8tB,GAAG,CAAGrG,EAAc,MAAO,KAAK,EAAG,CACpC1U,SAAU,WACVhS,OAAQ,EACRhB,OAAQ2vB,CACZ,GACI,IAAI,CAAC5H,aAAa,CAACxmB,MAAM,EACzB,IAAI,CAACquB,aAAa,GAIlBlT,EAAUmT,UAAU,EACpBnT,EAAUmT,UAAU,CAACC,YAAY,CAAC,IAAI,CAAC/B,GAAG,CAAErR,GAE5CkI,GAAc,CAEd,IAAI,CAACgI,UAAU,CAAGhtB,EAASC,CAAC,CAAC,eAAeI,GAAG,CAAC,IAAI,CAACN,KAAK,EAC1D,IAAIowB,EAAW,IAAI,CAACjC,SAAS,CAAC,MAC9B,CAAA,IAAI,CAAC5B,UAAU,CAAG6D,EAAS9D,OAAO,CAClC,IAAI,CAAC+D,QAAQ,CAAGD,EAASlrB,KAAK,CAC9B,IAAI,CAACykB,QAAQ,CAAGyG,EAASlE,KAAK,CAC9B,IAAIoE,EAAW,IAAI,CAACnC,SAAS,CAAC,MAC9B,CAAA,IAAI,CAAC3B,UAAU,CAAG8D,EAAShE,OAAO,CAClC,IAAI,CAACiE,QAAQ,CAAGD,EAASprB,KAAK,CAC9B,IAAI,CAAC0kB,QAAQ,CAAG0G,EAASpE,KAAK,AAClC,CAEJ,GAAIjH,EAAc,CAEd,IAAI,CAACmH,aAAa,CAAC,MAAOttB,GAC1B,IAAI,CAACstB,aAAa,CAAC,MAAOxtB,GAC1B,IAAI4f,EAAgB,AAAClf,EAAMmM,QAAQ,EAAInM,EAAMmM,QAAQ,CAACsS,gBAAgB,IAAOze,EAAMgJ,KAAK,CAAC,EAAE,EAAI,CAAC,EAChG,GAAI/J,EAAQigB,EAAcxN,OAAO,GAC7BzS,EAAQigB,EAAczN,OAAO,EAAG,CAChC,IAAIsL,EAAW/c,EAAMgJ,KAAK,CAAC,EAAE,CAAC+T,QAAQ,EAAI,EAC1C,IAAI,CAAC0Q,gBAAgB,CAAC,MAAOvO,EAAcxN,OAAO,CAAEnS,KAAKC,GAAG,CAAC0f,EAAczN,OAAO,CAAE,IAAI,CAACkb,aAAa,CAAC,QAAU5P,GACjH,IAAI,CAAC0Q,gBAAgB,CAAC,MAAOluB,KAAKD,GAAG,CAAC4f,EAAcxN,OAAO,CAAE,IAAI,CAACib,aAAa,CAAC,QAAU5P,EAAUmC,EAAczN,OAAO,CAC7H,CAEA,GAAI,IAAI,CAACkc,UAAU,CAAE,CACjB,IAAIuD,EAAM,EACV,CACI,IAAI,CAACH,QAAQ,CACb,IAAI,CAAC9D,UAAU,CACf,IAAI,CAACgE,QAAQ,CACb,IAAI,CAAC/D,UAAU,CAClB,CAACjX,OAAO,CAAC,SAAUrQ,CAAK,EACrB,GAAIA,EAAO,CACP,IAAI9D,EAAQ8D,EAAMurB,OAAO,GAAGrvB,KAAK,CAC7BA,IACA8D,EAAM9E,IAAI,CAAC,CAAE1C,EAAG8yB,CAAI,GACpBA,GAAOpvB,EAAQlC,EAAQimB,YAAY,CAE3C,CACJ,EACJ,CACJ,CACA,IAAI,CAACuL,aAAa,GAClB,IAAI,CAACrY,QAAQ,CAAG,CAAA,EACpB,EAQA8P,EAAc/pB,SAAS,CAAC6xB,aAAa,CAAG,WACpC,IAAI5N,EAAQ,IAAI,CACDxM,EAAU9M,AAAhB,IAAI,CAAe8M,OAAO,CAAEvW,EAAQyJ,AAApC,IAAI,CAAmCzJ,KAAK,CAAEJ,EAAU6J,AAAxD,IAAI,CAAuD7J,OAAO,CACvEglB,EAAOjf,EAAeif,IAAI,CAC1BjkB,EAAWX,EAAMW,QAAQ,CACzBwkB,EAAchmB,EAAMS,EAAQulB,WAAW,EACvCpD,EAASoD,GAAeA,EAAYpD,MAAM,CAI1CjgB,EAAQqjB,EAAYrjB,KAAK,EAAI,EACjC,QAAOqjB,EAAYrjB,KAAK,CACxB,OAAOqjB,EAAYpD,MAAM,CACzB,IAAI,CAACsP,WAAW,CAAG1wB,EAASC,CAAC,CAAC,0BAA0BI,GAAG,CAAC,IAAI,CAACN,KAAK,EACtE,IAAIwkB,EAAW,IAAI,CAACA,QAAQ,CAAGuD,EAAc,SAAU,KAAK,EAAG,CAC3D1U,SAAU,WACVjS,MAAO,MACPC,OAAQ,MACRqjB,QAAS,EACT4I,OAAQ,EACR5iB,IAAK,UACL6Q,OAAQ,UACR5a,QAAS,IACb,EAAG,IAAI,CAACytB,GAAG,EAEXtpB,EAAS0f,EAAU,aAAc,WAC7BA,EAAS/e,KAAK,CAACC,QAAQ,CAAG,MAC9B,GAEA,CACI,CAACrH,EAAEuyB,IAAI,CAAG,YAAc,aAAa,CACrC,CAACvyB,EAAEuyB,IAAI,CAAG,WAAa,aAAa,CACpC,CAAC,SAAU,QAAQ,CACtB,CAACrb,OAAO,CAAC,SAAUxM,CAAE,EAClB,IAAI/J,EAAO+J,CAAE,CAAC,EAAE,CAAE9J,EAAK8J,CAAE,CAAC,EAAE,CAC5BjE,EAAS0f,EAAUxlB,EAAM,WACrB,IAAIwrB,EAAS3U,CAAO,CAACwM,EAAMwO,kBAAkB,GAAG,CAC5CrG,GACA3V,EAAU2V,EAAOxU,OAAO,CAAE/W,GAAMD,EAExC,EACJ,GACA,IAAI,CAAC8xB,QAAQ,CAAG7wB,EACXiF,KAAK,CAAC,AAACgf,GAAQA,EAAKC,iBAAiB,EAAK,GAAI,GAC9C/jB,IAAI,CAAC,CACNskB,QAASxlB,EAAQulB,WAAW,CAACC,OAAO,CACpCrjB,OAAQnC,EAAQulB,WAAW,CAACpjB,MAAM,CAClC0vB,YAAa,EACbC,aAAc,CAClB,GACK1wB,GAAG,CAAC,IAAI,CAACqwB,WAAW,EACpB,IAAI,CAACrxB,KAAK,CAACK,UAAU,GACtB,IAAI,CAACmxB,QAAQ,CAACnV,GAAG,CAACzc,EAAQqmB,UAAU,EACpCd,CAAW,CAAC,eAAe,CAAG3a,EAAK2a,CAAW,CAAC,eAAe,CAAE,IAEpEsD,EAAc,SAAU,CACpBkJ,YAAa,IAAI,CAACH,QAAQ,CAACI,OAAO,CAClC1F,SAAU,CAAA,CACd,EAAG,KAAK,EAAGhH,GACX,IAAI,CAAC4D,aAAa,CAAC7S,OAAO,CAAC,SAAUqQ,CAAY,CAAE9c,CAAC,EAChDif,EAAc,SAAU,CACpBkJ,YAAarL,EAAand,KAAK,EAAImd,EAAavf,IAAI,AACxD,EAAG,KAAK,EAAGme,GACX3O,CAAO,CAAC/M,EAAE,CAAG7I,EACRuqB,MAAM,CAAC5E,EAAavf,IAAI,CAAE,EAAG,EAAG,SAAU+F,CAAC,EAE5C,IACI+kB,EADAC,EAAgBxL,EAAarI,MAAM,EAAIqI,EAAarI,MAAM,CAAC8T,KAAK,CAEhED,GACAD,CAAAA,EACIC,EAAazqB,IAAI,CAACif,EAAcxZ,EAAC,EAEhB,CAAA,IAArB+kB,GACA9O,EAAMmE,WAAW,CAAC1d,GAEtBuZ,EAAMiP,QAAQ,CAAG,CAAA,CACrB,EAAG7M,EAAapD,GAAUA,EAAOkQ,KAAK,CAAElQ,GAAUA,EAAOiK,MAAM,CAAEjK,GAAUA,EAAOmK,QAAQ,EACrFprB,IAAI,CAAC,CACN,aAAc,SACdgB,MAAOA,CACX,GACKd,GAAG,CAAC+hB,EAAMsO,WAAW,EACtB/K,EAAand,KAAK,EAClBoN,CAAO,CAAC/M,EAAE,CAAC1I,IAAI,CAAC,QAASwlB,EAAand,KAAK,CAEnD,EACJ,EAOA0f,EAAc/pB,SAAS,CAACsyB,aAAa,CAAG,WACpC,IAAIrO,EAAQ,IAAI,CACDsO,EAAc5nB,AAApB,IAAI,CAAmB4nB,WAAW,CAAE9a,EAAU9M,AAA9C,IAAI,CAA6C8M,OAAO,CAAEvW,EAAQyJ,AAAlE,IAAI,CAAiEzJ,KAAK,CAAEU,EAAQ+I,AAApF,IAAI,CAAmF/I,KAAK,CAAEitB,EAAalkB,AAA3G,IAAI,CAA0GkkB,UAAU,CAAE/tB,EAAU6J,AAApI,IAAI,CAAmI7J,OAAO,CAAE4xB,EAAW/nB,AAA3J,IAAI,CAA0J+nB,QAAQ,CAC3KjlB,EAAevM,EAAMJ,OAAO,CAC5BsyB,EAAoB3lB,EAAa4lB,SAAS,EAC1C5lB,AAAmC,CAAA,IAAnCA,EAAa4lB,SAAS,CAAC9vB,OAAO,EAC9BkK,EAAa6lB,UAAU,EACvB7lB,EAAa6lB,UAAU,CAACtJ,aAAa,CACrC/C,EAAiBnmB,EAAQmmB,cAAc,CAAEH,EAAgBhmB,EAAQgmB,aAAa,CAAEja,EAAgB/L,EAAQ+L,aAAa,CAGrH0mB,EAA4B,SAAU3xB,CAAK,CAAEqT,CAAQ,SACrD,AAAIme,GACAnP,EAAMuP,cAAc,CAACtyB,IACrB2L,AAAkB,QAAlBA,GACAoI,AAAmB,UAAnBA,EAASpD,KAAK,EAAiB,AAACoD,EAAS1V,CAAC,CAC1CqC,EAAMywB,OAAO,GAAGpvB,MAAM,CAAG,GACxB,AAACmwB,CAAAA,EAAiB7zB,CAAC,EAAI,CAAA,EACnB6zB,CAAAA,EAAiBnwB,MAAM,EAAI,CAAA,EAC5B/B,EAAMmL,OAAO,CAAC,EAAE,CACb,IAEJ,CACX,EACIhK,EAAWnB,EAAMmB,QAAQ,CAC7B,GAAIT,GAASqlB,GAAkBH,EAAe,CAC1C,IAAI3M,EAAa8M,EAAe3nB,CAAC,CAAG4B,EAAMmL,OAAO,CAAC,EAAE,CACpD,GAAIkmB,EAAa,CAEb,GADA,IAAI,CAACkB,eAAe,GAChB,CAAC,IAAI,CAACvJ,uBAAuB,CAAE,CAC/B,IAAIxM,EAAU,EACVgV,GACAhV,CAAAA,GAAWgV,EAASL,OAAO,GAAGrvB,KAAK,CAAG,CAAA,EAE1CyU,EAAQN,OAAO,CAAC,SAAUiV,CAAM,CAAE1hB,CAAC,EAC/BgT,GAAW0O,EAAOppB,KAAK,EAAI,EACvB0H,IAAM+M,EAAQjU,MAAM,CAAG,GACvBka,CAAAA,GAAW5c,EAAQqlB,aAAa,AAAD,CAEvC,GACA,IAAI,CAAC+D,uBAAuB,CAAGxM,CACnC,CACArb,GAAYnB,EAAMmL,OAAO,CAAC,EAAE,CAC5B,IAAI,CAACsf,kBAAkB,GAEvB,IAAI+H,EAA2BH,EAA0BhB,EAAatL,GACtE,IAAI,CAAC0M,gBAAgB,CAACD,GAEtB9xB,EAAMgnB,MAAM,CAAG2J,EAAY3J,MAAM,CAAG1nB,EAAM0yB,SAAS,AACvD,CACA,IAAIC,EAAyB,EACzBhF,IAEAgF,EAAyBN,EAA0B1E,EAAY/H,GAC3DA,AAAwB,SAAxBA,EAAcjV,KAAK,CACnBsI,EAAa9X,EAEgB,UAAxBykB,EAAcjV,KAAK,EACxBsI,CAAAA,EAAa,CAAC1Z,KAAKD,GAAG,CAACU,EAAMgT,UAAU,CAAC,EAAE,CAAE,CAAC2f,EAAsB,EAGvEhF,EAAWhd,KAAK,CAAC,CACbtS,EAAGunB,EAAcvnB,CAAC,CAClByD,MAAO6rB,EAAWwD,OAAO,GAAGrvB,KAAK,CACjC6O,MAAOiV,EAAcjV,KAAK,CAE1BvS,EAAGwnB,EAAcxnB,CAAC,CAAG6a,EAAa,CACtC,EAAG,CAAA,EAAMjZ,EAAMynB,UAAU,EAEzBkG,EAAWjG,MAAM,CAAG1nB,EAAM0yB,SAAS,EAEvC,IAAI,CAACE,eAAe,CAACD,GAErBjyB,EAAMiQ,KAAK,CAAC,CACRhF,cAAeA,CACnB,EAAG,CAAA,EAAM3L,EAAMynB,UAAU,EACzB,IAAIoL,EAAkBnyB,EAAMoyB,SAAS,CAAC5Z,UAAU,CAE5C6Z,EAAcryB,EAAMywB,OAAO,GAAGpvB,MAAM,CAAG,GACvCmX,EAAa,EAEjB,GAAIvN,AAAkB,WAAlBA,EAA4B,CAC5B,IAAId,EAAgB7K,EAAMoJ,MAAM,EAAIpJ,EAAMoJ,MAAM,CAACxJ,OAAO,CASxDsZ,EAAc2Z,EADdE,CAAAA,EAAcA,EAPMloB,CAAAA,GAChBA,AAAgC,WAAhCA,EAAcc,aAAa,EAC3Bd,EAAcxI,OAAO,EACrB,CAACwI,EAAcgB,QAAQ,CACtB7L,EAAMoJ,MAAM,CAAC0C,YAAY,CACtBtB,EAAKK,EAAclG,MAAM,CAAE,IAC/B,CAAA,EACuC,EAAC,EAGvC/E,CAAAA,EAAQiM,QAAQ,CAAG,EAAIjM,EAAQvB,CAAC,AAADA,EAC/B2B,CAAAA,EAAM+L,WAAW,CAAG/L,EAAM+L,WAAW,CAAC,EAAE,CAAG,CAAA,EAC5C,EAER,CACIJ,AAAkB,QAAlBA,GACI/L,EAAQiM,QAAQ,EAChBqN,CAAAA,EAAa,CAAA,EAEblZ,EAAM+L,WAAW,EAAI/L,EAAM+L,WAAW,CAAC,EAAE,EACzCmN,CAAAA,EAAalZ,EAAM+L,WAAW,CAAC,EAAE,AAAD,EAEpCmN,GAAe,AAAClZ,EAAM2E,MAAM,CAAC,EAAE,CAAG3E,EAAMmL,OAAO,CAAC,EAAE,EAAK,GAEhC,WAAlBQ,IACDia,EAAcvnB,CAAC,GAAK0nB,EAAe1nB,CAAC,CACpC6a,EAAa2Z,EAERjN,CAAAA,EAAcvnB,CAAC,EAAI0nB,EAAe1nB,CAAC,AAADA,IACnCunB,EAAcvnB,CAAC,CAAG,GAClB0nB,EAAe1nB,CAAC,CAAG,EACnB6a,GAAc3Z,KAAKC,GAAG,CAAComB,EAAcvnB,CAAC,CAAE0nB,EAAe1nB,CAAC,EAGxD6a,EAAa2Z,EAAkBE,IAI3CryB,EAAMQ,SAAS,CAACtB,EAAQxB,CAAC,CAAEwB,EAAQvB,CAAC,CAAGkB,KAAKma,KAAK,CAACR,IAElD,IAAemR,EAAW3gB,AAAjB,IAAI,CAAgB2gB,QAAQ,CAAEC,EAAW5gB,AAAzC,IAAI,CAAwC4gB,QAAQ,CAAEpF,EAAWxb,AAAjE,IAAI,CAAgEwb,QAAQ,AACjFtlB,CAAAA,EAAQ+lB,YAAY,EAAI0E,GAAYC,IACpCD,EAASlkB,KAAK,CAAC6sB,SAAS,CAAGtyB,EAAMwY,UAAU,CAAG,KAC9CoR,EAASnkB,KAAK,CAAC6sB,SAAS,CAAGtyB,EAAMwY,UAAU,CAAG,MAE9CgM,GACAA,CAAAA,EAAS/e,KAAK,CAAC6sB,SAAS,CAAGtyB,EAAMwY,UAAU,CAAG,IAAG,CAEzD,CACJ,EASA2P,EAAc/pB,SAAS,CAAC2zB,gBAAgB,CAAG,SAAUE,CAAsB,CAAE7wB,CAAK,EAC9E,IAAe9B,EAAQyJ,AAAd,IAAI,CAAazJ,KAAK,CAAEJ,EAAU6J,AAAlC,IAAI,CAAiC7J,OAAO,CAAEyxB,EAAc5nB,AAA5D,IAAI,CAA2D4nB,WAAW,CAC/EtL,EAAiBnmB,EAAQmmB,cAAc,CACvC5kB,EAAWnB,EAAMmB,QAAQ,CAAGnB,EAAMmL,OAAO,CAAC,EAAE,CAC5C8N,EAAa8M,EAAe3nB,CAAC,CAAG4B,EAAMmL,OAAO,CAAC,EAAE,AAChD4a,AAAyB,CAAA,UAAzBA,EAAepV,KAAK,CACpBsI,GAAc0Z,EAAyBxxB,EAET,WAAzB4kB,EAAepV,KAAK,EACzBsI,CAAAA,GAAc9X,EAAW,CAAA,EAEzBkwB,GAEAA,EAAY1gB,KAAK,CAAC,CACdtS,EAAG0nB,EAAe1nB,CAAC,CACnByD,MAAO0I,EAAK1I,EAAO,IAAI,CAACknB,uBAAuB,EAC/CrY,MAAOoV,EAAepV,KAAK,CAC3BvS,EAAG6a,CACP,EAAG,CAAA,EAAMjZ,EAAMynB,UAAU,CAEjC,EAKAoB,EAAc/pB,SAAS,CAACyzB,eAAe,CAAG,WACtC,IAAehc,EAAU9M,AAAhB,IAAI,CAAe8M,OAAO,CAAEvW,EAAQyJ,AAApC,IAAI,CAAmCzJ,KAAK,CAAEJ,EAAU6J,AAAxD,IAAI,CAAuD7J,OAAO,CAAE4xB,EAAW/nB,AAA/E,IAAI,CAA8E+nB,QAAQ,CAC/F1W,EAAO9a,EAAM0yB,SAAS,CAAG,UAAY,OACrC3M,EAAiBnmB,EAAQmmB,cAAc,CACvC5kB,EAAWnB,EAAMmB,QAAQ,CACzB8xB,EAAa9xB,EACbqwB,GAAYA,AAAwB,WAAxBA,EAASrV,UAAU,GAE/BqV,CAAQ,CAAC1W,EAAK,CAAC,CACX1c,EAAGoM,EAAKrJ,EAAW4kB,EAAe3nB,CAAC,CAAE+C,EACzC,GAEA8xB,GAAclN,EAAe3nB,CAAC,CAC1BozB,EAASL,OAAO,GAAGrvB,KAAK,CAAG,GAEnC,IAAK,IAAI0H,EAAI,EAAGoe,EAAO,IAAI,CAACkB,aAAa,CAACxmB,MAAM,CAAEkH,EAAIoe,EAAM,EAAEpe,EACtD+M,AAA0B,WAA1BA,CAAO,CAAC/M,EAAE,CAAC2S,UAAU,EACrB5F,CAAO,CAAC/M,EAAE,CAACsR,EAAK,CAAC,CAAE1c,EAAG60B,CAAW,GAEjCA,GAAc,AAAC1c,CAAAA,CAAO,CAAC/M,EAAE,CAAC1H,KAAK,EAAI,CAAA,EAAKlC,EAAQqlB,aAAa,EAG7D1O,CAAO,CAAC/M,EAAE,CAACsR,EAAK,CAAC,CAAE1c,EAAG+C,CAAS,EAG3C,EAWA0nB,EAAc/pB,SAAS,CAAC8zB,eAAe,CAAG,SAAUD,CAAsB,EACtE,IAAI5P,EAAQ,IAAI,CACD/iB,EAAQyJ,AAAd,IAAI,CAAazJ,KAAK,CAAEqxB,EAAc5nB,AAAtC,IAAI,CAAqC4nB,WAAW,CAAE1D,EAAalkB,AAAnE,IAAI,CAAkEkkB,UAAU,CACrFjkB,EAAK,IAAI,CAAC9J,OAAO,CAAEmmB,EAAiBrc,EAAGqc,cAAc,CAAEb,EAAWxb,EAAGwb,QAAQ,CAAEU,EAAgBlc,EAAGkc,aAAa,CAC/GsN,EAAiB,WACjB,IAAIC,EAAc,EAOlB,OANApQ,EAAMxM,OAAO,CAACN,OAAO,CAAC,SAAUiV,CAAM,EAClC,IAAIkI,EAAOlI,EAAOiG,OAAO,EACrBiC,CAAAA,EAAKtxB,KAAK,CAAGqxB,GACbA,CAAAA,EAAcC,EAAKtxB,KAAK,AAAD,CAE/B,GACOqxB,CACX,EACIE,EAAgB,SAAUC,CAAgB,EAC1C,GAAI3F,GAAc0D,EAAa,CAC3B,IAAIkC,EAAe5F,EAAWmF,SAAS,CAAC7Z,UAAU,CAC9C0U,EAAW6F,YAAY,CAACp1B,CAAC,CACzBu0B,EAEAhF,EAAWwD,OAAO,GAAG/yB,CAAC,CAEtB,EACAq1B,EAAkB9F,EAAW6F,YAAY,CAAC1xB,KAAK,CAC/C4xB,EAAerC,EAAYyB,SAAS,CAAC7Z,UAAU,CAC/CoY,EAAYF,OAAO,GAAG/yB,CAAC,CAC3B,OAAO,AAACs1B,EAAeJ,EAAmBC,GACrCA,EAAcE,EAAkBC,GAChC3N,EAAe1nB,CAAC,CACZunB,EAAcvnB,CAAC,CACZsvB,EAAWwD,OAAO,GAAGpvB,MAAM,AAC3C,CACA,MAAO,CAAA,CACX,EACI4xB,EAAiB,WACbhG,GAAc0D,GACd1D,EAAW7sB,IAAI,CAAC,CACZmY,WAAY0U,EAAWmF,SAAS,CAAC7Z,UAAU,CAAIjZ,CAAAA,EAAMgT,UAAU,CAAC,EAAE,EAAI,CAAC2f,EACnE,EACA,CAACA,CAAqB,EAC1BzZ,WAAYyU,EAAWmF,SAAS,CAAC5Z,UAAU,CACvCmY,EAAYF,OAAO,GAAGpvB,MAAM,CAAG,EACvC,EAER,EACA,GAAIsvB,EAAa,CACb,GAAInM,AAAa,WAAbA,EAAuB,CACvB,IAAI,CAAC0O,eAAe,CAACjB,GACjBU,EAAcH,MAGdS,IAEJ,MACJ,CACiB,UAAbzO,GACA,IAAI,CAAC2O,aAAa,EAE1B,CAEIlG,GAAc0D,EACV,AAACzL,EAAcjV,KAAK,GAAKoV,EAAepV,KAAK,EAE7C0iB,EAAc,IAAI,CAACrK,uBAAuB,CAAG,IACzC9D,AAAa,eAAbA,GACA,IAAI,CAAC0O,eAAe,CAACjB,GACjBU,EAAcH,MACdS,KAIJA,IAGc,eAAbzO,GACL,IAAI,CAAC2O,aAAa,GAGjBxC,GAAenM,AAAa,eAAbA,IAChB,IAAI,CAAC8D,uBAAuB,CAAGhpB,EAAMsE,SAAS,CAC9C,IAAI,CAACsvB,eAAe,CAACjB,GAGrB,IAAI,CAACkB,aAAa,GAG9B,EAQAhL,EAAc/pB,SAAS,CAAC80B,eAAe,CAAG,SAAUjB,CAAsB,EACtE,IAAepc,EAAU9M,AAAhB,IAAI,CAAe8M,OAAO,CAAEuS,EAAgBrf,AAA5C,IAAI,CAA2Cqf,aAAa,CAAE9oB,EAAQyJ,AAAtE,IAAI,CAAqEzJ,KAAK,CAAEklB,EAAWzb,AAA3F,IAAI,CAA0Fyb,QAAQ,CAAEtlB,EAAU6J,AAAlH,IAAI,CAAiH7J,OAAO,CAAE4xB,EAAW/nB,AAAzI,IAAI,CAAwI+nB,QAAQ,CAE7J,GAAI,AAAqB,CAAA,IAArB,IAAI,CAACsC,WAAW,EAGpB,IAAI,CAACA,WAAW,CAAG,CAAA,EACnB,IAAIC,EAAkB,AAAC/zB,EAAM4I,WAAW,CAAC4C,aAAa,EAClDxL,EAAM4I,WAAW,CAAC4C,aAAa,CAAC2Z,WAAW,EAAK,CAAC,EACjD6O,EAAa,SAAUjtB,CAAI,EAAI,MAAQ,CACvCA,KAAMA,EAAO,GAAG3B,MAAM,CAAC2B,EAAM,MAAa,IAC1CjF,MAAO,OACP2vB,YAAajnB,EAAK5K,EAAQulB,WAAW,CAACsM,WAAW,CAAEsC,EAAgB3O,OAAO,CAAE,GAC5EsM,aAAclnB,EAAK5K,EAAQulB,WAAW,CAACuM,YAAY,CAAEqC,EAAgB3O,OAAO,CAAE,EAClF,CAAI,EACAoM,GACAA,EAASrY,IAAI,GAEjB,IAAI8a,EAAkB,CAAA,EACtBnL,EAAc7S,OAAO,CAAC,SAAUqQ,CAAY,CAAE9c,CAAC,EAC3C,IAAI0hB,EAAS3U,CAAO,CAAC/M,EAAE,AACnB0hB,AAAiB,CAAA,IAAjBA,EAAOK,KAAK,CACZL,EAAO/R,IAAI,IAGX+R,EAAOlS,IAAI,GACXkS,EAAOpqB,IAAI,CAACkzB,EAAW1N,EAAavf,IAAI,GACxCktB,EAAkB,CAAA,EAE1B,GACKA,IACG/O,GACAA,CAAAA,EAAS+E,aAAa,CAAG,CAAA,EAE7B1T,CAAO,CAAC,EAAE,CAACyC,IAAI,GACfzC,CAAO,CAAC,EAAE,CAACzV,IAAI,CAACkzB,EAAW,IAAI,CAACxC,QAAQ,EAAI,IAAI,CAACA,QAAQ,CAACI,OAAO,IAErE,IAAIjhB,EAAQ/Q,EAAQmmB,cAAc,CAACpV,KAAK,CACxC,IAAI,CAAC4hB,eAAe,GAChB5hB,CAAAA,AAAU,UAAVA,GAAqBA,AAAU,WAAVA,CAAiB,GACtC,IAAI,CAAC8hB,gBAAgB,CAACE,EAAwBpc,CAAO,CAAC,IAAI,CAACgb,kBAAkB,GAAG,CAACJ,OAAO,GAAGrvB,KAAK,EAEpG,IAAI,CAACoyB,YAAY,GACrB,EAOArL,EAAc/pB,SAAS,CAAC+0B,aAAa,CAAG,WACpC,IAAetd,EAAU9M,AAAhB,IAAI,CAAe8M,OAAO,CAAEuS,EAAgBrf,AAA5C,IAAI,CAA2Cqf,aAAa,CAAElpB,EAAU6J,AAAxE,IAAI,CAAuE7J,OAAO,CAAE4xB,EAAW/nB,AAA/F,IAAI,CAA8F+nB,QAAQ,CACnH,IAAI,CAAC2C,YAAY,GAEQ,CAAA,IAArB,IAAI,CAACL,WAAW,GAGpB,IAAI,CAACA,WAAW,CAAG,CAAA,EACftC,GACAA,EAASxY,IAAI,GAEjB8P,EAAc7S,OAAO,CAAC,SAAUqQ,CAAY,CAAE9c,CAAC,EAC3C,IAAI0hB,EAAS3U,CAAO,CAAC/M,EAAE,CACvB0hB,EAAOlS,IAAI,GACXkS,EAAOpqB,IAAI,CAAC,CACRiG,KAAMuf,EAAavf,IAAI,CACvBjF,MAAOlC,EAAQulB,WAAW,CAACrjB,KAAK,EAAI,GACpC2vB,YAAajnB,EAAK5K,EAAQulB,WAAW,CAACsM,WAAW,CAAE,SACnDC,aAAclnB,EAAK5K,EAAQulB,WAAW,CAACuM,YAAY,CAAE,QACzD,GACIxG,EAAOK,KAAK,CAAG,GACfL,EAAOe,QAAQ,CAAC,EAExB,GACA,IAAI,CAACsG,eAAe,GACxB,EAOA1J,EAAc/pB,SAAS,CAACyyB,kBAAkB,CAAG,WACzC,IAAIrM,EAAW,IAAI,CAACA,QAAQ,QAC5B,AAAIA,GAAYA,EAAS+E,aAAa,CAAG,EAC9B/E,EAAS+E,aAAa,CAAG,EAE7B,CACX,EAOApB,EAAc/pB,SAAS,CAACo1B,YAAY,CAAG,WACnC,IAAe7C,EAAc5nB,AAApB,IAAI,CAAmB4nB,WAAW,CAAE9a,EAAU9M,AAA9C,IAAI,CAA6C8M,OAAO,CAAEvW,EAAQyJ,AAAlE,IAAI,CAAiEzJ,KAAK,CAAEklB,EAAWzb,AAAvF,IAAI,CAAsFyb,QAAQ,CAC3G,GAAImM,GAAenM,EAAU,CACzB,IAAIxb,EAAK2nB,EAAYpY,UAAU,CAAuCtP,EAAK0nB,EAAYnY,UAAU,CAAuCka,EAAO7c,CAAO,CAAC,IAAI,CAACgb,kBAAkB,GAAG,CAACJ,OAAO,GACzL9U,EAAI6I,EAAU,CACVja,KAAM,AAACjL,EAAMmB,QAAQ,CAFqBuI,CAAAA,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAAC,EAEzB,KACtC0B,IAAK,AAHuGzB,CAAAA,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAAC,EAG9G,GAAO,KAC1B7H,MAAOsxB,EAAKtxB,KAAK,CAAG,KACpBC,OAAQqxB,EAAKrxB,MAAM,CAAG,IAC1B,GACA,IAAI,CAACqyB,kBAAkB,CAAG,CAAA,CAC9B,CACJ,EAKAvL,EAAc/pB,SAAS,CAACq1B,YAAY,CAAG,WACnC,IAAIjP,EAAW,IAAI,CAACA,QAAQ,CACxBA,IACA7I,EAAI6I,EAAU,CACV9Z,IAAK,UACLtJ,MAAO,MACPC,OAAQ,KACZ,GACA,IAAI,CAACqyB,kBAAkB,CAAG,CAAA,EAElC,EASAvL,EAAc/pB,SAAS,CAAC4M,SAAS,CAAG,WAChC,IAA0B9L,EAAU4L,AAAhB,IAAI,CAA0B5L,OAAO,CAAEy0B,EAAqB7oB,AAA5D,IAAI,CAAsE9K,KAAK,CAAEklB,EAAgBhmB,EAAQgmB,aAAa,CAAEG,EAAiBnmB,EAAQmmB,cAAc,CAAEuO,EAAY10B,EAAQvB,CAAC,CAAEk2B,EAAkBxO,EAAe1nB,CAAC,CAAEm2B,EAAiB5O,EAAcvnB,CAAC,CAC5Q0pB,EAAsB,SAC1B,AAAInoB,EAAQmC,MAAM,CACPnC,EAAQmC,MAAM,EAIzB,IAAI,CAACqvB,aAAa,GAClBrJ,EAAsBsM,EAElB,AAACA,EAAmBlD,OAAO,CAAC,CAAA,GAAMpvB,MAAM,CAAI,GACxCuyB,EACJ,EAEA,CAAA,AAACE,EAAiB,GAAKD,EAAkB,GACxCC,EAAiB,GAAKD,EAAkB,CAAC,GAC1CxM,CAAAA,GAAuBxoB,KAAK2d,GAAG,CAHjB3d,KAAKC,GAAG,CAACg1B,EAAgBD,GAGI,EAExCxM,EACX,EASAc,EAAc/pB,SAAS,CAACwzB,cAAc,CAAG,SAAUtyB,CAAK,EACpD,MAAO,CAAEA,CAAAA,EAAMJ,OAAO,CAACuJ,KAAK,CAACpC,IAAI,EAC7B/G,EAAMJ,OAAO,CAAC60B,QAAQ,CAAC1tB,IAAI,AAAD,CAClC,EAQA8hB,EAAc/pB,SAAS,CAACkb,MAAM,CAAG,SAAUpa,CAAO,EAC9C,IAAII,EAAQ,IAAI,CAACA,KAAK,CACtBb,EAAM,CAAA,EAAMa,EAAMJ,OAAO,CAAC4L,aAAa,CAAE5L,GACzC,IAAI,CAACyF,OAAO,GACZ,IAAI,CAACxF,IAAI,CAACG,GACV,IAAI,CAAC8E,MAAM,EACf,EAOA+jB,EAAc/pB,SAAS,CAACuG,OAAO,CAAG,WAC9B,IAAIqvB,EAAY,IAAI,CAAErK,EAAWqK,EAAUrK,QAAQ,CAAEC,EAAWoK,EAAUpK,QAAQ,AAC9EoK,CAAAA,EAAUhX,cAAc,GACxBgX,EAAUhX,cAAc,CAACzH,OAAO,CAAC,SAAUoJ,CAAM,EAAI,OAAOA,GAAU,GACtEqV,EAAUhX,cAAc,CAAG,KAAK,GAGpCpI,EAAwBof,EAAUne,OAAO,EAErC8T,GACAA,CAAAA,EAASsF,OAAO,CAAGtF,EAASuF,MAAM,CAAGvF,EAAS2F,QAAQ,CAAG,IAAG,EAE5D1F,GACAA,CAAAA,EAASqF,OAAO,CAAGrF,EAASsF,MAAM,CAAGtF,EAAS0F,QAAQ,CAAG,IAAG,EAGhE5wB,EAAWs1B,EAAW,SAAUpvB,CAAG,CAAEqvB,CAAG,EAChCrvB,GAAOqvB,AAAQ,UAARA,IACHrvB,aAAekjB,EAEfljB,EAAID,OAAO,GAENC,aAAetH,OAAO42B,WAAW,EAEtClM,EAAepjB,IAGnBA,IAAQujB,EAAc/pB,SAAS,CAAC61B,EAAI,EACpCD,CAAAA,CAAS,CAACC,EAAI,CAAG,IAAG,CAE5B,EAAG,IAAI,CACX,EACO9L,CACX,IAqFA,OApFA3W,EAAO2W,EAAc/pB,SAAS,CAAE,CAK5BiqB,eAAgB,CAAC,CACTtnB,KAAM,QACN+kB,MAAO,EACPzf,KAAM,KACNoC,MAAO,cACX,EAAG,CACC1H,KAAM,QACN+kB,MAAO,EACPzf,KAAM,KACNoC,MAAO,eACX,EAAG,CACC1H,KAAM,QACN+kB,MAAO,EACPzf,KAAM,KACNoC,MAAO,eACX,EAAG,CACC1H,KAAM,MACNsF,KAAM,MACNoC,MAAO,mBACX,EAAG,CACC1H,KAAM,OACN+kB,MAAO,EACPzf,KAAM,KACNoC,MAAO,aACX,EAAG,CACC1H,KAAM,MACNsF,KAAM,MACNoC,MAAO,UACX,EAAE,CAKNqkB,iBAAkB,CACd,iBAAkB,oBAClB,KAAQ,WACR,KAAQ,UACZ,CACJ,GAyCO3E,CACX,GACArrB,EAAgBD,EAAU,0BAA2B,EAAE,CAAE,WAiFrD,SAASs3B,EAAYn3B,CAAI,CAAEwa,CAAC,EAExB,IAAK,IADD5W,EAAI,EAAE,CACDkI,EAAI,EAAGA,EAAI9L,EAAK4E,MAAM,CAAEkH,IAAK,CAClC,IAAIpL,EAAIV,CAAI,CAAC8L,EAAE,CAAC,EAAE,CACdnL,EAAIX,CAAI,CAAC8L,EAAE,CAAC,EAAE,CAClB,GAAI,AAAa,UAAb,OAAOpL,GAAkB,AAAa,UAAb,OAAOC,GAEhC,GAAImL,AAAM,IAANA,EACAlI,EAAEuF,IAAI,CAAC,CAAC,IAAKzI,EAAGC,EAAE,OAEjB,GAAImL,IAAM9L,EAAK4E,MAAM,CAAG,EACzBhB,EAAEuF,IAAI,CAAC,CAAC,IAAKzI,EAAGC,EAAE,OAGjB,GAAI6Z,EAAG,CACR,IAAI4c,EAAUp3B,CAAI,CAAC8L,EAAI,EAAE,CACrBurB,EAAUr3B,CAAI,CAAC8L,EAAI,EAAE,CACzB,GAAIsrB,GAAWC,EAAS,CACpB,IAAIC,EAAKF,CAAO,CAAC,EAAE,CAAEG,EAAKH,CAAO,CAAC,EAAE,CAAEI,EAAKH,CAAO,CAAC,EAAE,CAAEI,EAAKJ,CAAO,CAAC,EAAE,CAEtE,GAAI,AAAc,UAAd,OAAOC,GACP,AAAc,UAAd,OAAOE,GACP,AAAc,UAAd,OAAOD,GACP,AAAc,UAAd,OAAOE,GACPH,IAAOE,GACPD,IAAOE,EAAI,CACX,IAAIC,EAAaJ,EAAKE,EAAK,EAAI,GAAIG,EAAaJ,EAAKE,EAAK,EAAI,GAC9D7zB,EAAEuF,IAAI,CAAC,CACH,IACAzI,EAAIg3B,EAAa71B,KAAKC,GAAG,CAACD,KAAK2d,GAAG,CAAC9e,EAAI42B,GAAK9c,GAC5C7Z,EAAIg3B,EAAa91B,KAAKC,GAAG,CAACD,KAAK2d,GAAG,CAAC7e,EAAI42B,GAAK/c,GAC/C,CAAE,CACC,IACA9Z,EACAC,EACAD,EACAC,EACAD,EAAIg3B,EAAa71B,KAAKC,GAAG,CAACD,KAAK2d,GAAG,CAAC9e,EAAI82B,GAAKhd,GAC5C7Z,EAAIg3B,EAAa91B,KAAKC,GAAG,CAACD,KAAK2d,GAAG,CAAC7e,EAAI82B,GAAKjd,GAC/C,CACL,CACJ,CAEJ,MAEI5W,EAAEuF,IAAI,CAAC,CAAC,IAAKzI,EAAGC,EAAE,EAG9B,CACA,OAAOiD,CACX,CAMA,MALoB,CAChBuzB,YAAaA,EACbS,YA5Hc,CACd,QAOJ,SAAwBC,CAAU,EAC9B,IAAIP,EAAKO,EAAWP,EAAE,CAAEC,EAAKM,EAAWN,EAAE,CAAEC,EAAKK,EAAWL,EAAE,CAAEC,EAAKI,EAAWJ,EAAE,CAAE1rB,EAAK8rB,EAAWzzB,KAAK,CAAEA,EAAQ2H,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAK6rB,EAAWvqB,QAAQ,CAAEA,EAAWtB,AAAO,KAAK,IAAZA,GAAwBA,EAAIjH,EAAS8yB,EAAW9yB,MAAM,CAAE+yB,EAAgBD,EAAWC,aAAa,CAC5Q93B,EAAO,CACP,CAAC,IAAKs3B,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAIC,EAAID,EAAIG,EAAIH,EAAIG,EAAG,CAC7B,CAAC,IAAKH,EAAIG,EAAG,CACb,CAAC,IAAKH,EAAIC,EAAID,EAAIG,EAAIH,EAAIG,EAAG,CAC7B,CAAC,IAAKH,EAAIG,EAAG,CAChB,CACD,OAAOK,EACHX,EAAY,CACR,CAAC,IAAKG,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAKlzB,EAASkJ,CAAAA,EAAW,IAAO,EAAE,EAAIiqB,EAAG,CAC/C,CAAC,IAAKD,EAAKlzB,EAASkJ,CAAAA,EAAW,IAAO,EAAE,EAAImqB,EAAG,CAC/C,CAAC,IAAKD,EAAIC,EAAG,CAChB,CAAE1yB,GACH/E,CACR,EAxBI+3B,SA4BJ,SAAyBF,CAAU,EAC/B,IAAIP,EAAKO,EAAWP,EAAE,CAAEC,EAAKM,EAAWN,EAAE,CAAEC,EAAKK,EAAWL,EAAE,CAAEC,EAAKI,EAAWJ,EAAE,CAAE1rB,EAAK8rB,EAAWzzB,KAAK,CAAkC4H,EAAK6rB,EAAWvqB,QAAQ,CACnK,OAAOwqB,AADqND,EAAWC,aAAa,CAC7N,CACnB,CAAC,IAAKR,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAKlzB,AAHoG2H,CAAAA,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAAC,EAGhHuB,CAAAA,AAHwJtB,AAAO,KAAK,IAAZA,GAAwBA,EAGrK,GAAK,CAAA,EAAIyrB,EAAG,CAC3C,CAAC,IAAKD,EAAIC,EAAG,CAChB,CAAG,CACA,CAAC,IAAKH,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAIG,EAAG,CACb,CAAC,IAAKH,EAAIG,EAAG,CAChB,AACL,EAtCIO,OA0CJ,SAAuBH,CAAU,EAC7B,IAAIP,EAAKO,EAAWP,EAAE,CAAEC,EAAKM,EAAWN,EAAE,CAAEC,EAAKK,EAAWL,EAAE,CAAEC,EAAKI,EAAWJ,EAAE,CAAE1rB,EAAK8rB,EAAW3hB,MAAM,CAAEA,EAASnK,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAK6rB,EAAWzzB,KAAK,CAAEA,EAAQ4H,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAK4rB,EAAWvqB,QAAQ,CAAEA,EAAWrB,AAAO,KAAK,IAAZA,GAAwBA,EACjQ,OAAO6rB,AAD8QD,EAAWC,aAAa,CAEzS,CACI,CAAC,IAAKR,EAAIC,EAAG,CACb,CACI,IACAD,EAAKphB,EACLqhB,EACAD,EAAKphB,EAAS9R,EAASkJ,CAAAA,EAAW,GAAK,CAAA,EACvCmqB,EACAH,EAAKlzB,EAASkJ,CAAAA,EAAW,GAAK,CAAA,EAC9BmqB,EACH,CACD,CAAC,IAAKD,EAAIC,EAAG,CAChB,CACD,CACI,CAAC,IAAKH,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAIC,EAAID,EAAIG,EAAIH,EAAIG,EAAG,CAC7B,CAAC,IAAKD,EAAIC,EAAG,CAChB,AACT,CA9DA,CAyHA,CAGJ,GACA33B,EAAgBD,EAAU,gCAAiC,CAACA,CAAQ,CAAC,0BAA0B,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUo4B,CAAa,CAAE32B,CAAC,EAWvJ,IAAIwL,EAAOxL,EAAEwL,IAAI,CAMbhL,EAAMD,KAAKC,GAAG,CAAEF,EAAMC,KAAKD,GAAG,CAAE4d,EAAM3d,KAAK2d,GAAG,CAyBlD,SAAS0Y,EAAuBpyB,CAAS,CAAEY,CAAI,CAAEyxB,CAAO,EAKpD,IAJA,IAGA5Z,EAAQ6Z,EAHJt2B,EAAM4E,EAAO,KACb6G,EAAO4qB,GAAW,EACtBE,EAAQvyB,EAAUlB,MAAM,CAAG,EAEpB2I,GAAQ8qB,GAGX,GAAID,AADJA,CAAAA,EAAMt2B,EAAMgE,CAAS,CADrByY,EAAS,AAAC8Z,EAAQ9qB,GAAS,EACE,CAAC7G,IAAI,AAAD,EACvB,EACN6G,EAAOgR,EAAS,OAEf,IAAI6Z,CAAAA,EAAM,CAAA,EAIX,OAAO7Z,EAHP8Z,EAAQ9Z,EAAS,EAMzB,OAAOhR,EAAO,EAAIA,EAAO,EAAI,CACjC,CAsCA,SAAS+qB,EAAsBxyB,CAAS,CAAEtB,CAAK,EAE3C,IADA,IAvByB+zB,EAuBrBzsB,EAAIosB,EAAuBpyB,EAAWtB,EAAM9D,CAAC,CAAG,GAAK,EAClDoL,KACH,GAAIhG,CAAS,CAACgG,EAAE,CAACnF,IAAI,EAAInC,EAAM9D,CAAC,GAzBX63B,EA2BGzyB,CAAS,CAACgG,EAAE,CA1BhCtH,AA0BkCA,EA1B5B9D,CAAC,EAAI63B,EAAS5xB,IAAI,EAC5BnC,AAyBsCA,EAzBhC9D,CAAC,EAAI63B,EAAS7xB,IAAI,EACxBlC,AAwBsCA,EAxBhC7D,CAAC,EAAI43B,EAASzxB,IAAI,EACxBtC,AAuBsCA,EAvBhC7D,CAAC,EAAI43B,EAAS1xB,IAAI,EAwBpB,OAAOiF,EAGf,OAAO,EACX,CAaA,SAAS0sB,EAAiBC,CAAQ,EAC9B,IAAIz4B,EAAO,EAAE,CACb,GAAIy4B,EAAS7zB,MAAM,CAAE,CACjB5E,EAAKmJ,IAAI,CAAC,CAAC,IAAKsvB,CAAQ,CAAC,EAAE,CAACC,KAAK,CAACh4B,CAAC,CAAE+3B,CAAQ,CAAC,EAAE,CAACC,KAAK,CAAC/3B,CAAC,CAAC,EACzD,IAAK,IAAImL,EAAI,EAAGA,EAAI2sB,EAAS7zB,MAAM,CAAE,EAAEkH,EACnC9L,EAAKmJ,IAAI,CAAC,CAAC,IAAKsvB,CAAQ,CAAC3sB,EAAE,CAAC6sB,GAAG,CAACj4B,CAAC,CAAE+3B,CAAQ,CAAC3sB,EAAE,CAAC6sB,GAAG,CAACh4B,CAAC,CAAC,CAE7D,CACA,OAAOX,CACX,CAgBA,SAAS44B,EAAsBL,CAAQ,CAAEM,CAAM,EAC3CN,EAAS1xB,IAAI,CAAGjF,EAAI22B,EAAS1xB,IAAI,CAAEgyB,EAAOhyB,IAAI,EAC9C0xB,EAASzxB,IAAI,CAAGhF,EAAIy2B,EAASzxB,IAAI,CAAE+xB,EAAO/xB,IAAI,EAC9CyxB,EAAS7xB,IAAI,CAAG9E,EAAI22B,EAAS7xB,IAAI,CAAEmyB,EAAOnyB,IAAI,EAC9C6xB,EAAS5xB,IAAI,CAAG7E,EAAIy2B,EAAS5xB,IAAI,CAAEkyB,EAAOlyB,IAAI,CAClD,CAoDA,IAAImyB,EAAgB,SAAUJ,CAAK,CAAEC,CAAG,CAAEz2B,CAAO,EAC7C,IACI62B,EAA0GC,EAA4BC,EAAUC,EAAQC,EADxJV,EAAW,EAAE,CAAE5yB,EAAiB3D,EAAQ2D,cAAc,CAAEuzB,EAAkBd,EAAsBzyB,EAAgB6yB,GAAQW,EAAgBf,EAAsBzyB,EAAgB8yB,GAClKW,EAAMxsB,EAAK5K,EAAQgF,eAAe,CAAEsY,EAAImZ,EAAIj4B,CAAC,CAAGg4B,EAAMh4B,CAAC,EAAI8e,EAAImZ,EAAIh4B,CAAC,CAAG+3B,EAAM/3B,CAAC,GAAK,IAAM,IAOzG,SAAS44B,EAAcv3B,CAAI,CAAEw3B,CAAO,CAAEv3B,CAAE,CAAEw3B,CAAK,CAAEvjB,CAAM,EACnD,IAAI1R,EAAQ,CACR9D,EAAGsB,EAAKtB,CAAC,CACTC,EAAGqB,EAAKrB,CAAC,AACb,EAEA,OADA6D,CAAK,CAACg1B,EAAQ,CAAGv3B,CAAE,CAACw3B,GAASD,EAAQ,CAAItjB,CAAAA,GAAU,CAAA,EAC5C1R,CACX,CAMA,SAASk1B,EAASnB,CAAQ,CAAE/zB,CAAK,CAAEwW,CAAS,EACxC,IAAIke,EAAS1Z,EAAIhb,CAAK,CAACwW,EAAU,CAAGud,CAAQ,CAACvd,EAAY,MAAM,EAC3DwE,EAAIhb,CAAK,CAACwW,EAAU,CAAGud,CAAQ,CAACvd,EAAY,MAAM,EACtD,OAAOue,EAAc/0B,EAAOwW,EAAWud,EAAUvd,EAAake,CAAAA,EAAS,MAAQ,KAAI,EAAIA,EAAS,EAAI,GACxG,CAEIG,EAAgB,IAGhBN,EAAa,CACTL,MAFJO,EAAWS,EADG7zB,CAAc,CAACwzB,EAAc,CACVV,EAAKW,GAGlCX,IAAKA,CACT,EACAQ,EAAWF,GAGXE,EAAWR,EAIXS,EAAkB,KAElBH,EAAWS,EADXV,EAAgBnzB,CAAc,CAACuzB,EAAgB,CACZV,EAAOY,GAC1Cb,EAAStvB,IAAI,CAAC,CACVuvB,MAAOA,EACPC,IAAKM,CACT,GAKAA,CAAQ,CAACK,EAAI,EAAIZ,CAAK,CAACY,EAAI,EAEvBL,CAAQ,CAACK,EAAI,EAAIH,CAAQ,CAACG,EAAI,GAE9BJ,EAASR,CAAK,CADdY,EAAMA,AAAQ,MAARA,EAAc,IAAM,IACP,CAAGX,CAAG,CAACW,EAAI,CAC9Bb,EAAStvB,IAAI,CAAC,CACVuvB,MAAOO,EACPN,IAAKY,EAAcN,EAAUK,EAAKN,EAAeM,EAAOJ,CAAAA,EAAS,MAAQ,KAAI,EAAIA,EAAS,EAAI,GAClG,GAEAI,EAAMA,AAAQ,MAARA,EAAc,IAAM,MAKlC,IAAIK,EAAelB,EAAS7zB,MAAM,CAC9B6zB,CAAQ,CAACA,EAAS7zB,MAAM,CAAG,EAAE,CAAC+zB,GAAG,CACjCD,EACJO,EAAWM,EAAcI,EAAcL,EAAKH,GAC5CV,EAAStvB,IAAI,CAAC,CACVuvB,MAAOiB,EACPhB,IAAKM,CACT,GAGA,IAAIW,EAAYL,EAAcN,EAD9BK,EAAMA,AAAQ,MAARA,EAAc,IAAM,IACmBH,GAQ7C,OAPAV,EAAStvB,IAAI,CAAC,CACVuvB,MAAOO,EACPN,IAAKiB,CACT,GAEAnB,EAAStvB,IAAI,CAAC4vB,GAEP,CACH/4B,KAFOi4B,EAAcd,WAAW,CAACqB,EAAiBC,GAAWv2B,EAAQ6C,MAAM,EAG3Ee,UAAW2yB,CACf,CACJ,EAgCA,SAASoB,EAAUnB,CAAK,CAAEC,CAAG,CAAEz2B,CAAO,EAqBlC,IAsQ6Bq2B,EAAU/zB,EAC/Bs1B,EAIDZ,EAvQHT,EAAUS,EAAQa,EAJlBD,EAAShtB,EAAK5K,EAAQgF,eAAe,CAAEsY,EAAImZ,EAAIj4B,CAAC,CAAGg4B,EAAMh4B,CAAC,EAAI8e,EAAImZ,EAAIh4B,CAAC,CAAG+3B,EAAM/3B,CAAC,GAAI24B,EAAMQ,EAAS,IAAM,IAAKE,EAAc,EAAE,CAGnIC,EAAU/3B,EAAQsE,eAAe,CAAE0zB,EAAWp4B,EAAI42B,EAAMh4B,CAAC,CAAEi4B,EAAIj4B,CAAC,EAAIu5B,EAAQE,QAAQ,CAAG,GAAIC,EAAWx4B,EAAI82B,EAAMh4B,CAAC,CAAEi4B,EAAIj4B,CAAC,EAAIu5B,EAAQE,QAAQ,CAAG,GAAIE,EAAWv4B,EAAI42B,EAAM/3B,CAAC,CAAEg4B,EAAIh4B,CAAC,EAAIs5B,EAAQK,SAAS,CAAG,GAAIC,EAAW34B,EAAI82B,EAAM/3B,CAAC,CAAEg4B,EAAIh4B,CAAC,EAAIs5B,EAAQK,SAAS,CAAG,GACxNE,EAAqB,CAAA,EAG9D30B,EAAiB3D,EAAQ2D,cAAc,CAAEwzB,EAAgBnB,EAAuBryB,EAAgBu0B,GAC5FhB,EAAkBlB,EAAuBryB,EAAgBq0B,GAO7D,SAASO,EAAWr4B,CAAS,CAAEC,CAAO,CAAEq4B,CAAY,EAChD,IACIC,EAAYC,EAAWC,EAAcC,EADrCC,EAAkB34B,EAAU1B,CAAC,CAAG2B,EAAQ3B,CAAC,CAAG,EAAI,EAEhD0B,CAAAA,EAAU1B,CAAC,CAAG2B,EAAQ3B,CAAC,EACvBi6B,EAAav4B,EACbw4B,EAAYv4B,IAGZs4B,EAAat4B,EACbu4B,EAAYx4B,GAEZA,EAAUzB,CAAC,CAAG0B,EAAQ1B,CAAC,EACvBm6B,EAAc14B,EACdy4B,EAAex4B,IAGfy4B,EAAcz4B,EACdw4B,EAAez4B,GAWnB,IAPA,IAAI0J,EAAIivB,EAAkB,EAEtBj5B,EAAIo2B,EAAuBryB,EAAgB+0B,EAAUl6B,CAAC,EAAGmF,EAAejB,MAAM,CAAG,GAGjF,EAEGiB,CAAc,CAACiG,EAAE,EAAKivB,CAAAA,EAAkB,GAAKl1B,CAAc,CAACiG,EAAE,CAACpF,IAAI,EAAIk0B,EAAUl6B,CAAC,EACrFq6B,EAAkB,GAAKl1B,CAAc,CAACiG,EAAE,CAACnF,IAAI,EAAIg0B,EAAWj6B,CAAC,AAADA,GAAI,CAGhE,GAAImF,CAAc,CAACiG,EAAE,CAACpF,IAAI,EAAIk0B,EAAUl6B,CAAC,EACrCmF,CAAc,CAACiG,EAAE,CAACnF,IAAI,EAAIg0B,EAAWj6B,CAAC,EACtCmF,CAAc,CAACiG,EAAE,CAACjF,IAAI,EAAIg0B,EAAal6B,CAAC,EACxCkF,CAAc,CAACiG,EAAE,CAAChF,IAAI,EAAIg0B,EAAYn6B,CAAC,CAAE,CACzC,GAAI+5B,EACA,MAAO,CACH/5B,EAAGyB,EAAUzB,CAAC,CACdD,EAAG0B,EAAU1B,CAAC,CAAG2B,EAAQ3B,CAAC,CACtBmF,CAAc,CAACiG,EAAE,CAACpF,IAAI,CAAG,EACzBb,CAAc,CAACiG,EAAE,CAACnF,IAAI,CAAG,EAC7B4xB,SAAU1yB,CAAc,CAACiG,EAAE,AAC/B,EAGJ,MAAO,CACHpL,EAAG0B,EAAU1B,CAAC,CACdC,EAAGyB,EAAUzB,CAAC,CAAG0B,EAAQ1B,CAAC,CACtBkF,CAAc,CAACiG,EAAE,CAACjF,IAAI,CAAG,EACzBhB,CAAc,CAACiG,EAAE,CAAChF,IAAI,CAAG,EAC7ByxB,SAAU1yB,CAAc,CAACiG,EAAE,AAC/B,CACJ,CACAA,GAAKivB,CACT,CACA,OAAO14B,CACX,CA6BA,SAAS24B,EAAkBzC,CAAQ,CAAEn2B,CAAS,CAAEC,CAAO,CAAEy3B,CAAM,CAAEjB,CAAM,EACnE,IAAIoC,EAAapC,EAAOqC,IAAI,CAAEz0B,EAAaoyB,EAAOsC,IAAI,CAAE7B,EAAMQ,EAAS,IAAM,IAAKsB,EAAa,CAAE16B,EAAG0B,EAAU1B,CAAC,CAAEC,EAAGyB,EAAUzB,CAAC,AAAC,EAAG06B,EAAa,CAAE36B,EAAG0B,EAAU1B,CAAC,CAAEC,EAAGyB,EAAUzB,CAAC,AAAC,EAAG26B,EAAqB/C,CAAQ,CAACe,EAAM,MAAM,EAC1N2B,CAAU,CAAC3B,EAAM,MAAM,CAAEiC,EAAqBhD,CAAQ,CAACe,EAAM,MAAM,EACnE2B,CAAU,CAAC3B,EAAM,MAAM,CAAEkC,EAAqBjD,CAAQ,CAACe,EAAM,MAAM,EACnE7yB,CAAU,CAAC6yB,EAAM,MAAM,CAAEmC,EAAqBlD,CAAQ,CAACe,EAAM,MAAM,EACnE7yB,CAAU,CAAC6yB,EAAM,MAAM,CAG3BoC,EAAclc,EAAI+Y,CAAQ,CAACe,EAAM,MAAM,CAAGl3B,CAAS,CAACk3B,EAAI,EAAGqC,EAAcnc,EAAI+Y,CAAQ,CAACe,EAAM,MAAM,CAAGl3B,CAAS,CAACk3B,EAAI,EAGnHJ,EAAS1Z,AAAiC,GAAjCA,EAAIkc,EAAcC,GACvBv5B,CAAS,CAACk3B,EAAI,CAAGj3B,CAAO,CAACi3B,EAAI,CAC7BqC,EAAcD,CAGlBL,CAAAA,CAAU,CAAC/B,EAAI,CAAGf,CAAQ,CAACe,EAAM,MAAM,CACvC8B,CAAU,CAAC9B,EAAI,CAAGf,CAAQ,CAACe,EAAM,MAAM,CACvC,IAAIsC,EAAWnB,EAAWr4B,EAAWi5B,EAAYvB,EAAO,CAACR,EAAI,GACzD+B,CAAU,CAAC/B,EAAI,CAAEuC,EAAWpB,EAAWr4B,EAAWg5B,EAAYtB,EAAO,CAACR,EAAI,GAC1E8B,CAAU,CAAC9B,EAAI,CAenB,OAdAJ,EAAS0C,EACJC,CAAAA,GAAW3C,EACX2C,CAAAA,GAAmB3C,EAKxBA,EAASqC,EACJD,CAAAA,GAAqBpC,EACrBoC,CAAAA,GAA6BpC,EAElCA,EAASuC,EACJD,CAAAA,GAAqBtC,EACrBsC,CAAAA,GAA6BtC,CAEtC,CA2JA,IAVKG,CAAAA,EAAgBf,EAJrBzyB,EACIA,EAAemf,KAAK,CAACoU,EAAiBC,EAAgB,GAGCV,EAAG,EAAK,KApBtCJ,EAqBe1yB,CAAc,CAACwzB,EAAc,CArBlC70B,EAqBoCm0B,EApBnEmB,EAASh4B,EAAIy2B,EAAS5xB,IAAI,CAAGnC,EAAM9D,CAAC,CAAE8D,EAAM9D,CAAC,CAAG63B,EAAS7xB,IAAI,EAC7D5E,EAAIy2B,EAASzxB,IAAI,CAAGtC,EAAM7D,CAAC,CAAE6D,EAAM7D,CAAC,CAAG43B,EAAS1xB,IAAI,EAGrDqyB,EAAS8B,EAAkBzC,EAAU/zB,EAgBoCk0B,EAhBlBoB,EAHU,CAChEoB,KAAMh5B,EAAQuE,UAAU,CACxB00B,KAAMj5B,EAAQuE,UAAU,AAC5B,GAiBAuzB,EAAY7wB,IAAI,CAAC,CACbwvB,IAAKA,EACLD,MAHJqB,EAfOD,EAAS,CACZn5B,EAAG6D,EAAM7D,CAAC,CACVD,EAAG63B,CAAQ,CAACW,EAAS,OAAS,OAAO,CAAIA,CAAAA,EAAS,EAAI,EAAC,CAC3D,EAAI,CACAx4B,EAAG8D,EAAM9D,CAAC,CACVC,EAAG43B,CAAQ,CAACW,EAAS,OAAS,OAAO,CAAIA,CAAAA,EAAS,EAAI,EAAC,CAC3D,CAaA,GACAP,EAAMoB,GAIH,AAACV,CAAAA,EAAgBf,EAAsBzyB,EAAgB8yB,EAAG,EAAK,IAClEO,EAASP,CAAG,CAACW,EAAI,CAAGZ,CAAK,CAACY,EAAI,CAAG,EAKjCS,AAJAA,CAAAA,EAAoB,CAChBr5B,EAAGi4B,EAAIj4B,CAAC,CACRC,EAAGg4B,EAAIh4B,CAAC,AACZ,CAAA,CACiB,CAAC24B,EAAI,CAAGzzB,CAAc,CAACwzB,EAAc,CAACH,EAASI,EAAM,MAAQA,EAAM,MAAM,CAAIJ,CAAAA,EAAS,EAAI,EAAC,EAC5Gc,EAAY7wB,IAAI,CAAC,CACbwvB,IAAKA,EACLD,MAAOqB,CACX,GACApB,EAAMoB,EAMV,MAAO,CACH/5B,KAAMw4B,EAFVC,EAAWA,AAFXA,CAAAA,EAAWqD,AAnKX,SAASA,EAAY15B,CAAS,CAAEC,CAAO,CAAEy3B,CAAM,EAE3C,GAAI13B,EAAU1B,CAAC,GAAK2B,EAAQ3B,CAAC,EAAI0B,EAAUzB,CAAC,GAAK0B,EAAQ1B,CAAC,CACtD,MAAO,EAAE,CAEb,IASIo7B,EAAOtD,EAAUQ,EAAU+C,EAAgBC,EAAoBC,EAA0BC,EATzF7C,EAAMQ,EAAS,IAAM,IAAKsC,EAAiBl6B,EAAQ8E,eAAe,CAACC,MAAM,CAAE4xB,EAAS,CACpFqC,KAAM,CACFx0B,KAAMwzB,EACNvzB,KAAMyzB,EACNvzB,KAAMwzB,EACNvzB,KAAMyzB,CACV,EACAY,KAAMj5B,EAAQuE,UAAU,AAC5B,EAkGA,MA3FIw1B,AAFJA,CAAAA,EACI3D,EAAsBzyB,EAAgBzD,EAAS,EAC1B,IAErB45B,EAAiBhB,EADjBiB,EAAqBp2B,CAAc,CAACo2B,EAAmB,CACA75B,EAAWC,EAASy3B,EAAQjB,GAEnFD,EAAsBqD,EAAoB/5B,EAAQuE,UAAU,EAC5D01B,EAAkBrC,EAAS,CACvBn5B,EAAGyB,EAAUzB,CAAC,CACdD,EAAGu7B,CAAkB,CAACD,EAAiB,OAAS,OAAO,CAClDA,CAAAA,EAAiB,EAAI,EAAC,CAC/B,EAAI,CACAt7B,EAAG0B,EAAU1B,CAAC,CACdC,EAAGs7B,CAAkB,CAACD,EAAiB,OAAS,OAAO,CAClDA,CAAAA,EAAiB,EAAI,EAAC,CAC/B,EAGAE,CAAAA,EAA2B5D,EAAsBzyB,EAAgBs2B,EAAe,EACjD,KAG3BvD,EAFAsD,EAA2Br2B,CAAc,CAACq2B,EAAyB,CAEnBh6B,EAAQuE,UAAU,EAElE01B,CAAe,CAAC7C,EAAI,CAAG0C,EAAiBp6B,EAAIq6B,CAAkB,CAAC3C,EAAM,MAAM,CAAG8C,EAAiB,EAAG,AAACF,CAAAA,CAAwB,CAAC5C,EAAM,MAAM,CACpI2C,CAAkB,CAAC3C,EAAM,MAAM,AAAD,EAAK,GACnCx3B,EAAKm6B,CAAkB,CAAC3C,EAAM,MAAM,CAAG8C,EAAiB,EAAK,AAACF,CAAAA,CAAwB,CAAC5C,EAAM,MAAM,CAC/F2C,CAAkB,CAAC3C,EAAM,MAAM,AAAD,EAAK,GAIvCl3B,EAAU1B,CAAC,GAAKy7B,EAAgBz7B,CAAC,EACjC0B,EAAUzB,CAAC,GAAKw7B,EAAgBx7B,CAAC,EAC7B65B,GACA2B,CAAAA,CAAe,CAAC7C,EAAI,CAAG0C,EACnBp6B,EAAIq6B,CAAkB,CAAC3C,EAAM,MAAM,CAAE4C,CAAwB,CAAC5C,EAAM,MAAM,EAAI,EAC9Ex3B,EAAIm6B,CAAkB,CAAC3C,EAAM,MAAM,CAAE4C,CAAwB,CAAC5C,EAAM,MAAM,EAAI,CAAA,EAGtFkB,EAAqB,CAACA,GAKtBA,EAAqB,CAAA,GAG7B/B,EAAW,CAAC,CACJC,MAAOt2B,EACPu2B,IAAKwD,CACT,EAAE,GAGNJ,EAAQtB,EAAWr4B,EAAW,CAC1B1B,EAAGo5B,EAASz3B,EAAQ3B,CAAC,CAAG0B,EAAU1B,CAAC,CACnCC,EAAGm5B,EAAS13B,EAAUzB,CAAC,CAAG0B,EAAQ1B,CAAC,AACvC,EAAGm5B,GACHrB,EAAW,CAAC,CACJC,MAAOt2B,EACPu2B,IAAK,CACDj4B,EAAGq7B,EAAMr7B,CAAC,CACVC,EAAGo7B,EAAMp7B,CAAC,AACd,CACJ,EAAE,CAEFo7B,CAAK,CAACjC,EAAS,IAAM,IAAI,GAAKz3B,CAAO,CAACy3B,EAAS,IAAM,IAAI,GAEzDkC,EAAiBhB,EAAkBe,EAAMxD,QAAQ,CAAEwD,EAAO15B,EAAS,CAACy3B,EAAQjB,GAE5ED,EAAsBmD,EAAMxD,QAAQ,CAAEr2B,EAAQuE,UAAU,EACxDwyB,EAAW,CACPv4B,EAAGo5B,EACCiC,EAAMr7B,CAAC,CACPq7B,EAAMxD,QAAQ,CAACyD,EAAiB,OAAS,OAAO,CAC3CA,CAAAA,EAAiB,EAAI,EAAC,EAC/Br7B,EAAGm5B,EACCiC,EAAMxD,QAAQ,CAACyD,EAAiB,OAAS,OAAO,CAC3CA,CAAAA,EAAiB,EAAI,EAAC,EAC3BD,EAAMp7B,CAAC,AACf,EAIAm5B,EAAS,CAACA,EACVrB,EAAWA,EAAS/wB,MAAM,CAACo0B,EAAY,CACnCp7B,EAAGq7B,EAAMr7B,CAAC,CACVC,EAAGo7B,EAAMp7B,CAAC,AACd,EAAGs4B,EAAUa,MAKrBrB,EAAWA,EAAS/wB,MAAM,CAACo0B,EAAYrD,CAAQ,CAACA,EAAS7zB,MAAM,CAAG,EAAE,CAAC+zB,GAAG,CAAEt2B,EAAS,CAACy3B,GAExF,EAmDuBpB,EAAOC,EAAKmB,EAAM,EAErBpyB,MAAM,CAACsyB,EAAY7Y,OAAO,KAG1Crb,UAAW2yB,CACf,CACJ,QA7WAK,EAAc/yB,iBAAiB,CAAG,CAAA,EA8WlC8zB,EAAU9zB,iBAAiB,CAAG,CAAA,EASb,CACb8zB,UAAWA,EACX9B,SAtfJ,SAAkBW,CAAK,CAAEC,CAAG,EACxB,MAAO,CACH34B,KAAM,CACF,CAAC,IAAK04B,EAAMh4B,CAAC,CAAEg4B,EAAM/3B,CAAC,CAAC,CACvB,CAAC,IAAKg4B,EAAIj4B,CAAC,CAAEi4B,EAAIh4B,CAAC,CAAC,CACtB,CACDmF,UAAW,CAAC,CAAE4yB,MAAOA,EAAOC,IAAKA,CAAI,EAAE,AAC3C,CACJ,EA+eIG,cAAeA,CACnB,CAGJ,GACAh5B,EAAgBD,EAAU,8BAA+B,EAAE,CAAE,WA4RzD,MAtQyB,CAmBrBoG,WAAY,CA0ERlC,KAAM,WAMNgB,OAAQ,EAORS,UAAW,EASX+B,OAAQ,CA+CJ5C,QAAS,CAAA,EAMTsO,MAAO,SAMPhF,cAAe,SAIfouB,OAAQ,CAAA,EAIR72B,UAAW,CACf,EASAa,YAAa,CAITnB,OAAQ,SACZ,EASAoB,UAAW,CAIPpB,OAAQ,cACZ,CACJ,CACJ,CAkDJ,GACApF,EAAgBD,EAAU,iCAAkC,CAACA,CAAQ,CAAC,8BAA8B,CAAEA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUy8B,CAAkB,CAAEvyB,CAAC,CAAEzI,CAAC,EAWlM,IAgEIi7B,EAhEAjoB,EAAavK,EAAEuK,UAAU,CACzB/S,EAAUD,EAAEC,OAAO,CAAEC,EAAQF,EAAEE,KAAK,CAAEC,EAAQH,EAAEG,KAAK,CAmBzD,SAAS+6B,EAAWh4B,CAAK,EACrB,IAAIi4B,EAAYj4B,EAAMi4B,SAAS,CAE/B,GAAIA,EACA,MAAO,CACH/1B,KAAM+1B,EAAU/7B,CAAC,EAAI,EACrBiG,KAAM,AAAC81B,CAAAA,EAAU/7B,CAAC,EAAI,CAAA,EAAM+7B,CAAAA,EAAUr4B,KAAK,EAAI,CAAA,EAC/CyC,KAAM41B,EAAU97B,CAAC,EAAI,EACrBmG,KAAM,AAAC21B,CAAAA,EAAU97B,CAAC,EAAI,CAAA,EAAM87B,CAAAA,EAAUp4B,MAAM,EAAI,CAAA,CACpD,EAGJ,IAAIq4B,EAAKl4B,EAAMm4B,OAAO,EAAIn4B,EAAMm4B,OAAO,CAAClJ,OAAO,GAC/C,OAAOiJ,EAAK,CACRh2B,KAAMlC,EAAMo4B,KAAK,CAAGF,EAAGt4B,KAAK,CAAG,EAC/BuC,KAAMnC,EAAMo4B,KAAK,CAAGF,EAAGt4B,KAAK,CAAG,EAC/ByC,KAAMrC,EAAMq4B,KAAK,CAAGH,EAAGr4B,MAAM,CAAG,EAChCyC,KAAMtC,EAAMq4B,KAAK,CAAGH,EAAGr4B,MAAM,CAAG,CACpC,EAAI,IACR,CAmMA,OAzKA,AAAC,SAAUk4B,CAAqB,EAwC5B,SAASO,EAA8BC,CAAa,EAChD,IACIr8B,EAAGC,EADH+7B,EAAKF,EAAW,IAAI,EAExB,OAAQO,EAAc9pB,KAAK,EACvB,IAAK,QACDvS,EAAI,OACJ,KACJ,KAAK,OACDA,EAAI,MACZ,CACA,OAAQq8B,EAAc9uB,aAAa,EAC/B,IAAK,MACDtN,EAAI,OACJ,KACJ,KAAK,SACDA,EAAI,MACZ,CACA,MAAO,CACHD,EAAGA,EAAIg8B,CAAE,CAACh8B,EAAE,CAAG,AAACg8B,CAAAA,EAAGh2B,IAAI,CAAGg2B,EAAG/1B,IAAI,AAAD,EAAK,EACrChG,EAAGA,EAAI+7B,CAAE,CAAC/7B,EAAE,CAAG,AAAC+7B,CAAAA,EAAG71B,IAAI,CAAG61B,EAAG51B,IAAI,AAAD,EAAK,CACzC,CACJ,CAgBA,SAASk2B,EAAwBC,CAAE,CAAEC,CAAE,EACnC,IAAI/4B,EAUJ,MATI,CAAC5C,EAAQ27B,IACT/4B,CAAAA,EAAMq4B,EAAW,IAAI,CAAA,GAEjBU,CAAAA,EAAK,CACDx8B,EAAG,AAACyD,CAAAA,EAAIuC,IAAI,CAAGvC,EAAIwC,IAAI,AAAD,EAAK,EAC3BhG,EAAG,AAACwD,CAAAA,EAAI0C,IAAI,CAAG1C,EAAI2C,IAAI,AAAD,EAAK,CAC/B,CAAA,EAGDjF,KAAKs7B,KAAK,CAACD,EAAGv8B,CAAC,CAAGs8B,EAAGt8B,CAAC,CAAEs8B,EAAGv8B,CAAC,CAAGw8B,EAAGx8B,CAAC,CAC9C,CAsBA,SAAS08B,EAAqBn5B,CAAO,CAAEo5B,CAAY,CAAE54B,CAAM,EAMvD,IALA,IAAI64B,EAAQz7B,AAAU,EAAVA,KAAK07B,EAAE,CAAQb,EAAKF,EAAW,IAAI,EAAGgB,EAAYd,EAAG/1B,IAAI,CAAG+1B,EAAGh2B,IAAI,CAAE+2B,EAAaf,EAAG51B,IAAI,CAAG41B,EAAG71B,IAAI,CAAE62B,EAAQ77B,KAAKs7B,KAAK,CAACM,EAAYD,GAAYG,EAAgBH,EAAY,EAAKI,EAAiBH,EAAa,EAAKI,EAAuBnB,EAAGh2B,IAAI,CAAGi3B,EAAeG,EAAqBpB,EAAG71B,IAAI,CAAG+2B,EAAgBG,EAAY,CACvUr9B,EAAGm9B,EACHl9B,EAAGm9B,CACP,EACIE,EAAQ/5B,EAASg6B,EAAW,EAAGC,EAAoB,CAAA,EAAOC,EAAU,EAAGC,EAAU,EAC9EJ,EAAQ,CAACn8B,KAAK07B,EAAE,EACnBS,GAASV,EAEb,KAAOU,EAAQn8B,KAAK07B,EAAE,EAClBS,GAASV,EAoCb,OAlCAW,EAAWp8B,KAAKw8B,GAAG,CAACL,GAChB,AAACA,EAAQ,CAACN,GAAWM,GAASN,GAE9BU,EAAU,GACVF,EAAoB,CAAA,GAEfF,EAAQN,GAASM,GAAUn8B,KAAK07B,EAAE,CAAGG,EAE1CU,EAAU,GAELJ,EAASn8B,KAAK07B,EAAE,CAAGG,GAAUM,GAAS,CAAEn8B,CAAAA,KAAK07B,EAAE,CAAGG,CAAI,GAE3DS,EAAU,GACVD,EAAoB,CAAA,GAIpBC,EAAU,GAGVD,GACAH,EAAUr9B,CAAC,EAAIy9B,EAAWR,EAC1BI,EAAUp9B,CAAC,EAAIy9B,EAAWT,EAAiBM,IAG3CF,EAAUr9B,CAAC,EAAIy9B,AAAWV,EAAc,CAAA,EAAMQ,CAAO,EAAtCE,EACfJ,EAAUp9B,CAAC,EAAIy9B,EAAWR,GAE1Bn5B,EAAO/D,CAAC,GAAKm9B,GACbE,CAAAA,EAAUr9B,CAAC,CAAG+D,EAAO/D,CAAC,AAADA,EAErB+D,EAAO9D,CAAC,GAAKm9B,GACbC,CAAAA,EAAUp9B,CAAC,CAAG8D,EAAO9D,CAAC,AAADA,EAElB,CACHD,EAAGq9B,EAAUr9B,CAAC,CAAI28B,EAAex7B,KAAKy8B,GAAG,CAACN,GAC1Cr9B,EAAGo9B,EAAUp9B,CAAC,CAAI08B,EAAex7B,KAAK08B,GAAG,CAACP,EAC9C,CACJ,CAvIAzB,EAAsBt7B,OAAO,CAnB7B,SAAiBqO,CAAU,CAAEkvB,CAAe,CAAEC,CAAU,EACpD,IAAIC,EAAaD,EAAWr9B,SAAS,AAChCs9B,CAAAA,EAAWh6B,wBAAwB,GAEpC4K,EAAWlO,SAAS,CAACqO,SAAS,CAACtG,IAAI,CAAC,SAAU7G,CAAK,EAEZ,CAAA,IAA/BJ,AADUI,EAAMJ,OAAO,CACf+D,UAAU,CAACtB,OAAO,GAhCtCrC,CAAAA,AAiCuBA,EAjCjBJ,OAAO,CAACM,UAAU,EACxBF,AAgCuBA,EAhCjBC,MAAM,CAACmjB,MAAM,CAAC,SAAUiZ,CAAG,CAAEp8B,CAAM,EAKrC,OAJIA,EAAOL,OAAO,EACdT,EAAM,CAAA,EAAOc,EAAOL,OAAO,CAAC+D,UAAU,CAAG1D,EAAOL,OAAO,CAAC+D,UAAU,EAC9D,CAAC,EAAI1D,EAAOL,OAAO,CAACM,UAAU,EAE/Bm8B,GAAOp8B,EAAOL,OAAO,EAAIK,EAAOL,OAAO,CAACM,UAAU,AAC7D,EAAG,CAAA,EAAK,IACRf,EAAM,CAAA,EAAOa,AAyBUA,EAzBJJ,OAAO,CAAC+D,UAAU,CAAG3D,AAyBjBA,EAzBuBJ,OAAO,CAAC+D,UAAU,EAAI,CAAC,EAAI3D,AAyBlDA,EAzBwDJ,OAAO,CAACM,UAAU,EACjGhB,EAAM,0GAyBM,IAAI,CAACgB,UAAU,CAAG,IAAIg8B,EAAgB,IAAI,EAC1C,IAAI,CAACh8B,UAAU,CAAC8Z,MAAM,CAAC,CAAA,GAE/B,GACAoiB,EAAW55B,eAAe,CAAGs4B,EAC7BsB,EAAWh6B,wBAAwB,CAAGo4B,EACtC4B,EAAW75B,kBAAkB,CAAGm4B,EAEhC1oB,EAAWgoB,GAEnB,CAyIJ,EAAGC,GAA0BA,CAAAA,EAAwB,CAAC,CAAA,GAO/CA,CACX,GACAz8B,EAAgBD,EAAU,sBAAuB,CAACA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,iCAAiC,CAAEA,CAAQ,CAAC,uBAAuB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUkC,CAAU,CAAE68B,CAAoB,CAAEC,CAAqB,CAAEC,CAAK,CAAEx9B,CAAC,EAWnT,IAAIwG,EAAWxG,EAAEwG,QAAQ,CAAEvG,EAAUD,EAAEC,OAAO,CAAEuL,EAAOxL,EAAEwL,IAAI,CAAE/B,EAAQzJ,EAAEyJ,KAAK,CAM1EnJ,EAAMC,KAAKD,GAAG,CAAEE,EAAMD,KAAKC,GAAG,CAgH9Bi9B,EAA4B,WAM5B,SAASA,EAAWz8B,CAAK,EACrB,IAAI,CAACH,IAAI,CAACG,EACd,CAgQA,OA1PAy8B,EAAW99B,OAAO,CAAG,SAAUqO,CAAU,CAAEmvB,CAAU,EACjDI,EAAsB59B,OAAO,CAACqO,EAAYyvB,EAAYN,EAC1D,EAcAM,EAAW39B,SAAS,CAACe,IAAI,CAAG,SAAUG,CAAK,EAEvC,IAAI,CAACA,KAAK,CAAGA,EAEb,IAAI,CAAC08B,WAAW,CAAG,EAAE,CAErBl3B,EAASxF,EAAO,SAAU,WACtB,IAAI,CAACE,UAAU,CAAC8Z,MAAM,EAC1B,EACJ,EAUAyiB,EAAW39B,SAAS,CAACkb,MAAM,CAAG,SAAU2iB,CAAW,EAC/C,IAAI38B,EAAQ,IAAI,CAACA,KAAK,CAAEE,EAAa,IAAI,CAAE08B,EAAiB18B,EAAWw8B,WAAW,AAElFx8B,CAAAA,EAAWw8B,WAAW,CAAG,EAAE,CAC3B18B,EAAMC,MAAM,CAACgW,OAAO,CAAC,SAAUhW,CAAM,EAC7BA,EAAOqiB,OAAO,EAAI,CAACriB,EAAOL,OAAO,CAACwS,UAAU,EAC5CnS,EAAO48B,MAAM,CAAC5mB,OAAO,CAAC,SAAU/T,CAAK,EAEjC,IADIuH,EAUA9J,EATAm9B,EAAoB56B,EAAMtC,OAAO,CAGjCk9B,GAAqBA,EAAkBC,UAAU,EACjDD,CAAAA,EAAkBE,OAAO,CAAGF,EACvBC,UAAU,AAAD,EAElB,IAAIE,EAAY,AAAC,CAAA,AAAyB,OAAxBxzB,CAAAA,EAAKvH,EAAMtC,OAAO,AAAD,GAAe6J,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGuzB,OAAO,AAAD,GAChFv0B,EAAMvG,EAAMtC,OAAO,CAACo9B,OAAO,CAE3B96B,CAAAA,EAAMogB,OAAO,EAAIpgB,AAAmB,CAAA,IAAnBA,EAAMg7B,QAAQ,EAAcD,GAC7CA,EAAShnB,OAAO,CAAC,SAAU+mB,CAAO,EAC9Br9B,CAAAA,EAAKK,EAAMsP,GAAG,CAAC,AAAmB,UAAnB,OAAO0tB,EAClBA,EAAUA,EAAQr9B,EAAE,CAAA,YACN68B,GACd78B,EAAGM,MAAM,CAACqiB,OAAO,EACjB3iB,EAAG2iB,OAAO,EACV3iB,AAAgB,CAAA,IAAhBA,EAAGu9B,QAAQ,EAEXh9B,EAAWw8B,WAAW,CAAC71B,IAAI,CAAC,IAAIpH,EAAWyC,EAC3CvC,EAAI,AAAmB,UAAnB,OAAOq9B,EACP,CAAC,EACDA,GAEZ,EAER,EAER,GAGA,IAAK,IAAIG,EAAI,EAAGC,EAAI,KAAK,EAAGC,EAAQ,KAAK,EAAGC,EAASV,EAAet6B,MAAM,CAAEi7B,EAASr9B,EAAWw8B,WAAW,CAACp6B,MAAM,CAAE66B,EAAIG,EAAQ,EAAEH,EAAG,CACjIE,EAAQ,CAAA,EACR,IAAIG,EAASZ,CAAc,CAACO,EAAE,CAC9B,IAAKC,EAAI,EAAGA,EAAIG,EAAQ,EAAEH,EAAG,CACzB,IAAIK,EAASv9B,EAAWw8B,WAAW,CAACU,EAAE,CACtC,GAAI,AAACI,CAAAA,EAAO59B,OAAO,EAAI49B,EAAO59B,OAAO,CAAC6B,IAAI,AAAD,IACpCg8B,CAAAA,EAAO79B,OAAO,EAAI69B,EAAO79B,OAAO,CAAC6B,IAAI,AAAD,GACrC+7B,EAAO19B,SAAS,GAAK29B,EAAO39B,SAAS,EACrC09B,EAAOz9B,OAAO,GAAK09B,EAAO19B,OAAO,CAAE,CACnC09B,EAAOh9B,QAAQ,CAAG+8B,EAAO/8B,QAAQ,CACjC48B,EAAQ,CAAA,EACR,KACJ,CACJ,CACKA,GACDG,EAAOn4B,OAAO,EAEtB,CAIA,OAAO,IAAI,CAAC9B,cAAc,CAC1B,OAAO,IAAI,CAACU,aAAa,CAEzB/D,EAAWw9B,iBAAiB,CAACf,EACjC,EAUAF,EAAW39B,SAAS,CAAC4+B,iBAAiB,CAAG,SAAUf,CAAW,EACtDA,EAEA,IAAI,CAAC38B,KAAK,CAACC,MAAM,CAACgW,OAAO,CAAC,SAAUhW,CAAM,EACtC,IAAI6E,EAAS,WAGT,IAAI5E,EAAaD,EAAOD,KAAK,CAACE,UAAU,CACxCy9B,AADkDz9B,CAAAA,GAAcA,EAAWw8B,WAAW,EAAI,EAAE,AAAD,EACrFzmB,OAAO,CAAC,SAAUzV,CAAU,EAC1BA,EAAWV,SAAS,EACpBU,EAAWV,SAAS,CAACG,MAAM,GAAKA,GAChCO,EAAWsE,MAAM,EAEzB,GACI7E,EAAO29B,2BAA2B,GAClC39B,EAAO29B,2BAA2B,GAClC,OAAO39B,EAAO29B,2BAA2B,CAEjD,CACI39B,AAA6B,EAAA,IAA7BA,EAAOL,OAAO,CAACuD,SAAS,CACxB2B,IAGA7E,EAAO29B,2BAA2B,CAAGp4B,EAASvF,EAAQ,eAAgB6E,EAE9E,GAIA,IAAI,CAAC43B,WAAW,CAACzmB,OAAO,CAAC,SAAUzV,CAAU,EACzCA,EAAWsE,MAAM,EACrB,EAER,EAkBA23B,EAAW39B,SAAS,CAAC4E,iBAAiB,CAAG,SAAU9D,CAAO,EAGtD,IAAK,IADei+B,EADhB59B,EAAS,IAAI,CAACD,KAAK,CAACC,MAAM,CAAE0E,EAAS6F,EAAK5K,EAAQgE,eAAe,CAAE,GACnEJ,EAAY,EAAE,CACTgG,EAAI,EAAGs0B,EAAO79B,EAAOqC,MAAM,CAAEkH,EAAIs0B,EAAM,EAAEt0B,EAC9C,GAAIvJ,CAAM,CAACuJ,EAAE,CAAC8Y,OAAO,EAAI,CAACriB,CAAM,CAACuJ,EAAE,CAAC5J,OAAO,CAACwS,UAAU,CAClD,IAAK,IAAI+qB,EAAI,EAAGY,EAAO99B,CAAM,CAACuJ,EAAE,CAACqzB,MAAM,CAACv6B,MAAM,CAAE83B,EAAK,KAAK,EAAGl4B,EAAQ,KAAK,EAAGi7B,EAAIY,EAAM,EAAEZ,EAEjFj7B,AADJA,CAAAA,EAAQjC,CAAM,CAACuJ,EAAE,CAACqzB,MAAM,CAACM,EAAE,AAAD,EAChB7a,OAAO,EACb8X,CAAAA,EAAKF,AAnR7B,SAAoBh4B,CAAK,EACrB,IAAIi4B,EAAYj4B,EAAMi4B,SAAS,CAE/B,GAAIA,EACA,MAAO,CACH/1B,KAAM+1B,EAAU/7B,CAAC,EAAI,EACrBiG,KAAM,AAAC81B,CAAAA,EAAU/7B,CAAC,EAAI,CAAA,EAAM+7B,CAAAA,EAAUr4B,KAAK,EAAI,CAAA,EAC/CyC,KAAM41B,EAAU97B,CAAC,EAAI,EACrBmG,KAAM,AAAC21B,CAAAA,EAAU97B,CAAC,EAAI,CAAA,EAAM87B,CAAAA,EAAUp4B,MAAM,EAAI,CAAA,CACpD,EAGJ,IAAIq4B,EAAKl4B,EAAMm4B,OAAO,EAAIn4B,EAAMm4B,OAAO,CAAClJ,OAAO,GAC/C,OAAOiJ,EAAK,CACRh2B,KAAMlC,EAAMo4B,KAAK,CAAGF,EAAGt4B,KAAK,CAAG,EAC/BuC,KAAMnC,EAAMo4B,KAAK,CAAGF,EAAGt4B,KAAK,CAAG,EAC/ByC,KAAMrC,EAAMq4B,KAAK,CAAGH,EAAGr4B,MAAM,CAAG,EAChCyC,KAAMtC,EAAMq4B,KAAK,CAAGH,EAAGr4B,MAAM,CAAG,CACpC,EAAI,IACR,EAgQwCG,EAAK,GAEjBsB,EAAUqD,IAAI,CAAC,CACXzC,KAAMg2B,EAAGh2B,IAAI,CAAGO,EAChBN,KAAM+1B,EAAG/1B,IAAI,CAAGM,EAChBJ,KAAM61B,EAAG71B,IAAI,CAAGI,EAChBH,KAAM41B,EAAG51B,IAAI,CAAGG,CACpB,GAsBpB,OAfAnB,EAAYA,EAAUw6B,IAAI,CAAC,SAAU5zB,CAAC,CAAEvC,CAAC,EACrC,OAAOuC,EAAEhG,IAAI,CAAGyD,EAAEzD,IAAI,AAC1B,GAEKnF,EAAQW,EAAQgE,eAAe,IAChCi6B,EACIj+B,EAAQgE,eAAe,CACnBq6B,AArPpB,SAAiCz6B,CAAS,EAItC,IAAK,IAFD06B,EADA9nB,EAAM5S,EAAUlB,MAAM,CAAE67B,EAAY,EAAE,CAGjC30B,EAAI,EAAGA,EAAI4M,EAAK,EAAE5M,EAGvB,IAAK,IAAI2zB,EAAI3zB,EAAI,EAAG2zB,EAAI/mB,EAAK,EAAE+mB,EAC3Be,CAAAA,EACIE,AApChB,SAASA,EAA0Bh0B,CAAC,CAAEvC,CAAC,CAAEw2B,CAAQ,EAE7C,IAAI15B,EAAS6F,EAAK6zB,EAAU,IAAKC,EAAWl0B,EAAE5F,IAAI,CAAGG,EAASkD,EAAEtD,IAAI,CAAGI,GACnEyF,EAAE7F,IAAI,CAAGI,EAASkD,EAAErD,IAAI,CAAGG,EAAQ45B,EAAWn0B,EAAE/F,IAAI,CAAGM,EAASkD,EAAEzD,IAAI,CAAGO,GACzEyF,EAAEhG,IAAI,CAAGO,EAASkD,EAAExD,IAAI,CAAGM,EAAQ65B,EAAYF,EAAYl0B,EAAEhG,IAAI,CAAGyD,EAAExD,IAAI,CAAG+F,EAAEhG,IAAI,CAAGyD,EAAExD,IAAI,CAAGwD,EAAEzD,IAAI,CAAGgG,EAAE/F,IAAI,CAAIsO,IAAU8rB,EAAYF,EAAYn0B,EAAE7F,IAAI,CAAGsD,EAAErD,IAAI,CAAG4F,EAAE7F,IAAI,CAAGsD,EAAErD,IAAI,CAAGqD,EAAEtD,IAAI,CAAG6F,EAAE5F,IAAI,CAAImO,WAG/M,AAAI4rB,GAAYD,EACJ35B,EACJy5B,EAA0Bh0B,EAAGvC,EAAGtI,KAAKma,KAAK,CAAC/U,EAAS,IACpDgO,IAEDnT,EAAIg/B,EAAWC,EAC1B,EAuB0Cj7B,CAAS,CAACgG,EAAE,CAAEhG,CAAS,CAAC25B,EAAE,CAAA,EAEjC,IACnBgB,EAAUt3B,IAAI,CAACq3B,GAM3B,OADAC,EAAUt3B,IAAI,CAAC,IACRvH,EAAIC,KAAKma,KAAK,CAACykB,EAAUH,IAAI,CAAC,SAAU5zB,CAAC,CAAEvC,CAAC,EAC/C,OAAQuC,EAAIvC,CAChB,EAAE,CAGFtI,KAAKma,KAAK,CAACykB,EAAU77B,MAAM,CAAG,IAAI,CAAG,EAAI,GACtC,EAEP,EA2N4CkB,GAChCA,EAAUyS,OAAO,CAAC,SAAUggB,CAAQ,EAChCA,EAAS7xB,IAAI,EAAIy5B,EACjB5H,EAAS5xB,IAAI,EAAIw5B,EACjB5H,EAAS1xB,IAAI,EAAIs5B,EACjB5H,EAASzxB,IAAI,EAAIq5B,CACrB,IAEGr6B,CACX,EAeAi5B,EAAW39B,SAAS,CAACgF,kBAAkB,CAAG,SAAUN,CAAS,EAEzD,IADA,IAAiC1B,EAAOC,EAApC81B,EAAW,EAAGG,EAAY,EAAkBxuB,EAAIhG,EAAUlB,MAAM,CAC7DkH,KACH1H,EAAQ0B,CAAS,CAACgG,EAAE,CAACnF,IAAI,CAAGb,CAAS,CAACgG,EAAE,CAACpF,IAAI,CAC7CrC,EAASyB,CAAS,CAACgG,EAAE,CAAChF,IAAI,CAAGhB,CAAS,CAACgG,EAAE,CAACjF,IAAI,CAC1CszB,EAAW/1B,GACX+1B,CAAAA,EAAW/1B,CAAI,EAEfk2B,EAAYj2B,GACZi2B,CAAAA,EAAYj2B,CAAK,EAGzB,MAAO,CACHi2B,UAAWA,EACXH,SAAUA,CACd,CACJ,EAaA4E,EAAW39B,SAAS,CAAC+F,0BAA0B,CAAG,SAAU41B,CAAa,EACrE,IAAIiE,EAAUjE,AAAwB,SAAxBA,EAAc9pB,KAAK,EAC7B8pB,AAAwB,UAAxBA,EAAc9pB,KAAK,CAAcguB,EAAUlE,AAAgC,QAAhCA,EAAc9uB,aAAa,EACtE8uB,AAAgC,WAAhCA,EAAc9uB,aAAa,CAC/B,OAAO+yB,EACFC,EAAAA,GAAU,KAAK,EACfA,EAAAA,GAAiB,KAAK,CAC/B,EACOlC,CACX,IAwCA,OAnCAA,EAAW39B,SAAS,CAACwE,UAAU,CAAGg5B,EAmC3BG,CACX,GACAj/B,EAAgBD,EAAU,oCAAqC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,6BAA6B,CAAC,CAAE,SAAUF,CAAU,CAAEo/B,CAAU,CAAEmC,CAAY,EAOjN,OAJAC,AADQxhC,EACNo/B,UAAU,CAAGoC,AADPxhC,EACSo/B,UAAU,EAAIA,EAC/BmC,EAAajgC,OAAO,CAACkgC,AAFbxhC,EAEeyhC,WAAW,EAClCD,AAHQxhC,EAGNo/B,UAAU,CAAC99B,OAAO,CAACkgC,AAHbxhC,EAGemK,KAAK,CAAEq3B,AAHtBxhC,EAGwBm/B,KAAK,EAE9Bn/B,CACX,GACAG,EAAgBD,EAAU,4BAA6B,CAACA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUyB,CAAC,EAU/F,IAAIwG,EAAWxG,EAAEwG,QAAQ,CAAEvG,EAAUD,EAAEC,OAAO,CAAEoO,EAAWrO,EAAEqO,QAAQ,CAAE7C,EAAOxL,EAAEwL,IAAI,CAgBpF,SAASnE,IACL,IAAIkG,EAAe,IAAI,CAACvM,KAAK,CAACJ,OAAO,CAACI,KAAK,AACvC,EAAC,IAAI,CAAC2O,KAAK,EACXtB,EAAS,IAAI,CAACzN,OAAO,CAACoK,WAAW,GAChC,CAAA,CAACuC,EAAaxK,MAAM,EAChBwK,EAAawyB,kBAAkB,EAC5BxyB,EAAawyB,kBAAkB,CAACC,SAAS,GACjD,CAAA,IAAI,CAACh1B,WAAW,CAAG,IAAI,CAACpK,OAAO,CAACoK,WAAW,AAAD,CAElD,CAEA,SAASi1B,IAEL,GAAIj/B,AAAwB,iBAAxBA,AADQ,IAAI,CACNk/B,aAAa,CAAqB,CA6BxC,IAAK,IAAIzkB,EAAK,EAAGhR,EAAMzJ,AA9Bf,IAAI,CA8BiB0kB,IAAI,EAAI,EAAE,CAAGjK,EAAKhR,EAAGnH,MAAM,CAAEmY,KAEtD0kB,AA9BU,SAAUn5B,CAAI,EACxB,IAAIo5B,EAAUp5B,EAAKhG,KAAK,CAAEuB,EAAU,CAAC,CAAC69B,EAAQC,cAAc,EACxDD,EAAQx/B,OAAO,CAACuD,SAAS,CAAE6G,EAAchE,EAAKpG,OAAO,CAACoK,WAAW,CACrE,GAAIhE,EAAKgE,WAAW,EAAI/K,EAAQ+G,EAAKxG,GAAG,EAAG,CACvC,IAAIuC,EAASyI,EAAKxE,EAAKs5B,UAAU,EAAIt5B,EAAKs5B,UAAU,CAACC,UAAU,CAAEv5B,EAAK1G,GAAG,CAAG0G,EAAKw5B,YAAY,CAAGx5B,EAAKxG,GAAG,EAAIwK,EAGxGy1B,EAAO19B,AADXA,CAAAA,EAASxC,KAAKD,GAAG,CAACyC,EAAQiI,EAAW,EACjBo1B,EAAQ36B,UAAU,AAClC,EAAC26B,EAAQM,iBAAiB,EAAIngC,KAAK2d,GAAG,CAACuiB,IAAS,IAChDL,EAAQ36B,UAAU,CAAG1C,EACrBq9B,EAAQF,aAAa,CAAG,eACxBE,EAAQO,OAAO,CAAC,KAAK,EAAGP,EAAQ9zB,WAAW,CAAGm0B,EAAMl+B,IAIxDyE,EAAK/F,MAAM,CAACgW,OAAO,CAAC,SAAUhW,CAAM,EAChC,IAAI2/B,EAAW3/B,EAAO4/B,aAAa,EAC/BT,EAAQU,WAAW,CAAC7/B,EAAO4/B,aAAa,CAAC,CACzCD,GACAA,EAAS9+B,IAAI,CAACs+B,EAAQp0B,QAAQ,CAAG,CAC7BlJ,MAAOs9B,EAAQ36B,UAAU,AAC7B,EAAI,CACA1C,OAAQq9B,EAAQ36B,UAAU,AAC9B,EAER,EACJ,CACJ,EAEegF,CAAE,CAACgR,EAAG,CAGrB,CAAA,IAAI,CAAC4kB,cAAc,CAAG,CAAA,CAC1B,CACA,IAAI,CAACH,aAAa,CAAG,IACzB,CAgCA,MA1BkB,CACdvgC,QAjEJ,SAAiB2I,CAAS,CAAE0F,CAAU,EAClC,IAAIE,EAAaF,EAAWlO,SAAS,AAChCoO,CAAAA,EAAW6yB,YAAY,GACxBv6B,EAAS8B,EAAW,kBAAmBjB,GACvC6G,EAAW6yB,YAAY,CAAGd,EAC1Bz5B,EAASwH,EAAY,SAAUE,EAAW6yB,YAAY,EAE9D,CA2DA,CAyBJ,GACAviC,EAAgBD,EAAU,sCAAuC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,4BAA4B,CAAC,CAAE,SAAUF,CAAU,CAAE2iC,CAAW,EAKpK,OAFAA,EAAYrhC,OAAO,CAACkgC,AADZxhC,EACc4c,IAAI,CAAE4kB,AADpBxhC,EACsBmK,KAAK,EAE5BnK,CACX,GACAG,EAAgBD,EAAU,wCAAyC,CAACA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUyB,CAAC,EAY3G,IAAIoO,EAAepO,EAAEoO,YAAY,CAAEC,EAAWrO,EAAEqO,QAAQ,CAAE4yB,EAAWjhC,EAAEihC,QAAQ,CAyM/E,MA7K2B,CAkCvBC,aAAc,CAAA,EACd/vB,WAAY,CACRrK,UAAW,WACP,IAAIq6B,EAAS,IAAI,CAACj+B,KAAK,CAACk+B,WAAW,CAInC,GAHIH,EAASE,IACTA,CAAAA,EAASA,EAAOA,MAAM,AAAD,EAErB9yB,EAAS8yB,IAAWA,EAAS,EAC7B,OAAO/yB,EAAa+yB,AAAS,IAATA,GAAgB,GAE5C,EACApG,OAAQ,CAAA,EACRpuB,cAAe,SACfxF,MAAO,CACHk6B,WAAY,QAChB,CACJ,EACAC,QAAS,CACLC,aAAc,oEACdC,YAAa,yFACjB,EACAC,aAAc,EACdhyB,WAAY,CAChB,CAqHJ,GACAjR,EAAgBD,EAAU,+BAAgC,CAACA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUuR,CAAc,CAAE9P,CAAC,EAY7J,IACQ0I,EADJE,EAAY,AAAC,IAAI,EAAI,IAAI,CAACA,SAAS,GAC/BF,EAAgB,SAAUpG,CAAC,CAAEuG,CAAC,EAI9B,MAAOH,AAHPA,CAAAA,EAAgBI,OAAOC,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAU3G,CAAC,CAAEuG,CAAC,EAAIvG,EAAE0G,SAAS,CAAGH,CAAG,GAC1E,SAAUvG,CAAC,CAAEuG,CAAC,EAAI,IAAK,IAAIK,KAAKL,EAAOC,OAAOhJ,SAAS,CAACjB,cAAc,CAACwJ,IAAI,CAACQ,EAAGK,IAAI5G,CAAAA,CAAC,CAAC4G,EAAE,CAAGL,CAAC,CAACK,EAAE,AAAD,CAAG,CAAA,EAC/E5G,EAAGuG,EAC5B,EACO,SAAUvG,CAAC,CAAEuG,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIM,UAAU,uBAAyBC,OAAOP,GAAK,iCAE7D,SAASQ,IAAO,IAAI,CAACC,WAAW,CAAGhH,CAAG,CADtCoG,EAAcpG,EAAGuG,GAEjBvG,EAAExC,SAAS,CAAG+I,AAAM,OAANA,EAAaC,OAAOS,MAAM,CAACV,GAAMQ,CAAAA,EAAGvJ,SAAS,CAAG+I,EAAE/I,SAAS,CAAE,IAAIuJ,CAAG,CACtF,GAEAq4B,EAAc5xB,EAAeE,WAAW,CAAC2xB,MAAM,CAAC7hC,SAAS,CAAC8hC,UAAU,CACpE1uB,EAASlT,EAAEkT,MAAM,CAMjB2uB,EAA6B,SAAUn4B,CAAM,EAO7C,SAASm4B,EAAY5gC,CAAM,CAAEL,CAAO,EAChC,IAAImjB,EAAQra,EAAOrB,IAAI,CAAC,IAAI,CAAEpH,EAAQL,IAAY,IAAI,CAItD,OAHKmjB,EAAM1kB,CAAC,EACR0kB,CAAAA,EAAM1kB,CAAC,CAAG,CAAA,EAEP0kB,CACX,CAiFA,OA7FAnb,EAAUi5B,EAAan4B,GAiCvBm4B,EAAYC,kBAAkB,CAAG,SAAU7gC,CAAM,CAAEiC,CAAK,EACpD,IAAI4gB,EAAS7iB,EAAOL,OAAO,CAACkjB,MAAM,EAAI7iB,EAAOD,KAAK,CAACJ,OAAO,CAACkjB,MAAM,CAAEie,EAAaje,EAC5EA,EAAOxgB,MAAM,CACbrC,EAAOD,KAAK,CAACJ,OAAO,CAACI,KAAK,CAAC+gC,UAAU,CAAEl+B,EAAaX,EAAM7D,CAAC,CAAG0iC,EAAYh+B,EAAQ+f,GAAUA,CAAM,CAACjgB,EAAW,CAClH,MAAO,CACHA,WAAYA,EACZE,MAAOA,CACX,CACJ,EASA89B,EAAY/hC,SAAS,CAACkiC,YAAY,CAAG,WACjC,IAAI/gC,EAAS,IAAI,CAACA,MAAM,CACxB,GAAIA,EAAOL,OAAO,CAACsgC,YAAY,EAAI,CAAC,IAAI,CAACtgC,OAAO,CAACmD,KAAK,CAAE,CACpD,IAAIm9B,EAAeW,EAAYC,kBAAkB,CAAC7gC,EAAQ,IAAI,CACzDA,CAAAA,EAAOD,KAAK,CAACK,UAAU,EACxB,CAAA,IAAI,CAAC0C,KAAK,CAAGm9B,EAAan9B,KAAK,AAAD,EAE7B,IAAI,CAACnD,OAAO,CAACiD,UAAU,EACxB,CAAA,IAAI,CAACA,UAAU,CAAGq9B,EAAar9B,UAAU,AAAD,CAEhD,MAEI,IAAI,CAACE,KAAK,CAAG,IAAI,CAACnD,OAAO,CAACmD,KAAK,EAAI9C,EAAO8C,KAAK,AAEvD,EAIA89B,EAAY/hC,SAAS,CAACmtB,QAAQ,CAAG,WAC7BvjB,EAAO5J,SAAS,CAACmtB,QAAQ,CAACnuB,KAAK,CAAC,IAAI,CAAE6K,WACtC,IAAI,CAAC1I,MAAM,CAACghC,SAAS,CAAC,IAAI,CAAE,IAAI,CAAChhC,MAAM,CAACihC,gBAAgB,GAC5D,EAMAL,EAAY/hC,SAAS,CAACqiC,cAAc,CAAG,WACnC,IAAIC,EAAM14B,EAAO5J,SAAS,CAACqiC,cAAc,CAAC95B,IAAI,CAAC,IAAI,EAAGg6B,EAAQ,IAAI,CAACphC,MAAM,CAACiJ,KAAK,CAACgB,UAAU,CAM1F,OALAk3B,EAAIlM,EAAE,CAAG,IAAI,CAACA,EAAE,CAChBkM,EAAIE,SAAS,CAAG,IAAI,CAACA,SAAS,CAAGD,GAASA,CAAK,CAAC,IAAI,CAAChjC,CAAC,CAAC,CAGvD+iC,EAAIzM,GAAG,CAAG,IAAI,CAAC4M,QAAQ,EAAI,IAAI,CAACrjB,IAAI,CAC7BkjB,CACX,EAIAP,EAAY/hC,SAAS,CAAC0iC,OAAO,CAAG,WAC5B,MAAO,AAAkB,UAAlB,OAAO,IAAI,CAACpjC,CAAC,EAChB,AAAmB,UAAnB,OAAO,IAAI,CAAC82B,EAAE,AACtB,EACO2L,CACX,EAAEH,GAwCF,OAvCAxuB,EAAO2uB,EAAY/hC,SAAS,CAAE,CAC1B2iC,QAAS,CAAA,EACTC,gBAAiB,CAAC,IAAK,KAAK,AAChC,GAoCOb,CACX,GACArjC,EAAgBD,EAAU,gCAAiC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,+BAA+B,CAAC,CAAE,SAAUwB,CAAC,CAAE8P,CAAK,CAAEC,CAAc,CAAE9P,CAAC,CAAE2iC,CAAoB,CAAEd,CAAW,EAYtW,IACQn5B,EADJE,EAAY,AAAC,IAAI,EAAI,IAAI,CAACA,SAAS,GAC/BF,EAAgB,SAAUpG,CAAC,CAAEuG,CAAC,EAI9B,MAAOH,AAHPA,CAAAA,EAAgBI,OAAOC,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAU3G,CAAC,CAAEuG,CAAC,EAAIvG,EAAE0G,SAAS,CAAGH,CAAG,GAC1E,SAAUvG,CAAC,CAAEuG,CAAC,EAAI,IAAK,IAAIK,KAAKL,EAAOC,OAAOhJ,SAAS,CAACjB,cAAc,CAACwJ,IAAI,CAACQ,EAAGK,IAAI5G,CAAAA,CAAC,CAAC4G,EAAE,CAAGL,CAAC,CAACK,EAAE,AAAD,CAAG,CAAA,EAC/E5G,EAAGuG,EAC5B,EACO,SAAUvG,CAAC,CAAEuG,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIM,UAAU,uBAAyBC,OAAOP,GAAK,iCAE7D,SAASQ,IAAO,IAAI,CAACC,WAAW,CAAGhH,CAAG,CADtCoG,EAAcpG,EAAGuG,GAEjBvG,EAAExC,SAAS,CAAG+I,AAAM,OAANA,EAAaC,OAAOS,MAAM,CAACV,GAAMQ,CAAAA,EAAGvJ,SAAS,CAAG+I,EAAE/I,SAAS,CAAE,IAAIuJ,CAAG,CACtF,GAEA9C,EAAWxG,EAAEwG,QAAQ,CAAEq8B,EAAO7iC,EAAE6iC,IAAI,CACpC7+B,EAAQ8L,EAAME,KAAK,CACnB8yB,EAAe/yB,EAAeE,WAAW,CAAC2xB,MAAM,CAChDn7B,EAAWxG,EAAEwG,QAAQ,CAAE4U,EAAQpb,EAAEob,KAAK,CAAEnb,EAAUD,EAAEC,OAAO,CAAEiT,EAASlT,EAAEkT,MAAM,CAAEoI,EAAOtb,EAAEsb,IAAI,CAAEjN,EAAWrO,EAAEqO,QAAQ,CAAE4yB,EAAWjhC,EAAEihC,QAAQ,CAAE9gC,EAAQH,EAAEG,KAAK,CAAEqL,EAAOxL,EAAEwL,IAAI,CAAE/E,EAAazG,EAAEyG,UAAU,CAAEq8B,EAAiB9iC,EAAE8iC,cAAc,CAU7O,SAASC,IACL,IAAItwB,EAASuwB,EACb,GAAI,IAAI,CAACp0B,OAAO,CAAE,CACd6D,EAAUjH,EAAK,IAAI,CAACiH,OAAO,CAAE,CAACuS,OAAOC,SAAS,EAC9C,IAAK,IAAIxJ,EAAK,EAAGhR,EAAK,IAAI,CAACxJ,MAAM,CAAEwa,EAAKhR,EAAGnH,MAAM,CAAEmY,IAAM,CACrD,IAAIxa,EAASwJ,CAAE,CAACgR,EAAG,CACnB,GAAIxa,EAAOgiC,MAAM,CACb,IAAK,IAAIv4B,EAAK,EAAGC,EAAK1J,EAAOgiC,MAAM,CAAEv4B,EAAKC,EAAGrH,MAAM,CAAEoH,IAAM,CACvD,IAAIpE,EAAMqE,CAAE,CAACD,EAAG,CACZpE,GAAOA,EAAMmM,IACbA,EAAUnM,EACV08B,EAAS,CAAA,EAEjB,CAER,CACIA,GACA,CAAA,IAAI,CAACvwB,OAAO,CAAGA,CAAM,CAE7B,CACJ,CAaA,IAAIywB,EAA8B,SAAUx5B,CAAM,EAE9C,SAASw5B,IACL,OAAOx5B,AAAW,OAAXA,GAAmBA,EAAO5K,KAAK,CAAC,IAAI,CAAE6K,YAAc,IAAI,AACnE,CAoVA,OAvVAf,EAAUs6B,EAAcx5B,GASxBw5B,EAAavjC,OAAO,CAAG,SAAU2I,CAAS,EAClC7B,EAAWF,EAAU,kBACrBC,EAAS8B,EAAW,yBAA0By6B,EAEtD,EASAG,EAAapjC,SAAS,CAACe,IAAI,CAAG,WAC1B6I,EAAO5J,SAAS,CAACe,IAAI,CAAC/B,KAAK,CAAC,IAAI,CAAE6K,WAClC,IAAI,CAAC/I,OAAO,CAACkiB,QAAQ,CAAG,KAAK,CACjC,EAMAogB,EAAapjC,SAAS,CAACqjC,gBAAgB,CAAG,WACtC,IAAIpf,EAAQ,IAAI,CACZqf,EAAW,WACX,IAAK,IAAI3nB,EAAK,EAAGhR,EAAKsZ,EAAM/iB,KAAK,CAACC,MAAM,CAAEwa,EAAKhR,EAAGnH,MAAM,CAAEmY,IAAM,CAC5D,IAAIxa,EAASwJ,CAAE,CAACgR,EAAG,CACfzR,EAAQ/I,EAAO+I,KAAK,AACxB/I,CAAAA,EAAO+I,KAAK,CAAG/I,EAAOiJ,KAAK,CAC3BjJ,EAAOiJ,KAAK,CAAGF,CACnB,CACJ,EACAo5B,IACA,IAAIzK,EAAUjvB,EAAO5J,SAAS,CAACqjC,gBAAgB,CAAC96B,IAAI,CAAC,IAAI,EAEzD,OADA+6B,IACOzK,CACX,EAMAuK,EAAapjC,SAAS,CAACujC,QAAQ,CAAG,SAAUhf,CAAK,CAAEif,CAAK,CAAE9iC,CAAG,CAAEF,CAAG,EAE9D,IAAIijC,EAAO75B,EAAO5J,SAAS,CAACujC,QAAQ,CAACh7B,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC46B,MAAM,CAAEK,EAAO9iC,EAAKF,GAGzE,OADAijC,EAAKlf,KAAK,CAAGA,EAAMX,KAAK,CAAC6f,EAAKnM,KAAK,CAAEmM,EAAKlM,GAAG,EACtCkM,CACX,EAcAL,EAAapjC,SAAS,CAAC0jC,cAAc,CAAG,SAAU5iC,CAAO,EACrD,IAEI6iC,EAFWC,EAAYj5B,AAAlB,IAAI,CAAiBi5B,SAAS,CAAE7F,EAASpzB,AAAzC,IAAI,CAAwCozB,MAAM,CACvDzsB,EAAKxQ,EAAQwQ,EAAE,CAEnB,GAAIA,EAAI,CACJ,IAAIlO,EAAQoY,EAAKuiB,EAAQ,SAAU36B,CAAK,EAAI,OAAOA,EAAMkO,EAAE,GAAKA,CAAI,GACpEqyB,EAAavgC,EAAQA,EAAM4Q,KAAK,CAAG,KAAK,CAC5C,CACA,GAAI,AAAsB,KAAA,IAAf2vB,EAA4B,CACnC,IAAIvgC,EAAQoY,EAAKuiB,EAAQ,SAAU36B,CAAK,EAAI,OAAQA,EAAM9D,CAAC,GAAKwB,EAAQxB,CAAC,EACrE8D,EAAMgzB,EAAE,GAAKt1B,EAAQs1B,EAAE,EACvB,CAAChzB,EAAMygC,OAAO,AAAG,GACrBF,EAAavgC,EAAQA,EAAM4Q,KAAK,CAAG,KAAK,CAC5C,CAQA,OANI,IAAI,CAAC8vB,OAAO,EACZv1B,EAASo1B,IACTp1B,EAASq1B,IACTD,GAAcC,GACdD,CAAAA,GAAcC,CAAQ,EAEnBD,CACX,EACAP,EAAapjC,SAAS,CAAC+jC,cAAc,CAAG,SAAU3gC,CAAK,EAEnD,IADIuH,EACAq5B,EAAW5gC,EAAMo4B,KAAK,AAC1Bp4B,CAAAA,EAAMo4B,KAAK,CAAG9vB,EAAKtI,EAAM6gC,KAAK,EAAI7gC,EAAM6gC,KAAK,CAACC,OAAO,CAAE9gC,EAAMo4B,KAAK,EAC9Dp4B,EAAM+gC,SAAS,EAAK,CAAA,AAA2B,OAA1Bx5B,CAAAA,EAAKvH,EAAMi4B,SAAS,AAAD,GAAe1wB,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG3H,KAAK,AAAD,GACvFI,EAAM+gC,SAAS,CAAC5mB,GAAG,CAAC,CAChBva,MAAO,GAAGsD,MAAM,CAAClD,EAAMi4B,SAAS,CAACr4B,KAAK,CAAE,KAC5C,GAEJ4G,EAAO5J,SAAS,CAAC+jC,cAAc,CAAC/kC,KAAK,CAAC,IAAI,CAAE6K,WAC5CzG,EAAMo4B,KAAK,CAAGwI,CAClB,EAIAZ,EAAapjC,SAAS,CAACokC,cAAc,CAAG,SAAUhhC,CAAK,EACnD,IAGIihC,EAAiB/C,EAAgFgD,EAAQC,EAASC,EAASC,EAH3Hv6B,EAAQ,IAAI,CAACA,KAAK,CAAEE,EAAQ,IAAI,CAACA,KAAK,CAAEyuB,EAAU,IAAI,CAAC6L,aAAa,CAAE5jC,EAAU,IAAI,CAACA,OAAO,CAAE6jC,EAAiB7jC,EAAQ6jC,cAAc,EAAI,EAAGC,EAAc,AAACxhC,CAAAA,EAAMi4B,SAAS,EAAIj4B,EAAMi4B,SAAS,CAACr4B,KAAK,EAAI,CAAA,EAAK,EAAG6hC,EAAgB,IAAI,CAACC,YAAY,CAAGjM,EAAQ/jB,MAAM,CAAEiwB,EAAOr5B,EAAKtI,EAAMgzB,EAAE,CAAEhzB,EAAM9D,CAAC,CAAI8D,CAAAA,EAAMkU,GAAG,EAAI,CAAA,GAAKqqB,EAAe7gC,EAAQ6gC,YAAY,CAAEr/B,EAAU,IAAI,CAACpB,KAAK,CAACoB,OAAO,CAAED,EAAW,IAAI,CAACnB,KAAK,CAACmB,QAAQ,CACvZm5B,EAAQp4B,EAAMo4B,KAAK,CAAEwJ,EAAS96B,EAAM9H,SAAS,CAAC2iC,EAAM,EAAG,EAAG,EAAG,GAC7DvhC,EAAS/C,KAAK2d,GAAG,CAAC4mB,EAASxJ,GAAQtvB,EAAW,IAAI,CAAChL,KAAK,CAACgL,QAAQ,CAA8C+4B,EAAUC,AAAxCx5B,EAAK5K,EAAQokC,WAAW,CAAE,GAA4B,EAAI,EAC7GpsB,EAAU+f,EAAQ/jB,MAAM,CAAEqwB,EAAc1kC,KAAKgS,KAAK,CAAComB,EAAQ71B,KAAK,EAC9F2hC,IACAN,CAAAA,EAAkBM,EAAiBnhC,CAAK,EAClB,GAClB6gC,CAAAA,EAAkB,CAAA,EAEtB7I,GAAS6I,EAAkB,EAC3BW,GAAUX,EAAkB,GAEhC7I,EAAQ/6B,KAAKD,GAAG,CAACg7B,EAAO,KACxBwJ,EAAS1pB,EAAM0pB,EAAQ,IAAK96B,EAAMoN,GAAG,CAAG,IAEpCnX,EAAQiD,EAAMtC,OAAO,CAACskC,UAAU,IAChCtsB,GAAY,AAACrY,CAAAA,KAAK2F,IAAI,CAAChD,EAAMtC,OAAO,CAACskC,UAAU,EAAID,CAAU,EAAK,EAClEA,EAAc1kC,KAAK2F,IAAI,CAAChD,EAAMtC,OAAO,CAACskC,UAAU,GAGhDtkC,EAAQukC,cAAc,EACtB92B,EAASnL,EAAMq4B,KAAK,GACpBrxB,EAAMgB,UAAU,EAChBhI,CAAAA,EAAMq4B,KAAK,CAAGrxB,EAAMhI,SAAS,CAACgB,EAAM7D,CAAC,CAAE,EAAG,EAAG,EAAG,EAAGuB,EAAQukC,cAAc,CAAA,EAE7E,IAAI/lC,EAAImB,KAAKma,KAAK,CAACna,KAAKC,GAAG,CAAC86B,EAAOwJ,IAAWC,EAA6DjiC,EAAQozB,AAAvD31B,KAAKma,KAAK,CAACna,KAAKD,GAAG,CAACg7B,EAAOwJ,IAAWC,EAAsB3lC,EACpH8Z,EAAI3Y,KAAKC,GAAG,CAACsiC,EAAgB,AAAwB,UAAxB,OAAOrB,EACpCA,EAAah+B,MAAM,CACnBg+B,GAAgB,EAAIwD,GAAc1kC,KAAKC,GAAG,CAACsC,EAAOmiC,GAAe,GACjE9J,EAAY,CACZ/7B,EAAGA,EACHC,EAAGkB,KAAKma,KAAK,CAACxX,EAAMq4B,KAAK,CAAG3iB,GAAWmsB,EACvCjiC,MAAOA,EACPC,OAAQkiC,EACR/rB,EAAGA,CACP,CACAhW,CAAAA,EAAMi4B,SAAS,CAAGA,EAEbnvB,EAMD9I,EAAMkiC,UAAU,CAAC,EAAE,EAAIT,EACnBD,EANJxhC,EAAMkiC,UAAU,CAAC,EAAE,EAAIV,EACnBC,EACAxJ,EAAUr4B,KAAK,CAAG,EAQ1BuhC,EAAUD,AADVA,CAAAA,EAASjJ,EAAU/7B,CAAC,AAADA,EACA+7B,EAAUr4B,KAAK,CAC9BshC,EAAS,GAAKC,EAAUr6B,EAAMoN,GAAG,EACjCgtB,EAAShpB,EAAMgpB,EAAQ,EAAGp6B,EAAMoN,GAAG,EAEnCktB,EAAUD,AADVA,CAAAA,EAAUjpB,EAAMipB,EAAS,EAAGr6B,EAAMoN,GAAG,CAAA,EACjBgtB,EACpBlhC,EAAM6gC,KAAK,CAAG5jC,EAAMg7B,EAAW,CAC3B/7B,EAAGglC,EACHthC,MAAOuhC,EAAUD,EACjBJ,QAASM,EAAUA,EAAU,EAAI,IACrC,IAGAphC,EAAM6gC,KAAK,CAAG,KAGlB,IAAIqB,EAAaliC,EAAMkiC,UAAU,CAC7BC,EAAS,AAACr5B,EAAe,EAAJ,EACrBs5B,EAAS,AAACt5B,EAAe,EAAJ,EACrBu5B,EAAkB,IAAI,CAACf,aAAa,CACpC,IAAI,CAACA,aAAa,CAAC5vB,MAAM,CACzB,CAAC+jB,EAAQ71B,KAAK,CAAG,EAEjBkJ,EACAo5B,CAAU,CAACC,EAAO,EAAIlK,EAAUr4B,KAAK,CAAG,EAGxCsiC,CAAU,CAACC,EAAO,CAAGjqB,EAAMgqB,CAAU,CAACC,EAAO,CACzC,AAACr7B,CAAAA,EAAMiB,QAAQ,CAAG,GAAK,CAAA,EAAKkwB,EAAUr4B,KAAK,CAAEkH,EAAMiC,IAAI,CAAG9J,EAAU6H,EAAMiC,IAAI,CAAGjC,EAAMoN,GAAG,CAAGjV,EAAW,GAEhHijC,CAAU,CAACE,EAAO,CAAGlqB,EAAMgqB,CAAU,CAACE,EAAO,CAAI,AAACt5B,CAAAA,EAAW,GAAK,CAAA,EAAKu5B,EAAiBr7B,EAAMkC,GAAG,CAAGhK,EAAS8H,EAAMkC,GAAG,CAAGlC,EAAMkN,GAAG,CAAGhV,EAAU,GAE/Ig/B,CAAAA,EAAcl+B,EAAMk+B,WAAW,AAAD,IAGtBH,EAASG,IACTA,CAAAA,EAAcA,EAAYD,MAAM,AAAD,EAG9B9yB,EAAS+yB,IACVA,CAAAA,EAAc,CAAA,EAElBl+B,EAAMsiC,aAAa,CAAGrlC,EAAMg7B,GAC5BoJ,EAAgBhkC,KAAKD,GAAG,CAACC,KAAKgS,KAAK,CAACjP,EAAS89B,EAAcl+B,EAAMo4B,KAAK,CAClEA,GAAQ,GACZp4B,EAAMuiC,YAAY,CAAG,CACjBrmC,EAAG4K,EAAMiB,QAAQ,CACbkwB,EAAU/7B,CAAC,CAAGkE,EAASihC,EACvBpJ,EAAU/7B,CAAC,CACfC,EAAG87B,EAAU97B,CAAC,CACdyD,MAAOyhC,EACPxhC,OAAQo4B,EAAUp4B,MAAM,AAC5B,EAER,EAIAmgC,EAAapjC,SAAS,CAACoC,SAAS,CAAG,WAC/BwH,EAAO5J,SAAS,CAACoC,SAAS,CAACpD,KAAK,CAAC,IAAI,CAAE6K,WACvC,IAAK,IAAI8R,EAAK,EAAGhR,EAAK,IAAI,CAACozB,MAAM,CAAEpiB,EAAKhR,EAAGnH,MAAM,CAAEmY,IAAM,CACrD,IAAIvY,EAAQuH,CAAE,CAACgR,EAAG,CAClB,IAAI,CAACyoB,cAAc,CAAChhC,EACxB,CACJ,EAeAggC,EAAapjC,SAAS,CAACmiC,SAAS,CAAG,SAAU/+B,CAAK,CAAE4Y,CAAI,EACpD,IAAI4pB,EAAa,IAAI,CAAC9kC,OAAO,CAAEe,EAAW,IAAI,CAACX,KAAK,CAACW,QAAQ,CAAEc,EAAOS,EAAMyiC,SAAS,CAAExK,EAAYj4B,EAAMi4B,SAAS,CAAEqK,EAAgBtiC,EAAMsiC,aAAa,CAAEC,EAAeviC,EAAMuiC,YAAY,CAAEG,EAAa1iC,EAAMqpB,KAAK,CAAEsZ,EAAaH,EAAW3iB,MAAM,CAAC6iB,GAAc,SAAS,EACxQ,CAAC,EAAIE,EAAiB,AAAsB,KAAA,IAAfF,EAC7B,OAAS9pB,EAAMiqB,EAAY,IAAI,CAACC,YAAY,CAAC9iC,EAAO0iC,GAAazhC,EAAYqH,EAAK,IAAI,CAACxK,KAAK,CAACJ,OAAO,CAACI,KAAK,CAACmD,SAAS,CAAE0hC,EAAU1hC,SAAS,EACzIk3B,EAAUn4B,EAAMm4B,OAAO,CAAE4K,EAAY/iC,EAAMk+B,WAAW,CAC1D,GAAI,AAACl+B,EAAMgjC,MAAM,EAAIhjC,AAAkB,CAAA,IAAlBA,EAAMogB,OAAO,CAqDzB+X,GACLn4B,CAAAA,EAAMm4B,OAAO,CAAGA,EAAQh1B,OAAO,EAAC,OAxBhC,GA5BIg1B,EACAA,EAAQriB,IAAI,CAAC8C,EAAK,CAACqf,IAGnBj4B,EAAMm4B,OAAO,CAAGA,EAAU15B,EAASC,CAAC,CAAC,SAChCC,QAAQ,CAACqB,EAAMijC,YAAY,IAC3BnkC,GAAG,CAACkB,EAAMxB,KAAK,EAAI,IAAI,CAACA,KAAK,EAClC25B,EAAQriB,IAAI,CAAGrX,CAAQ,CAACc,EAAK,CAACtC,EAAMg7B,IAC/Bt5B,QAAQ,CAACqB,EAAMijC,YAAY,IAC3BtkC,QAAQ,CAAC,gCACTG,GAAG,CAACq5B,IAGTmK,IACInK,EAAQ+K,QAAQ,EAChB/K,EAAQ+K,QAAQ,CAACtqB,EAAK,CAAC3b,EAAMqlC,IAC7BnK,EAAQgL,eAAe,CAACvqB,EAAK,CAAC3b,EAAMslC,MAGpCpK,EAAQgL,eAAe,CAAG1kC,EAASi/B,QAAQ,CAAC6E,EAAarmC,CAAC,CAAEqmC,EAAapmC,CAAC,CAAEomC,EAAa3iC,KAAK,CAAE2iC,EAAa1iC,MAAM,EACnHs4B,EAAQ+K,QAAQ,CACZzkC,CAAQ,CAACc,EAAK,CAAC+iC,GACV3jC,QAAQ,CAAC,+BACTG,GAAG,CAACq5B,GACJiL,IAAI,CAACjL,EAAQgL,eAAe,IAIzC,CAAC,IAAI,CAACrlC,KAAK,CAACK,UAAU,GACtBg6B,EACKriB,IAAI,CAAC8C,EAAK,CAACiqB,EAAW5hC,GACtBoiC,MAAM,CAACb,EAAWa,MAAM,EACzBf,GAAe,CAEVvE,EAASgF,IACVA,CAAAA,EAAY,CAAC,CAAA,EAEbhF,EAASyE,EAAWtE,WAAW,GAC/B6E,CAAAA,EAAY9lC,EAAMulC,EAAWtE,WAAW,CAAE6E,EAAS,EAEvD,IAAIniC,EAAQmiC,EAAUniC,IAAI,EACtBC,EAAMgiC,EAAUjiC,IAAI,EAAE0iC,QAAQ,CAAC,KAAMl2B,GAAG,IACxCvM,EAAMb,EAAMa,KAAK,EAAI,IAAI,CAACA,KAAK,EAC1ByiC,QAAQ,CAAC,KAAMl2B,GAAG,EAC3By1B,CAAAA,EAAUjiC,IAAI,CAAGA,EACjBu3B,EACK+K,QAAQ,CAACN,EAAe,CAACC,EAAW5hC,GACpCoiC,MAAM,CAACb,EAAWa,MAAM,CACjC,CAMZ,EAIArD,EAAapjC,SAAS,CAAC2mC,UAAU,CAAG,WAGhC,IAAK,IAFD3qB,EAAO,IAAI,CAAComB,gBAAgB,GAEvBzmB,EAAK,EAAGhR,EAAK,IAAI,CAACozB,MAAM,CAAEpiB,EAAKhR,EAAGnH,MAAM,CAAEmY,IAAM,CACrD,IAAIvY,EAAQuH,CAAE,CAACgR,EAAG,CAClB,IAAI,CAACwmB,SAAS,CAAC/+B,EAAO4Y,EAC1B,CACJ,EAOAonB,EAAapjC,SAAS,CAACoiC,gBAAgB,CAAG,WACtC,OAAQ,IAAI,CAAClhC,KAAK,CAAC0lC,UAAU,CAAI,CAAA,IAAI,CAAC9lC,OAAO,CAAC+lC,cAAc,EAAI,GAAE,EAC9D,UACA,MACR,EAIAzD,EAAapjC,SAAS,CAAC8mC,aAAa,CAAG,SAAU1jC,CAAK,EAClD,IAAIi4B,EAAYj4B,EAAMi4B,SAAS,CAAEG,EAAQp4B,EAAMo4B,KAAK,CAAEC,EAAQr4B,EAAMq4B,KAAK,QACzE,AAAKJ,EAGU,AAAiB,KAAA,IAAVG,GAClB,AAAiB,KAAA,IAAVC,GACPA,GAAS,GACTA,GAAS,IAAI,CAACrxB,KAAK,CAACkN,GAAG,EACvB,AAAC+jB,CAAAA,EAAU/7B,CAAC,EAAI,CAAA,EAAM+7B,CAAAA,EAAUr4B,KAAK,EAAI,CAAA,GAAM,GAC/Cw4B,GAAS,IAAI,CAACtxB,KAAK,CAACoN,GAAG,CAPhB1N,EAAO5J,SAAS,CAAC8mC,aAAa,CAAC9nC,KAAK,CAAC,IAAI,CAAE6K,UAS1D,EAMAu5B,EAAav8B,cAAc,CAAGxG,EAAM0iC,EAAal8B,cAAc,CAAEg8B,GAC1DO,CACX,EAAEL,GAmBF,OAlBA3vB,EAAOgwB,EAAapjC,SAAS,CAAE,CAC3B8hC,WAAYC,EACZgF,cAAe,CAAC,KAAM,IAAI,CAC1BC,mBAAoB,CAAA,EACpBC,eAAgB,CAAC,IAAK,KAAM,IAAI,CAChCC,eAAgB,CAAA,EAChBvkC,KAAM,SACNF,QAASuN,EAAe7O,MAAM,CAACnB,SAAS,CAACyC,OAAO,CAChD0kC,cAAerE,EACfsE,YAAatE,CACjB,GACA9yB,EAAeq3B,kBAAkB,CAAC,SAAUjE,GAOrCA,CACX,GACA1kC,EAAgBD,EAAU,gCAAiC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,gCAAgC,CAAC,CAAE,SAAUF,CAAU,CAAE6kC,CAAY,EAKnK,OAFAA,EAAavjC,OAAO,CAACkgC,AADbxhC,EACe4c,IAAI,EAEpB5c,CACX,GACAG,EAAgBD,EAAU,6BAA8B,CAACA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUuR,CAAc,CAAE9P,CAAC,EAY3J,IACQ0I,EADJE,EAAY,AAAC,IAAI,EAAI,IAAI,CAACA,SAAS,GAC/BF,EAAgB,SAAUpG,CAAC,CAAEuG,CAAC,EAI9B,MAAOH,AAHPA,CAAAA,EAAgBI,OAAOC,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAU3G,CAAC,CAAEuG,CAAC,EAAIvG,EAAE0G,SAAS,CAAGH,CAAG,GAC1E,SAAUvG,CAAC,CAAEuG,CAAC,EAAI,IAAK,IAAIK,KAAKL,EAAOC,OAAOhJ,SAAS,CAACjB,cAAc,CAACwJ,IAAI,CAACQ,EAAGK,IAAI5G,CAAAA,CAAC,CAAC4G,EAAE,CAAGL,CAAC,CAACK,EAAE,AAAD,CAAG,CAAA,EAC/E5G,EAAGuG,EAC5B,EACO,SAAUvG,CAAC,CAAEuG,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIM,UAAU,uBAAyBC,OAAOP,GAAK,iCAE7D,SAASQ,IAAO,IAAI,CAACC,WAAW,CAAGhH,CAAG,CADtCoG,EAAcpG,EAAGuG,GAEjBvG,EAAExC,SAAS,CAAG+I,AAAM,OAANA,EAAaC,OAAOS,MAAM,CAACV,GAAMQ,CAAAA,EAAGvJ,SAAS,CAAG+I,EAAE/I,SAAS,CAAE,IAAIuJ,CAAG,CACtF,GAEAw4B,EAAc/xB,EAAeE,WAAW,CAACo3B,MAAM,CAACtnC,SAAS,CAAC8hC,UAAU,CACpEp2B,EAAOxL,EAAEwL,IAAI,CA0EjB,OApEgC,SAAU9B,CAAM,EAE5C,SAAS29B,IACL,OAAO39B,AAAW,OAAXA,GAAmBA,EAAO5K,KAAK,CAAC,IAAI,CAAE6K,YAAc,IAAI,AACnE,CAwDA,OA3DAf,EAAUy+B,EAAY39B,GAYtB29B,EAAWC,oBAAoB,CAAG,SAAU1mC,CAAO,EAK/C,SAAS2mC,EAAYzuB,CAAI,CAAExS,CAAG,EACP,KAAA,IAARA,GACP1F,CAAAA,CAAO,CAACkY,EAAK,CAAGxS,CAAE,CAE1B,CACAihC,EAAY,IAAK/7B,EAAK5K,EAAQw2B,KAAK,CAAEx2B,EAAQxB,CAAC,GAC9CmoC,EAAY,KAAM/7B,EAAK5K,EAAQy2B,GAAG,CAAEz2B,EAAQs1B,EAAE,GAC9CqR,EAAY,cAAe/7B,EAAK5K,EAAQ4mC,SAAS,CAAE5mC,EAAQwgC,WAAW,EAC1E,EAsBAiG,EAAWvnC,SAAS,CAAC2nC,YAAY,CAAG,SAAU7mC,CAAO,CAAExB,CAAC,EACpD,IAAIsoC,EAAah+B,EAAO5J,SAAS,CAAC2nC,YAAY,CAACp/B,IAAI,CAAC,IAAI,CAAEzH,EAASxB,GAEnE,OADAioC,EAAWC,oBAAoB,CAACI,GACzBA,CACX,EACAL,EAAWvnC,SAAS,CAAC0iC,OAAO,CAAG,WAC3B,MAAQ,AAAC,CAAA,AAAsB,UAAtB,OAAO,IAAI,CAACpL,KAAK,EACtB,AAAkB,UAAlB,OAAO,IAAI,CAACh4B,CAAC,AAAY,GACxB,CAAA,AAAoB,UAApB,OAAO,IAAI,CAACi4B,GAAG,EACZ,AAAmB,UAAnB,OAAO,IAAI,CAACnB,EAAE,EACd,IAAI,CAACyR,SAAS,AAAD,CACzB,EACON,CACX,EAAExF,EAQN,GACArjC,EAAgBD,EAAU,sCAAuC,CAACA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUyB,CAAC,EAYzG,IAAIqO,EAAWrO,EAAEqO,QAAQ,CAgNzB,MAjM0B,CAEtBu5B,SAAU,CAAA,EACVz2B,WAAY,CACR9N,QAAS,CAAA,CACb,EACAi+B,QAAS,CACLC,aAAc,2DACdC,YAAa,KACbqG,eAAgB,WACZ,IAAkB5mC,EAASiC,AAAf,IAAI,CAAiBjC,MAAM,CAAE+I,EAAQ/I,EAAO+I,KAAK,CAAE89B,EAAU7mC,EAAO8mC,cAAc,CAACC,oBAAoB,CAAEC,EAAcj+B,EAAMpJ,OAAO,CAACqnC,WAAW,CAAEC,EAAYjnC,EAAO8mC,cAAc,CAAEJ,EAAYzkC,AAAjM,IAAI,CAAmMtC,OAAO,CAAC+mC,SAAS,CAChO9gC,EAASqhC,EAAUC,WAAW,CAAEC,EAAS,MAASllC,CAAAA,AAD1C,IAAI,CAC4Cgc,IAAI,EAAIhc,AADxD,IAAI,CAC0Do/B,SAAS,AAAD,EAAK,OACvF,GAAI4F,EAAU1G,WAAW,CACrB,OAAOt+B,AAHC,IAAI,CAGCmlC,gBAAgB,CAACH,EAAU1G,WAAW,CAEnD,EAAC36B,GAAUwH,EAASnL,AALZ,IAAI,CAKck0B,KAAK,GAC/BvwB,CAAAA,EAAS5F,EAAOD,KAAK,CAACiG,IAAI,CAACqhC,aAAa,CAACt+B,EAAMu+B,iBAAiB,CAAErlC,AAN1D,IAAI,CAM4Dk0B,KAAK,CAAE6Q,EAAaH,GAAW,CAAC,EAAC,EAE7G,IAAI1Q,EAAQn2B,EAAOD,KAAK,CAACiG,IAAI,CAACC,UAAU,CAACL,EAAQ3D,AARrC,IAAI,CAQuCk0B,KAAK,EAAGC,EAAMp2B,EAAOD,KAAK,CAACiG,IAAI,CAACC,UAAU,CAACL,EAAQ3D,AAR9F,IAAI,CAQgGm0B,GAAG,EASnH,OARA+Q,GAAU,QACLT,EAKDS,GAAUhR,EAAQ,QAHlBgR,GADU,UAAYhR,EAAZ,aACUC,EAAM,QAKvB+Q,CACX,CACJ,EACAzjC,WAAY,CACRlC,KAAM,gBAIN0B,UAAW,CACP8G,SAAU,CAAA,CACd,EACAxH,OAAQ,EACRsB,YAAa,CACT1B,QAAS,CAAA,EACTO,OAAQ,eACRH,OAAQ,EACRK,KAAM,OACN6N,MAAO,MACX,EACA3M,UAAW,CACP3B,QAAS,CAAA,EACTsO,MAAO,OACX,CACJ,CACJ,CA+IJ,GACAnT,EAAgBD,EAAU,0BAA2B,CAACA,CAAQ,CAAC,kCAAkC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUiqC,CAAS,CAAExoC,CAAC,EAUrJ,IAUIyoC,EAVAjiC,EAAWxG,EAAEwG,QAAQ,CAAE8U,EAAOtb,EAAEsb,IAAI,CAAE/E,EAAYvW,EAAEuW,SAAS,CAAE/M,EAAUxJ,EAAEwJ,OAAO,CAAE6E,EAAWrO,EAAEqO,QAAQ,CAAE7C,EAAOxL,EAAEwL,IAAI,CAulB5H,OA5kBA,AAAC,SAAUi9B,CAAU,EAkCjB,SAASv0B,IAC0B,KAAA,IAApB,IAAI,CAACosB,UAAU,EACtB,IAAI,CAACA,UAAU,CAACoI,SAAS,CAAC,IAAI,CAAC9nC,OAAO,CAACogB,MAAM,CAAE,CAAA,EAEvD,CAKA,SAAS3Z,IAEL,IADIoD,EAEA,CAAA,AAA2B,OAA1BA,CAAAA,EAAKzD,AADC,IAAI,CACAs5B,UAAU,AAAD,GAAe71B,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGk+B,SAAS,AAAD,GACvE3hC,CAAAA,AAFO,IAAI,CAENpG,OAAO,CAACqgB,OAAO,CAAG,CAAA,CAAI,CAEnC,CAIA,SAAS2nB,IACL,IAAiBtI,EAAat5B,AAAnB,IAAI,CAAoBs5B,UAAU,CAC7C,GAAIA,MAAAA,EAA+C,KAAK,EAAIA,EAAWqI,SAAS,CAAE,CAE9E,IAAK,IADDE,EAAgB7hC,AAFb,IAAI,CAEc6hC,aAAa,CAAEC,EAAO9hC,AAFxC,IAAI,CAEyC6hC,aAAa,CAACC,IAAI,CAAEC,EAAe,EAAE,CAChFv+B,EAAI,EAAGA,EAAIq+B,EAAcvlC,MAAM,CAAEkH,IACjC81B,EAAW0I,YAAY,CAACH,CAAa,CAACr+B,EAAE,GACzCu+B,EAAalhC,IAAI,CAACghC,CAAa,CAACr+B,EAAE,CAG1CxD,CARO,IAAI,CAQN6hC,aAAa,CAAGE,EACrB/hC,AATO,IAAI,CASN6hC,aAAa,CAACC,IAAI,CAAGA,CAC9B,CACJ,CAIA,SAASx6B,IAEAtH,AADM,IAAI,CACLs5B,UAAU,EAChBt5B,CAAAA,AAFO,IAAI,CAENs5B,UAAU,CAAG,IAAI2I,EAFf,IAAI,CAEyB,CAE5C,CAIA,SAASC,IAEL,IADIz+B,EAAIC,EACOy+B,EAAUx+B,AAAhB,IAAI,CAAew+B,OAAO,CAAEC,EAAez+B,AAA3C,IAAI,CAA0C/J,OAAO,CAACwoC,YAAY,CAAEvL,EAASlzB,AAA7E,IAAI,CAA4EkzB,MAAM,CAAE7zB,EAAQW,AAAhG,IAAI,CAA+FX,KAAK,CAAEE,EAAQS,AAAlH,IAAI,CAAiHT,KAAK,CAGnI,GAAIi/B,EAEA,IADA,IAAI3+B,EAAIqzB,EAAOv6B,MAAM,CACdkH,KAAK,CACR,IAAItH,EAAQ26B,CAAM,CAACrzB,EAAE,CAGjB6+B,EAAkB,CADRnmC,CAAAA,AAAY,OAAZA,EAAM7D,CAAC,EAAa+pC,AAAiB,CAAA,IAAjBA,CAAqB,GACpB,CAAA,AAAC,CAAA,AAA0E,OAAzE3+B,CAAAA,EAAKT,MAAAA,EAAqC,KAAK,EAAIA,EAAMs2B,UAAU,AAAD,GAAe71B,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGu+B,YAAY,CAAC9lC,EAAM9D,CAAC,CAAE,CAAA,EAAI,GACvK,CAAA,AAA0E,OAAzEsL,CAAAA,EAAKR,MAAAA,EAAqC,KAAK,EAAIA,EAAMo2B,UAAU,AAAD,GAAe51B,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGs+B,YAAY,CAAC9lC,EAAM7D,CAAC,CAAE,CAAA,EAAI,CAAC,CAG9I6D,CAAAA,EAAMogB,OAAO,CAAG+lB,CAAAA,GAEZnmC,AAA0B,CAAA,IAA1BA,EAAMtC,OAAO,CAAC0iB,OAAO,AAC7B,CAER,CAIA,SAASgmB,IACL,IAAI,CAACC,UAAU,CAAC,IAAI,CAACv/B,KAAK,CAAE,CAAC,IAAI,EACjC,IAAI,CAACu/B,UAAU,CAAC,IAAI,CAACr/B,KAAK,CAAEsB,EAAK,IAAI,CAACq7B,aAAa,CAAE,CAAC,IAAI,EAC9D,CAIA,SAAS2C,EAAiBxiC,CAAI,CAAEoZ,CAAI,EAEhC,IADI3V,EAEAuW,EAAQ3P,EAAWhS,EADnB4B,EAAS,IAAI,CAAE48B,EAAS58B,EAAO48B,MAAM,CAEzC,GAAI,AAAuE,OAAtEpzB,CAAAA,EAAKzD,MAAAA,EAAmC,KAAK,EAAIA,EAAKs5B,UAAU,AAAD,GAAe71B,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGk+B,SAAS,CAAE,CACtH,IAAIc,EAAeziC,EAAKs5B,UAAU,CAClClgB,EAAKnJ,OAAO,CAAC,SAAU0e,CAAG,EAEtB3U,EAAS,AAACyoB,CAAAA,MAAAA,EAAmD,KAAK,EAAIA,EAAaC,UAAU,AAAD,GAAM,EAAE,CACpGr4B,EAAYrK,EAAK4H,OAAO,CACpB5H,EAAKxG,GAAG,CACRgL,EAAKvK,EAAOL,OAAO,CAACyQ,SAAS,CAAErK,EAAKxG,GAAG,EAI3C,IARIiK,EAAIC,EAQJi/B,EAAmB,AAA0H,OAAzHj/B,CAAAA,EAAK,AAAoE,OAAnED,CAAAA,EAAKzD,MAAAA,EAAmC,KAAK,EAAIA,EAAKpG,OAAO,AAAD,GAAe6J,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGuW,MAAM,AAAD,GAAetW,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGiR,MAAM,CAAC,SAAUiuB,CAAG,EAGrM,IAAK,IAFDC,EAAQ,CAAA,EAEHr/B,EAAI,EAAGA,EAAIwW,EAAO1d,MAAM,CAAEkH,IAAK,CACpC,IAAIs/B,EAAa9oB,CAAM,CAACxW,EAAE,CAC1B,GAAIs/B,EAAWppC,IAAI,GAAKkpC,EAAIlpC,IAAI,EAC5BopC,EAAWnpC,EAAE,GAAKipC,EAAIjpC,EAAE,CAAE,CAC1BkpC,EAAQ,CAAA,EACR,KACJ,CACJ,CACA,OAAOA,CACX,GACAhM,EAAO5mB,OAAO,CAAC,SAAU/T,CAAK,EAC1B7D,EAAImM,EAAKtI,CAAK,CAAC,QAAUyyB,EAAIoU,WAAW,GAAG,CAAE7mC,CAAK,CAACyyB,EAAI,EACvD3U,EAAO/J,OAAO,CAAC,SAAU2yB,CAAG,EACxB,GAAIv7B,EAASgD,IAAchD,EAAShP,GAAI,CACpC,IAAI2f,EAAY,EACZ,CAAC3N,EAAYu4B,EAAIlpC,IAAI,EAAIrB,EAAIuqC,EAAIjpC,EAAE,EAClC0Q,EAAYu4B,EAAIlpC,IAAI,EAAIrB,EAAIuqC,EAAIlpC,IAAI,CACrCse,EAAY,aAEP,CAAA,AAAC3N,EAAYu4B,EAAIlpC,IAAI,EAC1BrB,EAAIuqC,EAAIlpC,IAAI,EACZrB,EAAIuqC,EAAIjpC,EAAE,EAAM0Q,EAAYu4B,EAAIlpC,IAAI,EACpCrB,EAAIuqC,EAAIjpC,EAAE,EACVtB,EAAIuqC,EAAIlpC,IAAI,GACZse,CAAAA,EAAY,cAAa,EAEzBA,GACAzI,EAAUvP,EAAMgY,EAAW,CAAE9b,MAAOA,EAAO0mC,IAAKA,CAAI,EAE5D,CACJ,GACAD,MAAAA,GAAoEA,EAAiB1yB,OAAO,CAAC,SAAU2yB,CAAG,EACtGrzB,EAAUvP,EAAM,sBAAuB,CAAE9D,MAAOA,EAAO0mC,IAAKA,CAAI,EACpE,EACJ,EACJ,EACJ,CACJ,CAYA,SAASI,IACL,IAAIC,EAAsB,IAAI,CAACA,mBAAmB,CAAEC,EAAeD,MAAAA,EAAiE,KAAK,EAAIA,EAAoBE,OAAO,CAAEtM,EAAS,IAAI,CAACA,MAAM,CAACna,KAAK,GAAIxZ,EAAQ,IAAI,CAACA,KAAK,CACtNigC,EAAU,IAAI,CAACvpC,OAAO,CAACupC,OAAO,CAAE3/B,EAAIqzB,EAAOv6B,MAAM,CAAG,EAuDxD,GAAI6mC,GAAW3/B,EAAI,EAAG,CAEW,UAAzB,IAAI,CAAC5J,OAAO,CAACwpC,OAAO,EACpBD,CAAAA,GAAW,IAAI,CAACE,cAAc,AAAD,EAI7BH,GACAA,EAAeC,GAGfD,GAAgB,IAAI,CAACG,cAAc,EACnCF,CAAAA,EAAUD,CAAW,EAIzB,IADA,IAAII,EAAU,KAAK,EAAGC,EAAO,KAAK,EAC3B//B,KAOH,GALM+/B,GAAQA,AAAiB,CAAA,IAAjBA,EAAKjnB,OAAO,EACtBinB,CAAAA,EAAO1M,CAAM,CAACrzB,EAAI,EAAE,AAAD,EAEvB8/B,EAAUzM,CAAM,CAACrzB,EAAE,CAEf+/B,AAAiB,CAAA,IAAjBA,EAAKjnB,OAAO,EAAcgnB,AAAoB,CAAA,IAApBA,EAAQhnB,OAAO,EAG7C,GAAIinB,EAAKnrC,CAAC,CAAGkrC,EAAQlrC,CAAC,CAAG+qC,EAAS,CAC9B,IAAIK,EAAS,AAACF,CAAAA,EAAQlrC,CAAC,CAAGmrC,EAAKnrC,CAAC,AAADA,EAAK,EACpCy+B,EAAOhV,MAAM,CACbre,EAAI,EAAG,EAAG,CACN07B,OAAQ,CAAA,EACR9mC,EAAGorC,CACP,GAEItgC,EAAM4Y,QAAQ,EAAI,IAAI,CAACliB,OAAO,CAACkiB,QAAQ,EAEvC2nB,CAAAA,AADQvgC,CAAAA,EAAM4Y,QAAQ,CAAC4nB,MAAM,CAAC,IAAI,CAACC,QAAQ,CAAC,CAACH,EAAO,CAAG,IAAIhC,EAAUt+B,EAAOA,EAAMtJ,OAAO,CAACgqC,WAAW,CAAE,CAAA,EAAOJ,EAAQ,IAAI,CAACC,KAAK,CAAA,EAC1HI,KAAK,CAAG,CAAA,CAEtB,CAEAN,EAAOD,EAEf,CAEA,OAAO,IAAI,CAACQ,YAAY,CAACjN,EAC7B,CAxPA4K,EAAW9oC,OAAO,CAflB,SAAiB2I,CAAS,CAAE+K,CAAW,EACnC,GAAI,CAAC/K,EAAU2G,SAAS,CAACC,QAAQ,CAAC,cAAe,CAC7C5G,EAAU2G,SAAS,CAACpH,IAAI,CAAC,cACzBrB,EAAS8B,EAAW,OAAQgG,GAC5B9H,EAAS8B,EAAW,YAAa4L,GACjC1N,EAAS8B,EAAW,wBAAyBsgC,GAC7CpiC,EAAS8B,EAAW,kBAAmBjB,GACvC,IAAI0jC,EAAc13B,EAAYvT,SAAS,AACvCirC,CAAAA,EAAYxB,UAAU,CAAGC,EACzBuB,EAAYC,UAAU,CAAGhB,EACzBxjC,EAAS6M,EAAa,sBAAuB61B,GAC7C1iC,EAAS6M,EAAa,cAAei2B,EACzC,CACA,OAAOhhC,CACX,EAoQA,IAAI2gC,EAA2B,WAM3B,SAASA,EAAUjiC,CAAI,EACnB,IAAI,CAAC2hC,SAAS,CAAG,CAAA,EACjB,IAAI,CAAC3hC,IAAI,CAAGA,CAChB,CAwRA,OA/QAiiC,EAAUgC,SAAS,CAAG,SAAUrB,CAAG,CAAEtjC,CAAG,EACpC,IAAI4kC,EAAStB,EAAIsB,MAAM,EAAIv3B,IAAUjT,EAAOkpC,EAAIlpC,IAAI,CAAE4C,EAASsmC,EAAIjpC,EAAE,CAAGipC,EAAIlpC,IAAI,CAAEyqC,EAAQ7kC,GAAO5F,EAC7F,AAAC4F,CAAAA,EAAM5F,CAAG,EAAKwqC,EACfA,EAAU,AAACxqC,CAAAA,EAAO4F,CAAE,EAAK4kC,EAQ7B,OANKtB,EAAIwB,SAAS,CAIRD,GAAQ7nC,EAHR6nC,EAAO7nC,GAAU6nC,AAAS,IAATA,CAM/B,EAIAlC,EAAUoC,OAAO,CAAG,SAAU/kC,CAAG,EAE7B,IAAIg6B,EAAat5B,AADN,IAAI,CACOs5B,UAAU,CAC5BoJ,EAAapJ,GAAcA,EAAWoJ,UAAU,CACpD,GAAI,CAACA,GAAc,CAACr7B,EAAS/H,GACzB,OAAOA,EAEX,IAAgBsjC,EAAKp/B,EAAjB8gC,EAAOhlC,EACX,IAAKkE,EAAI,EAEL,AAFQA,EAAIk/B,EAAWpmC,MAAM,GAEzBsmC,CAAAA,AADJA,CAAAA,EAAMF,CAAU,CAACl/B,EAAE,AAAD,EACV9J,IAAI,EAAI4qC,CAAG,EAFY9gC,IAKtBo/B,EAAIjpC,EAAE,CAAG2qC,EACdA,GAAQ1B,EAAIxyB,GAAG,CAEV6xB,EAAUgC,SAAS,CAACrB,EAAK0B,IAC9BA,CAAAA,GAAQ1B,EAAIxyB,GAAG,AAAD,EAGtB,OAAOk0B,CACX,EAIArC,EAAUsC,OAAO,CAAG,SAAUjlC,CAAG,EAE7B,IAAIg6B,EAAat5B,AADN,IAAI,CACOs5B,UAAU,CAC5BoJ,EAAapJ,GAAcA,EAAWoJ,UAAU,CACpD,GAAI,CAACA,GAAc,CAACr7B,EAAS/H,GACzB,OAAOA,EAEX,IAAgBsjC,EAAKp/B,EAAjB8gC,EAAOhlC,EACX,IAAKkE,EAAI,EAAGA,EAAIk/B,EAAWpmC,MAAM,CAAEkH,IAE/B,GAAIo/B,AADJA,CAAAA,EAAMF,CAAU,CAACl/B,EAAE,AAAD,EACV7J,EAAE,EAAI2F,EACVglC,GAAQ1B,EAAIxyB,GAAG,MAEd,GAAIwyB,EAAIlpC,IAAI,EAAI4F,EACjB,WAEC,GAAI2iC,EAAUgC,SAAS,CAACrB,EAAKtjC,GAAM,CACpCglC,GAAShlC,EAAMsjC,EAAIlpC,IAAI,CACvB,KACJ,CAEJ,OAAO4qC,CACX,EAoBArC,EAAUnpC,SAAS,CAAC0rC,WAAW,CAAG,SAAUpsC,CAAC,CAAE4hB,CAAM,EACjD,OAAO1F,EAAK0F,EAAQ,SAAUnY,CAAC,EAC3B,OAAOA,EAAEnI,IAAI,CAAGtB,GAAKA,EAAIyJ,EAAElI,EAAE,AACjC,EACJ,EAIAsoC,EAAUnpC,SAAS,CAACkpC,YAAY,CAAG,SAAU1iC,CAAG,CAAEmlC,CAAQ,EACtD,IACuBC,EAAOC,EAAM5pB,EADb/a,EAAOs5B,AAAb,IAAI,CAAoBt5B,IAAI,CAAEga,EAASha,EAAKpG,OAAO,CAACogB,MAAM,EAAI,EAAE,CAC7ExW,EAAIwW,EAAO1d,MAAM,CACrB,GAAIkH,GAAK6D,EAAS/H,GAAM,CACpB,KAAOkE,KACCy+B,EAAUgC,SAAS,CAACjqB,CAAM,CAACxW,EAAE,CAAElE,KAC/BolC,EAAQ,CAAA,EACHC,GACDA,CAAAA,EAAOngC,EAAKwV,CAAM,CAACxW,EAAE,CAACohC,UAAU,CAAE,CAAC5kC,EAAK4H,OAAO,CAAA,GAKvDmT,EADA2pB,GAASD,EACHC,GAAS,CAACC,EAGVD,CAEd,CACA,OAAO3pB,CACX,EAcAknB,EAAUnpC,SAAS,CAAC4oC,SAAS,CAAG,SAAU1nB,CAAM,CAAE5T,CAAM,EACpD,IAAIkzB,EAAa,IAAI,CACjBt5B,EAAOs5B,EAAWt5B,IAAI,CACtB2hC,EAAYn/B,EAAQwX,IACpB,CAAC,CAACA,EAAO1d,MAAM,EACf,CAAC,CAACwF,OAAOsX,IAAI,CAACY,CAAM,CAAC,EAAE,EAAE1d,MAAM,AACnC0D,CAAAA,EAAKmiC,OAAO,CAAG7I,EAAWqI,SAAS,GAAKA,EACxCrI,EAAWqI,SAAS,CAAGA,EACnB3nB,IAAWha,EAAKpG,OAAO,CAACogB,MAAM,EAC9Bha,CAAAA,EAAKpG,OAAO,CAACogB,MAAM,CAAGha,EAAK4C,WAAW,CAACoX,MAAM,CAAGA,CAAK,EAEzDha,EAAK6kC,WAAW,CAAG,CAAA,EAEnB7kC,EAAK/F,MAAM,CAACgW,OAAO,CAAC,SAAUhW,CAAM,EAChCA,EAAOkoC,OAAO,CAAG,CAAA,CACrB,GACKR,GAAa3hC,EAAK8kC,OAAO,GAAK7C,EAAUsC,OAAO,GAEhD,OAAOvkC,EAAK8kC,OAAO,CACnB,OAAO9kC,EAAK+kC,OAAO,EAEnBpD,IACA3hC,EAAK4C,WAAW,CAACqX,OAAO,CAAG,CAAA,EAC3Bja,EAAK+kC,OAAO,CAAG9C,EAAUoC,OAAO,CAChCrkC,EAAK8kC,OAAO,CAAG7C,EAAUsC,OAAO,CAChCvkC,EAAKwN,WAAW,CAAG,SAAU9E,CAAM,CAAEE,CAAM,CAAExC,CAAM,CAAEjJ,CAAS,CAAEub,CAAc,EAG1E,GAAI4gB,EAAWqI,SAAS,CAAE,CAGtB,IAFA,IAAIqD,EAAY,IAAI,CAACprC,OAAO,CAACogB,MAAM,EAAI,EAAE,CACrCirB,EAAY,KAAK,EACbA,EAAY3L,EAAWkL,WAAW,CAAC97B,EAAQs8B,IAC/Ct8B,EAASu8B,EAAUtrC,EAAE,CAEzB,KAAQsrC,EAAY3L,EAAWkL,WAAW,CAAC57B,EAAQo8B,IAC/Cp8B,EAASq8B,EAAUvrC,IAAI,CAGvBkP,EAASF,GACTE,CAAAA,EAASF,CAAK,CAEtB,CACA1I,EAAKsC,WAAW,CAACxJ,SAAS,CAAC0U,WAAW,CAACnM,IAAI,CAAC,IAAI,CAAEqH,EAAQE,EAAQxC,EAAQjJ,EAAWub,EACzF,EACA1Y,EAAKklC,kBAAkB,CAAG,WAGtB,GAFAllC,EAAKsC,WAAW,CAACxJ,SAAS,CAACosC,kBAAkB,CAAC7jC,IAAI,CAAC,IAAI,EACvDi4B,EAAWC,UAAU,CAAG,KAAK,EACzBD,EAAWqI,SAAS,CAAE,CACtB,IAGkBwD,EAASC,EAA8EC,EAASC,EAH9GC,EAAWvlC,EAAKpG,OAAO,CAACogB,MAAM,EAAI,EAAE,CAExCwrB,EAAgB,EAAE,CAAEC,EAAe,EAAE,CAAEC,EAAoBlhC,EAAKxE,EAAK0lC,iBAAiB,CAAE,GACpFC,EAAW,EAAsBC,EAAQ5lC,EAAKke,OAAO,EAAIle,EAAKxG,GAAG,CAAEqsC,EAAQ7lC,EAAKme,OAAO,EAAIne,EAAK1G,GAAG,CAEvGisC,EAASt1B,OAAO,CAAC,SAAU2yB,CAAG,EAC1BwC,EAAWxC,EAAIsB,MAAM,EAAIv3B,IACrBtF,EAASu+B,IAAUv+B,EAASw+B,KACxB5D,EAAUgC,SAAS,CAACrB,EAAKgD,IACzBA,CAAAA,GAAU,AAAChD,EAAIjpC,EAAE,CAAGyrC,EACfQ,EAAQR,CAAS,EAEtBnD,EAAUgC,SAAS,CAACrB,EAAKiD,IACzBA,CAAAA,GAAU,AAACA,EAAQT,EACdxC,EAAIlpC,IAAI,CAAG0rC,CAAS,EAGrC,GAEAG,EAASt1B,OAAO,CAAC,SAAU2yB,CAAG,EAG1B,GAFAyC,EAAUzC,EAAIlpC,IAAI,CAClB0rC,EAAWxC,EAAIsB,MAAM,EAAIv3B,IACrBtF,EAASu+B,IAAUv+B,EAASw+B,GAAQ,CACpC,KAAOR,EAAUD,EAAWQ,GACxBP,GAAWD,EAEf,KAAOC,EAAUO,GACbP,GAAWD,EAEf,IAAKE,EAAMD,EAASC,EAAMO,EAAOP,GAAOF,EACpCI,EAAc3kC,IAAI,CAAC,CACfd,MAAOulC,EACPQ,KAAM,IACV,GACAN,EAAc3kC,IAAI,CAAC,CACfd,MAAOulC,EAAM1C,EAAIjpC,EAAE,CAAGipC,EAAIlpC,IAAI,CAC9BosC,KAAM,MACN74B,KAAM21B,EAAImD,SAAS,AACvB,EAER,CACJ,GACAP,EAAcxN,IAAI,CAAC,SAAU5zB,CAAC,CAAEvC,CAAC,EAC7B,OAAQ,AAACuC,EAAErE,KAAK,GAAK8B,EAAE9B,KAAK,CACvB,AAACqE,CAAAA,AAAW,OAAXA,EAAE0hC,IAAI,CAAY,EAAI,CAAA,EACnBjkC,CAAAA,AAAW,OAAXA,EAAEikC,IAAI,CAAY,EAAI,CAAA,EAC3B1hC,EAAErE,KAAK,CAAG8B,EAAE9B,KAAK,AACzB,GAEAolC,EAAU,EACVE,EAAUO,EACVJ,EAAcv1B,OAAO,CAAC,SAAU2yB,CAAG,EAEf,IADhBuC,CAAAA,GAAYvC,AAAa,OAAbA,EAAIkD,IAAI,CAAY,EAAI,EAAE,GACjBlD,AAAa,OAAbA,EAAIkD,IAAI,EACzBT,CAAAA,EAAUzC,EAAI7iC,KAAK,AAAD,EAEN,IAAZolC,GAAiB99B,EAASg+B,KAC1BI,EAAa5kC,IAAI,CAAC,CACdnH,KAAM2rC,EACN1rC,GAAIipC,EAAI7iC,KAAK,CACbqQ,IAAKwyB,EAAI7iC,KAAK,CAAGslC,EAAWzC,CAAAA,EAAI31B,IAAI,EAAI,CAAA,CAC5C,GACA04B,GAAa/C,EAAI7iC,KAAK,CAClBslC,EACCzC,CAAAA,EAAI31B,IAAI,EAAI,CAAA,EAEzB,GACAqsB,EAAWoJ,UAAU,CAAG+C,EAGpBp+B,EAASu+B,IACTv+B,EAASw+B,IACTx+B,EAASrH,EAAKxG,GAAG,IACjB8/B,EAAWC,UAAU,CAAGsM,EAAQD,EAAQD,EACpCD,EACJn2B,EAAUvP,EAAM,eACZA,EAAKgE,WAAW,CAChBhE,EAAKgmC,MAAM,CAAGhmC,EAAKgE,WAAW,CAEzBs1B,EAAWC,UAAU,EAC1Bv5B,CAAAA,EAAKgmC,MAAM,EACP,AAACH,CAAAA,EAAQ7lC,EAAKxG,GAAG,CAAGksC,CAAgB,EAChCpM,EAAWC,UAAU,AAAD,EAE5BmM,GACA1lC,CAAAA,EAAKimC,eAAe,CAChBjmC,EAAKgmC,MAAM,CAAIhmC,CAAAA,EAAKkmC,cAAc,EAAI,CAAA,CAAC,EAE/ClmC,EAAKxG,GAAG,CAAGosC,EACX5lC,EAAK1G,GAAG,CAAGusC,EAEnB,CACJ,GAEArhC,EAAK4B,EAAQ,CAAA,IACbpG,EAAKhG,KAAK,CAACoM,MAAM,EAEzB,EACO67B,CACX,GACAR,CAAAA,EAAWQ,SAAS,CAAGA,CAC3B,EAAGR,GAAeA,CAAAA,EAAa,CAAC,CAAA,GAOzBA,CACX,GACAjqC,EAAgBD,EAAU,wBAAyB,CAACA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAU0c,CAAI,CAAElb,CAAC,CAAEC,CAAC,EAWhK,IAYWmtC,EADPA,EAXAC,EAAcrtC,EAAEqtC,WAAW,CAC3B5mC,EAAWxG,EAAEwG,QAAQ,CAAEvG,EAAUD,EAAEC,OAAO,CAAEob,EAAQrb,EAAEqb,KAAK,CAAEC,EAAOtb,EAAEsb,IAAI,CAAE9R,EAAUxJ,EAAEwJ,OAAO,CAAE6E,EAAWrO,EAAEqO,QAAQ,CAAElO,EAAQH,EAAEG,KAAK,CAAEqL,EAAOxL,EAAEwL,IAAI,CAAE6hC,EAAYrtC,EAAEqtC,SAAS,CAAE3mC,EAAO1G,EAAE0G,IAAI,CA+BlM,SAASu6B,EAAS7hC,CAAC,EAEf,OAAOY,EAAEihC,QAAQ,CAAC7hC,EAAG,CAAA,EACzB,CA0EA,SAASkuC,EAAsBC,CAAK,CAAE1E,CAAa,EAC/C,IAAI2E,EAAa,CACb1qC,MAAO,EACPC,OAAQ,CACZ,EA0BA,GAzBA8lC,EAAc5xB,OAAO,CAAC,SAAUw2B,CAAG,EAC/B,IACqC7mC,EADjC8mC,EAAOH,CAAK,CAACE,EAAI,CACjBE,EAAc,EAAGC,EAAa,EAC9B3M,EAASyM,KAGTC,EAAc/mC,AAFdA,CAAAA,EAAQq6B,EAASyM,EAAK9mC,KAAK,EAAI8mC,EAAK9mC,KAAK,CAAG,CAAC,CAAA,EAEzBurB,OAAO,CAAGvrB,EAAMurB,OAAO,GAAGpvB,MAAM,CAAG,EACnD6D,EAAMgsB,OAAO,EAAI,CAACvkB,EAASzH,EAAMinC,YAAY,GAC7CjnC,CAAAA,EAAMinC,YAAY,CAAGjnC,EAAMurB,OAAO,GAAGrvB,KAAK,AAAD,EAE7C8qC,EAAav/B,EAASzH,EAAMinC,YAAY,EAEpCttC,KAAKgS,KAAK,CAAC3L,EAAMinC,YAAY,EAC7B,EACAjnC,EAAMgsB,OAAO,EAGbgb,CAAAA,EAAartC,KAAKgS,KAAK,CAAC3L,EAAMurB,OAAO,GAAGrvB,KAAK,CAAA,EAGjD0qC,EAAWzqC,MAAM,CAAGxC,KAAKD,GAAG,CAACqtC,EAAaH,EAAWzqC,MAAM,EAC3DyqC,EAAW1qC,KAAK,CAAGvC,KAAKD,GAAG,CAACstC,EAAYJ,EAAW1qC,KAAK,EAEhE,GAEI,AAAsB,aAAtB,IAAI,CAAClC,OAAO,CAAC6B,IAAI,EACjB,IAAI,CAACqrC,QAAQ,EACb,IAAI,CAACA,QAAQ,CAACC,kBAAkB,CAAE,CAClC,IAAIC,EAAY,IAAI,CAACF,QAAQ,CAACC,kBAAkB,CAAC,GAAG,CAAChrC,MAAM,EAAI,CAC/DyqC,CAAAA,EAAW1qC,KAAK,EAAK,IAAI,CAAClC,OAAO,CAAC8Q,MAAM,CAACu8B,WAAW,CAC/CD,CAAAA,EAAY,CAAA,CACrB,CACA,OAAOR,CACX,CAKA,SAASU,EAAcC,CAAO,EAC1B,IAAIvjC,EAAO,IAAI,CAACA,IAAI,CAGpBwjC,EAAe,AAAc,IAAd,IAAI,CAACC,IAAI,CAIxB,GAHKD,GACDD,EAAQrvC,KAAK,CAAC,IAAI,EAElB,CAAE8L,CAAAA,MAAAA,EAAmC,KAAK,EAAIA,EAAK0jC,QAAQ,AAAD,EAAI,CAC9D,IAAIC,EAAU,AAAC3jC,CAAAA,MAAAA,EAAmC,KAAK,EAAIA,EAAK2jC,OAAO,AAAD,GAAM,EAAE,CAC1EH,GACAG,CAAAA,EAAUA,EAAQ7qB,KAAK,GAAG7D,OAAO,EAAC,EAEtC0uB,EACKt3B,OAAO,CAAC,SAAU0qB,CAAM,EACzBA,EAAO6M,SAAS,EACpB,EACJ,CACIJ,GACAD,EAAQrvC,KAAK,CAAC,IAAI,CAE1B,CAIA,SAAS2vC,EAAwB3gC,CAAC,EAI9B,GAAI4gC,AAAwB,CAAA,IAAxBA,AADc9tC,CAAAA,AADJoG,AADH,IAAI,CACIpG,OAAO,CACAgK,IAAI,EAAI,CAAC,CAAA,EACnBvH,OAAO,CAAW,CAE9B,IAAIsrC,EAAY3nC,AALT,IAAI,CAKU2nC,SAAS,CAAEC,EAAa5nC,AALtC,IAAI,CAKuCjE,MAAM,CAAE4M,EAAQ3I,AAL3D,IAAI,CAK4D2I,KAAK,CAAEk/B,EAAW7nC,AALlF,IAAI,CAKmFiF,IAAI,CAAE2I,EAAS5N,AALtG,IAAI,CAKuG4N,MAAM,CAAE9J,EAAW9D,AAL9H,IAAI,CAK+H8D,QAAQ,CAAEgkC,EAAY9nC,AALzJ,IAAI,CAK0JpG,OAAO,CAAEmuC,EAAU/nC,AALjL,IAAI,CAKkLoF,GAAG,CAAE4iC,EAAYhoC,AALvM,IAAI,CAKwMlE,KAAK,CACpNmsC,EAAWjoC,AANR,IAAI,CAMSioC,QAAQ,GACxBC,EAAaP,GAAaA,EAAUxc,OAAO,GAAGrvB,KAAK,CACnDqsC,EAAUL,EAAU3kC,KAAK,CAAC/K,CAAC,CAC3BgwC,EAAUN,EAAU3kC,KAAK,CAAC9K,CAAC,CAC3BgwC,EAAc7jC,EAAKsjC,EAAU3kC,KAAK,CAACxE,MAAM,CAAEgK,EAAQ,EAAI,IACvD2/B,EAAgBX,EAAY3nC,AAXzB,IAAI,CAW0BhG,KAAK,CAACW,QAAQ,CAAC4tC,WAAW,CAACZ,GAAWa,CAAC,CAAG,EAI3EC,EAAW,AAAC9/B,CAAAA,EAAQo/B,EAAUH,EAAaC,CAAO,EAClD,AAACl/B,CAAAA,EAAQ,EAAI,EAAC,EACT7E,CAAAA,EAAW,GAAK,CAAA,EALTmkC,CAAAA,EAAWA,CAAQ,CAAC,EAAE,CAAG,EAAI,CAAA,EAOxCjoC,CAAAA,AAnBE,IAAI,CAmBDqnC,IAAI,GAAKlB,EAAauC,MAAM,CAAGJ,EAAgB,CAAA,CACzDxhC,CAAAA,EAAE6hC,aAAa,CAACvwC,CAAC,CAAGuQ,EAChBk/B,EAAW,AAACK,CAAAA,GAAc,CAAA,EAAK,EAAIG,EAAcF,EACjDM,EAAW3kC,CAAAA,EAAWkkC,EAAY,CAAA,EAAKp6B,EAASu6B,EACpDrhC,EAAE6hC,aAAa,CAACtwC,CAAC,CAAGsQ,EACf8/B,EACI3kC,CAAAA,EAAW8jC,EAAa,CAAA,EACzB,AAAC9jC,CAAAA,EAAWwkC,EAAgB,CAACA,CAAY,EAAK,EAC9C16B,EACAw6B,EACJL,EAAUM,EAAcD,CAChC,CACJ,CAIA,SAASQ,IAEL,IA/KIhvC,EA+KAI,EAAQgG,AADD,IAAI,CACEhG,KAAK,CAAEyJ,EAAKzD,AADlB,IAAI,CACmBpG,OAAO,CAACgK,IAAI,CAAE8jC,EAAcjkC,AAAO,KAAK,IAAZA,EAAgB,CAAC,EAAIA,EAAIb,EAAc5C,AAD1F,IAAI,CAC2F4C,WAAW,CAIrH,GAHI8kC,EAAYrrC,OAAO,GAzKvBzC,CAPIA,EAAUoG,AA8KH,IAAI,CA9KIpG,OAAO,EAOlB8Q,MAAM,CAACC,KAAK,CAAGnG,EAAK5K,EAAQ8Q,MAAM,CAACC,KAAK,CAAE,UAO7C3K,AAgKM,IAAI,CAhKLkE,UAAU,EAChBtK,CAAAA,EAAQivC,aAAa,CAAG,CAAA,CAAI,EAIhC7oC,AA2JW,IAAI,CA3JV8oC,aAAa,CAAG,EACrBlvC,EAAQ8Q,MAAM,CAAC9O,QAAQ,CAAG,EAE1BhC,EAAQmvC,eAAe,CAAG,GA6JtBrB,EAAYH,OAAO,CAInB,IAHA,IAAIA,EAAUvnC,AANP,IAAI,CAMQ4D,IAAI,CAAC2jC,OAAO,CAAG,EAAE,CAChCyB,EAAchpC,AAPX,IAAI,CAOY4D,IAAI,CAAColC,WAAW,CAAG,EAEnC,EAAEA,EAActB,EAAYH,OAAO,CAACjrC,MAAM,EAAE,CAC/C,IAAI2sC,EAAgB9vC,EAAMyJ,EAAa8kC,EAAYH,OAAO,CAACyB,EAAY,CAAE,CACrE58B,WAAY,CAAA,EACZrI,SAAU,EAEVwB,UAAW,CACPlJ,QAAS,CAAA,CACb,CACJ,EAEA,CACIuH,KAAM,CACF2jC,QAAS,KAAK,CAClB,CACJ,GACI5M,EAAS,IAAI1mB,EAAKjU,AAxBnB,IAAI,CAwBoBhG,KAAK,CAAEivC,EAAe,QACjDtO,CAAAA,EAAO/2B,IAAI,CAAC0jC,QAAQ,CAAG,CAAA,EACvB3M,EAAO/2B,IAAI,CAAColC,WAAW,CAAGA,EAG1B30B,EAAMra,EAAM0kB,IAAI,CAAEic,GAClBtmB,EAAMra,CAAK,CAACgG,AA9BT,IAAI,CA8BU2e,IAAI,CAAC,EAAI,EAAE,CAAEgc,GAC9B4M,EAAQ1mC,IAAI,CAAC85B,EACjB,CAER,CAcA,SAASuO,IACL,IAAiBvB,EAAY3nC,AAAlB,IAAI,CAAmB2nC,SAAS,CAAE/jC,EAAO5D,AAAzC,IAAI,CAA0C4D,IAAI,CAAEhK,EAAUoG,AAA9D,IAAI,CAA+DpG,OAAO,CACrF,GAAI8tC,AAAwB,CAAA,IAAxBA,AADiG9tC,CAAAA,EAAQgK,IAAI,EAAI,CAAC,CAAA,EACtGvH,OAAO,CAAW,CAC9B,IAAI7C,EAAMwG,AAFH,IAAI,CAEIxG,GAAG,EAAI,EAAGF,EAAM0G,AAFxB,IAAI,CAEyB1G,GAAG,EAAI,EAAG6vC,EAAYnpC,AAFnD,IAAI,CAEoDumC,KAAK,CAACvmC,AAF9D,IAAI,CAE+D6hC,aAAa,CAAC,EAAE,CAAC,CAsB3F,GApBI8F,GACA,CAAC3nC,AALE,IAAI,CAKDhG,KAAK,CAACK,UAAU,EACrB8uC,CAAAA,MAAAA,EAA6C,KAAK,EAAIA,EAAUC,SAAS,AAAD,GACzE,CAACppC,AAPE,IAAI,CAODpG,OAAO,CAACuJ,KAAK,CAAChD,KAAK,CAACrE,KAAK,EAC/B6rC,EAAUtxB,GAAG,CAAC,CAAEva,MAAO,GAAGsD,MAAM,CAAC+pC,EAAUC,SAAS,CAAE,KAAM,GAGhEppC,AAXO,IAAI,CAWNqpC,kBAAkB,CAAGrpC,AAXnB,IAAI,CAWoBsmC,qBAAqB,CAACtmC,AAX9C,IAAI,CAW+CumC,KAAK,CAAEvmC,AAX1D,IAAI,CAW2D6hC,aAAa,EAE/E7hC,AAbG,IAAI,CAaFspC,SAAS,EACdtpC,AAdG,IAAI,CAcFspC,SAAS,CAACjqC,OAAO,GAUtBW,AAxBG,IAAI,CAwBF4D,IAAI,EAAI5D,AAxBV,IAAI,CAwBW4D,IAAI,CAAC2lC,WAAW,IAAMvpC,AAxBrC,IAAI,CAwBsCwpC,QAAQ,CAAE,CACvD,IAAItsC,EAAYtD,EAAQsD,SAAS,CACjC,GAAIA,EAAW,CACX,IAAIusC,EAAWzpC,AA3BhB,IAAI,CA2BiB0pC,WAAW,CAACxsC,GAAYysC,EAAaF,CAAQ,CAAC,EAAE,CAAE5Y,EAAW4Y,CAAQ,CAAC,EAAE,CAG5CG,EAAW,AAACt/B,CAAAA,AAA/C,AAACtK,CAAAA,AA9Bf,IAAI,CA8BgBioC,QAAQ,CAAC,SAAW,CAAC,EAAE,AAAD,CAAE,CAAC,EAAE,CAA2B,CAAA,EAAM,CAAA,AAACjoC,AA9BjF,IAAI,CA8BkFqnC,IAAI,GAAKlB,EAAa/gC,GAAG,EAC1GpF,AA/BL,IAAI,CA+BMqnC,IAAI,GAAKlB,EAAalhC,IAAI,CAAI,GAAK,CAAA,EAc5C,GAZsB,MAAlB0kC,CAAU,CAAC,EAAE,EAAY9Y,AAAgB,MAAhBA,CAAQ,CAAC,EAAE,GAChC7wB,AAlCT,IAAI,CAkCU2I,KAAK,EACVghC,CAAU,CAAC,EAAE,EAAIC,EACjB/Y,CAAQ,CAAC,EAAE,EAAI+Y,IAGfD,CAAU,CAAC,EAAE,EAAIC,EACjB/Y,CAAQ,CAAC,EAAE,EAAI+Y,IAKnB,CAAC5pC,AA7CN,IAAI,CA6CO2I,KAAK,EAAI3I,AA7CpB,IAAI,CA6CqBhG,KAAK,CAAC6vC,WAAW,CAAE,CACvC,IAAwCC,EAAsB,CAC1D,IACA9pC,AAhDT,IAAI,CAgDUiF,IAAI,CACT0kC,CAAU,CAAC,EAAE,EAAI,EACpB,CAAEI,EAAkB,CAJOJ,EAMxBG,EACH,CAAEE,EAAsB,CACrB,IACAhqC,AAvDT,IAAI,CAuDUhG,KAAK,CAACkL,UAAU,CAAGlF,AAvDjC,IAAI,CAuDkChG,KAAK,CAAC6vC,WAAW,CAC9C7pC,AAxDT,IAAI,CAwDUiX,QAAQ,CAAC3d,EAAM0G,AAxD7B,IAAI,CAwD8BiqC,cAAc,EAC1C,CAIEC,EAAkB,CAJM,CACvB,IACArZ,CAAQ,CAAC,EAAE,EAAI,EACf7wB,AA5DT,IAAI,CA4DUiX,QAAQ,CAAC3d,EAAM0G,AA5D7B,IAAI,CA4D8BiqC,cAAc,EAC1C,CAEGD,EACH,AACIhqC,CAjEV,IAAI,CAiEW4D,IAAI,CAACumC,WAAW,EAAI3wC,EAAM,GAAM,GACtCwG,CAAAA,AAlET,IAAI,CAkEU4D,IAAI,CAACumC,WAAW,CAAGnqC,AAlEjC,IAAI,CAkEkC4D,IAAI,CAACwmC,YAAY,CAACL,EAAe,EAE9D/pC,AApET,IAAI,CAoEU4D,IAAI,CAACumC,WAAW,GACrBnqC,AArET,IAAI,CAqEU4D,IAAI,CAACumC,WAAW,CAACrvC,IAAI,CAAC,CACvBkC,OAAQpD,EAAQqD,SAAS,CACzB,eAAgBrD,EAAQsD,SAAS,AACrC,GACA8C,AAzET,IAAI,CAyEU4D,IAAI,CAACumC,WAAW,CAAC5uC,OAAO,CAAC,CAC1BD,EAAGyuC,CACP,IAEC/pC,AA7EV,IAAI,CA6EW4D,IAAI,CAACymC,WAAW,EAAI/wC,EAAM,GAAM,GACtC0G,CAAAA,AA9ET,IAAI,CA8EU4D,IAAI,CAACymC,WAAW,CAAGrqC,AA9EjC,IAAI,CA8EkC4D,IAAI,CAACwmC,YAAY,CAACF,EAAe,EAE9DlqC,AAhFT,IAAI,CAgFU4D,IAAI,CAACymC,WAAW,GACrBrqC,AAjFT,IAAI,CAiFU4D,IAAI,CAACymC,WAAW,CAACvvC,IAAI,CAAC,CACvBkC,OAAQpD,EAAQqD,SAAS,CACzB,eAAgBrD,EAAQsD,SAAS,AACrC,GACA8C,AArFT,IAAI,CAqFU4D,IAAI,CAACymC,WAAW,CAAC9uC,OAAO,CAAC,CAC1BD,EAAG4uC,CACP,GAER,CAGKlqC,AA5FN,IAAI,CA4FO4D,IAAI,CAAC0mC,aAAa,EAIxBtqC,AAhGL,IAAI,CAgGM4D,IAAI,CAAC0mC,aAAa,CAACxvC,IAAI,CAAC,CACzBkC,OAAQpD,EAAQqD,SAAS,CACzB,eAAgBrD,EAAQsD,SAAS,AACrC,GACA8C,AApGL,IAAI,CAoGM4D,IAAI,CAAC0mC,aAAa,CAAC/uC,OAAO,CAAC,CAC5BD,EAAGmuC,CACP,IATAzpC,AA7FL,IAAI,CA6FM4D,IAAI,CAAC0mC,aAAa,CAAGtqC,AA7F/B,IAAI,CA6FgC4D,IAAI,CAACwmC,YAAY,CAACX,GAYrDzpC,AAzGD,IAAI,CAyGEwpC,QAAQ,CAACxpC,AAzGf,IAAI,CAyGgBuqC,QAAQ,CAAG,OAAS,OAAO,EAClD,CACJ,CAIA,GAHA,AAAC3mC,CAAAA,GAAQA,EAAK2jC,OAAO,EAAI,EAAE,AAAD,EAAGt3B,OAAO,CAAC,SAAU0qB,CAAM,EAAI,OAAOA,EAAO77B,MAAM,EAAI,GAG7E,CAACkB,AA/GE,IAAI,CA+GD2I,KAAK,EACX3I,AAhHG,IAAI,CAgHFhG,KAAK,CAACwwC,WAAW,EACrBxqC,CAAAA,AAjHE,IAAI,CAiHDuF,SAAS,EACVvF,AAlHF,IAAI,CAkHGyqC,YAAY,EAAIzqC,AAlHvB,IAAI,CAkHwByqC,YAAY,CAACllC,SAAS,GACrDvF,AAnHG,IAAI,CAmHF6hC,aAAa,CAACvlC,MAAM,CAAE,CAG3B,IAFA,IAAI2tC,EAAiBjqC,AApHlB,IAAI,CAoHmBiqC,cAAc,CAAES,EAAW1qC,AApHlD,IAAI,CAoHmD6hC,aAAa,CAAC7hC,AApHrE,IAAI,CAoHsE6hC,aAAa,CAACvlC,MAAM,CAAG,EAAE,CAAEquC,EAAc3qC,AApHnH,IAAI,CAoHoH6hC,aAAa,CAAC,EAAE,CACvIjiC,EAAQ,KAAK,EAAGgrC,EAAW,KAAK,EAC7B,AAAChrC,CAAAA,EAAQI,AAtHb,IAAI,CAsHc6qC,YAAY,CAACC,GAAG,EAAC,GAAMlrC,EAAM8Q,OAAO,EACrD9Q,EAAMoT,IAAI,GAEd,KAAO,AAAC43B,CAAAA,EAAW5qC,AAzHhB,IAAI,CAyHiB+qC,WAAW,CAACD,GAAG,EAAC,GACpCF,EAASl6B,OAAO,EAChBk6B,EAAS53B,IAAI,GAGjBpT,CAAAA,EAAQI,AA9HL,IAAI,CA8HMumC,KAAK,CAACoE,EAAY,CAAC/qC,KAAK,AAAD,IAE5BpG,EAAMmxC,EAAcV,EACpBjqC,AAjIL,IAAI,CAiIM6qC,YAAY,CAAChqC,IAAI,CAACjB,EAAMuT,IAAI,IAGjCvT,EAAMoT,IAAI,IAIlBpT,CAAAA,EAAQI,AAxIL,IAAI,CAwIMumC,KAAK,CAACmE,EAAS,CAAC9qC,KAAK,AAAD,IAEzB8qC,EAAWpxC,EAAM2wC,EACjBjqC,AA3IL,IAAI,CA2IM6qC,YAAY,CAAChqC,IAAI,CAACjB,EAAMuT,IAAI,IAGjCvT,EAAMoT,IAAI,IAGlB,IAAIg4B,EAAOhrC,AAjJR,IAAI,CAiJSumC,KAAK,CAACmE,EAAS,CAACM,IAAI,CAChCA,GACAN,EAAWpxC,EAAM2wC,GACjBS,EAAWpxC,EAAM,GAAK0G,AApJvB,IAAI,CAoJwBumC,KAAK,CAACmE,EAAS,CAACO,MAAM,EACjDjrC,AArJD,IAAI,CAqJE+qC,WAAW,CAAClqC,IAAI,CAACmqC,EAAK73B,IAAI,GAEvC,CACJ,CACJ,CAIA,SAAS+3B,IAEL,IAAIC,EAAWnrC,AADJ,IAAI,CACK6hC,aAAa,EAAI7hC,AAD1B,IAAI,CAC2B6hC,aAAa,CAACC,IAAI,CACxDloC,EAAUoG,AAFH,IAAI,CAEIpG,OAAO,CACtB8tC,EAAc9tC,EAAQgK,IAAI,EAAI,CAAC,EAC/BwnC,EAAaprC,AAJN,IAAI,CAIO4C,WAAW,CAAC8H,MAAM,EAAI,CAAC,CAEzCg9B,CAAAA,EAAYrrC,OAAO,GACf2D,AAPG,IAAI,CAOF2I,KAAK,EACV3I,AARG,IAAI,CAQF/F,MAAM,CAACgW,OAAO,CAAC,SAAUhW,CAAM,EAChCA,EAAOL,OAAO,CAAC6O,UAAU,CAAG,CAChC,GAKI0iC,GACAvxC,EAAQonC,oBAAoB,EAC5BpnC,EAAQ8Q,MAAM,EACd,CAACzR,EAAQmyC,EAAWzgC,KAAK,GACxB/Q,CAAAA,AACc,CAAA,IADdA,EAAQonC,oBAAoB,CAACmK,EAASE,QAAQ,CAAC,CAC3CvjC,KAAK,EACNqjC,EAAS3qB,KAAK,CAAG,CAAA,IAErB5mB,EAAQ8Q,MAAM,CAACC,KAAK,CAAG,OAClB1R,EAAQmyC,EAAWhzC,CAAC,GACrBwB,CAAAA,EAAQ8Q,MAAM,CAACtS,CAAC,CAAG,CAAA,IAOD,aAAtB,IAAI,CAACwB,OAAO,CAAC6B,IAAI,EACjBuE,AAjCD,IAAI,CAiCE4D,IAAI,EACT5D,AAlCD,IAAI,CAkCE4D,IAAI,CAAC2jC,OAAO,EACjB,CAAA,IAAI,CAACrB,cAAc,CAAG,IAAI,CAAC1M,YAAY,AAAD,EAItD,CASA,SAAS8R,EAAkBxkC,CAAC,EACxB,IACIykC,EADA3xC,EAAU,IAAI,CAACA,OAAO,CAAEgJ,EAAckE,EAAElE,WAAW,CAAE8kC,EAAe,AAAC9tC,GAAWqgC,EAASrgC,EAAQgK,IAAI,EAAKhK,EAAQgK,IAAI,CAAG,CAAC,CAElG,EAAA,IAAxB8jC,EAAYrrC,OAAO,GAGnBkvC,EAAkBpyC,EAAM,CAAA,EAAM,CAC1BwH,UAAY,wBAA2BiC,CAAAA,EAAYjC,SAAS,EAAI,EAAC,EACjEqgC,qBAAsB,CAClBza,KAAM,CACFilB,KAAM,CAAC,QAAS,KAAK,AACzB,EACA3mB,IAAK,CACD2mB,KAAM,CAAC,aAAc,aAAc,KAAK,AAC5C,EACAhlB,KAAM,CACFglB,KAAM,CAAC,UAAW,MAAM,AAC5B,EACA3lB,MAAO,CACH2lB,KAAM,CAAC,KAAM,KAAM,KAAK,AAC5B,CACJ,EACA5nC,KAAM,CACFo6B,YAAa,CACjB,EACAtzB,OAAQ,CACJ0U,QAAS,EACTjf,MAAO,CACHC,SAAU,OACd,CACJ,EACAzB,OAAQ,EACRwE,MAAO,CACHpC,KAAM,KACN0qC,aAAc,CAAA,EACd7vC,SAAU,EACVuE,MAAO,CACHurC,aAAc,UAClB,CACJ,EAIAxhC,MAAO,CAAC,CACA,cACA,CAAC,EAAG,GAAI,IAAI,CACf,CAAE,CACC,SACA,CAAC,EAAG,GAAG,CACV,CAAE,CACC,SACA,CAAC,EAAG,EAAG,GAAG,CACb,CAAE,CACC,OACA,CAAC,EAAG,EAAE,CACT,CAAE,CACC,MACA,CAAC,EAAE,CACN,CAAE,CACC,OACA,CAAC,EAAE,CACN,CAAE,CACC,QACA,CAAC,EAAE,CACN,CAAE,CACC,OACA,KACH,CAAC,AACV,EAAGtH,GAEe,UAAd,IAAI,CAAC+b,IAAI,GAIL1lB,EAAQ2J,EAAYmB,QAAQ,GAC5B,CAAC9K,EAAQ2J,EAAY6H,iBAAiB,GACtC8gC,CAAAA,EAAgB9gC,iBAAiB,CAAG,GAAE,GAM1C,CAAA,CAACxR,EAAQ2J,EAAY6H,iBAAiB,GAElCxR,EAAQ2J,EAAYmB,QAAQ,CAAA,GAC3B9K,EAAQ2J,EAAY+oC,cAAc,GAClC1yC,EAAQ2J,EAAY42B,YAAY,GAChCvgC,EAAQ2J,EAAYsH,KAAK,GAC1BqhC,CAAAA,EAAgBI,cAAc,CAAG,SAAUnyC,CAAG,CAAEF,CAAG,EAC/C,IAAIsyC,EAAc,IAAI,CAACnB,YAAY,EAC/B,IAAI,CAACA,YAAY,CAAC5I,aAAa,EAC/B,IAAI,CAAC4I,YAAY,CAAC5I,aAAa,CAACC,IAAI,CACxC,GAAI8J,EAAY,CAGZ,IAAK,IAFD1hC,EAASqhC,EAAgBrhC,KAAK,EAAI,EAAE,CACpC2hC,EAAU,KAAK,EAAGrrB,EAAQ,EAAG6qB,EAAW,OACnC7nC,EAAI,EAAGA,EAAI0G,EAAM5N,MAAM,CAAEkH,IAAK,CACnC,IAAIsoC,EAAS5hC,CAAK,CAAC1G,EAAE,CACrB,GAAIsoC,GAAUA,CAAM,CAAC,EAAE,GAAKF,EAAWP,QAAQ,CAAE,CAC7CQ,EAAUroC,EACV,KACJ,CACJ,CARA,IAUIuoC,EAAQ1kC,EAASwkC,IAAY3hC,CAAK,CAAC2hC,EAAU,EAAE,CACnD,GAAIE,EAAM,CACNV,EAAWU,CAAI,CAAC,EAAE,EAAI,OACtB,IAAIC,EAASD,CAAI,CAAC,EAAE,CACpBvrB,EAAQwrB,GAAUA,CAAM,CAAC,EAAE,EAAI,CAGnC,KACiC,SAAxBJ,EAAWP,QAAQ,EAExB7qB,CAAAA,EAAQorB,AAAmB,GAAnBA,EAAWprB,KAAK,AAAI,EAEhC,IAAIyrB,EAAY5F,CAAS,CAACgF,EAAS,CAEnC,OADA,IAAI,CAAC7R,YAAY,CAAGyS,EAAYzrB,EACzB,IAAI,CAACxmB,KAAK,CAACiG,IAAI,CAACisC,YAAY,CAAC,CAAED,UAAWA,EAAWzrB,MAAOA,EAAO6qB,SAAUA,CAAS,EAAG7xC,EAAKF,EAAK,IAAI,CAACM,OAAO,CAACqnC,WAAW,CACtI,CACJ,CAAA,GAIR9nC,EAAM,CAAA,EAAM,IAAI,CAACS,OAAO,CAAE2xC,GACtB,IAAI,CAAC5iC,KAAK,GAOV/O,EAAQoR,UAAU,CAAGxG,EAAK5B,EAAYoI,UAAU,CAAE,GAClDpR,EAAQqR,UAAU,CAAGzG,EAAK5B,EAAYqI,UAAU,CAAE,IAIlD5D,EAASzN,EAAQgK,IAAI,CAACo6B,WAAW,GACjCpkC,CAAAA,EAAQsR,SAAS,CAAGtR,EAAQsD,SAAS,CACjCwqC,EAAY1J,WAAW,AAAD,EAGtC,CAIA,SAASmO,EAAmBrlC,CAAC,EAEzB,IAAIlE,EAAckE,EAAElE,WAAW,CAC3B8kC,EAAc9kC,GAAeA,EAAYgB,IAAI,EAAI,CAAC,EAClD2jC,EAAUG,EAAYH,OAAO,AAG7BG,CAAAA,EAAYrrC,OAAO,EAAIkrC,GACvBpuC,EAAM,CAAA,EAAM6G,AAPL,IAAI,CAOMpG,OAAO,CAAE2tC,CAAO,CAAC,EAAE,CAE5C,CAKA,SAAS6E,IAEL,AAACpsC,CAAAA,AADU,IAAI,CACT4D,IAAI,CAAC2jC,OAAO,EAAI,EAAE,AAAD,EAAGt3B,OAAO,CAAC,SAAU0qB,CAAM,EAAI,OAAOA,EAAOvZ,QAAQ,EAAI,EACpF,CAMA,SAASirB,EAAgBvlC,CAAC,EACtB,IAAe6B,EAAQlF,AAAd,IAAI,CAAakF,KAAK,CAAE0gC,EAAqB5lC,AAA7C,IAAI,CAA4C4lC,kBAAkB,CAAE3lC,EAAKD,AAAzE,IAAI,CAAwE7J,OAAO,CAACgK,IAAI,CAAE8jC,EAAchkC,AAAO,KAAK,IAAZA,EAAgB,CAAC,EAAIA,EACtI,GAAIgkC,EAAYrrC,OAAO,EAAIgtC,EAAoB,CAC3C,IAAIiD,EAAe,AAA+B,EAA/B,IAAI,CAAC1yC,OAAO,CAAC8Q,MAAM,CAACk/B,QAAQ,CAC3CA,EAAWjhC,EACV++B,EAAY6E,UAAU,EACnBD,EAAejD,EAAmBttC,MAAM,CAC5CuwC,EAAejD,EAAmBvtC,KAAK,CACvC0G,EAAQsE,EAAEmhC,QAAQ,EAClBnhC,EAAEmhC,QAAQ,CAAC,EAAE,CAAG2B,EAGhB9iC,EAAEmhC,QAAQ,CAAG,CAAC2B,EAAU,EAAE,AAElC,CACJ,CAIA,SAAShlC,IACL,IAAI,CAAC8Z,IAAI,CAACzO,OAAO,CAAC,SAAUjQ,CAAI,EAC5B,AAACA,CAAAA,EAAK4D,IAAI,EAAI5D,EAAK4D,IAAI,CAAC2jC,OAAO,EAAI,EAAE,AAAD,EAAGt3B,OAAO,CAAC,SAAU0qB,CAAM,EAC3DA,EAAO30B,WAAW,GAClB20B,EAAOuK,kBAAkB,EAC7B,EACJ,EACJ,CAIA,SAASsH,EAAU1lC,CAAC,EAChB,IAAIlD,EAAO,IAAI,CAACA,IAAI,CACpB,AAACA,CAAAA,EAAK2jC,OAAO,EAAI,EAAE,AAAD,EAAGt3B,OAAO,CAAC,SAAU0qB,CAAM,EAAI,OAAOA,EAAOt7B,OAAO,CAACyH,EAAE2lC,UAAU,CAAG,GACtF7oC,EAAK2jC,OAAO,CAAG,KAAK,CACxB,CAKA,SAASmF,EAAO5lC,CAAC,EAEb,IAAIlE,EAAckE,EAAElE,WAAW,EAAI,CAAC,EAChC8kC,EAAc9kC,EAAYgB,IAAI,EAAI,CAAC,CACnC8jC,CAAAA,EAAYrrC,OAAO,EAAIpD,EAAQyuC,EAAY7jC,WAAW,GACtDjB,CAAAA,EAAY+pC,SAAS,CAAG/pC,EAAY3F,SAAS,CAAIyqC,EAAY7jC,WAAW,EAEvE7D,AANM,IAAI,CAML4D,IAAI,EACV5D,CAAAA,AAPO,IAAI,CAON4D,IAAI,CAAG,IAAIgpC,EAPT,IAAI,CAO2B,EAE1C5sC,AATW,IAAI,CASV6qC,YAAY,CAAG,EAAE,CACtB7qC,AAVW,IAAI,CAUV+qC,WAAW,CAAG,EAAE,AACzB,CAKA,SAAS8B,EAA4B/lC,CAAC,EAClC,IAAiBlH,EAAQ8mC,AAAd,IAAI,CAAe9mC,KAAK,CAAEI,EAAO0mC,AAAjC,IAAI,CAAkC1mC,IAAI,CAAEiE,EAAWjE,EAAKiE,QAAQ,CAAEjK,EAAQgG,EAAKhG,KAAK,CAA0B0tC,EAAc9tC,AAA5BoG,EAAKpG,OAAO,CAAwBgK,IAAI,EAAI,CAAC,EAAGkpC,EAAY9sC,EAAKpG,OAAO,CAAC8Q,MAAM,CAAEC,EAAQmiC,EAAUniC,KAAK,CAGvN08B,EAAOlB,CAAY,CAACnmC,EAAKqnC,IAAI,CAAC,CAAE4C,EAAiBnjC,EAAEmjC,cAAc,CAAEpI,EAAgB7hC,EAAK6hC,aAAa,CAAEkL,EAAUrG,AAHtG,IAAI,CAGuGD,GAAG,CAAGwD,EAAgB+C,EAAe3lC,EAASw6B,CAAa,CAAC/6B,EAAEgG,KAAK,CAAG,EAAE,EAC1L+0B,CAAa,CAAC/6B,EAAEgG,KAAK,CAAG,EAAE,CAAGm9B,EAC7B,AAACjqC,CAAAA,EAAK1G,GAAG,EAAI,CAAA,EAAK2wC,EAAiBhC,EAAWjoC,EAAKioC,QAAQ,CAAC,QAAS/8B,EAAY+8B,EAAWA,CAAQ,CAAC,EAAE,CAAG,EAAGgF,EAAYhF,EAAWA,CAAQ,CAAC,EAAE,CAAG,EAAI,EAE1J,GAAIP,AAAwB,CAAA,IAAxBA,EAAYrrC,OAAO,CAAW,CAC9B,IAAqB6wC,EAAjBxE,EAAS,KAAK,EAAUzjC,EAAO,KAAK,EAAG8qB,EAAQ,KAAK,EA2CxD,GAzCIsX,AAAS,QAATA,EAEA6F,EAAQxE,AADRA,CAAAA,EAAS1oC,EAAKoF,GAAG,CAAGpF,EAAK4N,MAAM,AAAD,EACb1C,EAEZm8B,AAAS,WAATA,EAELqB,EAASwE,AADTA,CAAAA,EAAQlzC,EAAMsL,WAAW,CAAGtF,EAAK0oC,MAAM,CAAG1oC,EAAK4N,MAAM,AAAD,EACnC1C,GAGjBw9B,EAAS1oC,EAAKoF,GAAG,CAAGpF,EAAKoQ,GAAG,CAAIpQ,CAAAA,EAAK9E,SAAS,CAAC+I,EAAW+oC,EAAcD,IAAY,CAAA,EACpFG,EAAQltC,EAAKoF,GAAG,CAAGpF,EAAKoQ,GAAG,CAAIpQ,CAAAA,EAAK9E,SAAS,CAAC+I,EAAW8oC,EAAUC,IAAgB,CAAA,GAGnF3F,AAAS,UAATA,EAEAtX,EAAQ9qB,AADRA,CAAAA,EAAOjL,EAAMkL,UAAU,CAAGlF,EAAK+vB,KAAK,CAAG/vB,EAAK4N,MAAM,AAAD,EAClC1C,EAEVm8B,AAAS,SAATA,EAELpiC,EAAO8qB,AADPA,CAAAA,EAAQ/vB,EAAKiF,IAAI,CAAGjF,EAAK4N,MAAM,AAAD,EACf1C,GAGfjG,EAAO1L,KAAKgS,KAAK,CAACvL,EAAKiF,IAAI,CAAIjF,CAAAA,EAAK9E,SAAS,CAAC+I,EAAW+oC,EAAcD,IAAY,CAAA,GAAME,EACzFld,EAAQx2B,KAAKC,GAAG,CAChBD,KAAKgS,KAAK,CAACvL,EAAKiF,IAAI,CAAIjF,CAAAA,EAAK9E,SAAS,CAAC+I,EAAW8oC,EAAUC,IAAgB,CAAA,GAAMC,EAAWjtC,EAAKiF,IAAI,CAAGjF,EAAKoQ,GAAG,GAErHs2B,AApCO,IAAI,CAoCN0C,SAAS,CAAGrZ,EAAQ9qB,EAGzB6B,EAAE2/B,GAAG,CAACruC,CAAC,CAAIuS,AAAU,SAAVA,EACP1F,EACA0F,AAAU,UAAVA,EACIolB,EACA9qB,EAAQ,AAAC8qB,CAAAA,EAAQ9qB,CAAG,EAAK,EAEjC6B,EAAE2/B,GAAG,CAACpuC,CAAC,CAIC60C,EAAS,AAACxE,CAAAA,EAASwE,CAAI,EAAK,EAEhCttC,EAAO,CACP,IAAIutC,EAAanzC,EAAMW,QAAQ,CAAC4tC,WAAW,CAAC3oC,GAAQ+mC,EAAc/mC,EAAMurB,OAAO,GAAGpvB,MAAM,CAGxF,GAAK+wC,EAAUM,OAAO,CAUlBtmC,EAAE2/B,GAAG,CAACpuC,CAAC,EAEP80C,EAAWtrC,CAAC,CAER,CAAE8kC,CAAAA,EAAc,CAAA,MAdA,CACpB,IAAI0G,EAAQ9zC,KAAKgS,KAAK,CAACo7B,EAAcwG,EAAW50C,CAAC,CACjDuO,CAAAA,EAAE2/B,GAAG,CAACpuC,CAAC,EAGP,AAAE80C,CAAAA,EAAWtrC,CAAC,CAAIsrC,CAAAA,EAAW50C,CAAC,CAAG40C,EAAW3E,CAAC,AAADA,CAAC,EAAK,EAE9C,CAAE,CAAA,AAAE6E,CAAAA,EAAQ,CAAA,EAAKF,EAAW50C,CAAC,CAAI,CAAA,CACzC,CAQJ,CACAuO,EAAE2/B,GAAG,CAACruC,CAAC,EAAI,AAAC4H,EAAK2I,KAAK,EAAImkC,EAAU10C,CAAC,EAAK,CAC9C,CACJ,CAIA,SAASk1C,EAAkBjqB,CAAG,EAC1B,IAAIrjB,EAAOqjB,EAAIrjB,IAAI,CAAED,EAAQsjB,EAAItjB,KAAK,CACtC,GAAIC,EAAKpG,OAAO,CAACgK,IAAI,EACjB5D,EAAKpG,OAAO,CAACgK,IAAI,CAACvH,OAAO,CAAE,CAC3B,IAAI0wC,EAAU/sC,EAAK6hC,aAAa,CAC5B5nC,EAAS,AAAC+F,CAAAA,EAAKyqC,YAAY,EAAIzqC,CAAG,EAAG/F,MAAM,CAAC,EAAE,CAC9CszC,EAAUxtC,IAAUgtC,CAAO,CAAC,EAAE,CAC9B9B,EAASlrC,IAAUgtC,CAAO,CAACA,EAAQzwC,MAAM,CAAG,EAAE,CAC9CJ,EAAQjC,GAAUqa,EAAKra,EAAOL,OAAO,CAAC2gB,IAAI,CAAE,SAAUrY,CAAC,EACvD,OAAOA,CAAC,CAAClC,EAAK4H,OAAO,CAAG,IAAM,IAAI,GAAK7H,CAC3C,GACIytC,EAAY,KAAK,EACjBtxC,GAASjC,EAAOwzC,EAAE,CAAC,WAGnBD,EAAYr0C,EAAM+C,GAClBnD,EAAEiQ,WAAW,CAAC0kC,KAAK,CAAC50C,SAAS,CAAC8hC,UAAU,CACnC0F,oBAAoB,CAACkN,IAI9BnqB,EAAIkqB,OAAO,CAAGA,EACdlqB,EAAI4nB,MAAM,CAAGA,EACb5nB,EAAInnB,KAAK,CAAGsxC,CAChB,CACJ,CAoBA,SAASG,IACL,IAAiB/zC,EAAUoG,AAAhB,IAAI,CAAiBpG,OAAO,CAAE8tC,EAAc9tC,EAAQgK,IAAI,EAAI,CAAC,EAAGgqC,EAAe5tC,AAA/E,IAAI,CAAgFkE,UAAU,CAAE29B,EAAgB7hC,AAAhH,IAAI,CAAiH6hC,aAAa,CAAEgM,EAAWhM,CAAa,CAAC,EAAE,CAAEiM,EAAYjM,CAAa,CAAC,EAAE,CAAEkM,EAAUlM,CAAa,CAACA,EAAcvlC,MAAM,CAAG,EAAE,CAAE0xC,EAAgBnM,CAAa,CAACA,EAAcvlC,MAAM,CAAG,EAAE,CAAE2xC,EAAYjuC,AAAvT,IAAI,CAAwTyqC,YAAY,EAAIzqC,AAA5U,IAAI,CAA6UyqC,YAAY,CAACjxC,GAAG,CAAE00C,EAAYluC,AAA/W,IAAI,CAAgXyqC,YAAY,EAAIzqC,AAApY,IAAI,CAAqYyqC,YAAY,CAACnxC,GAAG,CAAEE,EAAMy0C,GAAajuC,AAA9a,IAAI,CAA+axG,GAAG,CAAEF,EAAM40C,GAAaluC,AAA3c,IAAI,CAA4c1G,GAAG,CAAEkgC,EAAex5B,AAApe,IAAI,CAAqew5B,YAAY,CAAE2U,EAClgB9mC,EAAS7N,IACLA,GAAOq0C,EAAWrU,GAClBhgC,EAAMs0C,EAAYM,EAAkB/mC,EAAS7N,IAC7Cq0C,EAAWr0C,GACXq0C,EAAWrU,EAAehgC,EAAM60C,EAAoBhnC,EAAS/N,IAC7Dy0C,EAAUz0C,GACVy0C,EAAUvU,EAAelgC,EAAMg1C,EAAkBjnC,EAAS/N,IAC1DA,GAAOy0C,EAAUvU,GACjBlgC,EAAM00C,CACkB,EAAA,IAAxBtG,EAAYrrC,OAAO,EACnB,CAACuxC,GACA5tC,CAAAA,AAZM,IAAI,CAYL4H,OAAO,EAAI5H,AAZV,IAAI,CAYWuuC,QAAQ,AAAD,IACxBH,CAAAA,GAAkBD,CAAe,GAAM,CAACv0C,EAAQkR,WAAW,EAC5D+2B,CAAAA,CAAa,CAAC,EAAE,CAAGroC,CAAE,EAEpB60C,CAAAA,GAAoBC,CAAa,GAAM,CAAC10C,EAAQmR,SAAS,EAC1D82B,CAAAA,CAAa,CAACA,EAAcvlC,MAAM,CAAG,EAAE,CAAGhD,CAAE,EAGxD,CAKA,SAASk1C,EAAarH,CAAO,EAEzB,IApzBiBxvC,EAozBb8L,EAAKzD,AADE,IAAI,CACDpG,OAAO,CAACgK,IAAI,OAC1B,AAAI8jC,AAAwB,CAAA,IAAxBA,AADsCjkC,CAAAA,AAAO,KAAK,IAAZA,EAAgB,CAAC,EAAIA,CAAC,EAChDpH,OAAO,EAAa2D,AAFzB,IAAI,CAE0BkE,UAAU,CACxClE,AAHA,IAAI,CAGCw5B,YAAY,CAErB2N,EAAQrvC,KAAK,CALT,IAAI,EAnzBEH,EAwzBsBgL,UAvzBhCV,MAAMnJ,SAAS,CAAC4jB,KAAK,CAACrb,IAAI,CAAC1J,EAAM,IAwzB5C,CAt0BIwuC,CADOA,EAKRA,GAAiBA,CAAAA,EAAe,CAAC,CAAA,EAJpB,CAACA,EAAa,GAAM,CAAG,EAAE,CAAG,MACxCA,CAAY,CAACA,EAAa,KAAQ,CAAG,EAAE,CAAG,QAC1CA,CAAY,CAACA,EAAa,MAAS,CAAG,EAAE,CAAG,SAC3CA,CAAY,CAACA,EAAa,IAAO,CAAG,EAAE,CAAG,OA80B7C,IAAIyG,EAAmC,WAMnC,SAASA,EAAkB5sC,CAAI,EAC3B,IAAI,CAACA,IAAI,CAAGA,CAChB,CAwEA,OAnDA4sC,EAAkB9zC,SAAS,CAACywC,WAAW,CAAG,WAEtC,IADI9lC,EACAzD,EAAO,IAAI,CAACA,IAAI,CAChBhG,EAAQgG,EAAKhG,KAAK,CAClBgvC,EAAchpC,EAAK4D,IAAI,CAAColC,WAAW,CACnCzB,EAAW,AAAC,CAAA,AAA6B,OAA5B9jC,CAAAA,EAAKzD,EAAKyqC,YAAY,AAAD,GAAehnC,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGG,IAAI,CAAC2jC,OAAO,AAAD,GACxFvnC,EAAK4D,IAAI,CAAC2jC,OAAO,EACjB,EAAE,CACFkH,EAAazF,EAAchpC,EAAKyqC,YAAY,CAAGzqC,EAC/C0uC,EAAY,GAAIC,EAAY,SAGhC,AAAI3uC,AAAc,IAAdA,EAAKqnC,IAAI,EAAU,CAACrtC,EAAMgL,QAAQ,EAAIuiC,EAAQjrC,MAAM,CAC7C,CAAC0D,EAAKyqC,YAAY,EAE7B,AAACzwC,CAAAA,CAAK,CAACgG,EAAK2e,IAAI,CAAC,EAAI,EAAE,AAAD,EAAG1O,OAAO,CAAC,SAAU2+B,CAAS,CAAE9hC,CAAK,EACnD8hC,EAAUvH,IAAI,GAAKrnC,EAAKqnC,IAAI,EAC3BuH,EAAUh1C,OAAO,CAACwS,UAAU,GAC7BuiC,EAAY7hC,EACR8hC,IAAcH,GAEdC,CAAAA,EAAY5hC,CAAI,EAG5B,GACQ6hC,IAAcD,GACjBrnC,CAAAA,CAAAA,EAAS2hC,IACNzB,EAAQjrC,MAAM,GAAK0sC,CAChB,EACf,EASA4D,EAAkB9zC,SAAS,CAACsxC,YAAY,CAAG,SAAU1yC,CAAI,EACrD,IAAIsI,EAAO,IAAI,CAACA,IAAI,CAAErF,EAAWqF,EAAKhG,KAAK,CAACW,QAAQ,CAAEf,EAAUoG,EAAKpG,OAAO,CAAEi1C,EAAkBl0C,EAASjD,IAAI,CAACA,GACzGmD,QAAQ,CAAC,wBACTG,GAAG,CAACgF,EAAK8uC,SAAS,EAQvB,OAPKn0C,EAASN,UAAU,EACpBw0C,EAAgB/zC,IAAI,CAAC,CACjBkC,OAAQpD,EAAQqD,SAAS,CACzB,eAAgBrD,EAAQsD,SAAS,CACjCnC,OAAQ,CACZ,GAEG8zC,CACX,EACOjC,CACX,WAOAxG,EAAY2I,CAAC,CAAG,SAAUC,CAAS,EAC/B,OAAO,IAAI,CAAC9uC,UAAU,CAAC,KAAM8uC,EAAW,CAAA,GAAMC,MAAM,CAAC,EACzD,EAEA7I,EAAY8I,CAAC,CAAG,SAAUF,CAAS,EAC/B,IAAI/uC,EAAO,IAAI,CAAE3E,EAAI,IAAI,IAAI,CAACmF,IAAI,CAACuuC,GACnCG,AAD6D,CAAC,QAAS,eAAgB,UAAW,UAAU,CAChGl/B,OAAO,CAAC,SAAUpQ,CAAM,EAChCI,EAAK2gB,GAAG,CAAC/gB,EAAQvE,EAAG,EACxB,GACA,IAAI8zC,EAAW,AAAC,CAAA,IAAI,CAAC9lC,GAAG,CAAC,MAAOhO,GAAK,CAAA,EAAK,EACtC+zC,EAAW,IAAI,IAAI,CAAC5uC,IAAI,CAACnF,EAAEg0C,OAAO,IACtC,IAAI,CAAC1uB,GAAG,CAAC,OAAQyuB,EAAU,IAAI,CAAC/lC,GAAG,CAAC,OAAQhO,GAAK8zC,EAAW,GAC5D,IAAIG,EAAgB,IAAI,IAAI,CAAC9uC,IAAI,CAAC,IAAI,CAAC6I,GAAG,CAAC,WAAY+lC,GAAW,EAAG,GAKrE,OAJuC,IAAnC,IAAI,CAAC/lC,GAAG,CAAC,MAAOimC,KAChB,IAAI,CAAC3uB,GAAG,CAAC,QAAStlB,EAAG,GACrB,IAAI,CAACslB,GAAG,CAAC,OAAQtlB,EAAG,EAAI,AAAC,CAAA,GAAK,IAAI,CAACgO,GAAG,CAAC,MAAOimC,EAAa,EAAK,IAE7D,AAAC,CAAA,EACJh2C,KAAKma,KAAK,CAAC,AAAC27B,CAAAA,EAASC,OAAO,GAAKC,EAAcD,OAAO,EAAC,EAAK,OAAS,EAAGE,QAAQ,EACxF,EAMe,CACX72C,QA54BJ,SAAiB2I,CAAS,CAAE0F,CAAU,CAAEyoC,CAAS,EAsB7C,OArBKnuC,EAAU2G,SAAS,CAACC,QAAQ,CAAC,UAC9B5G,EAAU2G,SAAS,CAACpH,IAAI,CAAC,QACzBS,EAAUxI,SAAS,CAACwtC,qBAAqB,CAAGA,EAC5C5mC,EAAK4B,EAAUxI,SAAS,CAAE,WAAY01C,GACtC9uC,EAAK4B,EAAUxI,SAAS,CAAE,YAAaouC,GAEvC1nC,EAAS8B,EAAW,OAAQorC,GAC5BltC,EAAS8B,EAAW,wBAAyBmmC,GAC7CjoC,EAAS8B,EAAW,YAAasnC,GACjCppC,EAAS8B,EAAW,cAAe4nC,GACnC1pC,EAAS8B,EAAW,0BAA2B4pC,GAC/C1rC,EAAS8B,EAAW,kBAAmBgqC,GACvC9rC,EAAS8B,EAAW,kBAAmB6qC,GACvC3sC,EAAS8B,EAAW,gBAAiB8qC,GACrC5sC,EAAS8B,EAAW,gBAAiB+qC,GACrC7sC,EAAS8B,EAAW,YAAaqsC,GACjCnuC,EAAS8B,EAAW,UAAWkrC,GAC/BhtC,EAASwH,EAAY,oBAAqBpC,GAC1CpF,EAASiwC,EAAW,wBAAyB5C,GAC7CrtC,EAASiwC,EAAW,cAAenC,IAEhChsC,CACX,CAs3BA,CAmFJ,GACA9J,EAAgBD,EAAU,gBAAiB,CAACA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUyB,CAAC,EAYnF,IAAI02C,EAAS,AAAC,IAAI,EAAI,IAAI,CAACA,MAAM,EAAK,SAAUr0B,CAAC,CAAEvU,CAAC,EAChD,IAAI6oC,EAAI,CAAC,EACT,IAAK,IAAIztC,KAAKmZ,EAAOvZ,OAAOhJ,SAAS,CAACjB,cAAc,CAACwJ,IAAI,CAACga,EAAGnZ,IAAM4E,AAAe,EAAfA,EAAE1F,OAAO,CAACc,IACzEytC,CAAAA,CAAC,CAACztC,EAAE,CAAGmZ,CAAC,CAACnZ,EAAE,AAAD,EACd,GAAImZ,AAAK,MAALA,GAAa,AAAwC,YAAxC,OAAOvZ,OAAO8tC,qBAAqB,CAChD,IAAK,IAAIpsC,EAAI,EAAGtB,EAAIJ,OAAO8tC,qBAAqB,CAACv0B,GAAI7X,EAAItB,EAAE5F,MAAM,CAAEkH,IACzC,EAAlBsD,EAAE1F,OAAO,CAACc,CAAC,CAACsB,EAAE,GAAS1B,OAAOhJ,SAAS,CAAC+2C,oBAAoB,CAACxuC,IAAI,CAACga,EAAGnZ,CAAC,CAACsB,EAAE,GACzEmsC,CAAAA,CAAC,CAACztC,CAAC,CAACsB,EAAE,CAAC,CAAG6X,CAAC,CAACnZ,CAAC,CAACsB,EAAE,CAAC,AAAD,EAE5B,OAAOmsC,CACX,EAMIzjC,EAASlT,EAAEkT,MAAM,CAAE7E,EAAWrO,EAAEqO,QAAQ,CAAE7C,EAAOxL,EAAEwL,IAAI,CA4C3D,SAASsrC,EAAQ1lC,CAAE,CAAE2lC,CAAM,CAAEC,CAAK,CAAEz1B,CAAI,CAAE01B,CAAiB,CAAEr2C,CAAO,EAChE,IAOiCw2B,EAAOC,EAPpC6f,EAAQt2C,GAAWA,EAAQs2C,KAAK,CAAEC,EAASv2C,GAAWA,EAAQu2C,MAAM,CAAEC,EAAO,CAC7E71B,KAAMA,EACN81B,MAAOL,EAAQ,EACf5lC,GAAIA,EACJ4lC,MAAOA,EACPD,OAASA,GAAU,EACvB,EACIO,EAAc,EAAGv0C,EAAS,CAER,CAAA,YAAlB,OAAOo0C,GACPA,EAAOC,EAAMx2C,GAIjB,IAAI22C,EAAW,AAAEN,CAAAA,CAAiB,CAAC7lC,EAAG,EAAI,EAAE,AAAD,EAAI7G,GAAG,CAAC,SAAUitC,CAAK,EAC9D,IAAIJ,EAAON,EAAQU,EAAMpmC,EAAE,CAAEA,EAAK4lC,EAAQ,EAAIQ,EAAOP,EAAmBr2C,GAAU62C,EAAaD,EAAMpgB,KAAK,EAAIsgB,IAAKC,EAAYH,AAAoB,CAAA,IAApBA,EAAM7P,SAAS,CAC1I8P,EACAD,EAAMngB,GAAG,EACLqgB,IAYR,OAVAtgB,EAAS,AAAC,CAAC/oB,EAAS+oB,IAAUqgB,EAAargB,EACvCqgB,EACArgB,EAGJC,EAAO,AAAC,CAAChpB,EAASgpB,IAAQsgB,EAAWtgB,EACjCsgB,EACAtgB,EACJigB,EAAcA,EAAc,EAAIF,EAAKE,WAAW,CAChDv0C,EAASxC,KAAKD,GAAG,CAAC82C,EAAKr0C,MAAM,CAAG,EAAGA,GAC5Bq0C,CACX,GAeA,OAbI71B,IACAA,EAAK6V,KAAK,CAAG5rB,EAAK+V,EAAK6V,KAAK,CAAEA,GAC9B7V,EAAK8V,GAAG,CAAG7rB,EAAK+V,EAAK8V,GAAG,CAAEA,IAE9BnkB,EAAOkkC,EAAM,CACTG,SAAUA,EACVD,YAAaA,EACbv0C,OAAQA,CACZ,GAEqB,YAAjB,OAAOm0C,GACPA,EAAME,EAAMx2C,GAETw2C,CACX,CAeA,MALW,CACPN,QAASA,EACTc,QAVJ,SAAiBr2B,CAAI,CAAE3gB,CAAO,EA3E1B,IAAei3C,EAAUC,EA4EzB,OAAOhB,EAAQ,GAAI,KAAM,EAAG,MA5Ebe,EAAM,EAAE,CAWvB/uC,OAAOsX,IAAI,CAXc03B,EAAgBv2B,AA4EUA,EA5EL6C,MAAM,CAAC,SAAU2zB,CAAI,CAAEC,CAAI,EACrE,IAAIvtC,EAAKutC,EAAKjB,MAAM,CAAEA,EAAStsC,AAAO,KAAK,IAAZA,EAAgB,GAAKA,EAAI2G,EAAK4mC,EAAK5mC,EAAE,CAQpE,OAP4B,KAAA,IAAjB2mC,CAAI,CAAChB,EAAO,EACnBgB,CAAAA,CAAI,CAAChB,EAAO,CAAG,EAAE,AAAD,EAEpBgB,CAAI,CAAChB,EAAO,CAAClvC,IAAI,CAACmwC,GACd5mC,GACAymC,EAAIhwC,IAAI,CAACuJ,GAEN2mC,CACX,EAAG,CAAC,IACuB9gC,OAAO,CAAC,SAAUmgC,CAAI,EAC7C,IAAI3sC,EACJ,GAAI,AAbG,KAaF2sC,GAAmBS,AAAsB,KAAtBA,EAAIzvC,OAAO,CAACgvC,GAAe,CAC/C,IAAIa,EAAgBH,CAAa,CAACV,EAAK,CAAC7sC,GAAG,CAAC,SAAU2tC,CAAM,EAExD,OADqBxB,EAAOwB,EAAQ,EAAE,CAE1C,GACA,AAACztC,CAAAA,EAAKqtC,CAAa,CAlBhB,GAkBsB,AAAD,EAAGjwC,IAAI,CAAC/I,KAAK,CAAC2L,EAAIwtC,GAC1C,OAAOH,CAAa,CAACV,EAAK,AAC9B,CACJ,GACOU,GAsDmDl3C,EAC9D,CASA,CAGJ,GACApC,EAAgBD,EAAU,qCAAsC,CAACA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUyB,CAAC,EAWxG,IAAIwG,EAAWxG,EAAEwG,QAAQ,CAAEgQ,EAAcxW,EAAEwW,WAAW,CAAEyqB,EAAWjhC,EAAEihC,QAAQ,CAAE5yB,EAAWrO,EAAEqO,QAAQ,CAAE7C,EAAOxL,EAAEwL,IAAI,CAAE9E,EAAO1G,EAAE0G,IAAI,CASlI,SAASyxC,IAEAzK,AADM,IAAI,CACLI,QAAQ,EACdJ,CAAAA,AAFO,IAAI,CAENI,QAAQ,CAAG,IAAIsK,EAFb,IAAI,CAEmC,CAEtD,CA6DA,SAASC,EAAqBlK,CAAO,CAAE/uC,CAAC,CAAEC,CAAC,CAAEuH,CAAK,CAAE+I,CAAK,CAAE2oC,CAAY,CAAErH,CAAc,CAAEn9B,CAAK,CAAE0B,CAAI,EAChG,IACIu4B,EAAoBqJ,EAAMJ,EADbuB,EAAY/sC,EAAKkiC,AAAvB,IAAI,CAAwB9sC,OAAO,EAAI8sC,AAAvC,IAAI,CAAwC9sC,OAAO,CAAC8Q,MAAM,CAAE4mC,GAAe7K,EAAMC,AAAjF,IAAI,CAAkFD,GAAG,CAAEzmC,EAAO0mC,AAAlG,IAAI,CAAmG1mC,IAAI,CAA0BwxC,EAAa53C,AAAiB,aAAjBA,AAA3BoG,EAAKpG,OAAO,CAAuB6B,IAAI,CAAiBg2C,EAAStK,EAAQrvC,KAAK,CAArM,IAAI,CAAwM,CAACM,EAAGC,EAAGuH,EAAO+I,EAAO4oC,EAAWtH,EAAgBn9B,EAAO0B,EAAK,EAEnR,GAAIgjC,EAAY,CACZ,IAAI/tC,EAAM8tC,GAAatX,EAASsX,EAAU30C,MAAM,CAAE,CAAA,GAC9C20C,EAAU30C,MAAM,CAChB,CAAC,EAAI8G,EAAKD,EAAG3H,KAAK,CAAkC6H,EAAKF,EAAG2b,OAAO,CAAEA,EAAUzb,AAAO,KAAK,IAAZA,EAAgB3D,EAAKyqC,YAAY,CAAG,EAAI,EAAI9mC,EAAIsjC,EAAesK,GAAalqC,EAASkqC,EAAUtK,WAAW,EACzLsK,EAAUtK,WAAW,CACrB,EAGJ+I,EAAQ,AADRI,CAAAA,EAAOrJ,AADPA,CAAAA,EAAqB/mC,EAAK8mC,QAAQ,CAACC,kBAAkB,AAAD,GACvBA,CAAkB,CAACN,EAAI,AAAD,GAClC2J,EAAKC,KAAK,EAAK,EAChCoB,EAAOr5C,CAAC,EAER,AARgCsL,CAAAA,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAAC,EAQ3C0b,AAAU,EAAVA,EAEL,AAAC4wB,CAAAA,EAAQ,CAAA,EAAK/I,CACvB,CACA,OAAOwK,CACX,CAIA,SAASC,EAAgBvK,CAAO,EAC5B,IA5D2BwK,EACvBluC,EACAqjC,EAA0B8K,EAA6Bj3C,EAA4Bk3C,EAAsBj4C,EAA0BkC,EAA4BC,EAA8BqjB,EAAoG0yB,EAGlSl2C,EAAwCm2C,EACvCC,EAyDAC,EAAWC,EAAcC,EAHZ1L,EAAMC,AAAZ,IAAI,CAAaD,GAAG,CAAEzmC,EAAO0mC,AAA7B,IAAI,CAA8B1mC,IAAI,CAAEJ,EAAQ8mC,AAAhD,IAAI,CAAiD9mC,KAAK,CAAEwyC,EAAW1L,AAAvE,IAAI,CAAwEI,QAAQ,CAAEuL,EAAc3L,AAApG,IAAI,CAAqG9sC,OAAO,CAAEo4C,EAAOI,MAAAA,EAA2C,KAAK,EAAIA,EAASE,SAAS,CAAEC,EAAe3yC,MAAAA,EAAqC,KAAK,EAAIA,EAAM8Q,OAAO,CAAE8hC,EAAWxyC,EAAK8mC,QAAQ,CAAE2L,EAAczyC,EAAKpG,OAAO,CAAEI,EAAQgG,EAAKhG,KAAK,CAAE6nC,EAAgB7hC,EAAK6hC,aAAa,CAAEkF,EAAqByL,EAASzL,kBAAkB,CAAEuK,EAAe9sC,EAAK6tC,MAAAA,EAAiD,KAAK,EAAIA,EAAY3nC,MAAM,CAAE+nC,MAAAA,EAAiD,KAAK,EAAIA,EAAY/nC,MAAM,EAAGgoC,EAAiBpB,GAAgBrX,EAASqX,EAAa10C,MAAM,CAAE,CAAA,GACpqB00C,EAAa10C,MAAM,CACnB,CAAC,EAAIwzC,EAAOrJ,GAAsBA,CAAkB,CAACN,EAAI,CAAEhjC,EAAK2sC,GAAQ,CAAC,EAAGE,EAAc7sC,EAAG6sC,WAAW,CAAED,EAAQ5sC,EAAG4sC,KAAK,CAAEsC,EAAiBvC,GAAQE,GAAeA,EAAc,EAAkBsC,EAAoB,AAAsB,aAArBH,EAAYh3C,IAAI,EAAoB82C,EAAcR,EAAelQ,EAAczgC,OAAO,CAACqlC,GAAO,GAAIoM,EAAkB,4BAA6BC,EAAmBD,EAAkB,SAAUx4C,EAAaL,EAAMK,UAAU,EAEtbu4C,GAAqBxC,GAErBxwC,EACKmzC,WAAW,CAAC,AAAIC,OAAOF,EAAmB,OAC1Cj4C,QAAQ,CAACi4C,EAN+KzC,GAQjMlJ,EAAQrvC,KAAK,CAVF,IAAI,CAUKmK,MAAMnJ,SAAS,CAAC4jB,KAAK,CAACrb,IAAI,CAACsB,UAAW,IACtDiwC,GAAqBD,IACrBV,EAAYO,EAAS1kB,WAAW,CAACsiB,GAxEVuB,EAyED,CAClB50C,MAAQ,CAAC1C,GACLuF,EAAMqzC,MAAM,CAACl2C,KAAK,EAClB,GACJk1C,UAAWA,EACXv3C,MAAOkF,EAAMszC,WAAW,CACxBt5C,QAAS84C,EACT/3C,SAAUiF,EAAMjF,QAAQ,CACxBqY,KAAM++B,EACNoB,GAAIvzC,EAAMuzC,EAAE,AAChB,EAjF0BvB,EAAQ,CAAC9K,CAAnCA,EAAWJ,AA0DJ,IAAI,CA1DKI,QAAQ,EAAoBwL,SAAS,CAAE33C,EAAWg3C,EAAOh3C,QAAQ,CAAEk3C,EAAWF,EAAOwB,EAAE,CAA4Br3C,EAAQlC,CAAlCA,EAAU+3C,EAAO/3C,OAAO,EAAkBkC,KAAK,EAAI,EAAGC,EAASnC,EAAQmC,MAAM,EAAI,EAAGqjB,EAAU,AAAC,CAAA,AAA2B,OAA1B3b,CAAAA,EAAK7J,EAAQwlB,OAAO,AAAD,GAAe3b,AAAO,KAAK,IAAZA,EAAgBA,EAAKijC,AA0DzP,IAAI,CA1D0P1mC,IAAI,CAACyqC,YAAY,AAAD,EAAK,EAAI,EAAGqH,EAAa,CAC9S15C,EAAGy5C,EAASz5C,CAAC,CAAI0D,EAAQ,EAAKsjB,EAC9B/mB,EAAGw5C,EAASx5C,CAAC,CAAI0D,EAAS,CAC9B,EAAGH,EAAW+1C,EAAOM,SAAS,CAAG,GAAK,IAAKF,EAAeJ,EAAO3+B,IAAI,EAAI3L,EAASyqC,EAAWz5C,CAAC,GAC1F25C,EAAOlL,EAASwL,SAAS,GAEzBxL,CAAAA,EAASwL,SAAS,CAAGN,EAAOr3C,EACvBjD,IAAI,CAACiD,EAAS9B,OAAO,CAACe,EAAQ6B,IAAI,CAAC,CAAC7B,EAAQxB,CAAC,EAAI,EAAGwB,EAAQvB,CAAC,EAAI,EAAGyD,EAAOC,IAC3ElB,QAAQ,CAAC,yBACTG,GAAG,CAAC22C,EAAOj3C,KAAK,CAAA,EAGzBs3C,CAAI,CAACD,EAAe,OAAS,OAAO,GAE/Bp3C,EAASN,UAAU,EACpB23C,EACKl3C,IAAI,CAAC,CACNmb,OAAQ,UACR,KAAQzR,EAAKmtC,EAAO50C,KAAK,CAAE,WAC3B,eAAgB,EAChBC,OAAQpD,EAAQqD,SAAS,CACzBkV,YAAavY,EAAQsD,SAAS,EAAI,CACtC,GAGJ80C,CAAI,CAACJ,EAAQ,OAAS,UAAU,CAAC,CAC7B3+B,WAAY6+B,EAAW15C,CAAC,CACxB8a,WAAY4+B,EAAWz5C,CAAC,CACxBuD,SAAUA,CACd,GAsDIs2C,EAAeW,EACVZ,CAAAA,EAAY,YAAc,UAAS,EACxCE,EAAkBU,EACbZ,CAAAA,EAAY,WAAa,WAAU,EACxCryC,EACK/E,QAAQ,CAACq3C,GACTa,WAAW,CAACZ,GACZ93C,GACDuF,EAAMyW,GAAG,CAAC,CACNJ,OAAQ,SACZ,GAGJ,CAACrW,EAAOoyC,EAAK,CAAC/hC,OAAO,CAAC,SAAUmjC,CAAM,EAC9BA,GAAU,CAACA,EAAOC,sBAAsB,GAExC7zC,EAAS4zC,EAAO1iC,OAAO,CAAE,YAAa,WAzHlD9Q,AA0H4BA,EA1HtB/E,QAAQ,CAAC,mCACV+E,AAyHuBA,EAzHjBjF,QAAQ,CAACN,UAAU,EAC1BuF,AAwHwBA,EAxHlByW,GAAG,CAAC,CACNi9B,eAAgB,WACpB,EAuHQ,GAEA9zC,EAAS4zC,EAAO1iC,OAAO,CAAE,WAAY,eAlH7C2F,EAAAA,EAAM4jB,EAASrgC,AAmHoB03C,EAnHZnxC,KAAK,EAAIvG,AAmHG03C,EAnHKnxC,KAAK,CAAG,CAAC,EACrDP,AAkHgCA,EAlH1BmzC,WAAW,CAAC,mCACbnzC,AAiH2BA,EAjHrBjF,QAAQ,CAACN,UAAU,EAC1BuF,AAgH4BA,EAhHtByW,GAAG,CAAC,CAAEi9B,eAAiBj9B,EAAIi9B,cAAc,EAAI,MAAQ,EAiHnD,GACA9zC,EAAS4zC,EAAO1iC,OAAO,CAAE,QAAS,WAC9B0hC,EAASmB,cAAc,EAC3B,GACAH,EAAOC,sBAAsB,CAAG,CAAA,EAExC,IAEKrB,IACLxiC,EAAY+iC,GACZ3yC,MAAAA,GAA8CA,EAAMyW,GAAG,CAAC,CAAEJ,OAAQ,SAAU,GAC5E+7B,EAAK3yC,OAAO,GAEpB,CAUA,IAAI+xC,EAAuC,WASvC,SAASA,EAAsB1K,CAAI,EAC/B,IAAI,CAACA,IAAI,CAAGA,CAChB,CAuGA,OA9FA0K,EAAsBz4C,OAAO,CAAG,SAAU82C,CAAS,EAC/C,IAAI+D,EAAY/D,EAAU32C,SAAS,AAC9B06C,CAAAA,EAAUD,cAAc,GACzB/zC,EAASiwC,EAAW,OAAQ0B,GAC5BzxC,EAAK8zC,EAAW,mBAAoBnC,GACpC3xC,EAAK8zC,EAAW,cAAe9B,GAE/B8B,EAAUC,QAAQ,CAAG,SAAUrtC,CAAM,EACjC,IAAI,CAAC0gC,QAAQ,CAAC2M,QAAQ,CAACrtC,EAC3B,EACAotC,EAAUE,MAAM,CAAG,SAAUttC,CAAM,EAC/B,IAAI,CAAC0gC,QAAQ,CAAC4M,MAAM,CAACttC,EACzB,EACAotC,EAAUD,cAAc,CAAG,SAAUntC,CAAM,EACvC,IAAI,CAAC0gC,QAAQ,CAACyM,cAAc,CAACntC,EACjC,EAER,EAkBAgrC,EAAsBt4C,SAAS,CAAC26C,QAAQ,CAAG,SAAUrtC,CAAM,EACvD,IAAIsgC,EAAO,IAAI,CAACA,IAAI,CAAE1mC,EAAO0mC,EAAK1mC,IAAI,CAAEs5B,EAAat5B,EAAKs5B,UAAU,CACpE,GAAIA,GACAt5B,EAAK8mC,QAAQ,CAACC,kBAAkB,CAAE,CAClC,IAAIN,EAAMC,EAAKD,GAAG,CAAE2J,EAAOpwC,EAAK8mC,QAAQ,CAACC,kBAAkB,CAACN,EAAI,CAAEzsB,EAASha,EAAK8mC,QAAQ,CAAC2M,QAAQ,CAACrD,GAClG9W,EAAWoI,SAAS,CAAC1nB,EAAQxV,EAAK4B,EAAQ,CAAA,GAC9C,CACJ,EAOAgrC,EAAsBt4C,SAAS,CAACuG,OAAO,CAAG,WAClC,IAAI,CAACizC,SAAS,EACd,IAAI,CAACA,SAAS,CAACjzC,OAAO,EAE9B,EAaA+xC,EAAsBt4C,SAAS,CAAC46C,MAAM,CAAG,SAAUttC,CAAM,EACrD,IAAI3C,EAAK,IAAI,CAACijC,IAAI,CAAED,EAAMhjC,EAAGgjC,GAAG,CAAEzmC,EAAOyD,EAAGzD,IAAI,CAAE8mC,EAAW9mC,EAAK8mC,QAAQ,CAAExN,EAAat5B,EAAKs5B,UAAU,CAAEqa,EAAiB7M,EAASC,kBAAkB,CACtJ,GAAIzN,GAAcqa,EAAgB,CAC9B,IAAIvD,EAAOuD,CAAc,CAAClN,EAAI,CAAEzsB,EAAS8sB,EAAS4M,MAAM,CAACtD,GACzD9W,EAAWoI,SAAS,CAAC1nB,EAAQxV,EAAK4B,EAAQ,CAAA,GAC9C,CACJ,EAcAgrC,EAAsBt4C,SAAS,CAACy6C,cAAc,CAAG,SAAUntC,CAAM,EAC7D,IAAIsgC,EAAO,IAAI,CAACA,IAAI,CAAE1mC,EAAO0mC,EAAK1mC,IAAI,CAAEs5B,EAAat5B,EAAKs5B,UAAU,CACpE,GAAIA,GACAt5B,EAAK8mC,QAAQ,CAACC,kBAAkB,CAAE,CAClC,IAAIN,EAAMC,EAAKD,GAAG,CAAE2J,EAAOpwC,EAAK8mC,QAAQ,CAACC,kBAAkB,CAACN,EAAI,CAAEzsB,EAASha,EAAK8mC,QAAQ,CAACyM,cAAc,CAACnD,GACxG9W,EAAWoI,SAAS,CAAC1nB,EAAQxV,EAAK4B,EAAQ,CAAA,GAC9C,CACJ,EACOgrC,CACX,IAOA,OAAOA,CACX,GACA55C,EAAgBD,EAAU,0BAA2B,CAACA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUsR,CAAK,CAAE7P,CAAC,EAYrI,IAAIkT,EAASlT,EAAEkT,MAAM,CAAE1J,EAAUxJ,EAAEwJ,OAAO,CAAE6E,EAAWrO,EAAEqO,QAAQ,CAAE4yB,EAAWjhC,EAAEihC,QAAQ,CAAE9gC,EAAQH,EAAEG,KAAK,CAAEqL,EAAOxL,EAAEwL,IAAI,CAAEs3B,EAAiB9iC,EAAE8iC,cAAc,CAwM3J,MARoB,CAChB8X,SAvLJ,SAAkBxD,CAAI,CAAEx2C,CAAO,EAC3B,IAMQi6C,EALa33C,EAAO8zC,EAAO9V,EAAc4Z,EAAmB/2C,EAAOF,EADvEiQ,EAAQlT,EAAQkT,KAAK,CAAEinC,EAAoBn6C,EAAQm6C,iBAAiB,CAAEC,EAAcp6C,EAAQo6C,WAAW,CAAEC,EAAmBr6C,EAAQq6C,gBAAgB,CAAEh6C,EAASL,EAAQK,MAAM,CAAE6iB,EAASljB,EAAQkjB,MAAM,CAAEo3B,EAAWt6C,EAAQs6C,QAAQ,CAAErd,EAAS58B,EAAO48B,MAAM,CAAEsd,EAAoBl6C,EAAOD,KAAK,CAACJ,OAAO,CAACI,KAAK,CA+B/S,OAhBIo2C,IACAl0C,EAAQ26B,CAAM,CAACuZ,EAAK5sC,CAAC,CAAC,CACtBwsC,EAAQ+D,CAAiB,CAAC3D,EAAKJ,KAAK,CAAC,EAAI,CAAC,EACxB9zC,GAAS8zC,EAAM9V,YAAY,GAEzC4Z,EAAoB53C,EAAM4Q,KAAK,CAAIgQ,CAAAA,EAC/BA,EAAOxgB,MAAM,CACb63C,EAAkBpZ,UAAU,AAAD,EAC/Bb,EAAepd,GAAUA,CAAM,CAACg3B,EAAkB,EAGjD75C,EAAOD,KAAK,CAACK,UAAU,EACxB0C,CAAAA,EAAQyH,EAAKtI,GAASA,EAAMtC,OAAO,CAACmD,KAAK,CAAEizC,GAASA,EAAMjzC,KAAK,CAAEm9B,EAAc8Z,GApBnF,CAAA,AAAIH,CADAA,EAAiB7D,GAASA,EAAM6D,cAAc,GAE9CA,AAAuB,eAAvBA,EAAellB,GAAG,EAClB7hB,GACAonC,EACOrrC,EAAME,KAAK,CAgByFirC,GAhBjFxU,QAAQ,CAACqU,EAAel6C,EAAE,CAAImT,CAAAA,EAAQonC,CAAO,GAAI5qC,GAAG,GAgB6B0qC,CAf/G,EAe6H/5C,EAAO8C,KAAK,CAAA,EAEzIF,EAAa2H,EAAKtI,GAASA,EAAMtC,OAAO,CAACiD,UAAU,CAAEmzC,GAASA,EAAMnzC,UAAU,CAAEi3C,EAAmBG,EAAkBr6C,EAAQiD,UAAU,GAEpI,CACHE,MAAOA,EACPF,WAAYA,CAChB,CACJ,EAoJIu3C,gBAlIJ,SAAyBzC,CAAM,EAC3B,IACI0C,EAAUC,EAAW9wC,EAAG9J,EAAMC,EAAI46C,EADlC9C,EAAS,CAAC,EAEd,GAAIxX,EAAS0X,GA2BT,IA1BAj4C,EAAO2N,EAASsqC,EAAOj4C,IAAI,EAAIi4C,EAAOj4C,IAAI,CAAG,EAC7C66C,EAAS5C,EAAO4C,MAAM,CACtBD,EAAY,CAAC,EACbD,EAAWpa,EAAS0X,EAAO0C,QAAQ,EAAI1C,EAAO0C,QAAQ,CAAG,CAAC,EACtD7xC,EAAQ+xC,IACRD,CAAAA,EAAYC,EAAOn3B,MAAM,CAAC,SAAU3lB,CAAG,CAAE+8C,CAAI,EACzC,IAAIxE,EAAOyE,EAAiB76C,EAgB5B,OAfIqgC,EAASua,IAASntC,EAASmtC,EAAKxE,KAAK,IAErCyE,EAAkBjwC,EAAK5K,AADvBA,CAAAA,EAAUT,EAAM,CAAC,EAAGq7C,EAAI,EACOC,eAAe,CAAEJ,EAASI,eAAe,EAExE,OAAO76C,EAAQ66C,eAAe,CAC9B,OAAO76C,EAAQo2C,KAAK,CAGhB/V,EAASxiC,CAAG,CADhBu4C,EAAQwE,EAAKxE,KAAK,CAAIyE,CAAAA,EAAkB,EAAI/6C,EAAO,CAAA,EAC5B,EACnBP,EAAM,CAAA,EAAM1B,CAAG,CAACu4C,EAAM,CAAEp2C,GAGxBnC,CAAG,CAACu4C,EAAM,CAAGp2C,GAGdnC,CACX,EAAG,CAAC,EAAC,EAETkC,EAAK0N,EAASsqC,EAAOh4C,EAAE,EAAIg4C,EAAOh4C,EAAE,CAAG,EAClC6J,EAAI,EAAGA,GAAK7J,EAAI6J,IACjBiuC,CAAM,CAACjuC,EAAE,CAAGrK,EAAM,CAAC,EAAGk7C,EAAUpa,EAASqa,CAAS,CAAC9wC,EAAE,EAAI8wC,CAAS,CAAC9wC,EAAE,CAAG,CAAC,GAGjF,OAAOiuC,CACX,EAgGIiD,aAvBJ,SAAsBz6C,CAAM,CAAE06C,CAAW,EACrC,IAAI36C,EAAQC,EAAOD,KAAK,CAAEJ,EAAUK,EAAOL,OAAO,CAAE6J,EAAK7J,EAAQg7C,YAAY,CAAEA,EAAenxC,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAK9J,EAAQi7C,SAAS,CAAEA,EAAYnxC,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAK3J,EAAM86C,SAAS,CAAEA,EAAYnxC,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAGxO,GAAIkxC,AAAc,SAAdA,EAAsB,CACtB,GAAI,AAAwB,UAAxB,OAAOD,GAA6B,KAAKzQ,IAAI,CAACyQ,GAE9C,OAAOE,EADgDH,CAAAA,EAAcI,AAAtDC,WAAWJ,GAAgB,IAAuCD,CAAAA,EAAc,CAAA,CAAC,EAGpG,IAAIM,EAAYj3B,OAAO42B,GACvB,MAAO,AAAEE,CAAAA,EAAYG,CAAQ,EACxBN,CAAAA,GAAe,CAAA,EAAMM,CAC9B,CACA,OAAOnZ,EAAe+Y,EAAWC,EACrC,EAUII,cA3FJ,SAASA,EAAcC,CAAI,CAAEv7C,CAAO,EAChC,IAAIu2C,EAASv2C,EAAQu2C,MAAM,CAAEiF,EAASx7C,EAAQw7C,MAAM,CAAqCC,EAAWC,AAAhC17C,EAAQ07C,WAAW,AAAwB,CAACF,EAAO,CAAEX,EAAmB76C,AAA4B,CAAA,IAA5BA,EAAQ66C,eAAe,CAAsCv4C,EAAQ26B,AAAxBj9B,EAAQi9B,MAAM,AAAgB,CAACse,EAAK3xC,CAAC,CAAC,CAAE+xC,EAAer5C,GAASA,EAAMtC,OAAO,EAAI,CAAC,EAAG22C,EAAW,EAAE,CACvRiF,EAAgB,CACpBL,CAAAA,EAAKM,YAAY,CAAGN,EAAKnF,KAAK,CAAIyE,CAAAA,EAAkB,EAAIY,EAASrF,KAAK,AAAD,EACrEmF,EAAKj9B,IAAI,CAAG1T,EAAKtI,GAASA,EAAMgc,IAAI,CAAE,IACtCi9B,EAAK74B,OAAO,CAAI84B,IAAWD,EAAK/qC,EAAE,EAC9BxQ,AAAoB,CAAA,IAApBA,EAAQ0iB,OAAO,CACG,YAAlB,OAAO6zB,GACPgF,CAAAA,EAAOhF,EAAOgF,EAAMv7C,EAAO,EAG/Bu7C,EAAK5E,QAAQ,CAACtgC,OAAO,CAAC,SAAUugC,CAAK,CAAEhtC,CAAC,EACpC,IAAIkyC,EAAaxpC,EAAO,CAAC,EAAGtS,GAC5BsS,EAAOwpC,EAAY,CACf5oC,MAAOtJ,EACP0wC,SAAUiB,EAAK5E,QAAQ,CAACj0C,MAAM,CAC9BggB,QAAS64B,EAAK74B,OAAO,AACzB,GACAk0B,EAAQ0E,EAAc1E,EAAOkF,GAC7BnF,EAAS1vC,IAAI,CAAC2vC,GACVA,EAAMl0B,OAAO,EACbk5B,CAAAA,GAAiBhF,EAAMlxC,GAAG,AAAD,CAEjC,GAEA,IAAIS,EAAQyE,EAAK+wC,EAAax1C,KAAK,CAAEy1C,GAMrC,OALAL,EAAK74B,OAAO,CAAGvc,GAAS,GAAMy1C,CAAAA,EAAgB,GAAKL,EAAK74B,OAAO,AAAD,EAC9D64B,EAAK5E,QAAQ,CAAGA,EAChB4E,EAAKK,aAAa,CAAGA,EACrBL,EAAKQ,MAAM,CAAGR,EAAK74B,OAAO,EAAI,CAACk5B,EAC/BL,EAAK71C,GAAG,CAAGS,EACJo1C,CACX,EA4DIS,aA/CJ,SAAsB37C,CAAM,EACxB,IAAI47C,EAAQj8C,EAaZ,OAZIqgC,EAAShgC,KAETL,EAAUqgC,EAAShgC,EAAOL,OAAO,EAAIK,EAAOL,OAAO,CAAG,CAAC,EAEvDi8C,EAASrxC,EAAKvK,EAAO67C,QAAQ,CAAEl8C,EAAQi8C,MAAM,CAAE,IAE3C5b,EAAShgC,EAAO2I,WAAW,GAC3B3I,CAAAA,EAAO2I,WAAW,CAACizC,MAAM,CAAGA,CAAK,EAGrC57C,EAAO67C,QAAQ,CAAGD,GAEfA,CACX,CAiCA,CAGJ,GACAr+C,EAAgBD,EAAU,qCAAsC,CAACA,CAAQ,CAAC,0BAA0B,CAAEA,CAAQ,CAAC,wBAAwB,CAAEA,CAAQ,CAAC,gBAAgB,CAAEA,CAAQ,CAAC,qCAAqC,CAAEA,CAAQ,CAAC,0BAA0B,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUkqC,CAAU,CAAEsU,CAAQ,CAAEC,CAAI,CAAEC,CAAY,CAAEC,CAAE,CAAEl9C,CAAC,EAW9U,IAOIm9C,EAPA/B,EAAkB8B,EAAG9B,eAAe,CACpC50C,EAAWxG,EAAEwG,QAAQ,CAAE8U,EAAOtb,EAAEsb,IAAI,CAAE/E,EAAYvW,EAAEuW,SAAS,CAAE/M,EAAUxJ,EAAEwJ,OAAO,CAAEy3B,EAAWjhC,EAAEihC,QAAQ,CAAEmc,EAAWp9C,EAAEo9C,QAAQ,CAAEj9C,EAAQH,EAAEG,KAAK,CAAEqL,EAAOxL,EAAEwL,IAAI,CAAEgL,EAAcxW,EAAEwW,WAAW,CAAE9P,EAAO1G,EAAE0G,IAAI,CAehN,SAAS22C,EAAiBjG,CAAI,CAAE92C,CAAG,EAC/B,IAAIK,EAAKy2C,EAAKkG,WAAW,EAAI,EACzB58C,EAAO02C,EAAKmG,aAAa,EAAI,EASjC,OAHI58C,GAAML,GACNI,CAAAA,GAAQ,EAAE,EAEP,CACHA,KAAMA,EACNC,GAAIA,EACJirC,WAAY,CAAA,CAChB,CACJ,CA0BA,SAAS4R,EAAoBj8B,CAAI,CAAEk8B,CAAW,CAAEC,CAAc,EAC1D,IA2EwCnzC,EAChCozC,EA5EJzyC,EAAa,EAAE,CAAE0yC,EAAiB,EAAE,CAAEC,EAAgB,CAAC,EAAGC,EAAqB,AAAuB,WAAvB,OAAOL,GACtFA,EACA1P,EAAqB,CAAC,EAAGgQ,EAAc,GAuGvC5B,EAAOa,EAAKpF,OAAO,CAACr2B,EArGP,CAEb21B,MAAO,SAAUE,CAAI,EACjB,IAAI4G,EAAWjQ,CAAkB,CAACqJ,EAAK3J,GAAG,CAAC,CACvC1qC,EAAS,EAAGu0C,EAAc,EAC9B0G,EAASzG,QAAQ,CAACtgC,OAAO,CAAC,SAAUugC,CAAK,EACrCF,GAAe,AAACE,CAAAA,EAAMF,WAAW,EAAI,CAAA,EAAK,EAC1Cv0C,EAASxC,KAAKD,GAAG,CAAC,AAACk3C,CAAAA,EAAMz0C,MAAM,EAAI,CAAA,EAAK,EAAGA,EAC/C,GACAi7C,EAAS1G,WAAW,CAAGA,EACvB0G,EAASj7C,MAAM,CAAGA,EACdi7C,EAAS/E,SAAS,EAClB2E,EAAe/1C,IAAI,CAACm2C,EAE5B,EAEA7G,OAAQ,SAAUC,CAAI,EAClB,IAOI4G,EAAUvQ,EAPVlsB,EAAO0f,EAASmW,EAAK71B,IAAI,CAAE,CAAA,GAC3B61B,EAAK71B,IAAI,CACT,CAAC,EAAGrC,EAAOk+B,EAAS77B,EAAKrC,IAAI,EAAIqC,EAAKrC,IAAI,CAAG,GAAI0S,EAAaisB,CAAa,CAACzG,EAAKL,MAAM,CAAC,CAAEkH,EAAkBhd,EAASrP,EAAY,CAAA,GACjImc,CAAkB,CAACnc,EAAW6b,GAAG,CAAC,CAClC,IAKAqQ,CAAAA,GACA7c,EAASgd,EAAgB,CAAA,IACtBD,CAAAA,EAAW1iC,EAAK2iC,EAAe1G,QAAQ,CAPrB,SAAUn4C,CAAC,EAChC,OAAOA,EAAE8f,IAAI,GAAKA,CACtB,EAK2D,GAEvDuuB,EAAMuQ,EAASvQ,GAAG,CAElBuQ,EAASE,KAAK,CAACr2C,IAAI,CAACuvC,IAIpB3J,EAAMsQ,IAGN,CAAChQ,CAAkB,CAACN,EAAI,GACxBM,CAAkB,CAACN,EAAI,CAAGuQ,EAAW,CACjC3G,MAAO4G,EAAiBA,EAAe5G,KAAK,CAAG,EAAI,EACnDn4B,KAAMA,EACN9N,GAAImQ,EAAKnQ,EAAE,CACX8sC,MAAO,CAAC9G,EAAK,CACbG,SAAU,EAAE,CACZ9J,IAAKA,CACT,EAEY,KAARA,GACAviC,EAAWrD,IAAI,CAACqX,GAGhB+hB,EAASgd,EAAgB,CAAA,IACzBA,EAAe1G,QAAQ,CAAC1vC,IAAI,CAACm2C,IAIjCZ,EAAShG,EAAKhmC,EAAE,GAChBysC,CAAAA,CAAa,CAACzG,EAAKhmC,EAAE,CAAC,CAAGgmC,CAAG,EAI5B4G,GACAz8B,AAAmB,CAAA,IAAnBA,EAAK03B,SAAS,EACd+E,CAAAA,EAAS/E,SAAS,CAAG,CAAA,CAAG,EAG5B7B,EAAK3J,GAAG,CAAGA,CACf,CACJ,GAmCA,OAlCwCljC,EAgCKwjC,EAEtC,CACH7iC,WAAYA,EACZ2yC,cAAeA,EACf9P,mBALJA,EALW4P,CA1BHA,EAAY,SAAUK,CAAQ,CAAE5mB,CAAK,CAAEqhB,CAAM,EAC7C,IAAIyF,EAAQF,EAASE,KAAK,CACtB7mB,EAAMD,EAASA,CAAAA,AAAU,KAAVA,EAAe,EAAIsmB,AA6BmBA,EA7BF,CAAA,EACnDjd,EAAO,AAACpJ,CAAAA,EAAMD,CAAI,EAAK,EAAGqW,EAAMrW,EAAQqJ,EAqB5C,OApBAyd,EAAMjnC,OAAO,CAAC,SAAUmgC,CAAI,EACxB,IAAI71B,EAAO61B,EAAK71B,IAAI,CAChB0f,EAAS1f,EAAM,CAAA,KAEfA,EAAKliB,CAAC,CAAG+3B,EAAS7V,CAAAA,EAAK48B,WAAW,EAAI,CAAA,EAEtC,OAAO58B,EAAK48B,WAAW,EAE3B/G,EAAK3J,GAAG,CAAGA,CACf,GACAgL,CAAM,CAAChL,EAAI,CAAGuQ,EACdA,EAASvQ,GAAG,CAAGA,EACfuQ,EAAS/M,cAAc,CAAGxQ,EAfY,GAgBtCud,EAAST,aAAa,CAAGlmB,EAhBa,GAiBtC2mB,EAASzG,QAAQ,CAACtgC,OAAO,CAAC,SAAUugC,CAAK,EACrCmG,EAAUnG,EAAOngB,EAAM,EAAGohB,GAC1BphB,EAAM,AAACmgB,CAAAA,EAAM8F,WAAW,EAAI,CAAA,EAnBM,EAoBtC,GAEAU,EAASV,WAAW,CAAGjmB,EAtBe,GAuB/BohB,CACX,GACiBluC,CAAG,CAAC,KAAK,CAAE,GAAI,CAAC,GAWjCqzC,eAAgBA,EAChBzB,KAAMA,CACV,CACJ,CAQA,SAASiC,EAAetwC,CAAC,EAErB4X,AAD6B1kB,AAAjB8M,EAAEuwC,MAAM,CAAe34B,IAAI,CAClC/J,MAAM,CAAC,SAAU3U,CAAI,EACtB,MAAOA,AAAsB,aAAtBA,EAAKpG,OAAO,CAAC6B,IAAI,AAC5B,GAAGwU,OAAO,CAAC,SAAUjQ,CAAI,EACrB,IAWwBua,EAAMusB,EAX1BltC,EAAUoG,EAAKpG,OAAO,EAAI,CAAC,EAAG03C,EAAe13C,EAAQ8Q,MAAM,CAAE+rC,EAAc78C,EAAQ68C,WAAW,CAAEn9C,EAAMM,EAAQN,GAAG,CAKrH6oC,EAAW,CAACniC,EAAK8mC,QAAQ,CAACC,kBAAkB,EACxC/mC,EAAK/F,MAAM,CAACqvB,IAAI,CAAC,SAAUrvB,CAAM,EAC7B,MAAO,CAACA,EAAOuwC,WAAW,EACtBvwC,EAAOq9C,WAAW,EAClBr9C,EAAOkoC,OAAO,AACtB,GACAuU,EAAiB,EACrB,GAAIvU,EAAS,CA6BT,GA3BA5nB,EAAOva,EAAK/F,MAAM,CAACmjB,MAAM,CAAC,SAAUm6B,CAAG,CAAEl8B,CAAC,EAuBtC,OAtBIA,EAAEiB,OAAO,GAET,AAACjB,CAAAA,EAAEzhB,OAAO,CAAC2gB,IAAI,EAAI,EAAE,AAAD,EAAGtK,OAAO,CAAC,SAAUsK,CAAI,EAErCc,EAAEzhB,OAAO,CAACwf,IAAI,EAAIiC,EAAEzhB,OAAO,CAACwf,IAAI,CAAC9c,MAAM,GACvCie,EAAOc,EAAEuf,UAAU,CAAC9hC,SAAS,CACxB0+C,eAAe,CACfn2C,IAAI,CAAC,CAAEpH,OAAQohB,CAAE,EAAGd,GACzBc,EAAEuf,UAAU,CAAC0F,oBAAoB,CAAC/lB,IAElC0f,EAAS1f,EAAM,CAAA,KAGfA,EAAK48B,WAAW,CAAIT,EACpBa,EAAI12C,IAAI,CAAC0Z,GAEjB,GAEoB,CAAA,IAAhBk8B,GACAC,KAGDa,CACX,EAAG,EAAE,EAGDj+C,GAAOihB,EAAKje,MAAM,CAAGhD,EACrB,IAAK,IAAIkK,EAAI+W,EAAKje,MAAM,CAAEkH,GAAKlK,EAAKkK,IAChC+W,EAAK1Z,IAAI,CAAC,CAGNqX,KAAM1U,EAAI,GACd,GAKRsjC,EAAW0P,EAAoBj8B,EAAMk8B,GAAe,CAAA,EAAO,AAACA,AAAgB,CAAA,IAAhBA,EAAwBC,EAAiB,GAErG12C,EAAKkE,UAAU,CAAG4iC,EAAS5iC,UAAU,CACrClE,EAAK8mC,QAAQ,CAACC,kBAAkB,CAAID,EAASC,kBAAkB,CAC/D/mC,EAAKy3C,QAAQ,CAAG,CAAA,EAChBz3C,EAAK8mC,QAAQ,CAACqO,IAAI,CAAGrO,EAASqO,IAAI,CAElCn1C,EAAK/F,MAAM,CAACgW,OAAO,CAAC,SAAUhW,CAAM,EAChC,IAAIy9C,EAAW,AAACz9C,CAAAA,EAAOL,OAAO,CAAC2gB,IAAI,EAAI,EAAE,AAAD,EAAGhX,GAAG,CAAC,SAAUjI,CAAC,EAatD,OAZIkH,EAAQlH,IACRrB,EAAOL,OAAO,CAACwf,IAAI,EACnBnf,EAAOL,OAAO,CAACwf,IAAI,CAAC9c,MAAM,EAG1Bie,EAAKtK,OAAO,CAAC,SAAU/T,CAAK,EACpBZ,EAAE8F,OAAO,CAAClF,EAAM9D,CAAC,GAAK,GACtBkD,EAAE8F,OAAO,CAAClF,EAAMgzB,EAAE,GAAK,GACvB5zB,CAAAA,EAAIY,CAAI,CAEhB,GAEG+9B,EAAS3+B,EAAG,CAAA,GAAQnC,EAAMmC,GAAKA,CAC1C,EAEIrB,CAAAA,EAAOqiB,OAAO,EACdriB,EAAOskB,OAAO,CAACm5B,EAAU,CAAA,EAEjC,GAEA13C,EAAK8mC,QAAQ,CAACiN,iBAAiB,CAC3BK,EAAgB,CACZC,SAAU/C,EACV53C,KAAM,EACN66C,OAAQjD,GAAgBA,EAAaiD,MAAM,CAC3C56C,GAAIqG,EAAK8mC,QAAQ,CAACqO,IAAI,EAAIn1C,EAAK8mC,QAAQ,CAACqO,IAAI,CAACp5C,MAAM,AACvD,GAEW,iBAAX+K,EAAErL,IAAI,EACNuE,CAAAA,EAAK8mC,QAAQ,CAAC8P,cAAc,CAAG9P,EAAS8P,cAAc,AAAD,CAE7D,CACJ,EACJ,CAaA,SAASe,EAAiBxQ,CAAO,CAAEV,CAAG,EAClC,IACuBmR,EAAch+C,EAASo9C,EAD7BjD,EAAoB/zC,AAA1B,IAAI,CAA2B8mC,QAAQ,CAACiN,iBAAiB,EAAI,CAAC,EAAGvC,EAAaxxC,AAAsB,aAAtBA,AAA9E,IAAI,CAA+EpG,OAAO,CAAC6B,IAAI,CAAiB8qC,EAAQvmC,AAAxH,IAAI,CAAyHumC,KAAK,CACzIG,EAAOH,CAAK,CAACE,EAAI,AACjB+K,CAAAA,GACAxxC,AAHO,IAAI,CAGN8mC,QAAQ,CAACC,kBAAkB,EAEhC6Q,CAAAA,EAAe7D,CAAiB,CAACiD,AADjCA,CAAAA,EAAWh3C,AAJJ,IAAI,CAIK8mC,QAAQ,CAACC,kBAAkB,CAACN,EAAI,AAAD,EACL4J,KAAK,CAAC,AAAD,GAE3Cz2C,CAAAA,EAAU,CACN8Q,OAAQktC,CACZ,CAAA,EAEA,CAAClR,GACDyP,EACA5P,CAAK,CAACE,EAAI,CAAGC,EACT,IAAIyP,EAdL,IAAI,CAcuB1P,EAAK,KAAK,EAAG,KAAK,EAAG,CAC3ClL,SAAUyb,EAAS9+B,IAAI,CACvB+xB,eAAgB+M,EAAS/M,cAAc,CACvCrwC,QAASA,CACb,IAIJ8sC,EAAKmR,UAAU,CAACtc,QAAQ,CAAGyb,EAAS9+B,IAAI,CACxCwuB,EAAK9sC,OAAO,CAAGA,EACf8sC,EAAKoR,QAAQ,KAIjB3Q,EAAQrvC,KAAK,CA5BN,IAAI,CA4BSmK,MAAMnJ,SAAS,CAAC4jB,KAAK,CAACrb,IAAI,CAACsB,UAAW,GAElE,CAIA,SAASo1C,EAAS5Q,CAAO,CAAEntC,CAAK,CAAE4I,CAAW,CAAE+b,CAAI,EAC/C,IAAI3e,EAAO,IAAI,CAAEwxC,EAAa5uC,AAAqB,aAArBA,EAAYnH,IAAI,AACzCuE,CAAAA,EAAK8mC,QAAQ,EACd9mC,CAAAA,EAAK8mC,QAAQ,CAAG,IAAIkR,EAAsBh4C,EAAI,EAG9CwxC,IAGAhyC,EAASxF,EAAO,eAAgBo9C,GAChC53C,EAASxF,EAAO,eAAgBo9C,GAEhC53C,EAASxF,EAAO,YAAa,SAAU8M,CAAC,EACpC,GAAIA,EAAElN,OAAO,CAAC2gB,IAAI,CAAE,CAChB,IAAIusB,EAAW0P,EAAoB1vC,EAAElN,OAAO,CAAC2gB,IAAI,CAAE3X,EAAY6zC,WAAW,EAAI,CAAA,EAAO,EACrFz2C,CAAAA,EAAK8mC,QAAQ,CAAC8P,cAAc,CAAG,AAAC52C,CAAAA,EAAK8mC,QAAQ,CAAC8P,cAAc,EAAI,EAAE,AAAD,EAAGx3C,MAAM,CAAC0nC,EAAS8P,cAAc,CACtG,CACJ,GAGAp3C,EAASQ,EAAM,gBAAiB,WACxBA,EAAK8mC,QAAQ,CAAC8P,cAAc,EAC5B52C,EAAK8mC,QAAQ,CAAC8P,cAAc,CAAC3mC,OAAO,CAAC,SAAUmgC,CAAI,EAC/C,IAAIp2B,EAASha,EAAK8mC,QAAQ,CAAC2M,QAAQ,CAACrD,EAChCpwC,CAAAA,EAAKs5B,UAAU,GACft5B,EAAKs5B,UAAU,CAACoI,SAAS,CAAC1nB,EAAQ,CAAA,GAE9Bha,EAAK8mC,QAAQ,CAAC8P,cAAc,EAC5B52C,CAAAA,EAAK8mC,QAAQ,CAAC8P,cAAc,CAAG52C,EAAK8mC,QAAQ,CACvC8P,cAAc,CACdjiC,MAAM,CAAC,SAAUsjC,CAAC,EAAI,OAAQ,AAAC7H,EAAKmG,aAAa,GAClD0B,EAAE1B,aAAa,EACfnG,EAAKkG,WAAW,GAAK2B,EAAE3B,WAAW,AAAG,EAAC,EAGtD,EAER,GAIA92C,EAASQ,EAAM,cAAe,WACR,UAAdA,EAAK2e,IAAI,EACT,CAAC3e,EAAKgE,WAAW,EACjBhE,EAAKhG,KAAK,CAACJ,OAAO,CAACI,KAAK,CAAC+B,MAAM,EAC/BiE,CAAAA,EAAKmiC,OAAO,CAAG,CAAA,CAAG,CAE1B,GACAv/B,EAAczJ,EAAM,CAEhByK,KAAM,CACFvH,QAAS,CAAA,CACb,EAEAqO,OAAQ,CACJC,MAAO,OAcP4pC,OAAQ,CAAC,CAWDvE,MAAO,KAAK,CAChB,EAAG,CACCA,MAAO,EAQP7vC,MAAO,CAEH+3C,WAAY,MAChB,CACJ,EAAE,CAUNt7C,OAAQ,CASJnB,KAAM,WACNrD,EAAG,GACHC,EAAG,GACH0D,OAAQ,GACRD,MAAO,EACX,CACJ,EACA26C,YAAa,CAAA,CACjB,EAAG7zC,EAAa,CAEZqB,SAAU,CAAA,CACd,IAIJkjC,EAAQrvC,KAAK,CAACkI,EAAM,CAAChG,EAAO4I,EAAa+b,EAAK,EAC1C6yB,IACAxxC,EAAKy3C,QAAQ,CAAG,CAAA,EAChBz3C,EAAKpG,OAAO,CAACivC,aAAa,CAAG,CAAA,EAErC,CAUA,SAASsP,EAAoBhR,CAAO,EAEhC,IADI1jC,EACa7J,EAAUoG,AAAhB,IAAI,CAAiBpG,OAAO,CAAE6wC,EAAe,AAA4B,UAA5B,OAAO7wC,EAAQmK,QAAQ,CAC3E,AAAiC,OAAhCN,CAAAA,EAAK,IAAI,CAACzJ,KAAK,CAACgG,AADV,IAAI,CACW2e,IAAI,CAAC,AAAD,GAAelb,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,CAAE,CAAC7J,EAAQmK,QAAQ,CAAC,CACtF,KAAK,EACT,GADyBnK,AAAiB,aAAjBA,EAAQ6B,IAAI,CACrB,CAYZ,GAXAuE,AAJO,IAAI,CAINxG,GAAG,CAAGgL,EAAKxE,AAJT,IAAI,CAIUke,OAAO,CAAEtkB,EAAQJ,GAAG,CAAEwG,AAJpC,IAAI,CAIqC0L,OAAO,EACvD1L,AALO,IAAI,CAKN1G,GAAG,CAAGkL,EAAKxE,AALT,IAAI,CAKUme,OAAO,CAAEvkB,EAAQN,GAAG,CAAE0G,AALpC,IAAI,CAKqCyL,OAAO,EACvD8D,EANO,IAAI,CAMK,iBAGhBvP,AATO,IAAI,CASNklC,kBAAkB,GACvBllC,AAVO,IAAI,CAUNw5B,YAAY,CAAG,EACpBx5B,AAXO,IAAI,CAWNiqC,cAAc,CAAG,GACtBjqC,AAZO,IAAI,CAYN6hC,aAAa,CAAG7hC,AAZd,IAAI,CAYe8mC,QAAQ,CAACC,kBAAkB,CACjD/mC,AAbG,IAAI,CAaF8mC,QAAQ,CAACsR,gBAAgB,GAC9B,EAAE,CACF3N,EAAc,CACd,IAAI4N,EAAuB5N,EAAa7jC,WAAW,EACnD5G,CAjBG,IAAI,CAiBFxG,GAAG,CAAGgL,EAAK6zC,EAAqB7+C,GAAG,CAAE6+C,EAAqB3sC,OAAO,EACtE1L,AAlBG,IAAI,CAkBF1G,GAAG,CAAGkL,EAAK6zC,EAAqB/+C,GAAG,CAAE++C,EAAqB5sC,OAAO,EACtEzL,AAnBG,IAAI,CAmBF6hC,aAAa,CAAG4I,EAAa5I,aAAa,AACnD,CACA7hC,AArBO,IAAI,CAqBNyqC,YAAY,CAAGA,CACxB,MAEItD,EAAQrvC,KAAK,CAxBN,IAAI,CAwBSmK,MAAMnJ,SAAS,CAAC4jB,KAAK,CAACrb,IAAI,CAACsB,UAAW,GAElE,CAUA,SAAS21C,EAAWnR,CAAO,EACvB,IAAInnC,EAAO,IAAI,AAAwD,CAAA,aAAjBpG,AAA3BoG,EAAKpG,OAAO,CAAuB6B,IAAI,EAChDuE,EAAKsc,OAAO,EAC1Btc,EAAK6hC,aAAa,CAAC5xB,OAAO,CAAC,SAAUw2B,CAAG,EACpC,IAAIC,EAAO1mC,EAAKumC,KAAK,CAACE,EAAI,AACtBC,CAAAA,EAAK9mC,KAAK,EAAI8mC,EAAK9mC,KAAK,CAACyzC,sBAAsB,GAC/C7jC,EAAYk3B,EAAK9mC,KAAK,CAAC8Q,OAAO,EAC9Bg2B,EAAK9mC,KAAK,CAACyzC,sBAAsB,CAAG,CAAA,EAE5C,GAEJlM,EAAQrvC,KAAK,CAACkI,EAAMiC,MAAMnJ,SAAS,CAAC4jB,KAAK,CAACrb,IAAI,CAACsB,UAAW,GAC9D,CAUA,IAAIq1C,EAAuC,WASvC,SAASA,EAAsBh4C,CAAI,EAC/B,IAAI,CAACA,IAAI,CAAGA,CAChB,CAmLA,OA1KAg4C,EAAsBr/C,OAAO,CAAG,SAAU2I,CAAS,CAAE0F,CAAU,CAAEqF,CAAW,CAAEojC,CAAS,EACnF,GAAI,CAACnuC,EAAU2G,SAAS,CAACC,QAAQ,CAAC,YAAa,CAC3C,IAAIqwC,EAAYj3C,EAAUxI,SAAS,CACnCwI,EAAU2G,SAAS,CAACpH,IAAI,CAAC,YACzBnB,EAAK64C,EAAW,eAAgBZ,GAChCj4C,EAAK64C,EAAW,OAAQR,GACxBr4C,EAAK64C,EAAW,kBAAmBJ,GACnCz4C,EAAK64C,EAAW,SAAUD,GAE1BC,EAAUC,KAAK,CAAG,CACd1I,QAASkG,EAAKlG,OAAO,AACzB,EACKqG,GACDA,CAAAA,EAAkB1G,CAAQ,CAElC,CAIA,OAHAsG,EAASp9C,OAAO,CAAC2I,EAAW0F,EAAYyoC,GACxChO,EAAW9oC,OAAO,CAAC2I,EAAW+K,GAC9B4pC,EAAat9C,OAAO,CAAC82C,GACdnuC,CACX,EAiBA02C,EAAsBl/C,SAAS,CAAC2/C,kBAAkB,CAAG,SAAUrI,CAAI,EAC/D,IAAIpwC,EAAO,IAAI,CAACA,IAAI,CAAEhG,EAAQgG,EAAKhG,KAAK,CACxCgG,EAAK/F,MAAM,CAACgW,OAAO,CAAC,SAAUhW,CAAM,EAChC,IAAIsgB,EAAOtgB,EAAOL,OAAO,CAAC2gB,IAAI,CAC9B,GAAI61B,EAAKhmC,EAAE,EAAImQ,EAAM,CACjB,IAAIre,EAAQlC,EAAMsP,GAAG,CAAC8mC,EAAKhmC,EAAE,EAAGsuC,EAAYn+B,CAAI,CAACtgB,EAAOsgB,IAAI,CAACnZ,OAAO,CAAClF,GAAO,CACxEA,GAASw8C,IACTx8C,EAAM+1C,SAAS,CAAG7B,EAAK6B,SAAS,CAChCyG,EAAUzG,SAAS,CAAG7B,EAAK6B,SAAS,CAE5C,CACJ,EACJ,EAkBA+F,EAAsBl/C,SAAS,CAAC26C,QAAQ,CAAG,SAAUrD,CAAI,EACrD,IAAIpwC,EAAO,IAAI,CAACA,IAAI,CAAEga,EAAUha,EAAKpG,OAAO,CAACogB,MAAM,EAAI,EAAE,CAAGviB,EAAM4+C,EAAiBjG,EAAMpwC,EAAK1G,GAAG,EAKjG,OAJA0gB,EAAOnZ,IAAI,CAACpJ,GAEZ24C,EAAK6B,SAAS,CAAG,CAAA,EACjBjyC,EAAK8mC,QAAQ,CAAC2R,kBAAkB,CAACrI,GAC1Bp2B,CACX,EAkBAg+B,EAAsBl/C,SAAS,CAAC46C,MAAM,CAAG,SAAUtD,CAAI,EACnD,IAAIpwC,EAAO,IAAI,CAACA,IAAI,CAAEga,EAAUha,EAAKpG,OAAO,CAACogB,MAAM,EAAI,EAAE,CAAGviB,EAAM4+C,EAAiBjG,EAAMpwC,EAAK1G,GAAG,EAKjG,OAHA82C,EAAK6B,SAAS,CAAG,CAAA,EACjBjyC,EAAK8mC,QAAQ,CAAC2R,kBAAkB,CAACrI,GAE1Bp2B,EAAOoD,MAAM,CAAC,SAAUm6B,CAAG,CAAE11C,CAAC,EAIjC,MAHIA,CAAAA,EAAElI,EAAE,GAAKlC,EAAIkC,EAAE,EAAIkI,EAAEnI,IAAI,GAAKjC,EAAIiC,IAAI,AAAD,GACrC69C,EAAI12C,IAAI,CAACgB,GAEN01C,CACX,EAAG,EAAE,CACT,EAUAS,EAAsBl/C,SAAS,CAACs/C,gBAAgB,CAAG,WAC/C,IAAIp4C,EAAO,IAAI,CAACA,IAAI,CAAE24C,EAAap/C,KAAKma,KAAK,CAAC1T,EAAKxG,GAAG,CAAGwG,EAAKw5B,YAAY,EAAIx5B,EAAKw5B,YAAY,CAAEof,EAAar/C,KAAK2F,IAAI,CAACc,EAAK1G,GAAG,CAAG0G,EAAKw5B,YAAY,EAAIx5B,EAAKw5B,YAAY,CACzK,OAAO13B,OAAOsX,IAAI,CAACpZ,EAAK8mC,QAAQ,CAACC,kBAAkB,EAAI,CAAC,GAAG3pB,MAAM,CAAC,SAAUm6B,CAAG,CAAE5oB,CAAG,EAChF,IAAI8X,EAAM,CAAC9X,EAMX,OALI8X,GAAOkS,GACPlS,GAAOmS,GACP,CAAE54C,CAAAA,EAAKs5B,UAAU,EAAIt5B,EAAKs5B,UAAU,CAAC0I,YAAY,CAACyE,EAAG,GACrD8Q,EAAI12C,IAAI,CAAC4lC,GAEN8Q,CACX,EAAG,EAAE,CACT,EAkBAS,EAAsBl/C,SAAS,CAACg1B,WAAW,CAAG,SAAUsiB,CAAI,EACxD,IAAIpwC,EAAO,IAAI,CAACA,IAAI,CAAEga,EAAUha,EAAKpG,OAAO,CAACogB,MAAM,EAAI,EAAE,CAAGviB,EAAM4+C,EAAiBjG,EAAMpwC,EAAK1G,GAAG,EACjG,OAAO0gB,EAAOsP,IAAI,CAAC,SAAUznB,CAAC,EAC1B,OAAOA,EAAEnI,IAAI,GAAKjC,EAAIiC,IAAI,EAAImI,EAAElI,EAAE,GAAKlC,EAAIkC,EAAE,AACjD,EACJ,EAiBAq+C,EAAsBl/C,SAAS,CAACy6C,cAAc,CAAG,SAAUnD,CAAI,EAC3D,OAAQ,IAAI,CAACtiB,WAAW,CAACsiB,GACrB,IAAI,CAACsD,MAAM,CAACtD,GACZ,IAAI,CAACqD,QAAQ,CAACrD,EACtB,EACO4H,CACX,IAOA,OAAOA,CACX,GACAxgD,EAAgBD,EAAU,8BAA+B,CAACA,CAAQ,CAAC,6BAA6B,CAAEA,CAAQ,CAAC,sCAAsC,CAAEA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,4BAA4B,CAAEA,CAAQ,CAAC,qCAAqC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAU8oC,CAAU,CAAEwY,CAAmB,CAAEpiB,CAAU,CAAE3tB,CAAc,CAAEkxB,CAAW,CAAE8e,CAAY,CAAE9/C,CAAC,EAYrb,IACQ0I,EADJE,EAAY,AAAC,IAAI,EAAI,IAAI,CAACA,SAAS,GAC/BF,EAAgB,SAAUpG,CAAC,CAAEuG,CAAC,EAI9B,MAAOH,AAHPA,CAAAA,EAAgBI,OAAOC,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAU3G,CAAC,CAAEuG,CAAC,EAAIvG,EAAE0G,SAAS,CAAGH,CAAG,GAC1E,SAAUvG,CAAC,CAAEuG,CAAC,EAAI,IAAK,IAAIK,KAAKL,EAAOC,OAAOhJ,SAAS,CAACjB,cAAc,CAACwJ,IAAI,CAACQ,EAAGK,IAAI5G,CAAAA,CAAC,CAAC4G,EAAE,CAAGL,CAAC,CAACK,EAAE,AAAD,CAAG,CAAA,EAC/E5G,EAAGuG,EAC5B,EACO,SAAUvG,CAAC,CAAEuG,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIM,UAAU,uBAAyBC,OAAOP,GAAK,iCAE7D,SAASQ,IAAO,IAAI,CAACC,WAAW,CAAGhH,CAAG,CADtCoG,EAAcpG,EAAGuG,GAEjBvG,EAAExC,SAAS,CAAG+I,AAAM,OAANA,EAAaC,OAAOS,MAAM,CAACV,GAAMQ,CAAAA,EAAGvJ,SAAS,CAAG+I,EAAE/I,SAAS,CAAE,IAAIuJ,CAAG,CACtF,GAEA02C,EAASjwC,EAAe7O,MAAM,CAAEiiC,EAAepzB,EAAeE,WAAW,CAACo3B,MAAM,CAChFl0B,EAASlT,EAAEkT,MAAM,CAAE7E,EAAWrO,EAAEqO,QAAQ,CAAElO,EAAQH,EAAEG,KAAK,CAazD6/C,EAA6B,SAAUt2C,CAAM,EAE7C,SAASs2C,IACL,OAAOt2C,AAAW,OAAXA,GAAmBA,EAAO5K,KAAK,CAAC,IAAI,CAAE6K,YAAc,IAAI,AACnE,CAoGA,OAvGAf,EAAUo3C,EAAat2C,GASvBs2C,EAAYrgD,OAAO,CAAG,SAAU2I,CAAS,CAAE0F,CAAU,CAAEqF,CAAW,CAAEojC,CAAS,EACzEvT,EAAavjC,OAAO,CAAC2I,GAChB0F,IAGLgzB,EAAYrhC,OAAO,CAAC2I,EAAW0F,GAC1BqF,KAGLoqB,EAAW99B,OAAO,CAACqO,EAAYqF,EAAYvT,SAAS,CAAC8hC,UAAU,EAC1D6U,GAGLqJ,EAAangD,OAAO,CAAC2I,EAAW0F,EAAYqF,EAAaojC,GAC7D,EAuBAuJ,EAAYlgD,SAAS,CAACmiC,SAAS,CAAG,SAAU/+B,CAAK,CAAE4Y,CAAI,EACnD,IAC6BmkC,EADVva,EAAazkC,AAAnB,IAAI,CAAsBL,OAAO,CAAEe,EAAWV,AAA9C,IAAI,CAAiDD,KAAK,CAACW,QAAQ,CAAEw5B,EAAYj4B,EAAMi4B,SAAS,CAAEI,EAAQr4B,EAAMq4B,KAAK,CAAEhP,EAAQrpB,EAAM4jB,QAAQ,EAAI,SAAUo5B,EAASxa,EAAW5iB,QAAQ,EAAI,CAAC4iB,EAAWjE,YAAY,CAC5NpG,EAAUn4B,EAAMm4B,OAAO,AACvBn4B,CAAAA,EAAMtC,OAAO,CAAC+mC,SAAS,CACnBt5B,EAASktB,IACTr4B,AAAY,OAAZA,EAAM7D,CAAC,EACP6D,AAAkB,CAAA,IAAlBA,EAAMogB,OAAO,EACb28B,EAAet+C,EAAS9B,OAAO,CAACsgD,OAAO,CAAChlB,EAAU/7B,CAAC,EAAI,EAAG+7B,EAAU97B,CAAC,EAAI,EAAG87B,EAAUr4B,KAAK,EAAI,EAAGq4B,EAAUp4B,MAAM,EAAI,GAClHs4B,EACAA,CAAO,CAACvf,EAAK,CAAC,CACVxZ,EAAG29C,CACP,GAGA/8C,EAAMm4B,OAAO,CAAGA,EAAU15B,EAASjD,IAAI,CAACuhD,GACnCp+C,QAAQ,CAACqB,EAAMijC,YAAY,GAAI,CAAA,GAC/BnkC,GAAG,CAACkB,EAAMxB,KAAK,EAAIT,AAfvB,IAAI,CAe0BS,KAAK,EAGnCT,AAlBA,IAAI,CAkBGD,KAAK,CAACK,UAAU,EACxB6B,EAAMm4B,OAAO,CACRv5B,IAAI,CAACb,AApBT,IAAI,CAoBY+kC,YAAY,CAAC9iC,EAAOqpB,IAChCga,MAAM,CAACb,EAAWa,MAAM,CAAE,KAAM2Z,IAGpC7kB,GACLn4B,CAAAA,EAAMm4B,OAAO,CAAGA,EAAQh1B,OAAO,EAAC,EAIpCqD,EAAO5J,SAAS,CAACmiC,SAAS,CAAC55B,IAAI,CAAC,IAAI,CAAEnF,EAAO4Y,EAErD,EAKAkkC,EAAYlgD,SAAS,CAACokC,cAAc,CAAG,SAAUhhC,CAAK,EAClD,IAAIi4B,EAAWlnB,EACfvK,EAAO5J,SAAS,CAACokC,cAAc,CAAC77B,IAAI,CAAC,IAAI,CAAEnF,GACvCA,EAAMtC,OAAO,CAAC+mC,SAAS,GAEvB1zB,EAAOknB,AADPA,CAAAA,EAAYj4B,EAAMi4B,SAAS,AAAD,EACTp4B,MAAM,EAAI,EAC3BG,EAAMi4B,SAAS,CAAG,CACd/7B,EAAG,AAAC+7B,CAAAA,EAAU/7B,CAAC,EAAI,CAAA,EAAM6U,EAAO,EAChC5U,EAAG87B,EAAU97B,CAAC,CACdyD,MAAOmR,EACPlR,OAAQkR,CACZ,EAER,EAMA+rC,EAAYr5C,cAAc,CAAGxG,EAAM+iC,EAAav8B,cAAc,CAAEk5C,GACzDG,CACX,EAAE9c,GAaF,OAZAhwB,EAAO8sC,EAAYlgD,SAAS,CAAE,CAC1B+mC,cAAe,CAAC,QAAS,MAAO,IAAI,CACpCjF,WAAYyF,EACZ9hB,QAASw6B,EAAOjgD,SAAS,CAACylB,OAAO,AACrC,GACAzV,EAAeq3B,kBAAkB,CAAC,QAAS6Y,GAOpCA,CACX,GACAxhD,EAAgBD,EAAU,+BAAgC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,6BAA6B,CAAEA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,sCAAsC,CAAEA,CAAQ,CAAC,2BAA2B,CAAEA,CAAQ,CAAC,+BAA+B,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,+BAA+B,CAAEA,CAAQ,CAAC,8BAA8B,CAAC,CAAE,SAAUF,CAAU,CAAEuhC,CAAY,CAAEn/B,CAAU,CAAE2/C,CAAqB,CAAEz3C,CAAU,CAAEiT,CAAS,CAAEiO,CAAa,CAAEtW,CAAS,CAAEysC,CAAW,EAoBviB,OAfAngB,AAFQxhC,EAENoC,UAAU,CAAGo/B,AAFPxhC,EAESoC,UAAU,EAAIA,EAC/Bo/B,AAHQxhC,EAGNsK,UAAU,CAAGk3B,AAHPxhC,EAGSsK,UAAU,EAAIA,EAC/Bk3B,AAJQxhC,EAINud,SAAS,CAAGikB,AAJNxhC,EAIQud,SAAS,EAAIA,EAC7BikB,AALQxhC,EAKNwrB,aAAa,CAAGgW,AALVxhC,EAKYwrB,aAAa,EAAIA,EACrCgW,AANQxhC,EAMNkV,SAAS,CAAGssB,AANNxhC,EAMQkV,SAAS,EAAIA,EAE7BssB,AARQxhC,EAQN8M,UAAU,CAAG00B,AARPxhC,EAQSsK,UAAU,CAACwC,UAAU,CAEtCy0B,EAAajgC,OAAO,CAACkgC,AAVbxhC,EAUeyhC,WAAW,EAClCsgB,EAAsBzgD,OAAO,CAACkgC,AAXtBxhC,EAWwB4c,IAAI,CAAE4kB,AAX9BxhC,EAWgCgiD,cAAc,EACtDL,EAAYrgD,OAAO,CAACkgC,AAZZxhC,EAYc4c,IAAI,CAAE4kB,AAZpBxhC,EAYsBmK,KAAK,CAAEq3B,AAZ7BxhC,EAY+B0hD,MAAM,CAAElgB,AAZvCxhC,EAYyCiiD,IAAI,EACrDzgB,AAbQxhC,EAaNud,SAAS,CAACjc,OAAO,CAACkgC,AAbZxhC,EAacmK,KAAK,CAAEq3B,AAbrBxhC,EAauB4c,IAAI,CAAE4kB,AAb7BxhC,EAa+B0hD,MAAM,EAC7ClgB,AAdQxhC,EAcNwrB,aAAa,CAAClqB,OAAO,CAACkgC,AAdhBxhC,EAckB4c,IAAI,CAAE4kB,AAdxBxhC,EAc0BmK,KAAK,EACvCq3B,AAfQxhC,EAeNkV,SAAS,CAAC5T,OAAO,CAACkgC,AAfZxhC,EAec4c,IAAI,EAEnB5c,CACX,EACJ"}