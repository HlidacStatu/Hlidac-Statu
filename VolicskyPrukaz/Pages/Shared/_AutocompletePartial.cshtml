<form id="myForm" action="/generatePdf" method="post">
<div style="position:relative">
    <label for="hsAutocompleteTool">Najděte svoji adresu</label>
    <input placeholder="Zadejte adresu" type="text" name="hsAutocompleteTool" id="hsAutocompleteTool" class="form-control companyahead input-lg" oninput="CallAutocompleteApi(this)" />
    <div id="hsAutocompleteResults">
    </div>
</div>
<div>
    <h2>Osobní údaje</h2>
    <input id="jmenoZadatele" type="text" placeholder="Celé jméno" name="jmenoZadatele" class="form-control input-lg"/>
    <input id="datumNarozeniZadatele" type="text" placeholder="Datum narození" name="datumNarozeniZadatele" class="form-control input-lg"/>
    <input id="telefonZadatele" type="text" placeholder="Telefon" name="telefonZadatele" class="form-control input-lg"/>

    <input id="ulice" type="text" placeholder="Ulice + čp" name="ulice" class="form-control input-lg"/>
    <input id="castobce" type="text" placeholder="Část obce" name="castobce" class="form-control input-lg"/>
    <input id="obec" type="text" placeholder="PSČ + Obec" name="obec" class="form-control input-lg"/>
    
    <h2>Adresa úřadu</h2>
    <input id="uradnazev" type="text" placeholder="Název úřadu" name="uradnazev" class="form-control input-lg"/>
    <input id="uradulice" type="text" placeholder="Ulice úřadu" name="uradulice" class="form-control input-lg"/>
    <input id="uradcastobce" type="text" placeholder="Část obce úřadu" name="uradcast" class="form-control input-lg"/>
    <input id="uradobec" type="text" placeholder="PSČ + Obec úřadu" name="uradobec" class="form-control input-lg"/>
    
</div>

<button class="btn btn-primary" onclick="SendForm()">Odeslat</button>    
</form>

<style>
    .whisp {
        width: 100%;
        text-align: left;
        background-color: white;
        border-left: 2px grey solid;
        border-top: 0px;
        border-bottom: 1px grey dotted;
        border-right: 2px grey solid;
        padding-bottom: 2px;
    }

        .whisp:focus {
            background-color: lightblue;
        }

    #hsAutocompleteResults {
        margin-bottom: 10px;
        position:absolute;
        z-index: 10;
    }

</style>

<script>

    var currentRequest = null;
    
    function CallAutocompleteApi(caller) {
        let url = "/findAddress/" + caller.value;

        currentRequest = jQuery.ajax({
            type: 'GET',
            url: url,
            beforeSend: function(){           
                if(currentRequest != null) {
                    currentRequest.abort();
                }
            },
            success: function(data) {
                EmptyAutocompleteResults();
                data.forEach(autocompData => {
                    var button = $('<button/>',
                        {
                            text: autocompData.adresa.replaceAll('~','; '),
                            class: 'whisp',
                            click: function () { FillDetail(autocompData); EmptyAutocompleteResults(); }
                        });
                    $("#hsAutocompleteResults").append(button);
                });
            },
            error:function(e){
                console.log(e);
            }
        });

        Navigate();
    }
    
    function FillDetail(autocompData) {
        $('#hsAutocompleteTool').val(autocompData.adresa.replaceAll('~','; '));
        let split = autocompData.adresa.split('~');
        if (split.length == 2) {
            $('#ulice').val(split[0]);
            $('#obec').val(split[1]);
        } else {
            $('#ulice').val(split[0]);
            $('#castobce').val(split[1]);
            $('#obec').val(split[2]);
        }
        let splitUrad = autocompData.adresaUradu.split('~');
        $('#uradnazev').val(autocompData.nazevUradu);
        if (splitUrad.length == 2) {
            $('#uradulice').val(splitUrad[0]);
            $('#uradobec').val(splitUrad[1]);
        } else {
            $('#uradulice').val(splitUrad[0]);
            $('#uradcastobce').val(splitUrad[1]);
            $('#uradobec').val(splitUrad[2]);
        }
    }
    
    function EmptyAutocompleteResults() {
        $('#hsAutocompleteResults').empty();
    }

    function EraseSearchBox() {
        $('#hsAutocompleteTool').val("").focus();
    }


    function Navigate() {

        var index = -1;

        jQuery(parent).on('keydown', function (e) {
            var checkboxes = $('#hsAutocompleteResults').find('button.whisp');
            if (e.keyCode == 38) {
                if (index > 0) {
                    index = index - 1;
                }
                checkboxes[index].focus();
                e.preventDefault();
                e.stopPropagation();
            }
            else if (e.keyCode == 40) {
                if (index < checkboxes.length - 1) {
                    index = index + 1;
                    e.preventDefault();
                    e.stopPropagation();
                }
                else {
                    index = checkboxes.length - 1;
                }
                checkboxes[index].focus();
            }
            else if (e.keyCode == 27) {
                EmptyAutocompleteResults();
                EraseSearchBox();
            }

        });
    }
    
    function SendForm() {
        var formData = $("#myForm").serializeArray().reduce(function(obj, item) {
            obj[item.name] = item.value; 
            return obj;
        },{})
        var json = JSON.stringify(formData);
        
        $.ajax({
          type: "POST",
          url: "/generatePdf",
          data: json,
          success: function(){},
          dataType: "json",
          contentType : "application/json"
        });
        
        
    }


</script>