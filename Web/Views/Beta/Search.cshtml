@using System.Text.Json
@{
    ViewBag.Title = "Beta search";
}


@section scripts
{
    <link href="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.6/css/selectize.default.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.6/js/standalone/selectize.min.js"></script>

}

@section breadcrumb
{
    <ol class="breadcrumb">
        <li>
            <a href="/">Hlídač Státu</a>
        </li>
        <li class="active">@ViewBag.Title</li>
    </ol>
}
<style>
    .selectize-dropdown-content {
        max-height: none !important; /* Disable max-height */
        overflow: visible !important; /* Ensure overflow is visible */
    }

    .hlidac-autocomplete {
        /*border: 2px solid yellow;   */
        position: relative;
        padding: 0;
        margin: 0;
    }

    .hs-avatar {
        width: 50px;
        height: auto;
        color: #ccc;
        font-size: 45px;
    }

    .hs-avatar.small {
        font-size: 25px;
    }

    .hs-avatar img {
        width: 50px;
    }

    .hs-autocomplete-description {
        margin-left: 15px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .hs-autocomplete-description.small {
        margin-top: 10px;
    }
    
</style>

<h1>Našeptávání hledání - beta</h1>

<div>
    <div class="hlidac-autocomplete d-flex">
        <select id="autocomplete" autocomplete="off" placeholder='Napište další vyhledávaný výraz, nebo stiskněte "Hledat"'></select>
        <button id="getValuesBtn" class="btn btn-hs btn-primary">
            Hledat
            <span id="searchSpiner" style="display: none" class="spinner-border spinner-border-sm text-light align-middle mb-1 ms-1" role="status">
                <span class="visually-hidden">Loading...</span>
            </span>
        </button>
    </div>
</div>

@{
    var query = Context.Request.Query;
    var inputTags = AutocompleteHelper.CreateInputTagsForJs(query);
    var inputTagsJson = JsonSerializer.Serialize(inputTags);
}

<script>
        $(document).ready(function() {
            $('#autocomplete').selectize({
                plugins: ["remove_button"],
                maxItems: null,
                valueField: 'id',
                labelField: 'text',
                searchField: null,
                create: true,
                highlight: false,
                maxOptions: 8,
                loadingClass: null,
                loadThrottle: 150,
                delimiter: '░',
                render: {
                    option: function(item, escape) {
                        var smallClass = item.category === 'Hint' ? 'small' : '';
                        var kIndexImage = item.kIndex ? '<img src="/Content/kindex/hranate/icon' + escape(item.kIndex) + '.svg" class="kindex" style="height: 20px; vertical-align: text-bottom; margin-right: 5px;">' : '';

                        var html = '<div class="d-flex align-items-center justify-content-start">' +
                            '<div class="hs-avatar ' + smallClass + '">' + item.imageElement + '</div>' +
                            '<div class="hs-autocomplete-description ' + smallClass + ' flex-grow-1 me-2">';

                        if (item.category === 'Hint') {
                            html += '<h6 class="align-middle">' + escape(item.text) + ' <span class="badge rounded-pill bg-secondary">' + escape(item.id) + '</span></h6>';
                        } else {
                            html += '<h6 class="fw-bold mb-0">' + kIndexImage + escape(item.text) + '</h6>' +
                                '<small>' + escape(item.description) + '</small>' +
                                '<p class="small text-muted mb-0"><i>' + escape(item.type) + '</i></p>';
                        }

                        html += '</div><div>';

                        if (item.id.startsWith('osobaid:')) {
                            html += '<a href="/osoba/' + escape(item.id.replace('osobaid:', '')) + '" class="text-muted">' +
                                '<i class="fa-regular fa-arrow-up-right-from-square fa-lg"></i></a>';
                        } else if (item.id.startsWith('ico:')) {
                            html += '<a href="/subjekt/' + escape(item.id.replace('ico:', '')) + '" class="text-muted">' +
                                '<i class="fa-regular fa-arrow-up-right-from-square fa-lg"></i></a>';
                        }

                        html += '</div></div>';

                        return html;
                    }
                },
                load: function(query, callback) {
                    if (!query.length) return callback();
                    $.ajax({
                        url: 'https://ac.hlidacstatu.cz/autocomplete/autocomplete',
                        type: 'GET',
                        dataType: 'json',
                        data: {
                            q: query
                        },
                        error: function() {
                            callback();
                        },
                        success: function(res) {
                            res.forEach(function(item) {
                                item.id = item.id + '÷' + new Date().getTime();
                            });
                            callback(res);
                        }
                    });
                },
                score: function() {
                    return function(item) {
                        return 1; // All items have the same score, disable built-in filtering
                    };
                },
                onType: function(str) {
                    // Prevent local filtering, forcing server-side filtering
                    if (str === ''){
                        this.clearOptions();
                        this.close();
                    }
                    this.clearOptions();
                    this.load(this.settings.load.bind(this, str));
                },
                onItemAdd: function(value, $item) {
                    // Clear all options when an item is added
                    this.clearOptions();
                    this.close();
                },
                onBlur: function () {
                    this.clearOptions();
                    this.close();
                },
                onDelete: function(values) {
                    // Check if input is empty before clearing options
                    this.clearOptions();
                    this.close();
                },
                onOptionRemove: function(value) {
                    // Check if input is empty before clearing options
                    this.clearOptions();
                    this.close();
                },
                onItemRemove: function(value) {
                    // Check if input is empty before clearing options
                    this.clearOptions();
                    this.close();
                },
                
            });

            $('#getValuesBtn').click(function() {
                $('#searchSpiner').css('display', 'block');
                var selectedValues = $('#autocomplete')[0].selectize.getValue().map(item => item.split('÷')[0]);

                // Parse the values into qs and qtl
                var qs = "";
                var qtl = "";

                for (var index = 0; index < selectedValues.length; index++) {
                    var item = selectedValues[index];
                    if (index === selectedValues.length - 1) {
                        qtl += item.length;
                        qs += item;
                    } else {
                        qtl += item.length + ",";
                        qs += item + " ";
                    }
                }

                // URL encode the qs string
                var encodedQs = encodeURIComponent(qs);

                // Navigate to the new URL with the query parameters
                //todo: set correct address
                var newUrl = `/beta/search?q=${encodedQs}&qtl=${qtl}`;
                window.location.href = newUrl;
            });

            // Recreate selected tags
            var initialItemsJson = '@Html.Raw(inputTagsJson)';
            var initialItems = JSON.parse(initialItemsJson);

            var selectizeControl = $('#autocomplete')[0].selectize;

            // Extract the IDs to use with addItems
            var counter = 0;
            initialItems.forEach(function(item) {
                var uniqueId = item.Id + '÷' + counter++;
                // Add option if not already present
                selectizeControl.addOption({ id: uniqueId, text: item.Text, imageElement: item.ImageElement, description: item.Description, type: item.Type, kIndex: item.KIndex, category: item.Category });
                selectizeControl.addItem(uniqueId);
            });

            
            
        });
    </script>