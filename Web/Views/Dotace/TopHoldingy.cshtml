@using HlidacStatu.Extensions
@using HlidacStatu.Repositories
@using HlidacStatu.Repositories.SharedModels
@using HlidacStatu.XLib.Render
@model List<HlidacStatu.Lib.Analytics.StatisticsSubjectPerYear<HlidacStatu.Entities.Firma.Statistics.Dotace>>


@{
    int? rok = null;

    if(ViewData.TryGetValue("rok", out var rokObj))
    {
        if (rokObj != null)
        {
            rok = (int?)rokObj;
            rok ??= DotaceRepo.LastCompleteYear;
            if (rok > DotaceRepo.LastCompleteYear + 5)
            {
                rok = DotaceRepo.LastCompleteYear + 5; // pokud je rok v budoucnosti, tak ho ignorujeme
            }
        }
    }
    int? ftyp = ViewData["ftyp"] as int?;
    int? dtyp = ViewData["dtyp"] as int?;
    HlidacStatu.Entities.Dotace.Hint.Type? dTypeEnum = null;
    if (Enum.TryParse<HlidacStatu.Entities.Dotace.Hint.Type>(dtyp?.ToString(), out HlidacStatu.Entities.Dotace.Hint.Type t)) {
        dTypeEnum = t;
    }

    string yearText = rok > 0 ? $" pro rok {rok}" :"";

    ViewBag.Title = "Hlídač dotací";
    ViewBag.SubTitle = $"Holdingy firem, které jsou největšími příjemci " 
        + (dtyp != null ? " " + HlidacStatu.Entities.Dotace.Hint.TypeDescription(dtyp, 4, false) : "")
        + $" dotací{yearText}"
        + (ftyp != null ? " pro " + HlidacStatu.Entities.Firma.TypSubjektuDescription(ftyp, 4, false) : "")
        ;


    List<(string Ico, long Pocet, decimal Castka)> data = new();
    if (rok.HasValue && rok > 0)
    {
        data = Model
        .Where(m=>!string.IsNullOrEmpty(m.ICO))
        .OrderByDescending(m => m.Summary(rok.Value).CelkemPrideleno)
        .Take(100)
        .Select(m => (Ico:m.ICO, Pocet:(long)(m.Summary(rok.Value).PocetDotaci), Castka: m.Summary(rok.Value).CelkemPrideleno))
        .ToList();
    }
    else
    {
        data = Model
        .Where(m => !string.IsNullOrEmpty(m.ICO))
        .OrderByDescending(m => m.Summary().CelkemPrideleno)
        .Take(100)
        .Select(m => (Ico: m.ICO, Pocet: (long)(m.Summary().PocetDotaci), Castka: m.Summary().CelkemPrideleno))
        .ToList();
        ;
    }

    string searchQuery = "";
    if (rok.HasValue)
    {
        searchQuery = searchQuery + "%20AND%20approvedYear:" + rok.Value;
    }
    if (dtyp.HasValue)
    {
        searchQuery = searchQuery + "%20AND%20hints.subsidyType:" + dtyp.Value;
    }


}

@section breadcrumb
{
    <ol class="breadcrumb">
        <li>
            <a href="/">Hlídač Státu</a>
        </li>
        <li>
            <a href="@Url.Action("Index", "Dotace")">Dotace</a>
        </li>
        <li>
            <a href="@Url.Action("Reporty", "Dotace")">Reporty</a>
        </li>
        <li class="active">@ViewBag.SubTitle</li>
    </ol>
}

@section scripts
{
    <link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.13.4/css/jquery.dataTables.css"/>
    <script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.13.4/js/jquery.dataTables.js"></script>
    <script src="~/bundles/highcharts"></script>
}

@{
    var topPrijemci = new ReportDataSource<(string Ico, long Pocet, decimal Castka)>(
        new[]
        {
            new ReportDataSource<(string Ico, long Pocet, decimal Castka)>.Column()
            {
                Name = "Příjemce",
                CssClass = "text",
                HtmlRender = (x) => $"<a href=/subjekt/{x.Ico}>{FirmaRepo.NameFromIco(x.Ico)}</a>",
                TextRender = (x) => FirmaRepo.NameFromIco(x.Ico)
            },
            new ReportDataSource<(string Ico, long Pocet, decimal Castka)>.Column()
            {
                Name = "Počet dotací" + (rok.HasValue ? $" za {rok}" : ""),
                TextRender = (x) => HlidacStatu.Util.RenderData.NiceNumber(x.Pocet),
                HtmlRender = (x) => $"<a title='Najit dotace subjektu' href='/dotace/hledat?Q=holding:{x.Ico}'>{HlidacStatu.Util.RenderData.NiceNumber(x.Pocet)}</a>",
        OrderValueRender = (x) => HlidacStatu.Util.RenderData.OrderValueFormat(x.Pocet),
                CssClass = "number"
            },
            new ReportDataSource<(string Ico, long Pocet, decimal Castka)>.Column()
            {
                Name = "Celková částka",
                TextRender = (x) => HlidacStatu.Util.RenderData.NicePrice(x.Castka, shortFormat:true),
                HtmlRender = (x) => HlidacStatu.Util.RenderData.NicePrice(x.Castka,html:true),
                OrderValueRender = (x) => HlidacStatu.Util.RenderData.OrderValueFormat(x.Castka),
                CssClass = "number"
            }
        });

    
    topPrijemci.AddRows(data);


    SimplePlot chartData = new SimplePlot()
    {
        Data = data.Select(p => (double)p.Castka / 1_000_000).Take(20).ToList(),
        Labels = data.Select(p => FirmaRepo.NameFromIco(p.Ico)).Take(20).ToList(),
        ChartType = "bar",
        Title = $"Top holdingy - příjemci dotací{yearText}",
        Koncovka = "mil. Kč",
        SeriesName = "Výše dotací",
        CssHeight = "600px"
    };
    
}

<h4>Vyberte rok, za který chcete zobrazit data</h4>
<partial name="_pager" 
         model="@(ValueTuple.Create((int?)null, (int?)null, rok, 
                    "/Dotace/TopHoldingy?" //?ftyp=" + (ftyp.HasValue ? $"{ftyp}" : "") + (dtyp.HasValue ? $"&dtyp={dtyp}" : "")
                ))"    
/>

@if (rok > DotaceRepo.LastCompleteYear)
{
    <div class="alert alert-warning" role="alert">
        @DotaceTexts.NekompletniDataAlert
    </div>
}

<h2 class="mt-4">Přehled holdingů firem, které jsou největšími příjemci dotací
    @(yearText) </h2>
@if (rok == 2024 && dtyp.HasValue == false)
{
    <div class="alert alert-warning my-3" role="alert">
        Upozornění: Po zpracování přehledů jsme společně se sdružením CESNET odhalili pochybení ve vstupních datech, kdy stát chybně uváděl jako jediného příjemce dotace ve výši 1,2 miliardy Kč sdružení CESNET. Ve skutečnosti byla dotace rozdělena mezi 10 subjektů. Dle proběhlé analýzy by se tedy sdružení CESNET neumístilo na prvním místě jako soukromý příjemce dotací, ale až na desátém.
    </div>
}
<div>
    <partial name="Charts/_SimpleChart" model="chartData"/>
</div>
<div>
    @{
        string dataTableOptions = @"{
                         'language': {
                            'url': '//cdn.datatables.net/plug-ins/1.13.4/i18n/cs.json'
                        },
                        'order': [[2, 'desc']],
                        'lengthChange': false,
                        'info': false,
                        }";
    }
    
    @Html.DataToHTMLTable(topPrijemci, tableId:"topPrijemciTab", dataTableOptions:dataTableOptions)
</div>

