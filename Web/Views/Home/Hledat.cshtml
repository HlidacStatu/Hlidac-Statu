@model HlidacStatu.XLib.Search.MultiResult
@using System.Linq;
@using HlidacStatu.Entities;
@using HlidacStatu.Repositories.Searching;
@using HlidacStatu.Repositories
@using HlidacStatu.XLib.Render

@{
    int numOfSmluv = SearchDataResult<object>.DefaultPageSizeGlobal;
    int numOfOsob = 8;
    int numOfDotaci = SearchDataResult<object>.DefaultPageSizeGlobal;
    int numOfFirem = SearchDataResult<object>.DefaultPageSizeGlobal;
    int numOfVZ = SearchDataResult<object>.DefaultPageSizeGlobal;
    int numOfInsolvenci = SearchDataResult<object>.DefaultPageSizeGlobal;
    int numOfDatasets = 1;

    ViewBag.ShowBookmarkUrl = true;

    ViewBag.Title = "Výsledky hledání";
    //ViewBag.SubTitle = Model?.Query;

    Devmasters.DT.StopWatchLaps viewRenderTimes = new Devmasters.DT.StopWatchLaps();
    Devmasters.DT.StopWatchLaps.Interval viewRenderTimesInt = null;
    viewRenderTimesInt = viewRenderTimes.StopPreviousAndStartNextLap("content header");
}

@section breadcrumb
{
<ol class="breadcrumb">
    <li>
        <a href="/">Hlídač Státu</a>
    </li>
    <li>
        <a href="@Url.Action("Smlouvy", "Home")">Hledání</a>
    </li>
    <li title="@Model.Query">@(Devmasters.TextUtil.ShortenText(Model.Query, 60, "..."))</li>
</ol>
}

@if (string.IsNullOrEmpty(Model.Query))
{
    <div class="searching container">
        <div class="row" style="margin-top: 10px;">
            <div class="col-xs-1">
                <img style="margin-top:20px; height:30px;width:auto" src="/Content/img/icon-not-found.svg">

            </div>
            <div class="col-xs-11">
                <div class="new-p--big">
                    Nevíme, co máme hledat, žádný dotaz jsme od vás nedostali.
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-8  col-md-6">
            </div>
        </div>

        <!-- otazky? -->
    <div class="row">
            <div class="col-sm-6">
                <div class="searching__questions">
                    <div>
                        <div>
                            <a class="link--blue" href="/napoveda">
                                Jak vyhledávat?
                            </a>
                            <br>
                            Pokud si stále nevíte rady, neváhejte se nás na cokoliv
                            <a class="link--blue" href="/texty/kontakt">
                                zeptat.
                            </a>
                        </div>
                    </div>
                    <img class="searching__questions__icon" src="/Content/img/icon-questions.svg">
                </div>
            </div>
        </div>

    </div>
    return;
}
else if (Model.HasResults == false)
{
    <div class="searching container">
        <div class="row" style="margin-top: 10px;">
            <div class="col-xs-1">
                <img style="margin-top:20px; height:30px;width:auto" src="/Content/img/icon-not-found.svg">

            </div>
            <div class="col-xs-11">
                <div class="new-p--big">
                    Pro hledaný výraz <span title="@Model.Query" class="emphasized">@Devmasters.TextUtil.ShortenText(Model.Query, 80, "...")</span> jsme bohužel nic nenašli
                </div>
            </div>
        </div>
        @if (Model.IsValid == false)
        {
            <div class="row">
                <div class="col-xs-1">
                </div>
                <div class="col-xs-11">
                    <div class="alert alert-danger" role="alert">
                        Hledaný výraz není správně naformulován a my mu nerozumíme.
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-1">
                </div>
                <div class="col-xs-11">
                    <div class="card bg-default">
                        <div class="card-header">
                            <h3 class="card-title">Tipy pro kontrolu dotazu</h3>
                        </div>
                        <div class="card-body">
                            <ul>
                                <li><b>Uvozovky</b> - Zkontrolujte si, zda jste nezapomněli uzavřít uvozovky na konci</li>
                                <li><b>Závorky</b> - Zkontrolujte si, zda jste nezapomněli uzavřít závorky na konci výrazu</li>
                                <li><b>Syntaxe</b> - Zkontrolujte si i detaily syntaxe, <a href="/napoveda">nejlépe přímo s nápovědou</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        }
        <!-- otazky? -->
    <div class="row">
            <div class="col-sm-6">
                <div class="searching__questions">
                    <div>
                        <div class="new-title new-title--smaller">
                            Nenašli jste, co jste hledali?
                        </div>
                        <div>
                            Zkuste zadat hledaný výraz jiným způsobem.
                            <a class="link--blue" href="/napoveda">
                                Jak vyhledávat?
                            </a>
                            <br>
                            Pokud si stále nevíte rady, neváhejte se nás na cokoliv
                            <a class="link--blue" href="/texty/kontakt">
                                zeptat.
                            </a>
                        </div>
                    </div>
                    <img class="searching__questions__icon" src="/Content/img/icon-questions.svg">
                </div>
            </div>
        </div>

    </div>
    return;
}

@{
    if (Model.Query.Contains("\"") == false && Model.Query.Contains(" ") && Model.Query.Length>5)
    {
        Osoba jmeno = Validators.JmenoInText(Model.Query, false);
        if (jmeno != null)
        {
            string sjmeno = $"\"{jmeno.FullName()}\"";
            <div class="row" style="margin-top:10px;margin-bottom:10px;">
                <div class="col-xs-12">
                    <div class="card bg-warning">
                        <div class="card-header">
                            <h3 class="card-title" style="font-size:1.2em;font-weight:bold" >
                                <span class="text-warning fas fa-exclamation-circle" aria-hidden="true" title="Upozornění"></span>
                                Upozornění!
                            </h3>
                        </div>
                        <div class="card-body">
                            V hledaném výrazu jsme našli nejméně jedno jméno. Vyhledávání hledá každou část jména samostatně a <b>vyhledané výsledky proto nemusí s osobou tohoto jména souviset</b>
                            Pokud chcete hledat informace spojené s konkrétní osobou, dejte její jméno do uvozovek.
                            Příklad hledání přesného jména: <code style="font-size:120%;font-weight:bold"><a href="hledat?q=@(System.Net.WebUtility.UrlEncode(sjmeno))">@(sjmeno)<i class="fa-solid fa-up-right-from-square"></i></a></code>
                        </div>

                    </div>
                </div>
            </div>
        }
    }
}

<div class="row">
    <div class="col-xs-12">
        <div class="new-p new-p--big" style="margin-top: 10px;">
            Pro hledaný výraz <span class="emphasized">@(Devmasters.TextUtil.ShortenText(Model.Query, 60, "..."))</span> @HlidacStatu.Util.RenderData.Vysledky.JsmeNasliVysledky(Model.Total).
            <br />
            @{
                var wdModel = new WatchdogViewModel(null, Model.Query,
                $"Hlídat všechny změny výsledků na dotaz <b>{Devmasters.TextUtil.ShortenText(Model.Query, 60, "...")}</b> v celém Hlídači",
                buttonCss: "btn btn-warning btn-sm",
                prefillWDname: $"Změny o {Devmasters.TextUtil.ShortenText(Model.Query, 60, "...")}",
                showWdList: false, preButtonText: "");
                <partial name="WebUtil/AddWatchdog" model="wdModel" />
            }
        </div>
    </div>
</div>
<hr />
@{
    viewRenderTimesInt.Stop();
    //debug
    //Model.Smlouvy = null;
    //Model.VZ = null;
    //Model.Insolvence = null;
    //Model.Dotace = null;

    //main content based on number of results

    viewRenderTimesInt = viewRenderTimes.StopPreviousAndStartNextLap("Models into ordered collection");

    List<string> paorder = new();
    if (Model.HasSmlouvy)
    {
        paorder.Add(nameof(SmlouvaSearchResult));
    }
    if (Model.HasVZ)
    {
        paorder.Add(nameof(VerejnaZakazkaSearchData));

        if (Model.HasDotace && Model.Dotace.Total > Model.VZ.Total * 2)
        {
            paorder.Insert(paorder.FindIndex(0, m => m == nameof(VerejnaZakazkaSearchData)), nameof(DotaceSearchResult));
        }
        else if (Model.HasInsolvence && Model.Insolvence.Total > Model.VZ.Total * 3)
        {
            paorder.Insert(paorder.FindIndex(0, m => m == nameof(VerejnaZakazkaSearchData)), nameof(InsolvenceSearchResult));
        }
    }
    if (Model.HasDotace)
    {
        if (paorder.Contains(nameof(DotaceSearchResult)) == false)
        {
            paorder.Add(nameof(DotaceSearchResult));
            
            if (Model.HasInsolvence && Model.Insolvence.Total > Model.Dotace.Total * 2 && paorder.Contains(nameof(InsolvenceSearchResult)) == false)
            {
                paorder.Insert(paorder.FindIndex(0, m => m == nameof(DotaceSearchResult)), nameof(InsolvenceSearchResult));
            }
        }
    }
    if (Model.HasFirmy)
    {
        paorder.Add(nameof(Search.GeneralResult<Firma>));
    }

    if (Model.HasInsolvence)
    {
        if (paorder.Contains(nameof(InsolvenceSearchResult)) == false)
        {
            paorder.Add(nameof(InsolvenceSearchResult));
        }
    }

    if (paorder.Count < 2)
    {
        paorder.Add(nameof(OsobaSearchResult));
    }
    else
    {
        paorder.Insert(1, nameof(OsobaSearchResult));
    }
    paorder.Add(nameof(HlidacStatu.Datasets.Search.DatasetMultiResult));

    viewRenderTimesInt.Stop();

    List<Tuple<string, string>> htmlLinks = new();
}


@* BOXES *@
@{
    viewRenderTimesInt = viewRenderTimes.StopPreviousAndStartNextLap("Boxes");
}


@for (int ipart = 0; ipart < paorder.Count; ipart++)
{
    var part = paorder[ipart];

    if (part == nameof(SmlouvaSearchResult))
    {
        if (Model.HasSmlouvy)
        {
            htmlLinks.Add(new Tuple<string, string>(Url.Action("Hledat", "Home", Model.Smlouvy.ToRouteValues(1)), Devmasters.Lang.CS.Plural.Get(Model.Smlouvy.Total, "<b>jednu smlouvu</b>", "<b>{0} smlouvy</b>", "<b>{0} smluv</b>")));
        }
    }
    else if (part == nameof(VerejnaZakazkaSearchData))
    {
        if (Model.HasVZ)
        {
            htmlLinks.Add(new Tuple<string, string>(Url.Action("Hledat", "VerejneZakazky", Model.VZ.ToRouteValues(1)), Devmasters.Lang.CS.Plural.Get(Model.VZ.Total, "<b>jednu veřejnou zakázku</b>", "<b>{0} veřejné zakázky</b>", "<b>{0} veřejných zakázek</b>")));
        }
    }
    else if (part == nameof(DotaceSearchResult))
    {
        if (Model.HasDotace)
        {
            htmlLinks.Add(new Tuple<string, string>(Url.Action("Hledat", "Dotace", Model.Dotace.ToRouteValues(1)), Devmasters.Lang.CS.Plural.Get(Model.Dotace.Total, "<b>jednu dotaci</b>", "<b>{0} dotace</b>", "<b>{0} dotací</b>")));
        }
    }
    else if (part == nameof(InsolvenceSearchResult))
    {
        if (Model.HasInsolvence)
        {
            htmlLinks.Add(new Tuple<string, string>(Url.Action("HledatFtx", "Insolvence", Model.Insolvence.ToRouteValues(1)), Devmasters.Lang.CS.Plural.Get(Model.Insolvence.Total, "<b>jednu insolvenci</b>", "<b>{0} insolvence</b>", "<b>{0} insolvencí</b>")));
        }
    }
    else if (part == nameof(OsobaSearchResult))
    {
        if (Model.HasOsoby)
        {
            htmlLinks.Add(new Tuple<string, string>(Url.Action("Hledat", "Osoby", Model.Osoby.ToRouteValues(1)), Devmasters.Lang.CS.Plural.Get(Model.Osoby.Total, "<b>jednu osobu</b>", "<b>{0} osoby</b>", "<b>{0} osob</b>")));
        }
    }
    else if (part == nameof(Search.GeneralResult<Firma>))
    {
        if (Model.HasFirmy)
        {
            htmlLinks.Add(new Tuple<string, string>(Url.Action("HledatFirmy", "Home", new { q = Model.Firmy.Query }), Devmasters.Lang.CS.Plural.Get(Model.Firmy.Total, "<b>jednu firmu</b>", "<b>{0} firmy</b>", "<b>{0} firem</b>")));
        }
    }
    else if (part == nameof(HlidacStatu.Datasets.Search.DatasetMultiResult))
    {
        if (Model.HasDatasets)
        {
            foreach (var ds in Model.Datasets.Results
                .Where(m => m.Total > 0)
                .OrderByDescending(m => m.Total))
            {
                htmlLinks.Add(new Tuple<string, string>(ds.DataSet.DatasetSearchUrl(ds.Q), ds.Total + "&nbsp;v&nbsp;" + Devmasters.TextUtil.ShortenText((await ds.DataSet.RegistrationAsync()).name, 28)));
            }
        }
    }
    else
    {
    }
}
@{
    viewRenderTimesInt.Stop();
}
@*BOXES for*@

@{
    viewRenderTimesInt = viewRenderTimes.StopPreviousAndStartNextLap("Html links 1");
}
@if (htmlLinks.Count > 0)
{
    <div class="col-xs-12 col-sm-12">
        <div class="row">

            <h4><span title="@Model.Query" class="emphasized">@Devmasters.TextUtil.ShortenText(Model.Query, 80, "...")</span> jsme nalezli v těchto databázích</h4>
            @foreach (var items in htmlLinks.Chunk((htmlLinks.Count / 3) + 1))
            {
                <div class="col-xs-6 col-sm-3" >
                    <ul style="list-style: none;margin-left: -10px;">
                        @foreach (var item in items)
                        {
                            <li>
                                <i class="far fa-angle-double-right pe-2"></i><a href="@item.Item1">@Html.Raw(item.Item2)</a>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
    <hr />
}
@{
    viewRenderTimesInt.Stop();
}

@* box s výpisem datasetů *@
@if (Model.DatasetRegistrations.Any())
{
    <div class="col-xs-12 col-sm-12">
        <div class="row">
            <h4>
                <span title="@Model.Query" class="emphasized">@Devmasters.TextUtil.ShortenText(Model.Query, 80, "...")</span> se také vyskytuje v popisu, nebo názvu těchto databází
            </h4>
             @foreach (var chunks in Model.DatasetRegistrations.Chunk((int)Math.Ceiling((Model.DatasetRegistrations.Count / 3d))))
             {
                 <div class="col-xs-6 col-sm-3">
                    <ul style="list-style: none;margin-left: -10px;">
                         @foreach (var item in chunks)
                         {
                             var url = $"/data/Index/{item.datasetId}";
                             <li>
                                <i class="far fa-angle-double-right pe-2"></i><a href="@url">@Html.Raw(item.name)</a>
                             </li>
                         }
                     </ul>
                 </div>
             }
        </div>
    </div>
    <hr />
}



<div class="col-xs-12 col-sm-12">


    @{
        //analyze query and show big boxes
        var fixedQ = Tools.FixInvalidQuery(Model.Query, SmlouvaRepo.Searching.Irules, Tools.DefaultQueryOperators);

        var splQ = HlidacStatu.Repositories.Searching.SplittingQuery.SplitQuery(fixedQ);
        string[] prefixes = new string[] { "osobaid:", "ico:" };
        int parts = 0;
        if (splQ.Parts.Any(m => prefixes.Contains(m.Prefix)))
        {
            <div class="row" style="">
                @foreach (var osP in splQ.Parts.Where(m => m.Prefix == "osobaid:"))
                {
                    parts++;
                    Osoba fo = Osoby.GetByNameId.Get(osP.Value);
                    var smaller = splQ.Parts.Count(m => m.Prefix == "osobaid:") > 1;
                    <partial name="Partials/RenderOsobaBox" model="@(new RenderOsobaBoxViewModel(fo, smaller))" />

                    if (parts % 4 == 0)
                    {
                        <div class="clearfix d-none d-sm-block d-md-none"></div>
                    }
                    if (parts % 3 == 0)
                    {
                        <div class="clearfix d-none d-md-block d-lg-none"></div>
                    }
                }
                @foreach (var fP in splQ.Parts.Where(m => m.Prefix == "ico:"))
                {
                    parts++;
                    Firma fo = Firmy.Get(fP.Value);
                    <partial name="Partials/RenderFirmaBox" model="@fo" />

                    if (parts % 4 == 0)
                    {
                        <div class="clearfix d-none d-sm-block d-md-none"></div>
                    }
                    if (parts % 3 == 0)
                    {
                        <div class="clearfix d-none d-md-block d-lg-none"></div>
                    }

                }
            </div>
            <hr style="margin-top:30px" />
        }
    }

    @*MAIN RESULT*@
    @if (paorder.Count > 0)
    {
        var part = paorder[0];
        if (part == nameof(SmlouvaSearchResult))
        {
            if (Model.HasSmlouvy)
            {
                viewRenderTimesInt = viewRenderTimes.StopPreviousAndStartNextLap("Result smlouvy");
                if (numOfSmluv == 0)
                {
                    <hr />
                    <h4>
                        Našli jsme
                        @Html.Raw(Devmasters.Lang.CS.Plural.Get(Model.Smlouvy.Total,
        "ještě <b>jednu smlouvu</b>",
        "celkem <b>{0} smlouvy</b>",
        "celkem <b>{0} smluv</b>"))
                        <span style="padding-left:10px;">
                            <a href="@Url.Action("HledatSmlouvy", "Home", Model.Smlouvy.ToRouteValues(1))">ukázat&nbsp;<i class="far fa-angle-double-right"></i></a>
                        </span>
                    </h4>
                }
                else
                {
                    Model.Smlouvy.SmallRender = true;
                    Model.Smlouvy.ShowWatchdog = false;
                    <div id="smlouvy" class="row">
                        <div class="col-xs-12">
                            <partial name="_SearchResult" model="@Model.Smlouvy" />
                        </div>
                    </div>
                }
                viewRenderTimesInt.Stop();
            }
        }
        else if (part == nameof(VerejnaZakazkaSearchData))
        {
            if (Model.HasVZ)
            {
                viewRenderTimesInt = viewRenderTimes.StopPreviousAndStartNextLap("Result VZ");
                //nacist vysledky, mam pouze pocet nalezenych
                var vzRes = await HlidacStatu.Repositories.VerejnaZakazkaRepo.Searching.SimpleSearchAsync(Model.Query, null, 1, HlidacStatu.Repositories.Searching.SearchDataResult<object>.DefaultPageSizeGlobal, "0");
                if (numOfVZ == 0)
                {
                    <hr />
                    <h4>
                        Našli jsme
                        @Html.Raw(Devmasters.Lang.CS.Plural.Get(Model.VZ.Total,
        "ještě <b>jednu veřejnou zakázku</b>",
        "celkem <b>{0} veřejné zakázky</b>",
        "celkem <b>{0} veřejných zakázek</b>"))
                        <span style="padding-left:10px;">
                            <a href="@Url.Action("Hledat", "VerejneZakazky", Model.VZ.ToRouteValues(1))">ukázat&nbsp;<i class="far fa-angle-double-right"></i></a>
                        </span>
                    </h4>
                }
                else
                {
                    Model.VZ.SmallRender = true;
                    Model.VZ.ShowWatchdog = false;

                    <div class="row" id="verejnezakazky">
                        <div class="col-xs-12">
                            <partial name="../VerejneZakazky/_SearchResult" model="@vzRes" />
                        </div>
                    </div>
                }
                viewRenderTimesInt.Stop();

            }
        }
        else if (part == nameof(DotaceSearchResult))
        {
            viewRenderTimesInt = viewRenderTimes.StopPreviousAndStartNextLap("Result dotace");
            if (Model.HasDotace)
            {
                if (numOfDotaci == 0)
                {
                    <hr />
                    <h4>
                        Našli jsme
                        @Html.Raw(Devmasters.Lang.CS.Plural.Get(Model.Dotace.Total,
        "ještě <b>jednu dotaci</b>",
        "celkem <b>{0} dotace</b>",
        "celkem <b>{0} dotací</b>"))
                        <span style="padding-left:10px;">
                            <a href="@Url.Action("Hledat", "Dotace", Model.Dotace.ToRouteValues(1))">ukázat&nbsp;<i class="far fa-angle-double-right"></i></a>
                        </span>
                    </h4>
                }
                else
                {
                    Model.Dotace.ShowWatchdog = false;
                    Model.Dotace.SmallRender = true;
                    <div class="row" id="dotace">
                        <div class="col-xs-12">
                            <partial name="../Dotace/_SearchResult" model="@Model.Dotace" />
                        </div>
                    </div>
                }
                viewRenderTimesInt.Stop();
            }
        }
        else if (part == nameof(InsolvenceSearchResult))
        {
            viewRenderTimesInt = viewRenderTimes.StopPreviousAndStartNextLap("Result insolvence");
            if (Model.HasInsolvence)
            {
                if (numOfInsolvenci == 0)
                {
                    <hr />
                    <h4>
                        Našli jsme
                        @Html.Raw(Devmasters.Lang.CS.Plural.Get(Model.Insolvence.Total,
        "ještě <b>jednu insolvenci</b>",
        "celkem <b>{0} insolvence</b>",
        "celkem <b>{0} insolvencí</b>"))
                        <span style="padding-left:10px;">
                            <a href="@Url.Action("Hledat", "Insolvence", Model.Insolvence.ToRouteValues(1))">ukázat&nbsp;<i class="far fa-angle-double-right"></i></a>
                        </span>
                    </h4>
                }
                else
                {
                    Model.Insolvence.ShowWatchdog = false;
                    Model.Insolvence.SmallRender = true;
                    <div class="row" id="insolvence">
                        <div class="col-xs-12">
                            <partial name="../Insolvence/_SearchResultFtx" model="@Model.Insolvence" />
                        </div>
                    </div>

                }
                viewRenderTimesInt.Stop();

            }
        }
        else if (part == nameof(OsobaSearchResult))
        {
            viewRenderTimesInt = viewRenderTimes.StopPreviousAndStartNextLap("Result osoby");
            if (Model.HasOsoby)
            {
                <div class="row" id="osoby">
                    <div class="col-xs-12">
                        <div class="searching__watcher">
                            <div class="watcher__title">
                                <h3>
                                    Nalezené osoby
                                    <small>@HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(Model.Osoby.Total)</small>
                                </h3>
                            </div>
                        </div>
                    </div>
                </div>

                if (Model.Osoby.Total > 0)
                {
                    if (numOfOsob > 0)
                    {
                        <div class="row" id="osoba" style="margin-top:40px;">
                            <div class="col-xs-12">
                                <partial name="SearchResults/SearchResultsOsoby" model="@Model.Osoby" />
                            </div>
                        </div>
                    }

                    if (Model.Osoby.Total > numOfOsob)
                    {
                        <div style="height: 32px"></div>
                        <div class="row">
                            <div class="col-xs-12">
                                <a href="/Osoby/hledat?Q=@System.Net.WebUtility.UrlEncode(Model.Query)&ftx=@Model.OsobaFtx.ToString()" style="font-size:18px">
                                    @Devmasters.Lang.CS.Plural.Get(Model.Osoby.Total, "", "Ukázat všechny {0} nalezené osoby", "Ukázat všech {0} nalezených osob") ukázat&nbsp;<i class="far fa-angle-double-right"></i>
                                </a>
                            </div>
                        </div>
                    }
                }
                viewRenderTimesInt.Stop();
            }
        }
        else if (part == nameof(Search.GeneralResult<Firma>))
        {
            viewRenderTimesInt = viewRenderTimes.StopPreviousAndStartNextLap("Result firmy");
            if (Model.HasFirmy)
            {
                if (numOfFirem == 0)
                {
                    <hr />
                    <h4>
                        Našli jsme
                        @Html.Raw(Devmasters.Lang.CS.Plural.Get(Model.Firmy.Total,
        "ještě <b>jednu firmu</b>",
        "celkem <b>{0} firmy</b>",
        "celkem <b>{0} firem</b>"))
                        <span style="padding-left:10px;">
                            <a href="@Url.Action("HledatFirmy", "Home", new {q = Model.Query})">ukázat&nbsp;<i class="far fa-angle-double-right"></i></a>
                        </span>
                    </h4>

                }
                else
                {
                    <div class="row" id="firmy">
                        <div class="col-xs-12">
                            <div class="searching__watcher">
                                <div class="watcher__title">
                                    <h3>
                                        Nalezené firmy
                                        <small>@HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(Model.Firmy.Total, HlidacStatu.Util.RenderData.CapitalizationStyle.FirstLetterUpperCap)</small>
                                    </h3>
                                </div>
                            </div>
                        </div>
                    </div>

                    <h4>Nejvíce relevantní nalezené firmy</h4>
                    <div class="row" style="">
                        <partial name="SearchResults/SearchResultsFirmy" model="@Model.Firmy" />
                    </div>
                }

                viewRenderTimesInt.Stop();
            }
        }
        else if (part == nameof(HlidacStatu.Datasets.Search.DatasetMultiResult))
        {
            viewRenderTimesInt = viewRenderTimes.StopPreviousAndStartNextLap("Result smlouvy");
            if (Model.HasDatasets)
            {
                Devmasters.DT.StopWatchEx sw = new();
                sw.Start();

                if (numOfDatasets == 0)
                {
                    <hr />
                    <h4>
                        V dalších databázích jsme našli
                        @Html.Raw(Devmasters.Lang.CS.Plural.Get(Model.Datasets.Total,
        "ještě <b>jeden výsledek</b>",
        "celkem <b>{0} výsledky</b>",
        "celkem <b>{0} výsledků</b>"))
                    </h4>
                    <div class="row" id="databaze">
                        <div class="col-xs-12">
                            <ul style="padding:0">
                                @foreach (var ds in Model.Datasets.Results.Where(m => m.Total > 0).OrderByDescending(m => m.Total))
                                {
                                    <li style="padding-bottom:5px;margin-bottom:5px;border-bottom:1px #eee dashed">
                                        @(await ds.DataSet.RegistrationAsync()).name)&nbsp;<a href="@(ds.DataSet.DatasetSearchUrl(ds.Q))">@(HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(ds.Total))&nbsp;<i class="far fa-angle-double-right"></i></a>
                                    </li>
                                }
                            </ul>

                        </div>
                    </div>
                }
                else
                {
                    <div id="databaze" class="row">
                        <div class="col-xs-12">
                            <div class="searching__watcher">
                                <div class="watcher__title">
                                    <h3>
                                        Nalezené výsledky v dalších databázích
                                        <small>@HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(Model.Datasets.Total, HlidacStatu.Util.RenderData.CapitalizationStyle.FirstLetterUpperCap)</small>
                                    </h3>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        @{
                            var tabs = Model.Datasets.Results.Where(m => m.Total > 0).OrderByDescending(m => m.Total)
                                                .Select(m => $"{m.DataSet.RegistrationAsync().GetAwaiter().GetResult().name}&nbsp;({HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(m.Total)})");
                            List<string> results = new();

                            foreach (var rds in Model.Datasets.Results
                            .Where(m => m.Total > 0)
                            .OrderByDescending(m => m.Total))
                            {
                                results.Add(await rds.RenderResultsInHtmlAsync(Model.Query));
                            }
                        }
                        <partial name="WebUtil/VerticalTabs" model="@(new TabsViewModel(tabs?.ToList(), results))" />
                    </div>
                }
                viewRenderTimesInt.Stop();

            }
        }
        else
        {
        }

        if (htmlLinks.Count > 0)
        {
            viewRenderTimesInt = viewRenderTimes.StopPreviousAndStartNextLap("Html links 2");

            <hr style="margin-top:30px;" />
            <h3><span title="@Model.Query" class="emphasized">@Devmasters.TextUtil.ShortenText(Model.Query, 80, "...")</span> jsme nalezli ještě v těchto databázích</h3>
            <div class="row">
                @foreach (var items in htmlLinks.Chunk((htmlLinks.Count / 3) + 1))
                {
                    <div class="col-xs-6 col-sm-3">
                        <ul style="list-style: none;margin-left: -10px;">
                            @foreach (var item in items)
                            {
                                <li>
                                    <i class="far fa-angle-double-right pe-2"></i><a href="@item.Item1">@Html.Raw(item.Item2)</a>
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>
            viewRenderTimesInt.Stop();

        }
    }

</div>
<script type='text/javascript'>
    $(document).ready(function () {
        $('#midcol').height($('#rightcol').height());
    });</script>





<!--
searchtimes: @Html.Raw(string.Join("\n", Model.SearchTimes().Select(kv => kv.Key + ": " + kv.Value.TotalMilliseconds + "ms")))
-->
<!--
viewrendertimes: @Html.Raw(string.Join("\n", viewRenderTimes.ToString()))
-->
