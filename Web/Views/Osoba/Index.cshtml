@model HlidacStatu.Entities.Osoba

@using Nest;
@using System.Linq;
@using Devmasters.Enums;
@using HlidacStatu.Datasets
@using HlidacStatu.DS.Graphs
@using HlidacStatu.Entities
@using HlidacStatu.Entities
@using HlidacStatu.Extensions
@using HlidacStatu.Repositories
@using HlidacStatu.Repositories.Statistics
@using HlidacStatu.XLib

@{
    Layout = null;

    Devmasters.DT.StopWatchLaps laps = new();

    var aktualnost = Relation.AktualnostType.Nedavny;

    var intv = laps.StopPreviousAndStartNextLap("StatistikaRegistruSmluv");
    var statistics = Model.StatistikaRegistrSmluv(aktualnost);

    //unused stuff
    //var seasonStat = statistics.SoukromeFirmySummary().CurrentSeasonStatistics();
    //var currentSeasonYear = statistics.SoukromeFirmySummary().CurrentSeasonYear();
    //var zmenaObjemuSmluv = statistics.SoukromeFirmySummary().ChangeBetweenYears(currentSeasonYear - 1, currentSeasonYear, s => s.CelkovaHodnotaSmluv);
    //var pocetSoukrFiremVztah = statistics.SoukromeFirmy.Count + statistics.StatniFirmy.Count;

    intv.Stop();
}

@* První sloupec *@
<div id="subjcontent_toc">


    @{
        var prijmyPolitikaDict = await PpRepo.GetPrijmyGroupedByNameIdAsync(PpRepo.DefaultYear, withDetails: true, onlyNameIds: new string[] { Model.NameId });
    }
    @if (Devmasters.Config.GetWebConfigValue("ShowPrijmyPolitiku") == "true"
        || this.User.IsInRole("Admin")
        )
    {
        @if (prijmyPolitikaDict.Any())
        {
            var prijmyPolitika = prijmyPolitikaDict.FirstOrDefault().Value;
            <div>
                <h4>
                    Příjmy z veřejných funkcí (@PpRepo.DefaultYear)  <span class="badge badge-warning">NOVINKA!</span>
                </h4>
                <p class="text-muted sub-header-info">
                    Přehled politických a veřejných funkcí
                </p>
                <div>
                    <dl class="row">
                        <dt class="col-6 col-sm-6 col-md-3 text-nowrap">
                            Roční osobní příjem
                            <i class="fa-solid fa-circle-info" style="cursor:pointer" data-bs-toggle="tooltip"
                               data-bs-title="Plat, odměny, bonusy, osobní příspěvky a náhrady (např. ubytování, cestovní náhrady, reprezentace)"></i>
                        </dt>
                        <dd class="col-6 col-sm-6 col-md-9 text-nowrap">@HlidacStatu.Util.RenderData.NicePriceHtml(prijmyPolitika.Sum(m => m.CelkovyRocniPlatVcetneOdmen))</dd>
                        @if (prijmyPolitika.Sum(m => m.CelkoveRocniNahrady) > 0)
                        {
                            <dt class="col-6 col-sm-6 col-md-3 text-nowrap">
                                Ostatní náhrady
                                <i class="fa-solid fa-circle-info" style="cursor:pointer" data-bs-toggle="tooltip"
                                   data-bs-title="peněžní a nepeněžní, účelově vázané náhrady (např. kancelář, administrativa, asistenti)"></i>


                            </dt>
                            <dd class="col-6 col-sm-6 col-md-9 text-nowrap">@HlidacStatu.Util.RenderData.NicePriceHtml(prijmyPolitika.Sum(m => m.CelkoveRocniNahrady))</dd>
                            <dt class="col-6 col-sm-6 col-md-3 text-nowrap">
                                Celkem
                            </dt>
                            <dd class="col-6 col-sm-6 col-md-9 text-nowrap">@HlidacStatu.Util.RenderData.NicePriceHtml(prijmyPolitika.Sum(m => m.CelkoveRocniNakladyNaPolitika))</dd>
                        }
                        <dt class="col-6 col-sm-6 col-md-3 text-nowrap">Evidujeme příjmy od </dt>
                        <dd class="col-6 col-sm-6 col-md-9">@(string.Join(", ", prijmyPolitika.Select(m => m.Organizace.FirmaDs.DsSubjName)))</dd>
                    </dl>
                </div>

                <p class="text-center">
                    <a href="https://platy.hlidacstatu.cz/politici/politik/@Model.NameId" class="btn btn-hs btn-primary btn-sm my-3 position-relative">
                        Podrobnosti o příjmech politika z veřejných funkcí
                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">@(HlidacStatu.Util.RenderData.NicePrice(prijmyPolitika.Sum(m => m.CelkoveRocniNakladyNaPolitika)))</span>
                    </a>
                </p>

            </div>
            <hr />
        }

    }
    @{
        laps.StopPreviousAndStartNextLap("funkce");
    }
    @{
        int[] types =
        {
        (int)OsobaEvent.Types.VolenaFunkce,
        (int)OsobaEvent.Types.PolitickaExekutivni,
        (int)OsobaEvent.Types.Politicka,
        (int)OsobaEvent.Types.VerejnaSpravaJine,
        (int)OsobaEvent.Types.VerejnaSpravaExekutivni,
        (int)OsobaEvent.Types.Osobni,
        (int)OsobaEvent.Types.Jine
        };

        var listingNum = 3;
        var funkceOsobaNum = Model.Events(m => types.Contains(m.Type)).Count();
        var funkceOsoba = Model.Description(true,
        m => types.Contains(m.Type),
        (funkceOsobaNum <= listingNum + 1 ? listingNum + 1 : listingNum),
        "<ul>{0}</ul>", "<li>{0}</li>", "");
    }
    @if (funkceOsobaNum > 0)
    {
        <div>
            <h4>
                Funkce
            </h4>
            <p class="text-muted sub-header-info">
                Přehled politických a veřejných funkcí
            </p>
            <p>
                @Html.Raw(funkceOsoba)
            </p>
            @if (funkceOsobaNum > listingNum + 1)
            {
                <p class="text-center">
                    <a href="/osoba/funkce/@Model.NameId" class="btn btn-hs btn-primary btn-sm my-3 position-relative">
                        Zobrazit všechny politické a veřejné funkce
                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">@(HlidacStatu.Util.RenderData.NiceNumber(funkceOsobaNum))</span>
                    </a>
                </p>
            }
        </div>
        <hr />
    }
    @{
        laps.StopPreviousAndStartNextLap("sponzoring");
        var sponzoring = Model.Sponzoring().ToList();
        var sponzoringPrimy = sponzoring.Where(s => s.Typ != (int)Sponzoring.TypDaru.DarFirmy).ToList();
        var sponzoringFirmy = sponzoring.Where(s => s.Typ == (int)Sponzoring.TypDaru.DarFirmy).ToList();
    }
    @if (sponzoring.Count > 0)
    {
        <div>
            <h4>
                Sponzoring politických stran
            </h4>
            <p class="text-muted sub-header-info">
                Přehled finančních a nefinančních podpor politickým stranám. Podpory větší než 5000 Kč zobrazujeme po
                dobu 10 let, menší podpory po dobu 5 let.
            </p>

            @if (sponzoringPrimy.Count > 0)
            {
        <p>
            @Model.FullName() přímo @(Model.Muz() ? "podpořil" : "podpořila")
            <b>
                @Devmasters.Lang.CS.Plural.Get(sponzoringPrimy
                                .Select(s => s.IcoPrijemce)
                                .Distinct()
                                .Count(), "jednu politickou stranu", "{0} politické strany", "{0} politických stran")
            </b>
            celkem
            <b>@Devmasters.Lang.CS.Plural.Get(sponzoringPrimy.Count, "jedním darem", "{0} dary", "{0} dary")</b>
            v hodnotě <b>@(sponzoringPrimy.Sum(s => s.Hodnota)?.ToString("N0"))&nbsp;Kč</b>.
        </p>
                }
            else
            {
                <p>
                    @Model.FullName() přímo @(Model.Muz() ? "nepodpořil" : "nepodpořila") žádnou politickou stranu.
                </p>
            }

            @if (sponzoringFirmy.Count > 0)
            {
        <p>
            @Devmasters.Lang.CS.Plural.Get(sponzoringFirmy
                        .Select(s => s.IcoDarce)
                        .Distinct()
                        .Count(), "Společnost", "Společnosti", "Společnosti")
            ve kterých @Model.FullName() @(Model.Muz() ? "působil" : "působila")
            @Devmasters.Lang.CS.Plural.Get(sponzoringFirmy
                        .Select(s => s.IcoDarce)
                        .Distinct()
                        .Count(), "podpořila", "podpořily", "podpořily")
            <b>
                @Devmasters.Lang.CS.Plural.Get(sponzoringFirmy
                                .Select(s => s.IcoPrijemce)
                                .Distinct()
                                .Count(), "jednu politickou stranu", "{0} politické strany", "{0} politických stran")
            </b>
            celkem
            <b>@Devmasters.Lang.CS.Plural.Get(sponzoringFirmy.Count, "jedním darem", "{0} dary", "{0} dary")</b>
            v hodnotě <b>@(sponzoringFirmy.Sum(s => s.Hodnota)?.ToString("N0"))&nbsp;Kč</b>.
        </p>
                }

            <p class="text-center">
                <a href="/osoba/sponzoring/@Model.NameId" class="btn btn-hs btn-primary btn-sm my-3 position-relative">
                    Podrobnosti o sponzorování politických stran
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">@(HlidacStatu.Util.RenderData.NiceNumber(sponzoring.Count))</span>
                </a>
            </p>


        </div>
        <hr />
    }
    @{
        laps.StopPreviousAndStartNextLap("registr smluv");
    }
    @if (statistics.SmlouvyStat_SoukromeFirmySummary()?.Summary().PocetSmluv + statistics.SmlouvyStat_NeziskovkySummary()?.Summary().PocetSmluv > 0)
    {
        <div>
            <h4>
                Smlouvy se státem
            </h4>
            <p class="text-muted sub-header-info">
                Detailní informace o smlouvách uzavřených firmami, ve kterých se angažuje či
                angažoval @Model.FullName().
            </p>
            <p>
                @Html.Raw((Model.InfoFactsCached()).Where(m => m.Level == HlidacStatu.Entities.Facts.InfoFact.ImportanceLevel.Stat).FirstOrDefault()?.Render(true) ?? (Model.InfoFactsCached()).First().Render(true))
            </p>
            <p class="text-center">
                <a href="/osoba/registrsmluv/@Model.NameId" class="btn btn-hs btn-primary btn-sm my-3 position-relative">
                    Podrobnosti o smlouvách firem, kde se osoba angažuje
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                        @(HlidacStatu.Util.RenderData.NiceNumber((statistics.SmlouvyStat_SoukromeFirmySummary()?.Summary().PocetSmluv ?? 0) + (statistics.SmlouvyStat_NeziskovkySummary()?.Summary().PocetSmluv ?? 0)))
                    </span>
                </a>
            </p>
        </div>
        <hr />
    }
    @{
        laps.StopPreviousAndStartNextLap("angazovanost");
    }
    @if (statistics.SoukromeFirmy?.Count > 0 || statistics.StatniFirmy?.Count > 0)
    {
        <div>
            <h4>
                Vazby na firmy a organizace
            </h4>
            <p class="text-muted sub-header-info">
                Firmy a organizace, které tato osoba přímo či prostřednictvím jiných společností vlastnila či
                spoluvlastnila
                nebo byla v orgánech společnosti, a to <b>@(aktualnost.ToNiceDisplayName().ToLower())</b>.
            </p>
            @if (statistics.SoukromeFirmy.Count > 0 && statistics.SmlouvyStat_SoukromeFirmySummary().Summary().PocetSmluv > 0)
            {
                <p>
                    @switch (aktualnost)
                    {
                        case Relation.AktualnostType.Libovolny:
                            <text>
                                @Model.FullName() se angažuje či angažoval/a
                                v @Devmasters.Lang.CS.Plural.Get(statistics.SoukromeFirmy.Count, "jedné soukromé firmě", "{0} soukromých firmách", "{0} soukromých firmách")
                            </text>
                            break;
                        case Relation.AktualnostType.Aktualni:
                            <text>
                                @Model.FullName() se angažuje
                                v @Devmasters.Lang.CS.Plural.Get(statistics.SoukromeFirmy.Count, "jedné soukromé firmě", "{0} soukromých firmách", "{0} soukromých firmách")
                            </text>

                            break;
                        default:
                            <text>
                                @Model.FullName() se angažuje nebo se v posledních 5 letech angažoval
                                v @Devmasters.Lang.CS.Plural.Get(statistics.SoukromeFirmy.Count, "jedné soukromé firmě", "{0} soukromých firmách", "{0} soukromých firmách")
                            </text>

                            break;
                    }

                    @if (statistics.SmlouvyStat_NeziskovkyCount() > 0)
                    {
                        <span>(z toho v @Devmasters.Lang.CS.Plural.Get(statistics.SmlouvyStat_NeziskovkyCount(), "jedné neziskovce", "{0} neziskovkách", "{0} neziskovkách")):</span>
                    }
                    <ul>
                        @foreach (var stat in statistics.SoukromeFirmy
                                        .OrderByDescending(o => o.Value.Summary().CelkovaHodnotaSmluv)
                                        .Take(statistics.SoukromeFirmy.Count <= listingNum + 1 ? listingNum + 1 : listingNum)
                                        )
                        {
                            <li>
                                <a asp-controller="Subjekt" asp-action="Index" asp-route-id="@stat.Key">
                                    @Firmy.GetJmeno(stat.Key)
                                </a>
                                (@Html.Raw(stat.Value.Summary().ToNiceLinkString(null, true, customUrl: $"/hledat?q=ico:{stat.Key}")) od
                                2016
                                @if (stat.Value.CurrentSeasonStatistics().PocetSmluv > 0)
                                {
                                    @($", {stat.Value.CurrentSeasonStatistics().ToNiceLinkString(null, false)} v {stat.Value.CurrentSeasonYear()}")
                                }
                                )
                            </li>
                        }
                    </ul>
                    @if (statistics.SoukromeFirmy.Count > listingNum + 1)
                    {
                    <p>
                        <a asp-action="Vazby" asp-route-id="@Model.NameId" class="moreinfolink text-uppercase">
                            <strong>Ukázat všechny</strong>
                        </a>
                    </p>
                }

                </p>
            }
            else if (statistics.SoukromeFirmy.Count > 0 && statistics.SmlouvyStat_SoukromeFirmySummary().Summary().PocetSmluv == 0)
            {
                <p>

                    @switch (aktualnost)
                    {
                        case Relation.AktualnostType.Libovolny:
                            <text>
                                @Model.FullName() se angažuje nebo angažoval
                                v @Devmasters.Lang.CS.Plural.Get(statistics.SoukromeFirmy.Count, "jedné soukromé firmě, která neobchoduje se státem", "{0} soukromých firmách, které neobchodují se státem", "{0} soukromých firmách, které neobchodují se státem").
                            </text>
                            break;
                        case Relation.AktualnostType.Aktualni:
                            <text>
                                @Model.FullName() se angažuje
                                v @Devmasters.Lang.CS.Plural.Get(statistics.SoukromeFirmy.Count, "jedné soukromé firmě, která neobchoduje se státem", "{0} soukromých firmách, které neobchodují se státem", "{0} soukromých firmách, které neobchodují se státem").
                            </text>

                            break;
                        default:
                            <text>
                                @Model.FullName() se angažuje nebo se v posledních 5 letech angažoval
                                v @Devmasters.Lang.CS.Plural.Get(statistics.SoukromeFirmy.Count, "jedné soukromé firmě, která neobchoduje se státem", "{0} soukromých firmách, které neobchodují se státem", "{0} soukromých firmách, které neobchodují se státem").
                            </text>

                            break;
                    }
                </p>
            }

            @if (statistics.StatniFirmy.Count > 0)
            {
                <p>

                    @switch (aktualnost)
                    {
                        case Relation.AktualnostType.Libovolny:
                            <text>
                                @Model.FullName() se angažuje nebo angažoval
                                v @Devmasters.Lang.CS.Plural.Get(statistics.StatniFirmy.Count, "jedné organizaci", "{0} organizacích", "{0} organizacích"):
                            </text>
                            break;
                        case Relation.AktualnostType.Aktualni:
                            <text>
                                @Model.FullName() se angažuje
                                v @Devmasters.Lang.CS.Plural.Get(statistics.StatniFirmy.Count, "jedné organizaci", "{0} organizacích", "{0} organizacích"):
                            </text>

                            break;
                        default:
                            <text>
                                @Model.FullName() se angažuje, nebo se v posledních 5 letech angažoval
                                v @Devmasters.Lang.CS.Plural.Get(statistics.StatniFirmy.Count, "jedné organizaci", "{0} organizacích", "{0} organizacích"):
                            </text>

                            break;
                    }
                    <ul>
                        @foreach (var stat in statistics.StatniFirmy
                                        .OrderByDescending(o => o.Value.CurrentSeasonStatistics().CelkovaHodnotaSmluv)
                                        .Take(statistics.StatniFirmy.Count <= listingNum + 1 ? listingNum + 1 : listingNum)
                                        )
                        {
                            <li>
                                <a asp-controller="Subjekt" asp-action="Index" asp-route-id="@stat.Key">
                                    @Firmy.GetJmeno(stat.Key)
                                </a>
                                (@Html.Raw(stat.Value.Summary().ToNiceLinkString(null, true, customUrl: $"/hledat?q=ico:{stat.Key}")) od
                                2016
                                @if (stat.Value.CurrentSeasonStatistics().PocetSmluv > 0)
                                {
                                    @($", {stat.Value.CurrentSeasonStatistics().ToNiceLinkString(null, false)} v {stat.Value.CurrentSeasonYear()}")
                                }
                                )
                            </li>
                        }
                    </ul>
                </p>
            }

            <p class="text-center">
                <a href="/osoba/vazby/@Model.NameId" class="btn btn-hs btn-primary btn-sm my-3 position-relative">
                    Podrobnosti o smlouvách firem, kde se osoba angažuje
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                        @(HlidacStatu.Util.RenderData.NiceNumber((statistics?.StatniFirmy?.Count ?? 0) + (statistics?.SoukromeFirmy?.Count ?? 0) + (statistics?.Neziskovky?.Count ?? 0)))
                    </span>
                </a>
            </p>


        </div>
        <hr />
    }

    @*dotace*@
    @{
        laps.StopPreviousAndStartNextLap("dotace");
    }

    @{
        var dotaceStat = Model.StatistikaDotace(aktualnost);
        var dotaceStatSum = dotaceStat.AllDotaceSummary().Summary();
        int pocetFiremSdotaci = dotaceStat.SoukromeFirmy.Count(m => m.Value.Summary().PocetDotaci > 0)
        + dotaceStat.StatniFirmy.Count(m => m.Value.Summary().PocetDotaci > 0)
        + dotaceStat.Neziskovky.Count(m => m.Value.Summary().PocetDotaci > 0);
        var sdotaceHKc = " v celkové hodnotě <b>" + HlidacStatu.Util.RenderData.NicePriceHtml(dotaceStatSum.CelkemPrideleno) + "</b>.";
        string durlH = "/dotace/hledat?Q=osobaid%3A" + Model.NameId;
    }
    @if (dotaceStatSum.PocetDotaci > 0)
    {
        <div>
            <h4>
                Dotace
            </h4>

            <p>
                <b>@Devmasters.Lang.CS.Plural.Get(pocetFiremSdotaci, "Jedna navázaná společnost", "{0} navázané společnosti", "{0} navázaných společností")</b>
                na osobu @Model.Jmeno @Model.Prijmeni
                @Devmasters.Lang.CS.Plural.Get(pocetFiremSdotaci,
                "dostala",
                        "dostaly",
                        "dostalo")

            @Html.Raw(Devmasters.Lang.CS.Plural.Get((int)dotaceStatSum.PocetDotaci,
                        " <a href='" + durlH + "'><b>jednu dotaci</b></a>" + sdotaceHKc,
                        " <a href='" + durlH + "'><b>{0} dotace</b></a>" + sdotaceHKc,
                        " <a href='" + durlH + "'><b>{0} dotací</b></a>" + sdotaceHKc))

        </p>
    </div>
    <p class="text-center">
        <a href="/osoba/dotace/@Model.NameId" class="btn btn-hs btn-primary btn-sm my-3 position-relative">
            Podrobnosti o dotacích firmám, kde se osoba angažuje
            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                @(HlidacStatu.Util.RenderData.NiceNumber(dotaceStatSum.PocetDotaci))
            </span>
        </a>
    </p>
    <hr />
        }



    @* ----- Insolvence -----*@
    @if (this.User.IsInRole("Admin") ||
         (Model.StatusOsoby() != Osoba.StatusOsobyEnum.NeniPolitik && 
         Model.StatusOsoby() != Osoba.StatusOsobyEnum.Duplicita))
    {
        laps.StopPreviousAndStartNextLap("insolvence");

        var oinsDluznik = await InsolvenceRepo.Searching.SimpleSearchAsync("dluznici.osobaId:" + Model.NameId, 1, 1, (int)HlidacStatu.Repositories.Searching.InsolvenceSearchResult.InsolvenceOrderResult.FastestForScroll, false, HlidacStatu.Web.Framework.InsolvenceLimitedView.IsLimited(this.User));
        var oinsVeritel = await InsolvenceRepo.Searching.SimpleSearchAsync("veritele.osobaId:" + Model.NameId, 1, 1, (int)HlidacStatu.Repositories.Searching.InsolvenceSearchResult.InsolvenceOrderResult.FastestForScroll, false, HlidacStatu.Web.Framework.InsolvenceLimitedView.IsLimited(this.User));
        var oinsSpravce = await InsolvenceRepo.Searching.SimpleSearchAsync("spravci.osobaId:" + Model.NameId, 1, 1, (int)HlidacStatu.Repositories.Searching.InsolvenceSearchResult.InsolvenceOrderResult.FastestForScroll, false, HlidacStatu.Web.Framework.InsolvenceLimitedView.IsLimited(this.User));

        Dictionary<string, long> oinsolv = new();
        oinsolv.Add("dluznici|dlužník|dlužníka|dlužníkem", oinsDluznik.Total);
        oinsolv.Add("veritele|věřitel|věřitele|veřitelem", oinsVeritel.Total);
        oinsolv.Add("spravci|insolvenční správce|insolvenčního správce|insolvenčním správcem", oinsSpravce.Total);

        var insDluznik = await InsolvenceRepo.Searching.SimpleSearchAsync("odstraneny:false AND osobaIddluznik:" + Model.NameId, 1, 1, (int)HlidacStatu.Repositories.Searching.InsolvenceSearchResult.InsolvenceOrderResult.FastestForScroll, false, HlidacStatu.Web.Framework.InsolvenceLimitedView.IsLimited(this.User));
        var insVeritel = await InsolvenceRepo.Searching.SimpleSearchAsync("odstraneny:false AND osobaIdveritel:" + Model.NameId, 1, 1, (int)HlidacStatu.Repositories.Searching.InsolvenceSearchResult.InsolvenceOrderResult.FastestForScroll, false, HlidacStatu.Web.Framework.InsolvenceLimitedView.IsLimited(this.User));
        var insSpravce = await InsolvenceRepo.Searching.SimpleSearchAsync("odstraneny:false AND osobaIdspravce:" + Model.NameId, 1, 1, (int)HlidacStatu.Repositories.Searching.InsolvenceSearchResult.InsolvenceOrderResult.FastestForScroll, false, HlidacStatu.Web.Framework.InsolvenceLimitedView.IsLimited(this.User));

        Dictionary<string, long> insolv = new();
        insolv.Add("dluznik|dlužník|dlužníka|dlužníkem", insDluznik.Total);
        insolv.Add("veritel|věřitel|věřitele|veřitelem", insVeritel.Total);
        insolv.Add("spravce|insolvenční správce|insolvenčního správce|insolvenčním správcem", insSpravce.Total);
        if (oinsolv.Sum(m => m.Value) + insolv.Sum(m => m.Value) > 0)
        {
            <div>
                <h4>Insolvenční rejstřík</h4>
                <p class="text-muted sub-header-info">
                    Informace o insolvenčních řízeních, kterých se @Model.FullName() nebo firmy, ve kterých se angažuje,
                    účastní jako dlužník, věřitel či správce.
                </p>
                @if (oinsolv.Sum(m => m.Value) > 0)
                {
                    <p>
                        @Model.FullName() se osobně
                        <ul>
                            @foreach (var kv in oinsolv.OrderByDescending(m => m.Value))
                            {
                                var text = kv.Key.Split('|');
                                string surl = WebUtil.GetSearchUrl("/insolvence/hledat", $"{text[0]}.osobaId:" + Model.NameId);

                                <li>
                                    @Html.Raw(Devmasters.Lang.CS.Plural.GetWithZero((int)kv.Value,
                                        "<b>nevyskytuje</b> v insolvenčním rejstříku ",
                                        " vyskytuje v <a href='" + surl + "'><b>jedné insolvenci</b></a>",
                                        " vyskytuje v <a href='" + surl + "'><b>{0} insolvencích</b></a>",
                                        " vyskytuje v <a href='" + surl + "'><b>{0} insolvencích</b></a>"))
                                    jako @(text[1]).
                                </li>
                            }
                        </ul>
                    </p>
                }
                else
                {
                    <p>
                        @Model.FullName() se osobně nevyskytuje v insolvenčním rejstříku.
                    </p>
                }

                @if (insolv.Sum(m => m.Value) > 0)
                {
                    <p>
                        Společnosti, ve který se @Model.FullName() angažuje, se
                        <ul>
                            @foreach (var kv in insolv.OrderByDescending(m => m.Value))
                            {
                                var text = kv.Key.Split('|');
                                string surl = WebUtil.GetSearchUrl("/insolvence/hledat", $"osobaid{text[0]}:" + Model.NameId);

                                <li>
                                    @Html.Raw(Devmasters.Lang.CS.Plural.GetWithZero((int)kv.Value,
                                        "<b>nevyskytují</b> v insolvenčním rejstříku ",
                                        "vyskytují v <a href='" + surl + "'><b>jedné insolvenci</b></a>",
                                        "vyskytují v <a href='" + surl + "'><b>{0} insolvencích</b></a>",
                                        "vyskytují v <a href='" + surl + "'><b>{0} insolvencích</b></a>")) jako @text[1].
                                </li>
                            }
                        </ul>
                    </p>
                }


                <p class="text-center">
                    <a href="@(WebUtil.GetSearchUrl("/insolvence/hledat", $"osobaid:" + Model.NameId))" class="btn btn-hs btn-primary btn-sm my-3 position-relative">
                        Podrobnosti o insolvencích
                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                            @(HlidacStatu.Util.RenderData.NiceNumber(oinsDluznik.Total + oinsVeritel.Total + oinsSpravce.Total + insDluznik.Total + insVeritel.Total + insSpravce.Total))
                        </span>
                    </a>
                </p>


            </div>


            <hr/>
        }
    }

    @* ----- Veřejné zakázky -----*@
    @{
        laps.StopPreviousAndStartNextLap("verejne zakazky");
    }
    @{
        var resVZdodav = await VerejnaZakazkaRepo.Searching.SimpleSearchAsync("osobaiddodavatel:" + Model.NameId, null, 1, 0, "1");
        var resVZzadav = await VerejnaZakazkaRepo.Searching.SimpleSearchAsync("osobaidzadavatel:" + Model.NameId, null, 1, 0, "1");
        Dictionary<string, long> vzakaz = new();
        vzakaz.Add("dodavatel|dodavatel|dodavatele|dodavatelem", resVZdodav.Total);
        vzakaz.Add("zadavatel|zadavatel|zadavatele|zadavatelem", resVZzadav.Total);
    }
    @if (resVZdodav.Total + resVZzadav.Total > 0)
    {
        <div>
            <h4>Veřejné zakázky</h4>
            <p class="text-muted sub-header-info">
                Veřejné zakázky firem a organizací, ve kterých se angažuje @Model.FullName().
                Zakázky analyzujeme jak z věstníku veřejných zakázek, tak z profilů zadavatelů.
            </p>

            <div>
                Firmy navázané na @Model.FullName() jsme našli
                <ul>
                    @foreach (var kv in vzakaz.OrderByDescending(m => m.Value).Where(m => m.Value > 0))
                    {
                        var text = kv.Key.Split('|');
                        string surl = WebUtil.GetSearchUrl("/verejnezakazky/hledat", $"osobaid{text[0]}:" + Model.NameId);
                        if (kv.Value > 0)
                        {
                            <li>
                                @Html.Raw(Devmasters.Lang.CS.Plural.Get(kv.Value,
                                $"v <a href='{surl}'><b>jedné</b> veřejné zakázce</a> jako {text[2]}",
                                        $"v <a href='{surl}'><b>{{0}}</b> veřejných zakázkách</a> jako {text[2]}",
                                        $"v <a href='{surl}'><b>{{0}}</b> veřejných zakázkach</a> jako {text[2]}")).
                </li>
                                }
                    }
                </ul>
            </div>

            <p class="text-center">
                <a href="@(WebUtil.GetSearchUrl("/verejnezakazky/hledat", $"osobaid:" + Model.NameId))" class="btn btn-hs btn-primary btn-sm my-3 position-relative">
                    Podrobnosti o veřejných zakázkách
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                        @(HlidacStatu.Util.RenderData.NiceNumber(resVZdodav.Total + resVZzadav.Total))
                    </span>
                </a>
            </p>


        </div>
        <hr />
    }

    @{
        laps.StopPreviousAndStartNextLap("datasety");
    }

    @{
        var datasetsToSearch = DataSetDB.ProductionDataSets.Get();
        var dsQuery = $"( OsobaId:{Model.NameId} ) ";
        var dsSearch = await HlidacStatu.Datasets.Search.DatasetMultiResult.GeneralSearchAsync(dsQuery,
        datasets: datasetsToSearch,
        pageSize: 5);
    }
    @if (dsSearch.IsValid && dsSearch.Total > 0)
    {
        <div>
            <h4>@(Model.FullName()) v dalších databázích</h4>
            <p class="text-muted sub-header-info">
                Na hlídači máme kromě hlavních databází @(DataSetDB.AllDataSets.Get()?.Count().ToString() ?? "") dalších
                menších databází.
                Zde vám podrobně vypíšeme, co jsme v nich o @Model.FullName() našli.
            </p>
            <p>
                @(HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(dsSearch.Total))
                @Html.Raw(Devmasters.Lang.CS.Plural.Get(dsSearch.Results.Count(m => m.Total > 0), "v <b>jedné</b> databázi", "ve <b>{0} databázích</b>", "v <b>{0} databázích</b>")).
                @if (dsSearch.Results.Count(m => m.Total > 0) > 1)
                {
            <text>
                Nejvíce v
                <ul>
                    @Html.Raw(string
                                        .Join("", dsSearch.Results.Where(m => m.Total > 0)
                                        .OrderByDescending(o => o.Total)
                                        .Take(4)
                                        .Select(m => $"<li><a href='{m.DataSet.DatasetSearchUrl(m.RenderQuery())}'>{m.DataSet.RegistrationAsync().GetAwaiter().GetResult().name}</a> ({HlidacStatu.Util.RenderData.NiceNumber(m.Total)})</li>"))
                                        )
                </ul>
            </text>
                        }
            </p>


        </div>


        <p class="text-center">
            <a href="/osoba/dalsidatabaze/@(Model.NameId)" class="btn btn-hs btn-primary btn-sm my-3 position-relative">
                Podrobnosti o osobě a navázaných organizacích v dalších databázích
                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                    @(HlidacStatu.Util.RenderData.NiceNumber(dsSearch.Total))
                </span>
            </a>
        </p>

        <hr />
    }

    @{
        laps.StopAll();
    }

    <!--

    RenderTimes:
    @Html.Raw(laps.ToString())
        -->
</div>