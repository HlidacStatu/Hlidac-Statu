@using HlidacStatu.Extensions
@using HlidacStatu.Repositories
@using HlidacStatu.Datastructures.Graphs
@model HlidacStatu.Entities.Osoba

@{
    Layout = null;

    Relation.AktualnostType aktualnost = Relation.AktualnostType.Nedavny;
    if (EnumsNET.Enums.TryParse<Relation.AktualnostType>(ViewBag.Aktualnost?.ToString(), true, out Relation.AktualnostType xen))
    {
        aktualnost = xen;
    }


}


@* První sloupec *@
<div class="col-sm-7 col-xs-12 order-1">

    <p>
        <a href="@Url.Action("Vazby", new { id = Model.NameId, aktualnost = Relation.AktualnostType.Aktualni })"
           class="btn btn-@(aktualnost == Relation.AktualnostType.Aktualni ? "success" : "primary") btn-sm" role="button">
            @(aktualnost == Relation.AktualnostType.Aktualni ? "Zobrazujeme" : "Ukázat") pouze aktuální vazby
        </a>
        <a href="@Url.Action("Vazby", new { id = Model.NameId, aktualnost = Relation.AktualnostType.Nedavny })"
           class="btn btn-@(aktualnost == Relation.AktualnostType.Nedavny ? "success" : "primary") btn-sm" role="button">
            @(aktualnost == Relation.AktualnostType.Nedavny ? "Zobrazujeme" : "Ukázat") aktuální a nedávno skončené vazby
        </a>
        <a href="@Url.Action("Vazby", new { id = Model.NameId, aktualnost = Relation.AktualnostType.Libovolny })"
           class="btn btn-@(aktualnost == Relation.AktualnostType.Libovolny ? "success" : "primary") btn-sm" role="button">
            @(aktualnost == Relation.AktualnostType.Libovolny ? "Zobrazujeme" : "Ukázat") všechny vazby včetně historických
        </a>
    </p>


    <p style="padding-top:30px;">
        @Html.Raw(
            HlidacStatu.Repositories.Graph.TiskVazeb(
                Model.Jmeno,
                Model.AktualniVazby(aktualnost),
                Relation.TiskEnum.Html
            )
        )
    </p>


    <p style="padding-top:30px;">
    </p>
    @{
        var data = Model.AktualniVazby(aktualnost)
                    .Where(v => v.To != null && v.To.Type == HlidacStatu.Datastructures.Graphs.Graph.Node.NodeType.Company)
                    .GroupBy(f => f.To.Id, v => v, (ico, v) => new
                    {
                        ICO = ico,
                        FirmaName = v.First().To.PrintName(),//HlidacStatu.Lib.Data.External.FirmyDB.NameFromIco(ico, true),
                        VazbyPerIco = Model.VazbyProICO(ico),
                        stat = Firmy.Get(ico).StatistikaRegistruSmluv()
                    })
                    .OrderByDescending(m => m.stat.Summary().CelkovaHodnotaSmluv).ThenBy(m => m.ICO).ToList();


    }
    <p style="padding-top:30px;">
        @foreach (var vPerIco in data)
        {
            <div>
                <h4>@vPerIco.FirmaName</h4>
                @Html.RenderVazby(vPerIco.VazbyPerIco)


            </div>
        }
    </p>
</div>

