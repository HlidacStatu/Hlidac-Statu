@using HlidacStatu.Extensions
@using HlidacStatu.Repositories
@using HlidacStatu.DS.Graphs
@using HlidacStatu.Repositories.Statistics
@using HlidacStatu.XLib
@model HlidacStatu.Entities.Osoba

@{
    Layout = null;

    Relation.AktualnostType aktualnost = Relation.AktualnostType.Nedavny;
    if (EnumsNET.Enums.TryParse<Relation.AktualnostType>(ViewBag.Aktualnost?.ToString(), true, out Relation.AktualnostType xen))
    {
        aktualnost = xen;
    }

    var statistics = Model.StatistikaRegistrSmluv(aktualnost);
    var vazbyPodleAktualnosti = Model.AktualniVazby(aktualnost);

}


@* První sloupec *@
<div class="col-sm-7 col-xs-12 order-1">

    <p>
        <a href="@Url.Action("Vazby", new { id = Model.NameId, aktualnost = Relation.AktualnostType.Aktualni })"
           class="btn btn-@(aktualnost == Relation.AktualnostType.Aktualni ? "success" : "primary") btn-sm" role="button">
            @(aktualnost == Relation.AktualnostType.Aktualni ? "Zobrazujeme" : "Ukázat") pouze aktuální vazby
        </a>
        <a href="@Url.Action("Vazby", new { id = Model.NameId, aktualnost = Relation.AktualnostType.Nedavny })"
           class="btn btn-@(aktualnost == Relation.AktualnostType.Nedavny ? "success" : "primary") btn-sm" role="button">
            @(aktualnost == Relation.AktualnostType.Nedavny ? "Zobrazujeme" : "Ukázat") vazby za posledních 5 let včetně aktuálních
        </a>
        <a href="@Url.Action("Vazby", new { id = Model.NameId, aktualnost = Relation.AktualnostType.Libovolny })"
           class="btn btn-@(aktualnost == Relation.AktualnostType.Libovolny ? "success" : "primary") btn-sm" role="button">
            @(aktualnost == Relation.AktualnostType.Libovolny ? "Zobrazujeme" : "Ukázat") všechny vazby včetně historických
        </a>
    </p>


    @if (statistics.SoukromeFirmy.Count > 0 && statistics.SmlouvyStat_SoukromeFirmySummary().Summary().PocetSmluv > 0)
    {
        <p>
            @switch (aktualnost)
            {
                case Relation.AktualnostType.Libovolny:
                    <text>
                        @Model.FullName() se angažuje nebo angažoval v @Devmasters.Lang.CS.Plural.Get(statistics.SoukromeFirmy.Count, "jedné soukromé firmě", "{0} soukromých firmách", "{0} soukromých firmách")
                    </text>
                    break;
                case Relation.AktualnostType.Aktualni:
                    <text>
                        @Model.FullName() se angažuje  v @Devmasters.Lang.CS.Plural.Get(statistics.SoukromeFirmy.Count, "jedné soukromé firmě", "{0} soukromých firmách", "{0} soukromých firmách")
                    </text>

                    break;
                default:
                    <text>
                        @Model.FullName() se angažuje, nebo se v posledních 5 letech angažoval v @Devmasters.Lang.CS.Plural.Get(statistics.SoukromeFirmy.Count, "jedné soukromé firmě", "{0} soukromých firmách", "{0} soukromých firmách")
                    </text>

                    break;
            }
            @if (statistics.SmlouvyStat_NeziskovkyCount() > 0)
            {
                <span>(z toho v @Devmasters.Lang.CS.Plural.Get(statistics.SmlouvyStat_NeziskovkyCount(), "jedné neziskovce", "{0} neziskovkách", "{0} neziskovkách")):</span>
            }
            <ul>
                @foreach (var stat in statistics.SoukromeFirmy
               .OrderByDescending(o => o.Value.Summary().CelkovaHodnotaSmluv)               
               )
                {
                    <li>
                        <a asp-controller="Subjekt" asp-action="Index" asp-route-id="@stat.Key">
                            @Firmy.GetJmeno(stat.Key)
                        </a>
                        (@Html.Raw(stat.Value.Summary().ToNiceLinkString(null,true, customUrl: $"hledat?q=ico:{stat.Key}")) od 2016
                        @if (stat.Value.CurrentSeasonStatistics().PocetSmluv > 0)
                        {
                            @($", {stat.Value.CurrentSeasonStatistics().ToNiceLinkString(null, false)} v {stat.Value.CurrentSeasonYear()}")
                        })
                    </li>
                }
            </ul>

        </p>
    }
    else if (statistics.SoukromeFirmy.Count > 0 && statistics.SmlouvyStat_SoukromeFirmySummary().Summary().PocetSmluv == 0)
    {

        <p>
            @switch (aktualnost)
            {
                case Relation.AktualnostType.Libovolny:
                    <text>
                        @Model.FullName() se angažuje nebo se angažoval v @Devmasters.Lang.CS.Plural.Get(statistics.SoukromeFirmy.Count, "jedné soukromé firmě, která neobchoduje se státem", "{0} soukromých firmách, které neobchodují se státem", "{0} soukromých firmách, které neobchodují se státem").
                    </text>
                    break;
                case Relation.AktualnostType.Aktualni:
                    <text>
                        @Model.FullName() se angažuje v @Devmasters.Lang.CS.Plural.Get(statistics.SoukromeFirmy.Count, "jedné soukromé firmě, která neobchoduje se státem", "{0} soukromých firmách, které neobchodují se státem", "{0} soukromých firmách, které neobchodují se státem").
                    </text>

                    break;
                default:
                    <text>
                        @Model.FullName() se angažuje nebo se v posledních 5 letech angažoval v @Devmasters.Lang.CS.Plural.Get(statistics.SoukromeFirmy.Count, "jedné soukromé firmě, která neobchoduje se státem", "{0} soukromých firmách, které neobchodují se státem", "{0} soukromých firmách, které neobchodují se státem").
                    </text>

                    break;
            }
        </p>
    }

    @if (statistics.StatniFirmy.Count > 0)
    {
        <p>
            @switch (aktualnost)
            {
                case Relation.AktualnostType.Libovolny:
                    <text>
                        @Model.FullName() se angažuje nebo angažoval v @Devmasters.Lang.CS.Plural.Get(statistics.StatniFirmy.Count, "jedné organizaci", "{0} organizacích", "{0} organizacích"):
                    </text>
                    break;
                case Relation.AktualnostType.Aktualni:
                    <text>
                        @Model.FullName() se angažuje v @Devmasters.Lang.CS.Plural.Get(statistics.StatniFirmy.Count, "jedné organizaci", "{0} organizacích", "{0} organizacích"):
                    </text>

                    break;
                default:
                    <text>
                        @Model.FullName() se angažuje, nebo se v posledních 5 letech angažoval v @Devmasters.Lang.CS.Plural.Get(statistics.StatniFirmy.Count, "jedné organizaci", "{0} organizacích", "{0} organizacích"):
                    </text>

                    break;
            }

            <ul>
                @foreach (var stat in statistics.StatniFirmy
               .OrderByDescending(o => o.Value.CurrentSeasonStatistics().CelkovaHodnotaSmluv)
               )
                {
                    <li>
                        <a asp-controller="Subjekt" asp-action="Index" asp-route-id="@stat.Key">
                            @Firmy.GetJmeno(stat.Key)
                        </a> (@Html.Raw(stat.Value.Summary().ToNiceLinkString(null,true, customUrl: $"hledat?q=ico:{stat.Key}")) od 2016
                        @if (stat.Value.CurrentSeasonStatistics().PocetSmluv > 0)
                        {
                            @($", {stat.Value.CurrentSeasonStatistics().ToNiceLinkString(null, false)} v {stat.Value.CurrentSeasonYear()}")
                        }
                        )
                    </li>
                }
            </ul>
        </p>
    }

    <hr />

    <p style="padding-top:30px;">
        @Html.Raw(
        HlidacStatu.Repositories.Graph.TiskVazeb(
        Model.FullName(),Model.VazbyRootEdge(),
        vazbyPodleAktualnosti,
        Relation.TiskEnum.Html
        )
        )
    </p>


    <p style="padding-top:30px;">
    </p>
    <h2>Podrobný výpis vazeb</h2>
    @{
        var data = vazbyPodleAktualnosti
        .Where(v => v.To != null && v.To.Type == HlidacStatu.DS.Graphs.Graph.Node.NodeType.Company)
        .GroupBy(f => f.To.Id, v => v, (ico, v) => new
        {
            ICO = ico,
            FirmaName = v.First().To.PrintName(),//HlidacStatu.Lib.Data.External.FirmyDB.NameFromIco(ico, true),
            VazbyPerIco = Model.VazbyProICO(ico),
            stat = Firmy.Get(ico).StatistikaRegistruSmluv()
        })
        .OrderByDescending(m => m.stat.Summary().CelkovaHodnotaSmluv).ThenBy(m => m.ICO).ToList();


    }
    <p style="padding-top:30px;">
        @foreach (var vPerIco in data)
        {
            <div>
                <h4><a href="/subjekt/@(vPerIco.ICO)">@vPerIco.FirmaName</a></h4>
                @Html.RenderVazby(vPerIco.VazbyPerIco)


            </div>
        }
    </p>
    <partial name="PolitikDisclaimer" view-data="ViewData" />

</div>

