@using System.Linq
@using HlidacStatu.Entities
@using HlidacStatu.Entities.Analysis
@using HlidacStatu.Extensions
@using HlidacStatu.XLib.Render
@using HlidacStatu.Repositories
@using HlidacStatu.XLib

@{
    Layout = "_ReportLayout";

    var tableSloupce = new[]
    {
        new ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>.Column()
        {
            Name = "Úřad",
            HtmlRender = (s) =>
            {
                var f = Firmy.Get(s.Ico);
                return string.Format("<a href='/subjekt/{0}'>{1}</a> <br/> {2}", s.Ico,
                    f.Jmeno,
                    f.StatistikaRegistruSmluv().Summary().ToNiceString(null, true, "/subjekt/" + s.Ico)
                    );
            },
            OrderValueRender = (s) => { return Firmy.GetJmeno(s.Ico); }
        },
        new ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>.Column()
        {
            Name = "Počet smluv",
            HtmlRender = (s) => { return s.Pocet.ToString(); },
            OrderValueRender = (s) => { return s.Pocet.ToString(); }
        },
        new ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>.Column()
        {
            Name = "% všech smluv",
            HtmlRender = (s) =>
            {
                var stat = Firmy.Get(s.Ico).StatistikaRegistruSmluv();
                if (stat.Summary().PocetSmluv > 0)
                {
                    return ((double)s.Pocet / (double)stat.Summary().PocetSmluv).ToString("P2");
                }
                else
                    return "0";
            },
            OrderValueRender = (s) =>
            {
                var stat = Firmy.Get(s.Ico).StatistikaRegistruSmluv();
                return HlidacStatu.Util.RenderData.OrderValueFormat(stat.Summary().PocetSmluv);
            }
        },
        new ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>.Column()
        {
            Name = "Celková hodnota smluv",
            HtmlRender = (s) => { return Smlouva.NicePrice(s.CelkemCena, html: true, shortFormat: true); },
            OrderValueRender = (s) => { return HlidacStatu.Util.RenderData.OrderValueFormat(s.CelkemCena); }
        },
        new ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>.Column()
        {
            Name = "% hodnoty všech smluv",
            HtmlRender = (s) =>
            {
                var stat = Firmy.Get(s.Ico).StatistikaRegistruSmluv();
                if (stat.Summary().CelkovaHodnotaSmluv > 0)
                {
                    return (s.CelkemCena / stat.Summary().CelkovaHodnotaSmluv).ToString("P1");
                }
                else
                    return "0";
            },
            OrderValueRender = (s) =>
            {
                var stat = Firmy.Get(s.Ico).StatistikaRegistruSmluv();
                return HlidacStatu.Util.RenderData.OrderValueFormat((stat.Summary().CelkovaHodnotaSmluv));
            }
        },
        new ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>.Column()
        {
            Name = "Dodavatelé",
            HtmlRender = (s) =>
            {
                System.Text.StringBuilder sb = new();
                sb.Append("<ul>");
                int previewCount = 3;
                foreach (var f in s.Detail.OrderByDescending(m => m.CelkemCena).Take(previewCount))
                {
                    sb.AppendFormat("<li><a href='/Subjekt/{1}'>{2}</a> - <a href='/HledatSmlouvy?Q=icoPlatce:{0}%20AND%20icoPrijemce:{1}'>{3}</a></li>",
                        s.Ico, f.Item, Firmy.GetJmeno(f.Item)
                        , f.ToNiceString(null, false, string.Format("", s.Ico, f.Item))
                        );

//sb.AppendFormat("<li><a href='/HledatSmlouvy?Q=icoPlatce:{0}%20AND%20icoPrijemce:{1}'>{2}</a> {3}</li>"
//    ,d.Ico, f.Ico, f.Name, f.StatForIco.ToNiceString("",false)
//    );
                }
                sb.Append("</ul>");
                if (s.Detail.Count > previewCount)
                {
                    string rand = Guid.NewGuid().ToString("N");
                    sb.Append("<a class='btn btn-link' role='button' data-bs-toggle='collapse' href='#allData" + rand + "' aria-expanded='false' aria-controls='allData'>Ukázat všechny</a>");
                    sb.Append("<ul class='collapse' id='allData" + rand + "'>");
                    foreach (var f in s.Detail.OrderByDescending(m => m.CelkemCena).Skip(previewCount))
                    {
                        sb.AppendFormat("<li><a href='/Subjekt/'{1}>{2}</a> - <a href=''>{3}</a></li>"
                            , s.Ico, f.Item, Firmy.GetJmeno(f.Item)
                            , f.ToNiceString(null, false, string.Format("/HledatSmlouvy?Q=icoPlatce:{0}%20AND%20icoPrijemce:{1}", s.Ico, f.Item))
                            );

//sb.AppendFormat("<li><a href='/HledatSmlouvy?Q=icoPlatce:{0}%20AND%20icoPrijemce:{1}'>{2}</a> {3}</li>"
//    ,d.Ico, f.Ico, f.Name, f.StatForIco.ToNiceString("",false)
//    );
                    }
                    sb.Append("</ul>");
                }
                return sb.ToString();
            },
        }
    };


    var data = HlidacStatu.Repositories.StaticData.UradyObchodujiciSFirmami_s_vazbouNaPolitiky_nedavne_Cache.Get();

    ReportDataSource<BasicDataForSubject<List<BasicData<string>>>> rds1 =
        new(tableSloupce);
    //foreach (var bf in data.SoukromeFirmy.Where(o => o.StatForIco.CelkemCena > 500000))
    foreach (var bf in data.SoukromeFirmy.Where(o => o.Pocet > 7).OrderByDescending(o => o.CelkemCena).Take(500))
    {
        rds1.AddRow(bf);
    }


        @(ChartUtilExtensions.RenderReportTable<BasicDataForSubject<List<BasicData<string>>>>("",
            new ReportModel.QueueItem()
            {
                Type = ReportModel.QueueItem.types.table,
                Data = rds1
            }, HtmlExtensions.DatatableOptions(orderColumnIdx: 2, orderDirection: "desc"), "t1")
        )
}