@using Devmasters.Enums
@model HlidacStatu.Repositories.Searching.SmlouvaSearchResult
@{
    Devmasters.DT.StopWatchLaps viewRenderTimes = new Devmasters.DT.StopWatchLaps();
    Devmasters.DT.StopWatchLaps.Interval viewRenderTimesInt = null;
    viewRenderTimesInt = viewRenderTimes.AddAndStartLap("smlouvy results");

}
<table class="table table-hover">
    <thead>
    <tr>
        <th>&nbsp;</th>
        <th class="d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-xxl-table-cell">Smlouva podepsána</th>
        @if (Model.SmallRender == false)
        {
            <th class="d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-xxl-table-cell">Smlouva zveřejněna</th>
        }
        <th title="Publikující smluvní strana">Plátce</th>
        <th title="Smluvní strana/y">Dodavatel/é</th>
        <th>Maximální hodnota<br/>smlouvy s DPH</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model?.ElasticResults.Hits)
    {
        viewRenderTimesInt = viewRenderTimes.AddAndStartLap("smlouvy results render 0 id:"+ item.Id );

        var rec = item.Source;

        var confLevel = rec.GetConfidenceLevel();
        string bgLevel = "", iconLevel = "";


        if (confLevel > HlidacStatu.Entities.Issues.ImportanceLevel.Formal)
        {
            bgLevel = HlidacStatu.Entities.Issues.Importance.GetCssClass(confLevel, true);
            iconLevel = HlidacStatu.Entities.Issues.Importance.GetIcon(confLevel);
        }
        viewRenderTimesInt.Stop(); viewRenderTimesInt = viewRenderTimes.AddAndStartLap("smlouvy results render 1 id:"+ item.Id );

        <tr class="bg@(bgLevel) first">
            <td>
                <span style='white-space:nowrap'>
                    @Html.Raw(iconLevel)<add-bookmark item="rec"></add-bookmark>&nbsp;
                    <a href="@rec.GetUrl(true, Model.Q)">
                        <span class="d-none d-sm-flex d-md-flex d-lg-flex d-lx-flex"><b>@rec.Id</b></span>
                        <span style='white-space:nowrap' class="d-visible d-sm-none d-md-none d-lg-none d-lx-none">
                            <i class="far fa-file-alt"></i>
                        </span>
                    </a>
                </span>
            </td>
            @{
                    viewRenderTimesInt.Stop(); viewRenderTimesInt = viewRenderTimes.AddAndStartLap("smlouvy results render 2 id:" + item.Id);
            }
            <td class="d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-xxl-table-cell">@rec.datumUzavreni.ToShortDateString()</td>
            @if (Model.SmallRender == false)
            {
                <td class="d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-xxl-table-cell">
                    @if (rec.platnyZaznam)
                    {
                        @rec.casZverejneni.ToShortDateString()
                    }
                    else
                    {
                        <span class="text-warning">Zneplatněná smlouva</span>
                    }
                </td>
            }
            @{
                    viewRenderTimesInt.Stop(); viewRenderTimesInt = viewRenderTimes.AddAndStartLap("smlouvy results render 3 id:" + item.Id);
            }
            <td>
                @if (!string.IsNullOrEmpty(rec.Platce?.ico))
                {
                    @(await Html.KIndexLabelLinkAsync(rec.Platce.ico))<a href="/Subjekt/@rec.Platce.ico">@rec.Platce.nazev</a>
                }
                else
                {
                    @(rec.Platce?.nazev)
                }
            </td>
                @{
                    viewRenderTimesInt.Stop(); viewRenderTimesInt = viewRenderTimes.AddAndStartLap("smlouvy results render 4 id:" + item.Id);
                }
                <td>
                @if (rec.Prijemce.Count() == 1)
                {
                    if (!string.IsNullOrEmpty(rec.Prijemce[0].ico))
                    {
                        @(await Html.KIndexLabelLinkAsync(rec.Prijemce[0].ico))<a href="/Subjekt/@rec.Prijemce[0].ico">@rec.Prijemce[0].nazev</a>
                    }
                    else
                    {
                        @rec.Prijemce[0].nazev
                    }
                }
                else
                {
                    <ol>
                        @foreach (var subj in rec.Prijemce.Take(2))
                        {
                            if (!string.IsNullOrEmpty(subj.ico))
                            {
                                <li>
                                    @(await Html.KIndexLabelLinkAsync(subj.ico))<a href="/Subjekt/@subj.ico">@subj.nazev</a>
                                </li>
                            }
                            else
                            {
                                <li>@subj.nazev</li>
                            }
                        }
                    </ol>
                    @(rec.Prijemce.Count() > 2 ? Devmasters.Lang.CS.Plural.Get(rec.Prijemce.Count() - 2, "+{0} dodavatel;+{0} další dodavatelé;+{0} dalších dodavatelů") : "")
                }
            </td>
            @{
                    viewRenderTimesInt.Stop(); viewRenderTimesInt = viewRenderTimes.AddAndStartLap("smlouvy results render 5 id:" + item.Id);
            }
            <td>@Html.Raw(rec.NicePrice(html: true))</td>

        </tr>
        <tr class="bg@(bgLevel) last">
            <td></td>
                @{
                    viewRenderTimesInt.Stop(); viewRenderTimesInt = viewRenderTimes.AddAndStartLap("smlouvy results render 2-1 id:" + item.Id);
                }

            <td colspan="@(Model.SmallRender ? "5" : "6")">
                @Devmasters.TextUtil.ShortenText(rec.predmet, 200)
                @if (Model.SmallRender && rec.GetRelevantClassification().Any())
                {
                    <span class="text-success">&nbsp;|&nbsp;<b>Obor</b>: @(rec.GetRelevantClassification().First().ClassifTypeName())</span>
                }
                else if (rec.GetRelevantClassification().Any())
                {
                    <span class="text-success">&nbsp;|&nbsp;<b>Obor smlouvy</b>: @(string.Join(" / ", rec.GetRelevantClassification().Select(m => m.ClassifTypeName())))</span>
                }
            </td>
                @{
                    viewRenderTimesInt.Stop(); 
                }
            </tr>

        if (Model.Chyby)
        {
            viewRenderTimesInt = viewRenderTimes.AddAndStartLap("smlouvy results render 3-1 id:" + item.Id);
            if (rec.Issues != null && rec.Issues.Where(m => m.Public).Count() > 0)
            {
                <tr class="bg@(bgLevel) last">
                    <td class="joined">&nbsp;</td>
                    <td colspan="5" class="joined">
                        <h5>
                            Počet nedostatků: @(rec.Issues.Where(m => m.Public).Count())
                            <button class="btn btn-info" type="button" data-bs-toggle="collapse" data-bs-target="#collapseRec_@(rec.Id)" aria-expanded="false" aria-controls="collapseRec_@(rec.Id)">
                                Ukázat
                            </button>
                        </h5>
                        <div class="collapse issueCol" id="collapseRec_@(rec.Id)">

                            <ul class="list-group">

                                @foreach (var iss in rec.Issues.Where(m => m.Public).OrderByDescending(m => m.Importance))
                                {
                                    if (iss.Public && iss.Importance != HlidacStatu.Entities.Issues.ImportanceLevel.NeedHumanReview)
                                    {
                                        <li title="@iss.Importance.ToNiceDisplayName()" class="list-group-item list-group-item@(HlidacStatu.Entities.Issues.Importance.GetCssClass(iss.Importance, true))">
                                            <span class="fas fa-eye" style="font-size:75%;" aria-hidden="true"></span>&nbsp;@iss.Title : @iss.TextDescription
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    </td>
                    <td class="joined">&nbsp;</td>
                </tr>
            }
            viewRenderTimesInt.Stop(); 

        }
        if (Model.AdditionalRender != null)
        {
            viewRenderTimesInt = viewRenderTimes.AddAndStartLap("smlouvy results render 3-1 id:" + item.Id);
            @Html.Raw(Model.AdditionalRender(rec))
            viewRenderTimesInt.Stop();
        }

    }
    </tbody>
</table>
@{
    viewRenderTimesInt = viewRenderTimes.AddAndStartLap("smlouvy results pagination:" );
}
<partial name="SearchResults/Pagination" model="@(new PaginationViewModel(Model, "/HledatSmlouvy", exportType: "smlouvy"))"/>

@{
    viewRenderTimesInt.Stop();
}
@Html.Raw("<!-- Smlouvy result times\n"+viewRenderTimes.ToString() + " -->");
