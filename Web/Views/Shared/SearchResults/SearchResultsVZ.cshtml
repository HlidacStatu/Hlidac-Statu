@using Devmasters.Enums
@model HlidacStatu.Repositories.Searching.VerejnaZakazkaSearchData

<table class="table table-hover">
    <thead>
    <tr>
        <th>Zakázka</th>
        <th class="d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-xxl-table-cell">Poslední změna</th>
        <th class="d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-xxl-table-cell">Lhůta pro nabídky</th>
        <th>Zadavatel</th>
        <th class="d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-xxl-table-cell">Dodavatelé</th>
        <th>Název</th>
        <th>Cena</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.ElasticResults.Hits.Select(m => m.Source))
    {
        <tr class="first">
            <td style="white-space: nowrap;">
                <span style='white-space:nowrap'>
                    <add-bookmark item="item"></add-bookmark>&nbsp;
                    @if (LimitedAccess.IsAuthenticatedOrSearchCrawler(Context.Request))
                    {
                        <a href="@item.GetUrl(true, Model.Q)">                            
                            <span class="d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-xxl-table-cell">@item.EvidencniCisloZakazky</span>
                            <span class="d-visible d-sm-none d-md-none d-lg-none d-lx-none">
                                <i class="far fa-file-alt"></i>
                            </span>

                        </a>
                    }
                    else
                    {
                        <a href='#' data-bs-toggle='modal' data-bs-target='#VZInfoAnon' data-url='@item.GetUrl(true, Model.Q)'>                          
                            <span class="d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-xxl-table-cell">@item.EvidencniCisloZakazky</span>
                            <span class="d-visible d-sm-none d-md-none d-lg-none d-lx-none">
                                <i class="far fa-file-alt"></i>
                            </span>                        </a>
                    }
                </span>
            </td>
            <td class="d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-xxl-table-cell">
                @(item.PosledniZmena?.ToShortDateString())
            </td>
            <td class="d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-xxl-table-cell">
                @(item.LhutaDoruceni?.ToShortDateString() ?? "neuvedena")
            </td>
            <td>
                @if (item.Zadavatel != null)
                {
                    if (HlidacStatu.Util.DataValidators.CheckCZICO(item.Zadavatel.ICO))
                    {
                        @(await Html.KIndexLabelLinkAsync(item.Zadavatel.ICO))<a href="/subjekt/@item.Zadavatel.ICO">@item.Zadavatel.Jmeno</a>
                    }
                    else
                    {
                        <span>@item.Zadavatel.Jmeno</span>
                    }
                }
            </td>
            <td class="d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-xxl-table-cell">
                @if (item.Dodavatele != null && item.Dodavatele.Count() > 0)
                {
                    foreach (var d in item.Dodavatele.Take(2))
                    {
                        if (HlidacStatu.Util.DataValidators.CheckCZICO(d.ICO))
                        {
                            @(await Html.KIndexLabelLinkAsync(d.ICO))<a href="/subjekt/@d.ICO">@d.Jmeno</a>
                            <br/>
                        }
                        else
                        {
                            <span>@d.Jmeno</span>
                            <br/>
                        }
                    }
                    @(item.Dodavatele.Count() > 2 ? Devmasters.Lang.CS.Plural.Get(item.Dodavatele.Count() - 2, "+{0} dodavatel;+{0} další dodavatelé;+{0} dalších dodavatelů") : "")
                }
            </td>
            <td>
                @Devmasters.TextUtil.ShortenText(item.NazevZakazky, 50)
            </td>
            <td class="number">
                <b>
                    @if (item.KonecnaHodnotaBezDPH.HasValue)
                    {
                        @Html.Raw(HlidacStatu.Util.RenderData.NicePriceHtml(item.KonecnaHodnotaBezDPH.Value, shortFormat: Model.SmallRender))
                    }
                    else if (item.OdhadovanaHodnotaBezDPH.HasValue)
                    {
                        <span>odhad.cena </span>
                        @Html.Raw(HlidacStatu.Util.RenderData.NicePriceHtml(item.OdhadovanaHodnotaBezDPH.Value, shortFormat: Model.SmallRender))
                    }
                    else
                    {
                        <span></span>
                    }
                </b>
            </td>
        </tr>
        if (Model.SmallRender == false)
        {
            <tr class="last d-none d-sm-table-row d-md-table-row d-lg-table-row d-xl-table-row d-xxl-table-row">
                <td></td>
                <td colspan="2">
                    <span class="small">@(item.LastestFormular()?.DruhFormulare().ToNiceDisplayName())</span>
                </td>
                <td colspan="4">
                    <span class="small">
                        @Devmasters.TextUtil.ShortenText(item.PopisZakazky, 900, "...")
                    </span>
                </td>
            </tr>
        }
    }
    </tbody >
</table >
<partial name="SearchResults/Pagination" model="@(new PaginationViewModel(Model, "/VerejneZakazky/Hledat", exportType: "zakazky"))"/>