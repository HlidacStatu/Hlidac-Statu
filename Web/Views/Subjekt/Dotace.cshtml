@model Firma 
@using System.Linq;
@using HlidacStatu.DS.Graphs
@using HlidacStatu.Extensions
@using HlidacStatu.XLib.Render;
@using HlidacStatu.Entities;
@using HlidacStatu.Repositories

@{
    Layout = null;

    //graph
    string companySubsidiesTitle = "Přehled čerpání dotací";
    var companyGraphData = new Series[]
    {
        new()
        {
            Name = "Celkem Kč",
            Type = Series.SeriesType.column,
            Data = Model.StatistikaDotaci()
                .Where(x => x.Year > 0)
                .OrderBy(x => x.Year)
                .Select(x => new SeriesData(x.Year, x.Value.CelkemPrideleno)).ToArray(),
            SeriesTooltip = new SeriesTooltip()
            {
                ValueSuffix = " Kč"
            },
        },

    };

    var reportData = new ReportDataSource<(int Rok, Firma.Statistics.Subsidy Dotace)> (
        new ReportDataSource<(int Rok, Firma.Statistics.Subsidy Dotace)>.Column[]
        {
            new()
            {
                Name = "Rok",
                CssClass = "number",
                HtmlRender = (x) => x.Rok.ToString(),
                TextRender = (x) => x.Rok.ToString()

            },
            new()
            {
                Name = "Čerpáno",
                TextRender = (x) => $"{x.Dotace.CelkemPrideleno.ToString("N0")} Kč",
                HtmlRender = (x) => $"{x.Dotace.CelkemPrideleno.ToString("N0")}&nbsp;Kč",
                OrderValueRender = (x) => HlidacStatu.Util.RenderData.OrderValueFormat(x.Dotace.CelkemPrideleno),
                CssClass = "number"
            },
            new()
            {
                Name = "Detaily",
                HtmlRender = (x) =>
                $"<a href=\"/dotace/hledat?Q=ico:{Model.ICO} AND rozhodnuti.cerpani.guessedYear:{x.Rok}\">Dotace za rok {x.Rok}</a>"
            }
        }
    );

    foreach (var dot in Model.StatistikaDotaci().Where(d => d.Value.CelkemPrideleno > 0).OrderBy(d=> d.Year))
    {
        reportData.AddRow(dot);
    }
    reportData.Title = companySubsidiesTitle;



    //holding graf a tabulka
    string holdingSubsidiesTitle = $"Přehled čerpání dotací {(Model.JsemOVM() ? "úřadu včetně podřízených organizací" : "holdingu")}";
    var holdingFirmy = Model.Holding(Relation.AktualnostType.Nedavny).ToList();
    //holdingFirmy.Add(Model);

    var holdingFirmyWithSubsidies = holdingFirmy.Where(c => c.StatistikaDotaci().HasStatistics).Append(Model).ToList();
    int subCompaniesWithSubsidiesCount = holdingFirmyWithSubsidies.Count() - 1;

    var holdingStats = Model.HoldingStatistikaDotaci(Relation.AktualnostType.Nedavny);   

    var holdingGraphData = new Series[]
    {
        new()
        {
            Name = "Celkem Kč",
            Type = Series.SeriesType.column,
            Data = holdingStats
                .Where(x => x.Year > 0)
                .OrderBy(x => x.Year)
                .Select(x => new SeriesData(x.Year, x.Value.CelkemPrideleno)).ToArray(),
            SeriesTooltip = new SeriesTooltip()
            {
                ValueSuffix = " Kč"
            }
        },

    };

    //tabulka
    var holdingReportData = new ReportDataSource<Firma>(
        new ReportDataSource<Firma>.Column[]
        {
        new()
        {
            Name = "Subjekt",
            TextRender = (x) => x.Jmeno,
            HtmlRender = (x) => x.Jmeno,
        },
        new()
        {
            Name = "Suma",
            TextRender = (x) => $"{x.StatistikaDotaci().Sum(s => s.CelkemPrideleno).ToString("N0")} Kč",
            HtmlRender = (x) => $"{x.StatistikaDotaci().Sum(s => s.CelkemPrideleno).ToString("N0")}&nbsp;Kč",
            OrderValueRender = (x) => HlidacStatu.Util.RenderData.OrderValueFormat(x.StatistikaDotaci().Sum(s => s.CelkemPrideleno)),
            CssClass = "number"
        },
        new()
        {
            Name = "Detaily",
            HtmlRender = (x) =>
            $"<a href=\"/dotace/hledat?Q=ico:{x.ICO}\">Dotace pro {x.Jmeno}</a>"
        }
        }
    );
    foreach (var dot in holdingFirmyWithSubsidies)
    {
        holdingReportData.AddRow(dot);
    }
    holdingReportData.Title = holdingSubsidiesTitle;

    string dataTableOptions = @"{
            'language': {
            'url': '//cdn.datatables.net/plug-ins/1.13.4/i18n/cs.json'
        },
        'order': [],
        'lengthChange': false,
        'pageLength': 6,
        'info': false,
        'filter': true,
        }";
}


    @* První sloupec *@
    <div class="col-sm-7 col-xs-12 order-1">
        <div>
            <h4>Souhrn</h4>
            @{

                string durl = "/dotace/hledat?Q=ico%3A+" + Model.ICO;
                var dotaceSuma = Model.StatistikaDotaci().Sum(s => s.CelkemPrideleno);
                var dotacePocet = Model.StatistikaDotaci().Sum(v => v.PocetDotaci);

                var sdotaceKc = $" v celkové hodnotě <b>{HlidacStatu.Util.RenderData.NicePriceHtml(dotaceSuma)}</b>.";
            }

            @if (Model.JsemOVM())
            {
                <p>
                    Úřad @Devmasters.TextUtil.ShortenText(Model.Jmeno, 35)
                    @Html.Raw(Devmasters.Lang.CS.Plural.GetWithZero(dotacePocet,
                        " nedostal žádnou dotaci.",
                        " dostal <a href='" + durl + "'><b>jednu dotaci</b></a>" + sdotaceKc,
                        " dostal <a href='" + durl + "'><b>{0} dotace</b></a>" + sdotaceKc,
                        " dostal <a href='" + durl + "'><b>{0} dotací</b></a>" + sdotaceKc))
                </p>
            }
            else
            {
                <p>
                    Firma @Devmasters.TextUtil.ShortenText(Model.Jmeno, 35)
                    @Html.Raw(Devmasters.Lang.CS.Plural.GetWithZero(dotacePocet,
                        " nedostala žádnou dotaci.",
                        " dostala <a href='" + durl + "'><b>jednu dotaci</b></a>" + sdotaceKc,
                        " dostala <a href='" + durl + "'><b>{0} dotace</b></a>" + sdotaceKc,
                        " dostala <a href='" + durl + "'><b>{0} dotací</b></a>" + sdotaceKc))
                </p>
            }

            @if (Model.AktualniVazby(Relation.AktualnostType.Nedavny).Count() > 0)
            {

                decimal totalSumDotaceHolding = holdingStats.Sum(s => s.CelkemPrideleno);
                int totalCountDotaceHolding = holdingStats.Sum(s => s.PocetDotaci);

                if (totalCountDotaceHolding - dotacePocet > 0)
                {
                    var sdotaceHDiffKc = " v hodnotě <b>" + HlidacStatu.Util.RenderData.NicePriceHtml(totalSumDotaceHolding - dotaceSuma) + "</b>.";
                    var sdotaceHKc = " v celkové hodnotě <b>" + HlidacStatu.Util.RenderData.NicePriceHtml(totalSumDotaceHolding) + "</b>.";
                    string durlH = "/dotace/hledat?Q=holding%3A+" + Model.ICO;
                    if (Model.JsemOVM())
                    {
                        <p>
                            <b>@Devmasters.Lang.CS.Plural.Get(subCompaniesWithSubsidiesCount, "Jedna podřízená organizace", "{0} podřízená organizace", "{0} podřízených organizací")</b>
                            (z celkem @HlidacStatu.Util.RenderData.NiceNumber(Model.PocetPodrizenychSubjektu(Relation.AktualnostType.Nedavny)))
                            úřadu @Devmasters.TextUtil.ShortenText(Model.Jmeno, 35)

                            @Devmasters.Lang.CS.Plural.Get(subCompaniesWithSubsidiesCount,
                                "dostala",
                                "dostaly",
                                "dostalo")
                            @Html.Raw(Devmasters.Lang.CS.Plural.Get(totalCountDotaceHolding - dotacePocet,
                                " ještě <b>jednu dotaci</b>" + sdotaceHDiffKc,
                                " další <b>{0} dotace</b>" + sdotaceHDiffKc,
                                " dalších <b>{0} dotací</b>" + sdotaceHDiffKc))
                        </p>
                        <p>
                            Úřad <b>@(Model.Jmeno)</b> včetně podřízených organizací dostal celkem
                            @Html.Raw(Devmasters.Lang.CS.Plural.Get(totalCountDotaceHolding,
                                    " <a href='" + durlH + "'><b>jednu dotaci</b></a>" + sdotaceHKc,
                                    " <a href='" + durlH + "'><b>{0} dotace</b></a>" + sdotaceHKc,
                                    " <a href='" + durlH + "'><b>{0} dotací</b></a>" + sdotaceHKc))
                        </p> }
                    else
                    {
                        <p>
                            <b>@Devmasters.Lang.CS.Plural.Get(subCompaniesWithSubsidiesCount, "Jedna dceřiná společnost", "{0} dceřiné společnosti", "{0} dceřiných společností")</b>
                            (z celkem @HlidacStatu.Util.RenderData.NiceNumber(Model.PocetPodrizenychSubjektu(Relation.AktualnostType.Nedavny)))
                            firmy @Devmasters.TextUtil.ShortenText(Model.Jmeno, 35)

                            @Devmasters.Lang.CS.Plural.Get(subCompaniesWithSubsidiesCount,
                                "dostala",
                                "dostaly",
                                "dostalo")
                            @Html.Raw(Devmasters.Lang.CS.Plural.Get(totalCountDotaceHolding - dotacePocet,
                                " ještě <b>jednu dotaci</b>" + sdotaceHDiffKc,
                                " další <b>{0} dotace</b>" + sdotaceHDiffKc,
                                " dalších <b>{0} dotací</b>" + sdotaceHDiffKc))
                        </p>
                        <p>
                            Celý holding včetně <b>@(Model.Jmeno)</b> dostal celkem
                            @Html.Raw(Devmasters.Lang.CS.Plural.Get(totalCountDotaceHolding,
                                " <a href='" + durlH + "'><b>jednu dotaci</b></a>" + sdotaceHKc,
                                " <a href='" + durlH + "'><b>{0} dotace</b></a>" + sdotaceHKc,
                                " <a href='" + durlH + "'><b>{0} dotací</b></a>" + sdotaceHKc))
                        </p> }
                }
                else
                {
                    if (Model.JsemOVM())
                    {
                        <p>
                            <b>
                                @Devmasters.Lang.CS.Plural.Get(subCompaniesWithSubsidiesCount,
                                   "Jedna podřízená organizace",
                                   "{0} podřízená organizace",
                                   "{0} podřízených organizací")
                            </b>
                            úřadu @Devmasters.TextUtil.ShortenText(Model.Jmeno, 35) nedostaly žádné dotace.
                        </p>
                    }
                    else
                    {
                        <p>
                            <b>
                                @Devmasters.Lang.CS.Plural.Get(subCompaniesWithSubsidiesCount,
                                   "Jedna dceřiná společnost",
                                   "{0} dceřiné společnosti",
                                   "{0} dceřiných společností")
                            </b>
                            firmy @Devmasters.TextUtil.ShortenText(Model.Jmeno, 35) nedostaly žádné dotace.
                        </p>
                    }
                }
            }

            @* ---poskytovatel dotace--- *@
            @{
                var poskytnutoPoLetech = await DotaceRepo.SumyPoskytnutychDotaciPoLetechAsync(Model.ICO);
                string vyplacenoKcText ="";
                long celkovyPocetVyplacenychDotaci = 0;
                decimal celkemVyplaceno = 0;
                string platceUrl = "/dotace/hledat?Q=subsidyProviderIco%3A" + Model.ICO;
                if (poskytnutoPoLetech.Any())
                {
                    celkemVyplaceno = poskytnutoPoLetech.Sum(x => x.Sum);
                    celkovyPocetVyplacenychDotaci = poskytnutoPoLetech.Sum(x => x.Count);
                    vyplacenoKcText = " v celkové hodnotě <b>" + HlidacStatu.Util.RenderData.NicePriceHtml(celkemVyplaceno) + "</b>.";
                }

            }


            @if (poskytnutoPoLetech.Any())
            {
                <p>
                    @(Model.JsemOVM() ? "Úřad" : "Subjekt") @Devmasters.TextUtil.ShortenText(Model.Jmeno, 35)
                    @Html.Raw(Devmasters.Lang.CS.Plural.GetWithZero(celkovyPocetVyplacenychDotaci,
                        " neposkytl žádnou dotaci.",
                        " poskytl <a href='" + platceUrl + "'><b>jednu dotaci</b></a>" + vyplacenoKcText,
                        " poskytl <a href='" + platceUrl + "'><b>{0} dotace</b></a>" + vyplacenoKcText,
                        " poskytl <a href='" + platceUrl + "'><b>{0} dotací</b></a>" + vyplacenoKcText))
                </p>
            }
            <hr />

            <h4>Přehled subjektu</h4>

            @Html.Toggleable(
                Html.ColumnGraph(companySubsidiesTitle, companyGraphData, yTitleLeft: "Celkem čerpáno", yTitleRight: ""),
                "Graf",
                Html.DataToHTMLTable(reportData, dataTableOptions: dataTableOptions),
                "Tabulka"
            )

            <hr />

            @if (Model.JsemOVM())
            {
                <h4>Informace o podřízených organizacích</h4>
            }
            else
            {
                <h4>Informace o holdingu</h4>
            }

            @Html.Toggleable(
                Html.ColumnGraph(holdingSubsidiesTitle, holdingGraphData, yTitleLeft: "Celkem čerpáno", yTitleRight: ""),
                "Graf",
                Html.DataToHTMLTable(holdingReportData, dataTableOptions: dataTableOptions),
                "Tabulka"
           )

            @if (poskytnutoPoLetech.Any())
            {
                <h4>Informace o poskytnutých dotacích</h4>

                string subsidiesProvidedTitle = $"Přehled poskytnutých dotací ";
                if (Model.JsemOVM())
                {
                    subsidiesProvidedTitle += "úřadu";
                }
                else
                {
                    subsidiesProvidedTitle += "firmy";
                }

                var providedSubsidyGraphData = new Series[]
                {
                    new()
                    {
                        Name = "Celkem Kč",
                        Type = Series.SeriesType.column,
                        Data = poskytnutoPoLetech
                            .Where(x => x.Year > 0)
                            .OrderBy(x => x.Year)
                            .Select(x => new SeriesData(x.Year, x.Sum)).ToArray(),
                        SeriesTooltip = new SeriesTooltip()
                        {
                            ValueSuffix = " Kč"
                        }
                    }
                };
                
                var providerTableData = new ReportDataSource<(int Year, long Count, decimal Sum)>(
                    new ReportDataSource<(int Year, long Count, decimal Sum)>.Column[]
                    {
                        new()
                        {
                            Name = "Rok",
                            TextRender = (x) => $"{x.Year}",
                            HtmlRender = (x) => $"<a title='Najit poskytnuté dotace pro rok {x.Year}' href='/dotace/hledat?Q=subsidyProviderIco:{Model.ICO} AND approvedYear:{x.Year}'>{x.Year}</a>",
                            OrderValueRender = (x) => HlidacStatu.Util.RenderData.OrderValueFormat(x.Year),
                            CssClass = "number"
                        },
                        new()
                        {
                            Name = "Počet",
                            TextRender = (x) => $"{HlidacStatu.Util.RenderData.NiceNumber(x.Count)}",
                            HtmlRender = (x) => $"{HlidacStatu.Util.RenderData.NiceNumber(x.Count)}",
                            OrderValueRender = (x) => HlidacStatu.Util.RenderData.OrderValueFormat(x.Count),
                            CssClass = "number"
                        },
                        new()
                        {
                            Name = "Suma",
                            TextRender = (x) => HlidacStatu.Util.RenderData.NicePrice(x.Sum, shortFormat:true),
                            HtmlRender = (x) => HlidacStatu.Util.RenderData.NicePrice(x.Sum,html:true),
                            OrderValueRender = (x) => HlidacStatu.Util.RenderData.OrderValueFormat(x.Sum),
                            CssClass = "number"
                        },
                    }
                );
                providerTableData.AddRows(poskytnutoPoLetech);
                
                @Html.Toggleable(
                    Html.ColumnGraph(subsidiesProvidedTitle, providedSubsidyGraphData, yTitleLeft: "Celkem čerpáno", yTitleRight: ""),
                    "Graf",
                    Html.DataToHTMLTable(providerTableData, dataTableOptions: dataTableOptions),
                    "Tabulka"
                )
            }
        </div>

    </div>
